
MainBoard-Test_Sensori.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001d8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000af3c  080001d8  080001d8  000101d8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000148  0800b114  0800b114  0001b114  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0800b25c  0800b25c  00020024  2**0
                  CONTENTS
  4 .ARM          00000008  0800b25c  0800b25c  0001b25c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  0800b264  0800b264  00020024  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800b264  0800b264  0001b264  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  0800b268  0800b268  0001b268  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000024  20000000  0800b26c  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000551c  20000028  0800b290  00020028  2**3
                  ALLOC
 10 ._user_heap_stack 00000604  20005544  0800b290  00025544  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00020024  2**0
                  CONTENTS, READONLY
 12 .debug_info   0001f593  00000000  00000000  00020054  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 0000351e  00000000  00000000  0003f5e7  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 00001930  00000000  00000000  00042b08  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 000017c8  00000000  00000000  00044438  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  00046cf6  00000000  00000000  00045c00  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   000170ce  00000000  00000000  0008c8f6  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    0010a828  00000000  00000000  000a39c4  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  001ae1ec  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00006b7c  00000000  00000000  001ae268  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080001d8 <__do_global_dtors_aux>:
 80001d8:	b510      	push	{r4, lr}
 80001da:	4c05      	ldr	r4, [pc, #20]	; (80001f0 <__do_global_dtors_aux+0x18>)
 80001dc:	7823      	ldrb	r3, [r4, #0]
 80001de:	b933      	cbnz	r3, 80001ee <__do_global_dtors_aux+0x16>
 80001e0:	4b04      	ldr	r3, [pc, #16]	; (80001f4 <__do_global_dtors_aux+0x1c>)
 80001e2:	b113      	cbz	r3, 80001ea <__do_global_dtors_aux+0x12>
 80001e4:	4804      	ldr	r0, [pc, #16]	; (80001f8 <__do_global_dtors_aux+0x20>)
 80001e6:	f3af 8000 	nop.w
 80001ea:	2301      	movs	r3, #1
 80001ec:	7023      	strb	r3, [r4, #0]
 80001ee:	bd10      	pop	{r4, pc}
 80001f0:	20000028 	.word	0x20000028
 80001f4:	00000000 	.word	0x00000000
 80001f8:	0800b0fc 	.word	0x0800b0fc

080001fc <frame_dummy>:
 80001fc:	b508      	push	{r3, lr}
 80001fe:	4b03      	ldr	r3, [pc, #12]	; (800020c <frame_dummy+0x10>)
 8000200:	b11b      	cbz	r3, 800020a <frame_dummy+0xe>
 8000202:	4903      	ldr	r1, [pc, #12]	; (8000210 <frame_dummy+0x14>)
 8000204:	4803      	ldr	r0, [pc, #12]	; (8000214 <frame_dummy+0x18>)
 8000206:	f3af 8000 	nop.w
 800020a:	bd08      	pop	{r3, pc}
 800020c:	00000000 	.word	0x00000000
 8000210:	2000002c 	.word	0x2000002c
 8000214:	0800b0fc 	.word	0x0800b0fc

08000218 <__aeabi_uldivmod>:
 8000218:	b953      	cbnz	r3, 8000230 <__aeabi_uldivmod+0x18>
 800021a:	b94a      	cbnz	r2, 8000230 <__aeabi_uldivmod+0x18>
 800021c:	2900      	cmp	r1, #0
 800021e:	bf08      	it	eq
 8000220:	2800      	cmpeq	r0, #0
 8000222:	bf1c      	itt	ne
 8000224:	f04f 31ff 	movne.w	r1, #4294967295
 8000228:	f04f 30ff 	movne.w	r0, #4294967295
 800022c:	f000 b972 	b.w	8000514 <__aeabi_idiv0>
 8000230:	f1ad 0c08 	sub.w	ip, sp, #8
 8000234:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000238:	f000 f806 	bl	8000248 <__udivmoddi4>
 800023c:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000240:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000244:	b004      	add	sp, #16
 8000246:	4770      	bx	lr

08000248 <__udivmoddi4>:
 8000248:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800024c:	9e08      	ldr	r6, [sp, #32]
 800024e:	4604      	mov	r4, r0
 8000250:	4688      	mov	r8, r1
 8000252:	2b00      	cmp	r3, #0
 8000254:	d14b      	bne.n	80002ee <__udivmoddi4+0xa6>
 8000256:	428a      	cmp	r2, r1
 8000258:	4615      	mov	r5, r2
 800025a:	d967      	bls.n	800032c <__udivmoddi4+0xe4>
 800025c:	fab2 f282 	clz	r2, r2
 8000260:	b14a      	cbz	r2, 8000276 <__udivmoddi4+0x2e>
 8000262:	f1c2 0720 	rsb	r7, r2, #32
 8000266:	fa01 f302 	lsl.w	r3, r1, r2
 800026a:	fa20 f707 	lsr.w	r7, r0, r7
 800026e:	4095      	lsls	r5, r2
 8000270:	ea47 0803 	orr.w	r8, r7, r3
 8000274:	4094      	lsls	r4, r2
 8000276:	ea4f 4e15 	mov.w	lr, r5, lsr #16
 800027a:	0c23      	lsrs	r3, r4, #16
 800027c:	fbb8 f7fe 	udiv	r7, r8, lr
 8000280:	fa1f fc85 	uxth.w	ip, r5
 8000284:	fb0e 8817 	mls	r8, lr, r7, r8
 8000288:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 800028c:	fb07 f10c 	mul.w	r1, r7, ip
 8000290:	4299      	cmp	r1, r3
 8000292:	d909      	bls.n	80002a8 <__udivmoddi4+0x60>
 8000294:	18eb      	adds	r3, r5, r3
 8000296:	f107 30ff 	add.w	r0, r7, #4294967295
 800029a:	f080 811b 	bcs.w	80004d4 <__udivmoddi4+0x28c>
 800029e:	4299      	cmp	r1, r3
 80002a0:	f240 8118 	bls.w	80004d4 <__udivmoddi4+0x28c>
 80002a4:	3f02      	subs	r7, #2
 80002a6:	442b      	add	r3, r5
 80002a8:	1a5b      	subs	r3, r3, r1
 80002aa:	b2a4      	uxth	r4, r4
 80002ac:	fbb3 f0fe 	udiv	r0, r3, lr
 80002b0:	fb0e 3310 	mls	r3, lr, r0, r3
 80002b4:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 80002b8:	fb00 fc0c 	mul.w	ip, r0, ip
 80002bc:	45a4      	cmp	ip, r4
 80002be:	d909      	bls.n	80002d4 <__udivmoddi4+0x8c>
 80002c0:	192c      	adds	r4, r5, r4
 80002c2:	f100 33ff 	add.w	r3, r0, #4294967295
 80002c6:	f080 8107 	bcs.w	80004d8 <__udivmoddi4+0x290>
 80002ca:	45a4      	cmp	ip, r4
 80002cc:	f240 8104 	bls.w	80004d8 <__udivmoddi4+0x290>
 80002d0:	3802      	subs	r0, #2
 80002d2:	442c      	add	r4, r5
 80002d4:	ea40 4007 	orr.w	r0, r0, r7, lsl #16
 80002d8:	eba4 040c 	sub.w	r4, r4, ip
 80002dc:	2700      	movs	r7, #0
 80002de:	b11e      	cbz	r6, 80002e8 <__udivmoddi4+0xa0>
 80002e0:	40d4      	lsrs	r4, r2
 80002e2:	2300      	movs	r3, #0
 80002e4:	e9c6 4300 	strd	r4, r3, [r6]
 80002e8:	4639      	mov	r1, r7
 80002ea:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80002ee:	428b      	cmp	r3, r1
 80002f0:	d909      	bls.n	8000306 <__udivmoddi4+0xbe>
 80002f2:	2e00      	cmp	r6, #0
 80002f4:	f000 80eb 	beq.w	80004ce <__udivmoddi4+0x286>
 80002f8:	2700      	movs	r7, #0
 80002fa:	e9c6 0100 	strd	r0, r1, [r6]
 80002fe:	4638      	mov	r0, r7
 8000300:	4639      	mov	r1, r7
 8000302:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000306:	fab3 f783 	clz	r7, r3
 800030a:	2f00      	cmp	r7, #0
 800030c:	d147      	bne.n	800039e <__udivmoddi4+0x156>
 800030e:	428b      	cmp	r3, r1
 8000310:	d302      	bcc.n	8000318 <__udivmoddi4+0xd0>
 8000312:	4282      	cmp	r2, r0
 8000314:	f200 80fa 	bhi.w	800050c <__udivmoddi4+0x2c4>
 8000318:	1a84      	subs	r4, r0, r2
 800031a:	eb61 0303 	sbc.w	r3, r1, r3
 800031e:	2001      	movs	r0, #1
 8000320:	4698      	mov	r8, r3
 8000322:	2e00      	cmp	r6, #0
 8000324:	d0e0      	beq.n	80002e8 <__udivmoddi4+0xa0>
 8000326:	e9c6 4800 	strd	r4, r8, [r6]
 800032a:	e7dd      	b.n	80002e8 <__udivmoddi4+0xa0>
 800032c:	b902      	cbnz	r2, 8000330 <__udivmoddi4+0xe8>
 800032e:	deff      	udf	#255	; 0xff
 8000330:	fab2 f282 	clz	r2, r2
 8000334:	2a00      	cmp	r2, #0
 8000336:	f040 808f 	bne.w	8000458 <__udivmoddi4+0x210>
 800033a:	1b49      	subs	r1, r1, r5
 800033c:	ea4f 4e15 	mov.w	lr, r5, lsr #16
 8000340:	fa1f f885 	uxth.w	r8, r5
 8000344:	2701      	movs	r7, #1
 8000346:	fbb1 fcfe 	udiv	ip, r1, lr
 800034a:	0c23      	lsrs	r3, r4, #16
 800034c:	fb0e 111c 	mls	r1, lr, ip, r1
 8000350:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000354:	fb08 f10c 	mul.w	r1, r8, ip
 8000358:	4299      	cmp	r1, r3
 800035a:	d907      	bls.n	800036c <__udivmoddi4+0x124>
 800035c:	18eb      	adds	r3, r5, r3
 800035e:	f10c 30ff 	add.w	r0, ip, #4294967295
 8000362:	d202      	bcs.n	800036a <__udivmoddi4+0x122>
 8000364:	4299      	cmp	r1, r3
 8000366:	f200 80cd 	bhi.w	8000504 <__udivmoddi4+0x2bc>
 800036a:	4684      	mov	ip, r0
 800036c:	1a59      	subs	r1, r3, r1
 800036e:	b2a3      	uxth	r3, r4
 8000370:	fbb1 f0fe 	udiv	r0, r1, lr
 8000374:	fb0e 1410 	mls	r4, lr, r0, r1
 8000378:	ea43 4404 	orr.w	r4, r3, r4, lsl #16
 800037c:	fb08 f800 	mul.w	r8, r8, r0
 8000380:	45a0      	cmp	r8, r4
 8000382:	d907      	bls.n	8000394 <__udivmoddi4+0x14c>
 8000384:	192c      	adds	r4, r5, r4
 8000386:	f100 33ff 	add.w	r3, r0, #4294967295
 800038a:	d202      	bcs.n	8000392 <__udivmoddi4+0x14a>
 800038c:	45a0      	cmp	r8, r4
 800038e:	f200 80b6 	bhi.w	80004fe <__udivmoddi4+0x2b6>
 8000392:	4618      	mov	r0, r3
 8000394:	eba4 0408 	sub.w	r4, r4, r8
 8000398:	ea40 400c 	orr.w	r0, r0, ip, lsl #16
 800039c:	e79f      	b.n	80002de <__udivmoddi4+0x96>
 800039e:	f1c7 0c20 	rsb	ip, r7, #32
 80003a2:	40bb      	lsls	r3, r7
 80003a4:	fa22 fe0c 	lsr.w	lr, r2, ip
 80003a8:	ea4e 0e03 	orr.w	lr, lr, r3
 80003ac:	fa01 f407 	lsl.w	r4, r1, r7
 80003b0:	fa20 f50c 	lsr.w	r5, r0, ip
 80003b4:	fa21 f30c 	lsr.w	r3, r1, ip
 80003b8:	ea4f 481e 	mov.w	r8, lr, lsr #16
 80003bc:	4325      	orrs	r5, r4
 80003be:	fbb3 f9f8 	udiv	r9, r3, r8
 80003c2:	0c2c      	lsrs	r4, r5, #16
 80003c4:	fb08 3319 	mls	r3, r8, r9, r3
 80003c8:	fa1f fa8e 	uxth.w	sl, lr
 80003cc:	ea44 4303 	orr.w	r3, r4, r3, lsl #16
 80003d0:	fb09 f40a 	mul.w	r4, r9, sl
 80003d4:	429c      	cmp	r4, r3
 80003d6:	fa02 f207 	lsl.w	r2, r2, r7
 80003da:	fa00 f107 	lsl.w	r1, r0, r7
 80003de:	d90b      	bls.n	80003f8 <__udivmoddi4+0x1b0>
 80003e0:	eb1e 0303 	adds.w	r3, lr, r3
 80003e4:	f109 30ff 	add.w	r0, r9, #4294967295
 80003e8:	f080 8087 	bcs.w	80004fa <__udivmoddi4+0x2b2>
 80003ec:	429c      	cmp	r4, r3
 80003ee:	f240 8084 	bls.w	80004fa <__udivmoddi4+0x2b2>
 80003f2:	f1a9 0902 	sub.w	r9, r9, #2
 80003f6:	4473      	add	r3, lr
 80003f8:	1b1b      	subs	r3, r3, r4
 80003fa:	b2ad      	uxth	r5, r5
 80003fc:	fbb3 f0f8 	udiv	r0, r3, r8
 8000400:	fb08 3310 	mls	r3, r8, r0, r3
 8000404:	ea45 4403 	orr.w	r4, r5, r3, lsl #16
 8000408:	fb00 fa0a 	mul.w	sl, r0, sl
 800040c:	45a2      	cmp	sl, r4
 800040e:	d908      	bls.n	8000422 <__udivmoddi4+0x1da>
 8000410:	eb1e 0404 	adds.w	r4, lr, r4
 8000414:	f100 33ff 	add.w	r3, r0, #4294967295
 8000418:	d26b      	bcs.n	80004f2 <__udivmoddi4+0x2aa>
 800041a:	45a2      	cmp	sl, r4
 800041c:	d969      	bls.n	80004f2 <__udivmoddi4+0x2aa>
 800041e:	3802      	subs	r0, #2
 8000420:	4474      	add	r4, lr
 8000422:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
 8000426:	fba0 8902 	umull	r8, r9, r0, r2
 800042a:	eba4 040a 	sub.w	r4, r4, sl
 800042e:	454c      	cmp	r4, r9
 8000430:	46c2      	mov	sl, r8
 8000432:	464b      	mov	r3, r9
 8000434:	d354      	bcc.n	80004e0 <__udivmoddi4+0x298>
 8000436:	d051      	beq.n	80004dc <__udivmoddi4+0x294>
 8000438:	2e00      	cmp	r6, #0
 800043a:	d069      	beq.n	8000510 <__udivmoddi4+0x2c8>
 800043c:	ebb1 050a 	subs.w	r5, r1, sl
 8000440:	eb64 0403 	sbc.w	r4, r4, r3
 8000444:	fa04 fc0c 	lsl.w	ip, r4, ip
 8000448:	40fd      	lsrs	r5, r7
 800044a:	40fc      	lsrs	r4, r7
 800044c:	ea4c 0505 	orr.w	r5, ip, r5
 8000450:	e9c6 5400 	strd	r5, r4, [r6]
 8000454:	2700      	movs	r7, #0
 8000456:	e747      	b.n	80002e8 <__udivmoddi4+0xa0>
 8000458:	f1c2 0320 	rsb	r3, r2, #32
 800045c:	fa20 f703 	lsr.w	r7, r0, r3
 8000460:	4095      	lsls	r5, r2
 8000462:	fa01 f002 	lsl.w	r0, r1, r2
 8000466:	fa21 f303 	lsr.w	r3, r1, r3
 800046a:	ea4f 4e15 	mov.w	lr, r5, lsr #16
 800046e:	4338      	orrs	r0, r7
 8000470:	0c01      	lsrs	r1, r0, #16
 8000472:	fbb3 f7fe 	udiv	r7, r3, lr
 8000476:	fa1f f885 	uxth.w	r8, r5
 800047a:	fb0e 3317 	mls	r3, lr, r7, r3
 800047e:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000482:	fb07 f308 	mul.w	r3, r7, r8
 8000486:	428b      	cmp	r3, r1
 8000488:	fa04 f402 	lsl.w	r4, r4, r2
 800048c:	d907      	bls.n	800049e <__udivmoddi4+0x256>
 800048e:	1869      	adds	r1, r5, r1
 8000490:	f107 3cff 	add.w	ip, r7, #4294967295
 8000494:	d22f      	bcs.n	80004f6 <__udivmoddi4+0x2ae>
 8000496:	428b      	cmp	r3, r1
 8000498:	d92d      	bls.n	80004f6 <__udivmoddi4+0x2ae>
 800049a:	3f02      	subs	r7, #2
 800049c:	4429      	add	r1, r5
 800049e:	1acb      	subs	r3, r1, r3
 80004a0:	b281      	uxth	r1, r0
 80004a2:	fbb3 f0fe 	udiv	r0, r3, lr
 80004a6:	fb0e 3310 	mls	r3, lr, r0, r3
 80004aa:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 80004ae:	fb00 f308 	mul.w	r3, r0, r8
 80004b2:	428b      	cmp	r3, r1
 80004b4:	d907      	bls.n	80004c6 <__udivmoddi4+0x27e>
 80004b6:	1869      	adds	r1, r5, r1
 80004b8:	f100 3cff 	add.w	ip, r0, #4294967295
 80004bc:	d217      	bcs.n	80004ee <__udivmoddi4+0x2a6>
 80004be:	428b      	cmp	r3, r1
 80004c0:	d915      	bls.n	80004ee <__udivmoddi4+0x2a6>
 80004c2:	3802      	subs	r0, #2
 80004c4:	4429      	add	r1, r5
 80004c6:	1ac9      	subs	r1, r1, r3
 80004c8:	ea40 4707 	orr.w	r7, r0, r7, lsl #16
 80004cc:	e73b      	b.n	8000346 <__udivmoddi4+0xfe>
 80004ce:	4637      	mov	r7, r6
 80004d0:	4630      	mov	r0, r6
 80004d2:	e709      	b.n	80002e8 <__udivmoddi4+0xa0>
 80004d4:	4607      	mov	r7, r0
 80004d6:	e6e7      	b.n	80002a8 <__udivmoddi4+0x60>
 80004d8:	4618      	mov	r0, r3
 80004da:	e6fb      	b.n	80002d4 <__udivmoddi4+0x8c>
 80004dc:	4541      	cmp	r1, r8
 80004de:	d2ab      	bcs.n	8000438 <__udivmoddi4+0x1f0>
 80004e0:	ebb8 0a02 	subs.w	sl, r8, r2
 80004e4:	eb69 020e 	sbc.w	r2, r9, lr
 80004e8:	3801      	subs	r0, #1
 80004ea:	4613      	mov	r3, r2
 80004ec:	e7a4      	b.n	8000438 <__udivmoddi4+0x1f0>
 80004ee:	4660      	mov	r0, ip
 80004f0:	e7e9      	b.n	80004c6 <__udivmoddi4+0x27e>
 80004f2:	4618      	mov	r0, r3
 80004f4:	e795      	b.n	8000422 <__udivmoddi4+0x1da>
 80004f6:	4667      	mov	r7, ip
 80004f8:	e7d1      	b.n	800049e <__udivmoddi4+0x256>
 80004fa:	4681      	mov	r9, r0
 80004fc:	e77c      	b.n	80003f8 <__udivmoddi4+0x1b0>
 80004fe:	3802      	subs	r0, #2
 8000500:	442c      	add	r4, r5
 8000502:	e747      	b.n	8000394 <__udivmoddi4+0x14c>
 8000504:	f1ac 0c02 	sub.w	ip, ip, #2
 8000508:	442b      	add	r3, r5
 800050a:	e72f      	b.n	800036c <__udivmoddi4+0x124>
 800050c:	4638      	mov	r0, r7
 800050e:	e708      	b.n	8000322 <__udivmoddi4+0xda>
 8000510:	4637      	mov	r7, r6
 8000512:	e6e9      	b.n	80002e8 <__udivmoddi4+0xa0>

08000514 <__aeabi_idiv0>:
 8000514:	4770      	bx	lr
 8000516:	bf00      	nop

08000518 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8000518:	b590      	push	{r4, r7, lr}
 800051a:	f5ad 5d81 	sub.w	sp, sp, #4128	; 0x1020
 800051e:	b081      	sub	sp, #4
 8000520:	af02      	add	r7, sp, #8
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8000522:	f000 fe10 	bl	8001146 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8000526:	f000 f8fb 	bl	8000720 <SystemClock_Config>

  /* USER CODE BEGIN SysInit */

  /* Initialize the micro SD Card */
  if(MY_SD_Init(0) != BSP_ERROR_NONE){
 800052a:	2000      	movs	r0, #0
 800052c:	f006 f8e4 	bl	80066f8 <MY_SD_Init>
 8000530:	4603      	mov	r3, r0
 8000532:	2b00      	cmp	r3, #0
 8000534:	d001      	beq.n	800053a <main+0x22>
	  Error_Handler();
 8000536:	f000 fc3f 	bl	8000db8 <Error_Handler>
  }
  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 800053a:	f000 fad5 	bl	8000ae8 <MX_GPIO_Init>
  MX_LPUART1_UART_Init();
 800053e:	f000 f9cd 	bl	80008dc <MX_LPUART1_UART_Init>
  MX_SPI2_Init();
 8000542:	f000 fa6d 	bl	8000a20 <MX_SPI2_Init>
  if (MX_FATFS_Init() != APP_OK) {
 8000546:	f006 f8b7 	bl	80066b8 <MX_FATFS_Init>
 800054a:	4603      	mov	r3, r0
 800054c:	2b00      	cmp	r3, #0
 800054e:	d001      	beq.n	8000554 <main+0x3c>
    Error_Handler();
 8000550:	f000 fc32 	bl	8000db8 <Error_Handler>
  }
  MX_FDCAN1_Init();
 8000554:	f000 f97c 	bl	8000850 <MX_FDCAN1_Init>
  MX_RTC_Init();
 8000558:	f000 fa06 	bl	8000968 <MX_RTC_Init>
  MX_TIM17_Init();
 800055c:	f000 fa9e 	bl	8000a9c <MX_TIM17_Init>

  /* Initialize interrupts */
  MX_NVIC_Init();
 8000560:	f000 f95a 	bl	8000818 <MX_NVIC_Init>
  /* USER CODE BEGIN 2 */
  TxHeader.Identifier = 0x0;
 8000564:	4b63      	ldr	r3, [pc, #396]	; (80006f4 <main+0x1dc>)
 8000566:	2200      	movs	r2, #0
 8000568:	601a      	str	r2, [r3, #0]
  TxHeader.IdType = FDCAN_EXTENDED_ID;
 800056a:	4b62      	ldr	r3, [pc, #392]	; (80006f4 <main+0x1dc>)
 800056c:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8000570:	605a      	str	r2, [r3, #4]
  TxHeader.TxFrameType = FDCAN_DATA_FRAME;
 8000572:	4b60      	ldr	r3, [pc, #384]	; (80006f4 <main+0x1dc>)
 8000574:	2200      	movs	r2, #0
 8000576:	609a      	str	r2, [r3, #8]
  TxHeader.DataLength = FDCAN_DLC_BYTES_8;
 8000578:	4b5e      	ldr	r3, [pc, #376]	; (80006f4 <main+0x1dc>)
 800057a:	f44f 2200 	mov.w	r2, #524288	; 0x80000
 800057e:	60da      	str	r2, [r3, #12]
  TxHeader.ErrorStateIndicator = FDCAN_ESI_ACTIVE;
 8000580:	4b5c      	ldr	r3, [pc, #368]	; (80006f4 <main+0x1dc>)
 8000582:	2200      	movs	r2, #0
 8000584:	611a      	str	r2, [r3, #16]
  TxHeader.BitRateSwitch = FDCAN_BRS_OFF;
 8000586:	4b5b      	ldr	r3, [pc, #364]	; (80006f4 <main+0x1dc>)
 8000588:	2200      	movs	r2, #0
 800058a:	615a      	str	r2, [r3, #20]
  TxHeader.FDFormat = FDCAN_CLASSIC_CAN;
 800058c:	4b59      	ldr	r3, [pc, #356]	; (80006f4 <main+0x1dc>)
 800058e:	2200      	movs	r2, #0
 8000590:	619a      	str	r2, [r3, #24]
  TxHeader.TxEventFifoControl = FDCAN_NO_TX_EVENTS;
 8000592:	4b58      	ldr	r3, [pc, #352]	; (80006f4 <main+0x1dc>)
 8000594:	2200      	movs	r2, #0
 8000596:	61da      	str	r2, [r3, #28]
  TxHeader.MessageMarker = 0;
 8000598:	4b56      	ldr	r3, [pc, #344]	; (80006f4 <main+0x1dc>)
 800059a:	2200      	movs	r2, #0
 800059c:	621a      	str	r2, [r3, #32]
  TxData[0] = ubKeyNumber++;
 800059e:	4b56      	ldr	r3, [pc, #344]	; (80006f8 <main+0x1e0>)
 80005a0:	781b      	ldrb	r3, [r3, #0]
 80005a2:	1c5a      	adds	r2, r3, #1
 80005a4:	b2d1      	uxtb	r1, r2
 80005a6:	4a54      	ldr	r2, [pc, #336]	; (80006f8 <main+0x1e0>)
 80005a8:	7011      	strb	r1, [r2, #0]
 80005aa:	4a54      	ldr	r2, [pc, #336]	; (80006fc <main+0x1e4>)
 80005ac:	7013      	strb	r3, [r2, #0]
  TxData[1] = 0xAD;
 80005ae:	4b53      	ldr	r3, [pc, #332]	; (80006fc <main+0x1e4>)
 80005b0:	22ad      	movs	r2, #173	; 0xad
 80005b2:	705a      	strb	r2, [r3, #1]
  TxData[2] = 0xDE;
 80005b4:	4b51      	ldr	r3, [pc, #324]	; (80006fc <main+0x1e4>)
 80005b6:	22de      	movs	r2, #222	; 0xde
 80005b8:	709a      	strb	r2, [r3, #2]
  TxData[3] = 0xAD;
 80005ba:	4b50      	ldr	r3, [pc, #320]	; (80006fc <main+0x1e4>)
 80005bc:	22ad      	movs	r2, #173	; 0xad
 80005be:	70da      	strb	r2, [r3, #3]
  TxData[4] = 0xBE;
 80005c0:	4b4e      	ldr	r3, [pc, #312]	; (80006fc <main+0x1e4>)
 80005c2:	22be      	movs	r2, #190	; 0xbe
 80005c4:	711a      	strb	r2, [r3, #4]
  TxData[5] = 0xEF;
 80005c6:	4b4d      	ldr	r3, [pc, #308]	; (80006fc <main+0x1e4>)
 80005c8:	22ef      	movs	r2, #239	; 0xef
 80005ca:	715a      	strb	r2, [r3, #5]
  TxData[6] = 0xFA;
 80005cc:	4b4b      	ldr	r3, [pc, #300]	; (80006fc <main+0x1e4>)
 80005ce:	22fa      	movs	r2, #250	; 0xfa
 80005d0:	719a      	strb	r2, [r3, #6]
  TxData[7] = 0xCE;
 80005d2:	4b4a      	ldr	r3, [pc, #296]	; (80006fc <main+0x1e4>)
 80005d4:	22ce      	movs	r2, #206	; 0xce
 80005d6:	71da      	strb	r2, [r3, #7]
  uint8_t workBuffer[_MAX_SS];

  /* File  object for USER */
  //char USERPath[4];   /* USER logical drive path */
  FRESULT res; /* FatFs function common result code */
  uint8_t path[] = "DATA_LOG.TXT";
 80005d8:	f107 0318 	add.w	r3, r7, #24
 80005dc:	3b14      	subs	r3, #20
 80005de:	4a48      	ldr	r2, [pc, #288]	; (8000700 <main+0x1e8>)
 80005e0:	461c      	mov	r4, r3
 80005e2:	4613      	mov	r3, r2
 80005e4:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 80005e6:	c407      	stmia	r4!, {r0, r1, r2}
 80005e8:	7023      	strb	r3, [r4, #0]

  if(MY_SD_GetCardState(0) == BSP_ERROR_NONE){
 80005ea:	2000      	movs	r0, #0
 80005ec:	f006 fa76 	bl	8006adc <MY_SD_GetCardState>
 80005f0:	4603      	mov	r3, r0
 80005f2:	2b00      	cmp	r3, #0
 80005f4:	d136      	bne.n	8000664 <main+0x14c>
	  MY_SD_GetCardInfo(0, &CardInfo);
 80005f6:	4943      	ldr	r1, [pc, #268]	; (8000704 <main+0x1ec>)
 80005f8:	2000      	movs	r0, #0
 80005fa:	f006 faa7 	bl	8006b4c <MY_SD_GetCardInfo>
	  if(HAL_GPIO_ReadPin(B1_GPIO_Port,B1_Pin)==GPIO_PIN_SET){
 80005fe:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8000602:	4841      	ldr	r0, [pc, #260]	; (8000708 <main+0x1f0>)
 8000604:	f001 fef4 	bl	80023f0 <HAL_GPIO_ReadPin>
 8000608:	4603      	mov	r3, r0
 800060a:	2b01      	cmp	r3, #1
 800060c:	d12a      	bne.n	8000664 <main+0x14c>
		  HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, GPIO_PIN_SET);
 800060e:	2201      	movs	r2, #1
 8000610:	2120      	movs	r1, #32
 8000612:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 8000616:	f001 ff03 	bl	8002420 <HAL_GPIO_WritePin>
		  res = f_mkfs(USERPath, FM_FAT32, 2048, workBuffer, sizeof(workBuffer));
 800061a:	f107 0318 	add.w	r3, r7, #24
 800061e:	3b04      	subs	r3, #4
 8000620:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 8000624:	9200      	str	r2, [sp, #0]
 8000626:	f44f 6200 	mov.w	r2, #2048	; 0x800
 800062a:	2102      	movs	r1, #2
 800062c:	4837      	ldr	r0, [pc, #220]	; (800070c <main+0x1f4>)
 800062e:	f009 fdf5 	bl	800a21c <f_mkfs>
 8000632:	4603      	mov	r3, r0
 8000634:	f507 5280 	add.w	r2, r7, #4096	; 0x1000
 8000638:	f102 0217 	add.w	r2, r2, #23
 800063c:	7013      	strb	r3, [r2, #0]
		  if (res != FR_OK){
 800063e:	f507 5380 	add.w	r3, r7, #4096	; 0x1000
 8000642:	f103 0317 	add.w	r3, r3, #23
 8000646:	781b      	ldrb	r3, [r3, #0]
 8000648:	2b00      	cmp	r3, #0
 800064a:	d001      	beq.n	8000650 <main+0x138>
			  Error_Handler();
 800064c:	f000 fbb4 	bl	8000db8 <Error_Handler>
		  }
		  HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, GPIO_PIN_RESET);
 8000650:	2200      	movs	r2, #0
 8000652:	2120      	movs	r1, #32
 8000654:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 8000658:	f001 fee2 	bl	8002420 <HAL_GPIO_WritePin>
		  HAL_Delay(2000);
 800065c:	f44f 60fa 	mov.w	r0, #2000	; 0x7d0
 8000660:	f000 fde2 	bl	8001228 <HAL_Delay>
	  }
  }
  res = f_mount(&USERFatFs, USERPath, 1);
 8000664:	2201      	movs	r2, #1
 8000666:	4929      	ldr	r1, [pc, #164]	; (800070c <main+0x1f4>)
 8000668:	4829      	ldr	r0, [pc, #164]	; (8000710 <main+0x1f8>)
 800066a:	f009 f989 	bl	8009980 <f_mount>
 800066e:	4603      	mov	r3, r0
 8000670:	f507 5280 	add.w	r2, r7, #4096	; 0x1000
 8000674:	f102 0217 	add.w	r2, r2, #23
 8000678:	7013      	strb	r3, [r2, #0]
  res = f_open(&USERFile, &path, FA_CREATE_ALWAYS);
 800067a:	f107 0318 	add.w	r3, r7, #24
 800067e:	3b14      	subs	r3, #20
 8000680:	2208      	movs	r2, #8
 8000682:	4619      	mov	r1, r3
 8000684:	4823      	ldr	r0, [pc, #140]	; (8000714 <main+0x1fc>)
 8000686:	f009 f9c1 	bl	8009a0c <f_open>
 800068a:	4603      	mov	r3, r0
 800068c:	f507 5280 	add.w	r2, r7, #4096	; 0x1000
 8000690:	f102 0217 	add.w	r2, r2, #23
 8000694:	7013      	strb	r3, [r2, #0]
  res = f_close(&USERFile);
 8000696:	481f      	ldr	r0, [pc, #124]	; (8000714 <main+0x1fc>)
 8000698:	f009 fd96 	bl	800a1c8 <f_close>
 800069c:	4603      	mov	r3, r0
 800069e:	f507 5280 	add.w	r2, r7, #4096	; 0x1000
 80006a2:	f102 0217 	add.w	r2, r2, #23
 80006a6:	7013      	strb	r3, [r2, #0]
  res = f_open(&USERFile, &path, FA_OPEN_APPEND | FA_WRITE);
 80006a8:	f107 0318 	add.w	r3, r7, #24
 80006ac:	3b14      	subs	r3, #20
 80006ae:	2232      	movs	r2, #50	; 0x32
 80006b0:	4619      	mov	r1, r3
 80006b2:	4818      	ldr	r0, [pc, #96]	; (8000714 <main+0x1fc>)
 80006b4:	f009 f9aa 	bl	8009a0c <f_open>
 80006b8:	4603      	mov	r3, r0
 80006ba:	f507 5280 	add.w	r2, r7, #4096	; 0x1000
 80006be:	f102 0217 	add.w	r2, r2, #23
 80006c2:	7013      	strb	r3, [r2, #0]

  if (HAL_FDCAN_Start(&hfdcan1) != HAL_OK){
 80006c4:	4814      	ldr	r0, [pc, #80]	; (8000718 <main+0x200>)
 80006c6:	f001 f83b 	bl	8001740 <HAL_FDCAN_Start>
 80006ca:	4603      	mov	r3, r0
 80006cc:	2b00      	cmp	r3, #0
 80006ce:	d001      	beq.n	80006d4 <main+0x1bc>
	  /* Start Error */
	  Error_Handler();
 80006d0:	f000 fb72 	bl	8000db8 <Error_Handler>
  }

  if ( HAL_FDCAN_ActivateNotification(&hfdcan1, FDCAN_IT_RX_FIFO0_NEW_MESSAGE, 0) != HAL_OK){
 80006d4:	2200      	movs	r2, #0
 80006d6:	2101      	movs	r1, #1
 80006d8:	480f      	ldr	r0, [pc, #60]	; (8000718 <main+0x200>)
 80006da:	f001 f933 	bl	8001944 <HAL_FDCAN_ActivateNotification>
 80006de:	4603      	mov	r3, r0
 80006e0:	2b00      	cmp	r3, #0
 80006e2:	d001      	beq.n	80006e8 <main+0x1d0>
	  /* Notification Error */
	  Error_Handler();
 80006e4:	f000 fb68 	bl	8000db8 <Error_Handler>
  }

  MX_NVIC_Init();
 80006e8:	f000 f896 	bl	8000818 <MX_NVIC_Init>
  HAL_TIM_Base_Start_IT(&htim17);
 80006ec:	480b      	ldr	r0, [pc, #44]	; (800071c <main+0x204>)
 80006ee:	f004 f857 	bl	80047a0 <HAL_TIM_Base_Start_IT>
  /* USER CODE END 2 */

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */

  while (1){
 80006f2:	e7fe      	b.n	80006f2 <main+0x1da>
 80006f4:	2000240c 	.word	0x2000240c
 80006f8:	20000044 	.word	0x20000044
 80006fc:	20002374 	.word	0x20002374
 8000700:	0800b114 	.word	0x0800b114
 8000704:	200023a0 	.word	0x200023a0
 8000708:	48000800 	.word	0x48000800
 800070c:	20002478 	.word	0x20002478
 8000710:	200044ac 	.word	0x200044ac
 8000714:	2000347c 	.word	0x2000347c
 8000718:	20002310 	.word	0x20002310
 800071c:	20001160 	.word	0x20001160

08000720 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8000720:	b580      	push	{r7, lr}
 8000722:	b0a8      	sub	sp, #160	; 0xa0
 8000724:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8000726:	f107 0368 	add.w	r3, r7, #104	; 0x68
 800072a:	2238      	movs	r2, #56	; 0x38
 800072c:	2100      	movs	r1, #0
 800072e:	4618      	mov	r0, r3
 8000730:	f00a fcdc 	bl	800b0ec <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8000734:	f107 0354 	add.w	r3, r7, #84	; 0x54
 8000738:	2200      	movs	r2, #0
 800073a:	601a      	str	r2, [r3, #0]
 800073c:	605a      	str	r2, [r3, #4]
 800073e:	609a      	str	r2, [r3, #8]
 8000740:	60da      	str	r2, [r3, #12]
 8000742:	611a      	str	r2, [r3, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 8000744:	463b      	mov	r3, r7
 8000746:	2254      	movs	r2, #84	; 0x54
 8000748:	2100      	movs	r1, #0
 800074a:	4618      	mov	r0, r3
 800074c:	f00a fcce 	bl	800b0ec <memset>

  /** Configure the main internal regulator output voltage 
  */
  HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE1);
 8000750:	f44f 7000 	mov.w	r0, #512	; 0x200
 8000754:	f001 feb0 	bl	80024b8 <HAL_PWREx_ControlVoltageScaling>
  /** Configure LSE Drive Capability 
  */
  HAL_PWR_EnableBkUpAccess();
 8000758:	f001 fe9e 	bl	8002498 <HAL_PWR_EnableBkUpAccess>
  __HAL_RCC_LSEDRIVE_CONFIG(RCC_LSEDRIVE_LOW);
 800075c:	4b2c      	ldr	r3, [pc, #176]	; (8000810 <SystemClock_Config+0xf0>)
 800075e:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8000762:	4a2b      	ldr	r2, [pc, #172]	; (8000810 <SystemClock_Config+0xf0>)
 8000764:	f023 0318 	bic.w	r3, r3, #24
 8000768:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
  /** Initializes the CPU, AHB and APB busses clocks 
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE|RCC_OSCILLATORTYPE_LSE;
 800076c:	2305      	movs	r3, #5
 800076e:	66bb      	str	r3, [r7, #104]	; 0x68
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8000770:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8000774:	66fb      	str	r3, [r7, #108]	; 0x6c
  RCC_OscInitStruct.LSEState = RCC_LSE_ON;
 8000776:	2301      	movs	r3, #1
 8000778:	673b      	str	r3, [r7, #112]	; 0x70
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 800077a:	2302      	movs	r3, #2
 800077c:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8000780:	2303      	movs	r3, #3
 8000782:	f8c7 3088 	str.w	r3, [r7, #136]	; 0x88
  RCC_OscInitStruct.PLL.PLLM = RCC_PLLM_DIV3;
 8000786:	2303      	movs	r3, #3
 8000788:	f8c7 308c 	str.w	r3, [r7, #140]	; 0x8c
  RCC_OscInitStruct.PLL.PLLN = 32;
 800078c:	2320      	movs	r3, #32
 800078e:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8000792:	2302      	movs	r3, #2
 8000794:	f8c7 3094 	str.w	r3, [r7, #148]	; 0x94
  RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV6;
 8000798:	2306      	movs	r3, #6
 800079a:	f8c7 3098 	str.w	r3, [r7, #152]	; 0x98
  RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 800079e:	2302      	movs	r3, #2
 80007a0:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80007a4:	f107 0368 	add.w	r3, r7, #104	; 0x68
 80007a8:	4618      	mov	r0, r3
 80007aa:	f001 ff29 	bl	8002600 <HAL_RCC_OscConfig>
 80007ae:	4603      	mov	r3, r0
 80007b0:	2b00      	cmp	r3, #0
 80007b2:	d001      	beq.n	80007b8 <SystemClock_Config+0x98>
  {
    Error_Handler();
 80007b4:	f000 fb00 	bl	8000db8 <Error_Handler>
  }
  /** Initializes the CPU, AHB and APB busses clocks 
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 80007b8:	230f      	movs	r3, #15
 80007ba:	657b      	str	r3, [r7, #84]	; 0x54
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 80007bc:	2303      	movs	r3, #3
 80007be:	65bb      	str	r3, [r7, #88]	; 0x58
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 80007c0:	2300      	movs	r3, #0
 80007c2:	65fb      	str	r3, [r7, #92]	; 0x5c
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 80007c4:	2300      	movs	r3, #0
 80007c6:	663b      	str	r3, [r7, #96]	; 0x60
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 80007c8:	2300      	movs	r3, #0
 80007ca:	667b      	str	r3, [r7, #100]	; 0x64

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_6) != HAL_OK)
 80007cc:	f107 0354 	add.w	r3, r7, #84	; 0x54
 80007d0:	2106      	movs	r1, #6
 80007d2:	4618      	mov	r0, r3
 80007d4:	f002 fa2c 	bl	8002c30 <HAL_RCC_ClockConfig>
 80007d8:	4603      	mov	r3, r0
 80007da:	2b00      	cmp	r3, #0
 80007dc:	d001      	beq.n	80007e2 <SystemClock_Config+0xc2>
  {
    Error_Handler();
 80007de:	f000 faeb 	bl	8000db8 <Error_Handler>
  }
  /** Initializes the peripherals clocks 
  */
  PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_RTC|RCC_PERIPHCLK_LPUART1
 80007e2:	4b0c      	ldr	r3, [pc, #48]	; (8000814 <SystemClock_Config+0xf4>)
 80007e4:	603b      	str	r3, [r7, #0]
                              |RCC_PERIPHCLK_FDCAN;
  PeriphClkInit.Lpuart1ClockSelection = RCC_LPUART1CLKSOURCE_PCLK1;
 80007e6:	2300      	movs	r3, #0
 80007e8:	61bb      	str	r3, [r7, #24]
  PeriphClkInit.FdcanClockSelection = RCC_FDCANCLKSOURCE_PCLK1;
 80007ea:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 80007ee:	63bb      	str	r3, [r7, #56]	; 0x38
  PeriphClkInit.RTCClockSelection = RCC_RTCCLKSOURCE_LSE;
 80007f0:	f44f 7380 	mov.w	r3, #256	; 0x100
 80007f4:	653b      	str	r3, [r7, #80]	; 0x50
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 80007f6:	463b      	mov	r3, r7
 80007f8:	4618      	mov	r0, r3
 80007fa:	f002 fc35 	bl	8003068 <HAL_RCCEx_PeriphCLKConfig>
 80007fe:	4603      	mov	r3, r0
 8000800:	2b00      	cmp	r3, #0
 8000802:	d001      	beq.n	8000808 <SystemClock_Config+0xe8>
  {
    Error_Handler();
 8000804:	f000 fad8 	bl	8000db8 <Error_Handler>
  }
}
 8000808:	bf00      	nop
 800080a:	37a0      	adds	r7, #160	; 0xa0
 800080c:	46bd      	mov	sp, r7
 800080e:	bd80      	pop	{r7, pc}
 8000810:	40021000 	.word	0x40021000
 8000814:	00081020 	.word	0x00081020

08000818 <MX_NVIC_Init>:
/**
  * @brief NVIC Configuration.
  * @retval None
  */
static void MX_NVIC_Init(void)
{
 8000818:	b580      	push	{r7, lr}
 800081a:	af00      	add	r7, sp, #0
  /* FDCAN1_IT0_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(FDCAN1_IT0_IRQn, 0, 0);
 800081c:	2200      	movs	r2, #0
 800081e:	2100      	movs	r1, #0
 8000820:	2015      	movs	r0, #21
 8000822:	f000 fdfe 	bl	8001422 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(FDCAN1_IT0_IRQn);
 8000826:	2015      	movs	r0, #21
 8000828:	f000 fe15 	bl	8001456 <HAL_NVIC_EnableIRQ>
  /* EXTI15_10_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(EXTI15_10_IRQn, 0, 0);
 800082c:	2200      	movs	r2, #0
 800082e:	2100      	movs	r1, #0
 8000830:	2028      	movs	r0, #40	; 0x28
 8000832:	f000 fdf6 	bl	8001422 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI15_10_IRQn);
 8000836:	2028      	movs	r0, #40	; 0x28
 8000838:	f000 fe0d 	bl	8001456 <HAL_NVIC_EnableIRQ>
  /* TIM1_TRG_COM_TIM17_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(TIM1_TRG_COM_TIM17_IRQn, 0, 0);
 800083c:	2200      	movs	r2, #0
 800083e:	2100      	movs	r1, #0
 8000840:	201a      	movs	r0, #26
 8000842:	f000 fdee 	bl	8001422 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(TIM1_TRG_COM_TIM17_IRQn);
 8000846:	201a      	movs	r0, #26
 8000848:	f000 fe05 	bl	8001456 <HAL_NVIC_EnableIRQ>
}
 800084c:	bf00      	nop
 800084e:	bd80      	pop	{r7, pc}

08000850 <MX_FDCAN1_Init>:
  * @brief FDCAN1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_FDCAN1_Init(void)
{
 8000850:	b580      	push	{r7, lr}
 8000852:	af00      	add	r7, sp, #0
  /* USER CODE END FDCAN1_Init 0 */

  /* USER CODE BEGIN FDCAN1_Init 1 */

  /* USER CODE END FDCAN1_Init 1 */
  hfdcan1.Instance = FDCAN1;
 8000854:	4b1f      	ldr	r3, [pc, #124]	; (80008d4 <MX_FDCAN1_Init+0x84>)
 8000856:	4a20      	ldr	r2, [pc, #128]	; (80008d8 <MX_FDCAN1_Init+0x88>)
 8000858:	601a      	str	r2, [r3, #0]
  hfdcan1.Init.ClockDivider = FDCAN_CLOCK_DIV2;
 800085a:	4b1e      	ldr	r3, [pc, #120]	; (80008d4 <MX_FDCAN1_Init+0x84>)
 800085c:	2201      	movs	r2, #1
 800085e:	605a      	str	r2, [r3, #4]
  hfdcan1.Init.FrameFormat = FDCAN_FRAME_CLASSIC;
 8000860:	4b1c      	ldr	r3, [pc, #112]	; (80008d4 <MX_FDCAN1_Init+0x84>)
 8000862:	2200      	movs	r2, #0
 8000864:	609a      	str	r2, [r3, #8]
  hfdcan1.Init.Mode = FDCAN_MODE_NORMAL;
 8000866:	4b1b      	ldr	r3, [pc, #108]	; (80008d4 <MX_FDCAN1_Init+0x84>)
 8000868:	2200      	movs	r2, #0
 800086a:	60da      	str	r2, [r3, #12]
  hfdcan1.Init.AutoRetransmission = DISABLE;
 800086c:	4b19      	ldr	r3, [pc, #100]	; (80008d4 <MX_FDCAN1_Init+0x84>)
 800086e:	2200      	movs	r2, #0
 8000870:	741a      	strb	r2, [r3, #16]
  hfdcan1.Init.TransmitPause = DISABLE;
 8000872:	4b18      	ldr	r3, [pc, #96]	; (80008d4 <MX_FDCAN1_Init+0x84>)
 8000874:	2200      	movs	r2, #0
 8000876:	745a      	strb	r2, [r3, #17]
  hfdcan1.Init.ProtocolException = DISABLE;
 8000878:	4b16      	ldr	r3, [pc, #88]	; (80008d4 <MX_FDCAN1_Init+0x84>)
 800087a:	2200      	movs	r2, #0
 800087c:	749a      	strb	r2, [r3, #18]
  hfdcan1.Init.NominalPrescaler = 5;
 800087e:	4b15      	ldr	r3, [pc, #84]	; (80008d4 <MX_FDCAN1_Init+0x84>)
 8000880:	2205      	movs	r2, #5
 8000882:	615a      	str	r2, [r3, #20]
  hfdcan1.Init.NominalSyncJumpWidth = 1;
 8000884:	4b13      	ldr	r3, [pc, #76]	; (80008d4 <MX_FDCAN1_Init+0x84>)
 8000886:	2201      	movs	r2, #1
 8000888:	619a      	str	r2, [r3, #24]
  hfdcan1.Init.NominalTimeSeg1 = 13;
 800088a:	4b12      	ldr	r3, [pc, #72]	; (80008d4 <MX_FDCAN1_Init+0x84>)
 800088c:	220d      	movs	r2, #13
 800088e:	61da      	str	r2, [r3, #28]
  hfdcan1.Init.NominalTimeSeg2 = 2;
 8000890:	4b10      	ldr	r3, [pc, #64]	; (80008d4 <MX_FDCAN1_Init+0x84>)
 8000892:	2202      	movs	r2, #2
 8000894:	621a      	str	r2, [r3, #32]
  hfdcan1.Init.DataPrescaler = 1;
 8000896:	4b0f      	ldr	r3, [pc, #60]	; (80008d4 <MX_FDCAN1_Init+0x84>)
 8000898:	2201      	movs	r2, #1
 800089a:	625a      	str	r2, [r3, #36]	; 0x24
  hfdcan1.Init.DataSyncJumpWidth = 1;
 800089c:	4b0d      	ldr	r3, [pc, #52]	; (80008d4 <MX_FDCAN1_Init+0x84>)
 800089e:	2201      	movs	r2, #1
 80008a0:	629a      	str	r2, [r3, #40]	; 0x28
  hfdcan1.Init.DataTimeSeg1 = 1;
 80008a2:	4b0c      	ldr	r3, [pc, #48]	; (80008d4 <MX_FDCAN1_Init+0x84>)
 80008a4:	2201      	movs	r2, #1
 80008a6:	62da      	str	r2, [r3, #44]	; 0x2c
  hfdcan1.Init.DataTimeSeg2 = 1;
 80008a8:	4b0a      	ldr	r3, [pc, #40]	; (80008d4 <MX_FDCAN1_Init+0x84>)
 80008aa:	2201      	movs	r2, #1
 80008ac:	631a      	str	r2, [r3, #48]	; 0x30
  hfdcan1.Init.StdFiltersNbr = 0;
 80008ae:	4b09      	ldr	r3, [pc, #36]	; (80008d4 <MX_FDCAN1_Init+0x84>)
 80008b0:	2200      	movs	r2, #0
 80008b2:	635a      	str	r2, [r3, #52]	; 0x34
  hfdcan1.Init.ExtFiltersNbr = 0;
 80008b4:	4b07      	ldr	r3, [pc, #28]	; (80008d4 <MX_FDCAN1_Init+0x84>)
 80008b6:	2200      	movs	r2, #0
 80008b8:	639a      	str	r2, [r3, #56]	; 0x38
  hfdcan1.Init.TxFifoQueueMode = FDCAN_TX_FIFO_OPERATION;
 80008ba:	4b06      	ldr	r3, [pc, #24]	; (80008d4 <MX_FDCAN1_Init+0x84>)
 80008bc:	2200      	movs	r2, #0
 80008be:	63da      	str	r2, [r3, #60]	; 0x3c
  if (HAL_FDCAN_Init(&hfdcan1) != HAL_OK)
 80008c0:	4804      	ldr	r0, [pc, #16]	; (80008d4 <MX_FDCAN1_Init+0x84>)
 80008c2:	f000 fde3 	bl	800148c <HAL_FDCAN_Init>
 80008c6:	4603      	mov	r3, r0
 80008c8:	2b00      	cmp	r3, #0
 80008ca:	d001      	beq.n	80008d0 <MX_FDCAN1_Init+0x80>
  {
    Error_Handler();
 80008cc:	f000 fa74 	bl	8000db8 <Error_Handler>
  }
  /* USER CODE BEGIN FDCAN1_Init 2 */

  /* USER CODE END FDCAN1_Init 2 */

}
 80008d0:	bf00      	nop
 80008d2:	bd80      	pop	{r7, pc}
 80008d4:	20002310 	.word	0x20002310
 80008d8:	40006400 	.word	0x40006400

080008dc <MX_LPUART1_UART_Init>:
  * @brief LPUART1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_LPUART1_UART_Init(void)
{
 80008dc:	b580      	push	{r7, lr}
 80008de:	af00      	add	r7, sp, #0
  /* USER CODE END LPUART1_Init 0 */

  /* USER CODE BEGIN LPUART1_Init 1 */

  /* USER CODE END LPUART1_Init 1 */
  hlpuart1.Instance = LPUART1;
 80008e0:	4b1f      	ldr	r3, [pc, #124]	; (8000960 <MX_LPUART1_UART_Init+0x84>)
 80008e2:	4a20      	ldr	r2, [pc, #128]	; (8000964 <MX_LPUART1_UART_Init+0x88>)
 80008e4:	601a      	str	r2, [r3, #0]
  hlpuart1.Init.BaudRate = 115200;
 80008e6:	4b1e      	ldr	r3, [pc, #120]	; (8000960 <MX_LPUART1_UART_Init+0x84>)
 80008e8:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 80008ec:	605a      	str	r2, [r3, #4]
  hlpuart1.Init.WordLength = UART_WORDLENGTH_8B;
 80008ee:	4b1c      	ldr	r3, [pc, #112]	; (8000960 <MX_LPUART1_UART_Init+0x84>)
 80008f0:	2200      	movs	r2, #0
 80008f2:	609a      	str	r2, [r3, #8]
  hlpuart1.Init.StopBits = UART_STOPBITS_1;
 80008f4:	4b1a      	ldr	r3, [pc, #104]	; (8000960 <MX_LPUART1_UART_Init+0x84>)
 80008f6:	2200      	movs	r2, #0
 80008f8:	60da      	str	r2, [r3, #12]
  hlpuart1.Init.Parity = UART_PARITY_NONE;
 80008fa:	4b19      	ldr	r3, [pc, #100]	; (8000960 <MX_LPUART1_UART_Init+0x84>)
 80008fc:	2200      	movs	r2, #0
 80008fe:	611a      	str	r2, [r3, #16]
  hlpuart1.Init.Mode = UART_MODE_TX_RX;
 8000900:	4b17      	ldr	r3, [pc, #92]	; (8000960 <MX_LPUART1_UART_Init+0x84>)
 8000902:	220c      	movs	r2, #12
 8000904:	615a      	str	r2, [r3, #20]
  hlpuart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8000906:	4b16      	ldr	r3, [pc, #88]	; (8000960 <MX_LPUART1_UART_Init+0x84>)
 8000908:	2200      	movs	r2, #0
 800090a:	619a      	str	r2, [r3, #24]
  hlpuart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 800090c:	4b14      	ldr	r3, [pc, #80]	; (8000960 <MX_LPUART1_UART_Init+0x84>)
 800090e:	2200      	movs	r2, #0
 8000910:	621a      	str	r2, [r3, #32]
  hlpuart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 8000912:	4b13      	ldr	r3, [pc, #76]	; (8000960 <MX_LPUART1_UART_Init+0x84>)
 8000914:	2200      	movs	r2, #0
 8000916:	629a      	str	r2, [r3, #40]	; 0x28
  if (HAL_UART_Init(&hlpuart1) != HAL_OK)
 8000918:	4811      	ldr	r0, [pc, #68]	; (8000960 <MX_LPUART1_UART_Init+0x84>)
 800091a:	f004 fa3b 	bl	8004d94 <HAL_UART_Init>
 800091e:	4603      	mov	r3, r0
 8000920:	2b00      	cmp	r3, #0
 8000922:	d001      	beq.n	8000928 <MX_LPUART1_UART_Init+0x4c>
  {
    Error_Handler();
 8000924:	f000 fa48 	bl	8000db8 <Error_Handler>
  }
  if (HAL_UARTEx_SetTxFifoThreshold(&hlpuart1, UART_TXFIFO_THRESHOLD_1_8) != HAL_OK)
 8000928:	2100      	movs	r1, #0
 800092a:	480d      	ldr	r0, [pc, #52]	; (8000960 <MX_LPUART1_UART_Init+0x84>)
 800092c:	f005 fddf 	bl	80064ee <HAL_UARTEx_SetTxFifoThreshold>
 8000930:	4603      	mov	r3, r0
 8000932:	2b00      	cmp	r3, #0
 8000934:	d001      	beq.n	800093a <MX_LPUART1_UART_Init+0x5e>
  {
    Error_Handler();
 8000936:	f000 fa3f 	bl	8000db8 <Error_Handler>
  }
  if (HAL_UARTEx_SetRxFifoThreshold(&hlpuart1, UART_RXFIFO_THRESHOLD_1_8) != HAL_OK)
 800093a:	2100      	movs	r1, #0
 800093c:	4808      	ldr	r0, [pc, #32]	; (8000960 <MX_LPUART1_UART_Init+0x84>)
 800093e:	f005 fe14 	bl	800656a <HAL_UARTEx_SetRxFifoThreshold>
 8000942:	4603      	mov	r3, r0
 8000944:	2b00      	cmp	r3, #0
 8000946:	d001      	beq.n	800094c <MX_LPUART1_UART_Init+0x70>
  {
    Error_Handler();
 8000948:	f000 fa36 	bl	8000db8 <Error_Handler>
  }
  if (HAL_UARTEx_DisableFifoMode(&hlpuart1) != HAL_OK)
 800094c:	4804      	ldr	r0, [pc, #16]	; (8000960 <MX_LPUART1_UART_Init+0x84>)
 800094e:	f005 fd95 	bl	800647c <HAL_UARTEx_DisableFifoMode>
 8000952:	4603      	mov	r3, r0
 8000954:	2b00      	cmp	r3, #0
 8000956:	d001      	beq.n	800095c <MX_LPUART1_UART_Init+0x80>
  {
    Error_Handler();
 8000958:	f000 fa2e 	bl	8000db8 <Error_Handler>
  }
  /* USER CODE BEGIN LPUART1_Init 2 */

  /* USER CODE END LPUART1_Init 2 */

}
 800095c:	bf00      	nop
 800095e:	bd80      	pop	{r7, pc}
 8000960:	200021f0 	.word	0x200021f0
 8000964:	40008000 	.word	0x40008000

08000968 <MX_RTC_Init>:
  * @brief RTC Initialization Function
  * @param None
  * @retval None
  */
static void MX_RTC_Init(void)
{
 8000968:	b580      	push	{r7, lr}
 800096a:	b086      	sub	sp, #24
 800096c:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN RTC_Init 0 */

  /* USER CODE END RTC_Init 0 */

  RTC_TimeTypeDef sTime = {0};
 800096e:	1d3b      	adds	r3, r7, #4
 8000970:	2200      	movs	r2, #0
 8000972:	601a      	str	r2, [r3, #0]
 8000974:	605a      	str	r2, [r3, #4]
 8000976:	609a      	str	r2, [r3, #8]
 8000978:	60da      	str	r2, [r3, #12]
 800097a:	611a      	str	r2, [r3, #16]
  RTC_DateTypeDef sDate = {0};
 800097c:	2300      	movs	r3, #0
 800097e:	603b      	str	r3, [r7, #0]
  /* USER CODE BEGIN RTC_Init 1 */

  /* USER CODE END RTC_Init 1 */
  /** Initialize RTC Only 
  */
  hrtc.Instance = RTC;
 8000980:	4b25      	ldr	r3, [pc, #148]	; (8000a18 <MX_RTC_Init+0xb0>)
 8000982:	4a26      	ldr	r2, [pc, #152]	; (8000a1c <MX_RTC_Init+0xb4>)
 8000984:	601a      	str	r2, [r3, #0]
  hrtc.Init.HourFormat = RTC_HOURFORMAT_24;
 8000986:	4b24      	ldr	r3, [pc, #144]	; (8000a18 <MX_RTC_Init+0xb0>)
 8000988:	2200      	movs	r2, #0
 800098a:	605a      	str	r2, [r3, #4]
  hrtc.Init.AsynchPrediv = 127;
 800098c:	4b22      	ldr	r3, [pc, #136]	; (8000a18 <MX_RTC_Init+0xb0>)
 800098e:	227f      	movs	r2, #127	; 0x7f
 8000990:	609a      	str	r2, [r3, #8]
  hrtc.Init.SynchPrediv = 255;
 8000992:	4b21      	ldr	r3, [pc, #132]	; (8000a18 <MX_RTC_Init+0xb0>)
 8000994:	22ff      	movs	r2, #255	; 0xff
 8000996:	60da      	str	r2, [r3, #12]
  hrtc.Init.OutPut = RTC_OUTPUT_DISABLE;
 8000998:	4b1f      	ldr	r3, [pc, #124]	; (8000a18 <MX_RTC_Init+0xb0>)
 800099a:	2200      	movs	r2, #0
 800099c:	611a      	str	r2, [r3, #16]
  hrtc.Init.OutPutRemap = RTC_OUTPUT_REMAP_NONE;
 800099e:	4b1e      	ldr	r3, [pc, #120]	; (8000a18 <MX_RTC_Init+0xb0>)
 80009a0:	2200      	movs	r2, #0
 80009a2:	615a      	str	r2, [r3, #20]
  hrtc.Init.OutPutPullUp = RTC_OUTPUT_PULLUP_NONE;
 80009a4:	4b1c      	ldr	r3, [pc, #112]	; (8000a18 <MX_RTC_Init+0xb0>)
 80009a6:	2200      	movs	r2, #0
 80009a8:	621a      	str	r2, [r3, #32]
  if (HAL_RTC_Init(&hrtc) != HAL_OK)
 80009aa:	481b      	ldr	r0, [pc, #108]	; (8000a18 <MX_RTC_Init+0xb0>)
 80009ac:	f002 fda8 	bl	8003500 <HAL_RTC_Init>
 80009b0:	4603      	mov	r3, r0
 80009b2:	2b00      	cmp	r3, #0
 80009b4:	d001      	beq.n	80009ba <MX_RTC_Init+0x52>
  {
    Error_Handler();
 80009b6:	f000 f9ff 	bl	8000db8 <Error_Handler>
    
  /* USER CODE END Check_RTC_BKUP */

  /** Initialize RTC and set the Time and Date 
  */
  sTime.Hours = 0x0;
 80009ba:	2300      	movs	r3, #0
 80009bc:	713b      	strb	r3, [r7, #4]
  sTime.Minutes = 0x0;
 80009be:	2300      	movs	r3, #0
 80009c0:	717b      	strb	r3, [r7, #5]
  sTime.Seconds = 0x0;
 80009c2:	2300      	movs	r3, #0
 80009c4:	71bb      	strb	r3, [r7, #6]
  sTime.SubSeconds = 0x0;
 80009c6:	2300      	movs	r3, #0
 80009c8:	60bb      	str	r3, [r7, #8]
  sTime.DayLightSaving = RTC_DAYLIGHTSAVING_NONE;
 80009ca:	2300      	movs	r3, #0
 80009cc:	613b      	str	r3, [r7, #16]
  sTime.StoreOperation = RTC_STOREOPERATION_RESET;
 80009ce:	2300      	movs	r3, #0
 80009d0:	617b      	str	r3, [r7, #20]
  if (HAL_RTC_SetTime(&hrtc, &sTime, RTC_FORMAT_BCD) != HAL_OK)
 80009d2:	1d3b      	adds	r3, r7, #4
 80009d4:	2201      	movs	r2, #1
 80009d6:	4619      	mov	r1, r3
 80009d8:	480f      	ldr	r0, [pc, #60]	; (8000a18 <MX_RTC_Init+0xb0>)
 80009da:	f002 fdff 	bl	80035dc <HAL_RTC_SetTime>
 80009de:	4603      	mov	r3, r0
 80009e0:	2b00      	cmp	r3, #0
 80009e2:	d001      	beq.n	80009e8 <MX_RTC_Init+0x80>
  {
    Error_Handler();
 80009e4:	f000 f9e8 	bl	8000db8 <Error_Handler>
  }
  sDate.WeekDay = RTC_WEEKDAY_MONDAY;
 80009e8:	2301      	movs	r3, #1
 80009ea:	703b      	strb	r3, [r7, #0]
  sDate.Month = RTC_MONTH_JANUARY;
 80009ec:	2301      	movs	r3, #1
 80009ee:	707b      	strb	r3, [r7, #1]
  sDate.Date = 0x1;
 80009f0:	2301      	movs	r3, #1
 80009f2:	70bb      	strb	r3, [r7, #2]
  sDate.Year = 0x0;
 80009f4:	2300      	movs	r3, #0
 80009f6:	70fb      	strb	r3, [r7, #3]

  if (HAL_RTC_SetDate(&hrtc, &sDate, RTC_FORMAT_BCD) != HAL_OK)
 80009f8:	463b      	mov	r3, r7
 80009fa:	2201      	movs	r2, #1
 80009fc:	4619      	mov	r1, r3
 80009fe:	4806      	ldr	r0, [pc, #24]	; (8000a18 <MX_RTC_Init+0xb0>)
 8000a00:	f002 fe82 	bl	8003708 <HAL_RTC_SetDate>
 8000a04:	4603      	mov	r3, r0
 8000a06:	2b00      	cmp	r3, #0
 8000a08:	d001      	beq.n	8000a0e <MX_RTC_Init+0xa6>
  {
    Error_Handler();
 8000a0a:	f000 f9d5 	bl	8000db8 <Error_Handler>
  }
  /* USER CODE BEGIN RTC_Init 2 */

  /* USER CODE END RTC_Init 2 */

}
 8000a0e:	bf00      	nop
 8000a10:	3718      	adds	r7, #24
 8000a12:	46bd      	mov	sp, r7
 8000a14:	bd80      	pop	{r7, pc}
 8000a16:	bf00      	nop
 8000a18:	200022e8 	.word	0x200022e8
 8000a1c:	40002800 	.word	0x40002800

08000a20 <MX_SPI2_Init>:
  * @brief SPI2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_SPI2_Init(void)
{
 8000a20:	b580      	push	{r7, lr}
 8000a22:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN SPI2_Init 1 */

  /* USER CODE END SPI2_Init 1 */
  /* SPI2 parameter configuration*/
  hspi2.Instance = SPI2;
 8000a24:	4b1b      	ldr	r3, [pc, #108]	; (8000a94 <MX_SPI2_Init+0x74>)
 8000a26:	4a1c      	ldr	r2, [pc, #112]	; (8000a98 <MX_SPI2_Init+0x78>)
 8000a28:	601a      	str	r2, [r3, #0]
  hspi2.Init.Mode = SPI_MODE_MASTER;
 8000a2a:	4b1a      	ldr	r3, [pc, #104]	; (8000a94 <MX_SPI2_Init+0x74>)
 8000a2c:	f44f 7282 	mov.w	r2, #260	; 0x104
 8000a30:	605a      	str	r2, [r3, #4]
  hspi2.Init.Direction = SPI_DIRECTION_2LINES;
 8000a32:	4b18      	ldr	r3, [pc, #96]	; (8000a94 <MX_SPI2_Init+0x74>)
 8000a34:	2200      	movs	r2, #0
 8000a36:	609a      	str	r2, [r3, #8]
  hspi2.Init.DataSize = SPI_DATASIZE_8BIT;
 8000a38:	4b16      	ldr	r3, [pc, #88]	; (8000a94 <MX_SPI2_Init+0x74>)
 8000a3a:	f44f 62e0 	mov.w	r2, #1792	; 0x700
 8000a3e:	60da      	str	r2, [r3, #12]
  hspi2.Init.CLKPolarity = SPI_POLARITY_HIGH;
 8000a40:	4b14      	ldr	r3, [pc, #80]	; (8000a94 <MX_SPI2_Init+0x74>)
 8000a42:	2202      	movs	r2, #2
 8000a44:	611a      	str	r2, [r3, #16]
  hspi2.Init.CLKPhase = SPI_PHASE_2EDGE;
 8000a46:	4b13      	ldr	r3, [pc, #76]	; (8000a94 <MX_SPI2_Init+0x74>)
 8000a48:	2201      	movs	r2, #1
 8000a4a:	615a      	str	r2, [r3, #20]
  hspi2.Init.NSS = SPI_NSS_SOFT;
 8000a4c:	4b11      	ldr	r3, [pc, #68]	; (8000a94 <MX_SPI2_Init+0x74>)
 8000a4e:	f44f 7200 	mov.w	r2, #512	; 0x200
 8000a52:	619a      	str	r2, [r3, #24]
  hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_8;
 8000a54:	4b0f      	ldr	r3, [pc, #60]	; (8000a94 <MX_SPI2_Init+0x74>)
 8000a56:	2210      	movs	r2, #16
 8000a58:	61da      	str	r2, [r3, #28]
  hspi2.Init.FirstBit = SPI_FIRSTBIT_MSB;
 8000a5a:	4b0e      	ldr	r3, [pc, #56]	; (8000a94 <MX_SPI2_Init+0x74>)
 8000a5c:	2200      	movs	r2, #0
 8000a5e:	621a      	str	r2, [r3, #32]
  hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
 8000a60:	4b0c      	ldr	r3, [pc, #48]	; (8000a94 <MX_SPI2_Init+0x74>)
 8000a62:	2200      	movs	r2, #0
 8000a64:	625a      	str	r2, [r3, #36]	; 0x24
  hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8000a66:	4b0b      	ldr	r3, [pc, #44]	; (8000a94 <MX_SPI2_Init+0x74>)
 8000a68:	2200      	movs	r2, #0
 8000a6a:	629a      	str	r2, [r3, #40]	; 0x28
  hspi2.Init.CRCPolynomial = 7;
 8000a6c:	4b09      	ldr	r3, [pc, #36]	; (8000a94 <MX_SPI2_Init+0x74>)
 8000a6e:	2207      	movs	r2, #7
 8000a70:	62da      	str	r2, [r3, #44]	; 0x2c
  hspi2.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 8000a72:	4b08      	ldr	r3, [pc, #32]	; (8000a94 <MX_SPI2_Init+0x74>)
 8000a74:	2200      	movs	r2, #0
 8000a76:	631a      	str	r2, [r3, #48]	; 0x30
  hspi2.Init.NSSPMode = SPI_NSS_PULSE_DISABLE;
 8000a78:	4b06      	ldr	r3, [pc, #24]	; (8000a94 <MX_SPI2_Init+0x74>)
 8000a7a:	2200      	movs	r2, #0
 8000a7c:	635a      	str	r2, [r3, #52]	; 0x34
  if (HAL_SPI_Init(&hspi2) != HAL_OK)
 8000a7e:	4805      	ldr	r0, [pc, #20]	; (8000a94 <MX_SPI2_Init+0x74>)
 8000a80:	f002 ff80 	bl	8003984 <HAL_SPI_Init>
 8000a84:	4603      	mov	r3, r0
 8000a86:	2b00      	cmp	r3, #0
 8000a88:	d001      	beq.n	8000a8e <MX_SPI2_Init+0x6e>
  {
    Error_Handler();
 8000a8a:	f000 f995 	bl	8000db8 <Error_Handler>
  }
  /* USER CODE BEGIN SPI2_Init 2 */

  /* USER CODE END SPI2_Init 2 */

}
 8000a8e:	bf00      	nop
 8000a90:	bd80      	pop	{r7, pc}
 8000a92:	bf00      	nop
 8000a94:	200010b8 	.word	0x200010b8
 8000a98:	40003800 	.word	0x40003800

08000a9c <MX_TIM17_Init>:
  * @brief TIM17 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM17_Init(void)
{
 8000a9c:	b580      	push	{r7, lr}
 8000a9e:	af00      	add	r7, sp, #0
  /* USER CODE END TIM17_Init 0 */

  /* USER CODE BEGIN TIM17_Init 1 */

  /* USER CODE END TIM17_Init 1 */
  htim17.Instance = TIM17;
 8000aa0:	4b0f      	ldr	r3, [pc, #60]	; (8000ae0 <MX_TIM17_Init+0x44>)
 8000aa2:	4a10      	ldr	r2, [pc, #64]	; (8000ae4 <MX_TIM17_Init+0x48>)
 8000aa4:	601a      	str	r2, [r3, #0]
  htim17.Init.Prescaler = 12799;
 8000aa6:	4b0e      	ldr	r3, [pc, #56]	; (8000ae0 <MX_TIM17_Init+0x44>)
 8000aa8:	f243 12ff 	movw	r2, #12799	; 0x31ff
 8000aac:	605a      	str	r2, [r3, #4]
  htim17.Init.CounterMode = TIM_COUNTERMODE_UP;
 8000aae:	4b0c      	ldr	r3, [pc, #48]	; (8000ae0 <MX_TIM17_Init+0x44>)
 8000ab0:	2200      	movs	r2, #0
 8000ab2:	609a      	str	r2, [r3, #8]
  htim17.Init.Period = 25;
 8000ab4:	4b0a      	ldr	r3, [pc, #40]	; (8000ae0 <MX_TIM17_Init+0x44>)
 8000ab6:	2219      	movs	r2, #25
 8000ab8:	60da      	str	r2, [r3, #12]
  htim17.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8000aba:	4b09      	ldr	r3, [pc, #36]	; (8000ae0 <MX_TIM17_Init+0x44>)
 8000abc:	2200      	movs	r2, #0
 8000abe:	611a      	str	r2, [r3, #16]
  htim17.Init.RepetitionCounter = 0;
 8000ac0:	4b07      	ldr	r3, [pc, #28]	; (8000ae0 <MX_TIM17_Init+0x44>)
 8000ac2:	2200      	movs	r2, #0
 8000ac4:	615a      	str	r2, [r3, #20]
  htim17.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 8000ac6:	4b06      	ldr	r3, [pc, #24]	; (8000ae0 <MX_TIM17_Init+0x44>)
 8000ac8:	2280      	movs	r2, #128	; 0x80
 8000aca:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim17) != HAL_OK)
 8000acc:	4804      	ldr	r0, [pc, #16]	; (8000ae0 <MX_TIM17_Init+0x44>)
 8000ace:	f003 fe0f 	bl	80046f0 <HAL_TIM_Base_Init>
 8000ad2:	4603      	mov	r3, r0
 8000ad4:	2b00      	cmp	r3, #0
 8000ad6:	d001      	beq.n	8000adc <MX_TIM17_Init+0x40>
  {
    Error_Handler();
 8000ad8:	f000 f96e 	bl	8000db8 <Error_Handler>
  }
  /* USER CODE BEGIN TIM17_Init 2 */

  /* USER CODE END TIM17_Init 2 */

}
 8000adc:	bf00      	nop
 8000ade:	bd80      	pop	{r7, pc}
 8000ae0:	20001160 	.word	0x20001160
 8000ae4:	40014800 	.word	0x40014800

08000ae8 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8000ae8:	b580      	push	{r7, lr}
 8000aea:	b08a      	sub	sp, #40	; 0x28
 8000aec:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000aee:	f107 0314 	add.w	r3, r7, #20
 8000af2:	2200      	movs	r2, #0
 8000af4:	601a      	str	r2, [r3, #0]
 8000af6:	605a      	str	r2, [r3, #4]
 8000af8:	609a      	str	r2, [r3, #8]
 8000afa:	60da      	str	r2, [r3, #12]
 8000afc:	611a      	str	r2, [r3, #16]

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8000afe:	4b2b      	ldr	r3, [pc, #172]	; (8000bac <MX_GPIO_Init+0xc4>)
 8000b00:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8000b02:	4a2a      	ldr	r2, [pc, #168]	; (8000bac <MX_GPIO_Init+0xc4>)
 8000b04:	f043 0304 	orr.w	r3, r3, #4
 8000b08:	64d3      	str	r3, [r2, #76]	; 0x4c
 8000b0a:	4b28      	ldr	r3, [pc, #160]	; (8000bac <MX_GPIO_Init+0xc4>)
 8000b0c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8000b0e:	f003 0304 	and.w	r3, r3, #4
 8000b12:	613b      	str	r3, [r7, #16]
 8000b14:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8000b16:	4b25      	ldr	r3, [pc, #148]	; (8000bac <MX_GPIO_Init+0xc4>)
 8000b18:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8000b1a:	4a24      	ldr	r2, [pc, #144]	; (8000bac <MX_GPIO_Init+0xc4>)
 8000b1c:	f043 0320 	orr.w	r3, r3, #32
 8000b20:	64d3      	str	r3, [r2, #76]	; 0x4c
 8000b22:	4b22      	ldr	r3, [pc, #136]	; (8000bac <MX_GPIO_Init+0xc4>)
 8000b24:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8000b26:	f003 0320 	and.w	r3, r3, #32
 8000b2a:	60fb      	str	r3, [r7, #12]
 8000b2c:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8000b2e:	4b1f      	ldr	r3, [pc, #124]	; (8000bac <MX_GPIO_Init+0xc4>)
 8000b30:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8000b32:	4a1e      	ldr	r2, [pc, #120]	; (8000bac <MX_GPIO_Init+0xc4>)
 8000b34:	f043 0301 	orr.w	r3, r3, #1
 8000b38:	64d3      	str	r3, [r2, #76]	; 0x4c
 8000b3a:	4b1c      	ldr	r3, [pc, #112]	; (8000bac <MX_GPIO_Init+0xc4>)
 8000b3c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8000b3e:	f003 0301 	and.w	r3, r3, #1
 8000b42:	60bb      	str	r3, [r7, #8]
 8000b44:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8000b46:	4b19      	ldr	r3, [pc, #100]	; (8000bac <MX_GPIO_Init+0xc4>)
 8000b48:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8000b4a:	4a18      	ldr	r2, [pc, #96]	; (8000bac <MX_GPIO_Init+0xc4>)
 8000b4c:	f043 0302 	orr.w	r3, r3, #2
 8000b50:	64d3      	str	r3, [r2, #76]	; 0x4c
 8000b52:	4b16      	ldr	r3, [pc, #88]	; (8000bac <MX_GPIO_Init+0xc4>)
 8000b54:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8000b56:	f003 0302 	and.w	r3, r3, #2
 8000b5a:	607b      	str	r3, [r7, #4]
 8000b5c:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, GPIO_PIN_RESET);
 8000b5e:	2200      	movs	r2, #0
 8000b60:	2120      	movs	r1, #32
 8000b62:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 8000b66:	f001 fc5b 	bl	8002420 <HAL_GPIO_WritePin>

  /*Configure GPIO pin : B1_Pin */
  GPIO_InitStruct.Pin = B1_Pin;
 8000b6a:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8000b6e:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8000b70:	4b0f      	ldr	r3, [pc, #60]	; (8000bb0 <MX_GPIO_Init+0xc8>)
 8000b72:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000b74:	2300      	movs	r3, #0
 8000b76:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 8000b78:	f107 0314 	add.w	r3, r7, #20
 8000b7c:	4619      	mov	r1, r3
 8000b7e:	480d      	ldr	r0, [pc, #52]	; (8000bb4 <MX_GPIO_Init+0xcc>)
 8000b80:	f001 fab4 	bl	80020ec <HAL_GPIO_Init>

  /*Configure GPIO pin : PA5 */
  GPIO_InitStruct.Pin = GPIO_PIN_5;
 8000b84:	2320      	movs	r3, #32
 8000b86:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000b88:	2301      	movs	r3, #1
 8000b8a:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000b8c:	2300      	movs	r3, #0
 8000b8e:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000b90:	2300      	movs	r3, #0
 8000b92:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000b94:	f107 0314 	add.w	r3, r7, #20
 8000b98:	4619      	mov	r1, r3
 8000b9a:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 8000b9e:	f001 faa5 	bl	80020ec <HAL_GPIO_Init>

}
 8000ba2:	bf00      	nop
 8000ba4:	3728      	adds	r7, #40	; 0x28
 8000ba6:	46bd      	mov	sp, r7
 8000ba8:	bd80      	pop	{r7, pc}
 8000baa:	bf00      	nop
 8000bac:	40021000 	.word	0x40021000
 8000bb0:	10110000 	.word	0x10110000
 8000bb4:	48000800 	.word	0x48000800

08000bb8 <HAL_FDCAN_RxFifo0Callback>:

/* USER CODE BEGIN 4 */

void HAL_FDCAN_RxFifo0Callback(FDCAN_HandleTypeDef*hcan, uint32_t RxFifo0ITs){
 8000bb8:	b580      	push	{r7, lr}
 8000bba:	b082      	sub	sp, #8
 8000bbc:	af00      	add	r7, sp, #0
 8000bbe:	6078      	str	r0, [r7, #4]
 8000bc0:	6039      	str	r1, [r7, #0]
	if(HAL_FDCAN_GetRxMessage(&hfdcan1,FDCAN_RX_FIFO0,&RxHeader,rxData.Data8u) == HAL_OK){
 8000bc2:	4b4a      	ldr	r3, [pc, #296]	; (8000cec <HAL_FDCAN_RxFifo0Callback+0x134>)
 8000bc4:	4a4a      	ldr	r2, [pc, #296]	; (8000cf0 <HAL_FDCAN_RxFifo0Callback+0x138>)
 8000bc6:	2140      	movs	r1, #64	; 0x40
 8000bc8:	484a      	ldr	r0, [pc, #296]	; (8000cf4 <HAL_FDCAN_RxFifo0Callback+0x13c>)
 8000bca:	f000 fde1 	bl	8001790 <HAL_FDCAN_GetRxMessage>
 8000bce:	4603      	mov	r3, r0
 8000bd0:	2b00      	cmp	r3, #0
 8000bd2:	f040 8087 	bne.w	8000ce4 <HAL_FDCAN_RxFifo0Callback+0x12c>
		if((RxHeader.Identifier>>5) == 0x00){
 8000bd6:	4b46      	ldr	r3, [pc, #280]	; (8000cf0 <HAL_FDCAN_RxFifo0Callback+0x138>)
 8000bd8:	681b      	ldr	r3, [r3, #0]
 8000bda:	095b      	lsrs	r3, r3, #5
 8000bdc:	2b00      	cmp	r3, #0
 8000bde:	d12d      	bne.n	8000c3c <HAL_FDCAN_RxFifo0Callback+0x84>
			Dati.ID = (uint8_t)RxHeader.Identifier;
 8000be0:	4b43      	ldr	r3, [pc, #268]	; (8000cf0 <HAL_FDCAN_RxFifo0Callback+0x138>)
 8000be2:	681b      	ldr	r3, [r3, #0]
 8000be4:	b2da      	uxtb	r2, r3
 8000be6:	4b44      	ldr	r3, [pc, #272]	; (8000cf8 <HAL_FDCAN_RxFifo0Callback+0x140>)
 8000be8:	771a      	strb	r2, [r3, #28]
			Dati.Timer = rxData.Data8u[0] | rxData.Data8u[1]<<8 | rxData.Data8u[2]<<16 | rxData.Data8u[3]<<24;
 8000bea:	4b40      	ldr	r3, [pc, #256]	; (8000cec <HAL_FDCAN_RxFifo0Callback+0x134>)
 8000bec:	781b      	ldrb	r3, [r3, #0]
 8000bee:	461a      	mov	r2, r3
 8000bf0:	4b3e      	ldr	r3, [pc, #248]	; (8000cec <HAL_FDCAN_RxFifo0Callback+0x134>)
 8000bf2:	785b      	ldrb	r3, [r3, #1]
 8000bf4:	021b      	lsls	r3, r3, #8
 8000bf6:	431a      	orrs	r2, r3
 8000bf8:	4b3c      	ldr	r3, [pc, #240]	; (8000cec <HAL_FDCAN_RxFifo0Callback+0x134>)
 8000bfa:	789b      	ldrb	r3, [r3, #2]
 8000bfc:	041b      	lsls	r3, r3, #16
 8000bfe:	431a      	orrs	r2, r3
 8000c00:	4b3a      	ldr	r3, [pc, #232]	; (8000cec <HAL_FDCAN_RxFifo0Callback+0x134>)
 8000c02:	78db      	ldrb	r3, [r3, #3]
 8000c04:	061b      	lsls	r3, r3, #24
 8000c06:	4313      	orrs	r3, r2
 8000c08:	461a      	mov	r2, r3
 8000c0a:	4b3b      	ldr	r3, [pc, #236]	; (8000cf8 <HAL_FDCAN_RxFifo0Callback+0x140>)
 8000c0c:	619a      	str	r2, [r3, #24]
			Dati.Gir_x = rxData.Data8u[4] | rxData.Data8u[5]<<8;
 8000c0e:	4b37      	ldr	r3, [pc, #220]	; (8000cec <HAL_FDCAN_RxFifo0Callback+0x134>)
 8000c10:	791b      	ldrb	r3, [r3, #4]
 8000c12:	b21a      	sxth	r2, r3
 8000c14:	4b35      	ldr	r3, [pc, #212]	; (8000cec <HAL_FDCAN_RxFifo0Callback+0x134>)
 8000c16:	795b      	ldrb	r3, [r3, #5]
 8000c18:	021b      	lsls	r3, r3, #8
 8000c1a:	b21b      	sxth	r3, r3
 8000c1c:	4313      	orrs	r3, r2
 8000c1e:	b21a      	sxth	r2, r3
 8000c20:	4b35      	ldr	r3, [pc, #212]	; (8000cf8 <HAL_FDCAN_RxFifo0Callback+0x140>)
 8000c22:	80da      	strh	r2, [r3, #6]
			Dati.Gir_y = rxData.Data8u[6] | rxData.Data8u[7]<<8;
 8000c24:	4b31      	ldr	r3, [pc, #196]	; (8000cec <HAL_FDCAN_RxFifo0Callback+0x134>)
 8000c26:	799b      	ldrb	r3, [r3, #6]
 8000c28:	b21a      	sxth	r2, r3
 8000c2a:	4b30      	ldr	r3, [pc, #192]	; (8000cec <HAL_FDCAN_RxFifo0Callback+0x134>)
 8000c2c:	79db      	ldrb	r3, [r3, #7]
 8000c2e:	021b      	lsls	r3, r3, #8
 8000c30:	b21b      	sxth	r3, r3
 8000c32:	4313      	orrs	r3, r2
 8000c34:	b21a      	sxth	r2, r3
 8000c36:	4b30      	ldr	r3, [pc, #192]	; (8000cf8 <HAL_FDCAN_RxFifo0Callback+0x140>)
 8000c38:	811a      	strh	r2, [r3, #8]
		else{
			Dati.ID = (uint8_t)RxHeader.Identifier & 0x1F;
			Dati.Pres = rxData.Data8u[0] | rxData.Data8u[1]<<8 | rxData.Data8u[2]<<16 | rxData.Data8u[3]<<24;
		}
	}
}
 8000c3a:	e053      	b.n	8000ce4 <HAL_FDCAN_RxFifo0Callback+0x12c>
		else if((RxHeader.Identifier>>5) == 0x01){
 8000c3c:	4b2c      	ldr	r3, [pc, #176]	; (8000cf0 <HAL_FDCAN_RxFifo0Callback+0x138>)
 8000c3e:	681b      	ldr	r3, [r3, #0]
 8000c40:	095b      	lsrs	r3, r3, #5
 8000c42:	2b01      	cmp	r3, #1
 8000c44:	d134      	bne.n	8000cb0 <HAL_FDCAN_RxFifo0Callback+0xf8>
			Dati.ID = (uint8_t)RxHeader.Identifier & 0x1F;
 8000c46:	4b2a      	ldr	r3, [pc, #168]	; (8000cf0 <HAL_FDCAN_RxFifo0Callback+0x138>)
 8000c48:	681b      	ldr	r3, [r3, #0]
 8000c4a:	b2db      	uxtb	r3, r3
 8000c4c:	f003 031f 	and.w	r3, r3, #31
 8000c50:	b2da      	uxtb	r2, r3
 8000c52:	4b29      	ldr	r3, [pc, #164]	; (8000cf8 <HAL_FDCAN_RxFifo0Callback+0x140>)
 8000c54:	771a      	strb	r2, [r3, #28]
			Dati.Acc_x = rxData.Data8u[0] | rxData.Data8u[1]<<8;
 8000c56:	4b25      	ldr	r3, [pc, #148]	; (8000cec <HAL_FDCAN_RxFifo0Callback+0x134>)
 8000c58:	781b      	ldrb	r3, [r3, #0]
 8000c5a:	b21a      	sxth	r2, r3
 8000c5c:	4b23      	ldr	r3, [pc, #140]	; (8000cec <HAL_FDCAN_RxFifo0Callback+0x134>)
 8000c5e:	785b      	ldrb	r3, [r3, #1]
 8000c60:	021b      	lsls	r3, r3, #8
 8000c62:	b21b      	sxth	r3, r3
 8000c64:	4313      	orrs	r3, r2
 8000c66:	b21a      	sxth	r2, r3
 8000c68:	4b23      	ldr	r3, [pc, #140]	; (8000cf8 <HAL_FDCAN_RxFifo0Callback+0x140>)
 8000c6a:	801a      	strh	r2, [r3, #0]
			Dati.Acc_y = rxData.Data8u[2] | rxData.Data8u[3]<<8;
 8000c6c:	4b1f      	ldr	r3, [pc, #124]	; (8000cec <HAL_FDCAN_RxFifo0Callback+0x134>)
 8000c6e:	789b      	ldrb	r3, [r3, #2]
 8000c70:	b21a      	sxth	r2, r3
 8000c72:	4b1e      	ldr	r3, [pc, #120]	; (8000cec <HAL_FDCAN_RxFifo0Callback+0x134>)
 8000c74:	78db      	ldrb	r3, [r3, #3]
 8000c76:	021b      	lsls	r3, r3, #8
 8000c78:	b21b      	sxth	r3, r3
 8000c7a:	4313      	orrs	r3, r2
 8000c7c:	b21a      	sxth	r2, r3
 8000c7e:	4b1e      	ldr	r3, [pc, #120]	; (8000cf8 <HAL_FDCAN_RxFifo0Callback+0x140>)
 8000c80:	805a      	strh	r2, [r3, #2]
			Dati.Acc_z = rxData.Data8u[4] | rxData.Data8u[5]<<8;
 8000c82:	4b1a      	ldr	r3, [pc, #104]	; (8000cec <HAL_FDCAN_RxFifo0Callback+0x134>)
 8000c84:	791b      	ldrb	r3, [r3, #4]
 8000c86:	b21a      	sxth	r2, r3
 8000c88:	4b18      	ldr	r3, [pc, #96]	; (8000cec <HAL_FDCAN_RxFifo0Callback+0x134>)
 8000c8a:	795b      	ldrb	r3, [r3, #5]
 8000c8c:	021b      	lsls	r3, r3, #8
 8000c8e:	b21b      	sxth	r3, r3
 8000c90:	4313      	orrs	r3, r2
 8000c92:	b21a      	sxth	r2, r3
 8000c94:	4b18      	ldr	r3, [pc, #96]	; (8000cf8 <HAL_FDCAN_RxFifo0Callback+0x140>)
 8000c96:	809a      	strh	r2, [r3, #4]
			Dati.T_b = rxData.Data8u[6] | rxData.Data8u[7]<<8;
 8000c98:	4b14      	ldr	r3, [pc, #80]	; (8000cec <HAL_FDCAN_RxFifo0Callback+0x134>)
 8000c9a:	799b      	ldrb	r3, [r3, #6]
 8000c9c:	b21a      	sxth	r2, r3
 8000c9e:	4b13      	ldr	r3, [pc, #76]	; (8000cec <HAL_FDCAN_RxFifo0Callback+0x134>)
 8000ca0:	79db      	ldrb	r3, [r3, #7]
 8000ca2:	021b      	lsls	r3, r3, #8
 8000ca4:	b21b      	sxth	r3, r3
 8000ca6:	4313      	orrs	r3, r2
 8000ca8:	b21a      	sxth	r2, r3
 8000caa:	4b13      	ldr	r3, [pc, #76]	; (8000cf8 <HAL_FDCAN_RxFifo0Callback+0x140>)
 8000cac:	81da      	strh	r2, [r3, #14]
}
 8000cae:	e019      	b.n	8000ce4 <HAL_FDCAN_RxFifo0Callback+0x12c>
			Dati.ID = (uint8_t)RxHeader.Identifier & 0x1F;
 8000cb0:	4b0f      	ldr	r3, [pc, #60]	; (8000cf0 <HAL_FDCAN_RxFifo0Callback+0x138>)
 8000cb2:	681b      	ldr	r3, [r3, #0]
 8000cb4:	b2db      	uxtb	r3, r3
 8000cb6:	f003 031f 	and.w	r3, r3, #31
 8000cba:	b2da      	uxtb	r2, r3
 8000cbc:	4b0e      	ldr	r3, [pc, #56]	; (8000cf8 <HAL_FDCAN_RxFifo0Callback+0x140>)
 8000cbe:	771a      	strb	r2, [r3, #28]
			Dati.Pres = rxData.Data8u[0] | rxData.Data8u[1]<<8 | rxData.Data8u[2]<<16 | rxData.Data8u[3]<<24;
 8000cc0:	4b0a      	ldr	r3, [pc, #40]	; (8000cec <HAL_FDCAN_RxFifo0Callback+0x134>)
 8000cc2:	781b      	ldrb	r3, [r3, #0]
 8000cc4:	461a      	mov	r2, r3
 8000cc6:	4b09      	ldr	r3, [pc, #36]	; (8000cec <HAL_FDCAN_RxFifo0Callback+0x134>)
 8000cc8:	785b      	ldrb	r3, [r3, #1]
 8000cca:	021b      	lsls	r3, r3, #8
 8000ccc:	431a      	orrs	r2, r3
 8000cce:	4b07      	ldr	r3, [pc, #28]	; (8000cec <HAL_FDCAN_RxFifo0Callback+0x134>)
 8000cd0:	789b      	ldrb	r3, [r3, #2]
 8000cd2:	041b      	lsls	r3, r3, #16
 8000cd4:	431a      	orrs	r2, r3
 8000cd6:	4b05      	ldr	r3, [pc, #20]	; (8000cec <HAL_FDCAN_RxFifo0Callback+0x134>)
 8000cd8:	78db      	ldrb	r3, [r3, #3]
 8000cda:	061b      	lsls	r3, r3, #24
 8000cdc:	4313      	orrs	r3, r2
 8000cde:	461a      	mov	r2, r3
 8000ce0:	4b05      	ldr	r3, [pc, #20]	; (8000cf8 <HAL_FDCAN_RxFifo0Callback+0x140>)
 8000ce2:	611a      	str	r2, [r3, #16]
}
 8000ce4:	bf00      	nop
 8000ce6:	3708      	adds	r7, #8
 8000ce8:	46bd      	mov	sp, r7
 8000cea:	bd80      	pop	{r7, pc}
 8000cec:	20000080 	.word	0x20000080
 8000cf0:	20002430 	.word	0x20002430
 8000cf4:	20002310 	.word	0x20002310
 8000cf8:	20002380 	.word	0x20002380

08000cfc <HAL_TIM_PeriodElapsedCallback>:

void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim){
 8000cfc:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000cfe:	b08b      	sub	sp, #44	; 0x2c
 8000d00:	af06      	add	r7, sp, #24
 8000d02:	6078      	str	r0, [r7, #4]
    if (htim->Instance==TIM17){ //check if the interrupt comes from TIM17
 8000d04:	687b      	ldr	r3, [r7, #4]
 8000d06:	681b      	ldr	r3, [r3, #0]
 8000d08:	4a24      	ldr	r2, [pc, #144]	; (8000d9c <HAL_TIM_PeriodElapsedCallback+0xa0>)
 8000d0a:	4293      	cmp	r3, r2
 8000d0c:	d141      	bne.n	8000d92 <HAL_TIM_PeriodElapsedCallback+0x96>
    	FRESULT res;
    	if(HAL_GPIO_ReadPin(B1_GPIO_Port,B1_Pin)==GPIO_PIN_SET){
 8000d0e:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8000d12:	4823      	ldr	r0, [pc, #140]	; (8000da0 <HAL_TIM_PeriodElapsedCallback+0xa4>)
 8000d14:	f001 fb6c 	bl	80023f0 <HAL_GPIO_ReadPin>
 8000d18:	4603      	mov	r3, r0
 8000d1a:	2b01      	cmp	r3, #1
 8000d1c:	d112      	bne.n	8000d44 <HAL_TIM_PeriodElapsedCallback+0x48>
    		HAL_TIM_Base_Stop_IT(&htim17);
 8000d1e:	4821      	ldr	r0, [pc, #132]	; (8000da4 <HAL_TIM_PeriodElapsedCallback+0xa8>)
 8000d20:	f003 fd74 	bl	800480c <HAL_TIM_Base_Stop_IT>
    		HAL_FDCAN_DeactivateNotification(&hfdcan1, FDCAN_IT_RX_FIFO0_NEW_MESSAGE);
 8000d24:	2101      	movs	r1, #1
 8000d26:	4820      	ldr	r0, [pc, #128]	; (8000da8 <HAL_TIM_PeriodElapsedCallback+0xac>)
 8000d28:	f000 fef2 	bl	8001b10 <HAL_FDCAN_DeactivateNotification>
    		res = f_close(&USERFile);
 8000d2c:	481f      	ldr	r0, [pc, #124]	; (8000dac <HAL_TIM_PeriodElapsedCallback+0xb0>)
 8000d2e:	f009 fa4b 	bl	800a1c8 <f_close>
 8000d32:	4603      	mov	r3, r0
 8000d34:	73fb      	strb	r3, [r7, #15]
    		HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, GPIO_PIN_SET);
 8000d36:	2201      	movs	r2, #1
 8000d38:	2120      	movs	r1, #32
 8000d3a:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 8000d3e:	f001 fb6f 	bl	8002420 <HAL_GPIO_WritePin>
    	else{
    		//res = SD_Write();
    		f_printf(&USERFile,"%d,%d,%d,%d,%d,%d,%d,%d\n",Dati.Timer,Dati.ID,Dati.Acc_x,Dati.Acc_y,Dati.Acc_z,Dati.Gir_x,Dati.Gir_y,Dati.T_b);
    	}
    }
}
 8000d42:	e026      	b.n	8000d92 <HAL_TIM_PeriodElapsedCallback+0x96>
    		f_printf(&USERFile,"%d,%d,%d,%d,%d,%d,%d,%d\n",Dati.Timer,Dati.ID,Dati.Acc_x,Dati.Acc_y,Dati.Acc_z,Dati.Gir_x,Dati.Gir_y,Dati.T_b);
 8000d44:	4b1a      	ldr	r3, [pc, #104]	; (8000db0 <HAL_TIM_PeriodElapsedCallback+0xb4>)
 8000d46:	699a      	ldr	r2, [r3, #24]
 8000d48:	4b19      	ldr	r3, [pc, #100]	; (8000db0 <HAL_TIM_PeriodElapsedCallback+0xb4>)
 8000d4a:	7f1b      	ldrb	r3, [r3, #28]
 8000d4c:	469c      	mov	ip, r3
 8000d4e:	4b18      	ldr	r3, [pc, #96]	; (8000db0 <HAL_TIM_PeriodElapsedCallback+0xb4>)
 8000d50:	f9b3 3000 	ldrsh.w	r3, [r3]
 8000d54:	4619      	mov	r1, r3
 8000d56:	4b16      	ldr	r3, [pc, #88]	; (8000db0 <HAL_TIM_PeriodElapsedCallback+0xb4>)
 8000d58:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8000d5c:	4618      	mov	r0, r3
 8000d5e:	4b14      	ldr	r3, [pc, #80]	; (8000db0 <HAL_TIM_PeriodElapsedCallback+0xb4>)
 8000d60:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 8000d64:	461c      	mov	r4, r3
 8000d66:	4b12      	ldr	r3, [pc, #72]	; (8000db0 <HAL_TIM_PeriodElapsedCallback+0xb4>)
 8000d68:	f9b3 3006 	ldrsh.w	r3, [r3, #6]
 8000d6c:	461d      	mov	r5, r3
 8000d6e:	4b10      	ldr	r3, [pc, #64]	; (8000db0 <HAL_TIM_PeriodElapsedCallback+0xb4>)
 8000d70:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8000d74:	461e      	mov	r6, r3
 8000d76:	4b0e      	ldr	r3, [pc, #56]	; (8000db0 <HAL_TIM_PeriodElapsedCallback+0xb4>)
 8000d78:	f9b3 300e 	ldrsh.w	r3, [r3, #14]
 8000d7c:	9305      	str	r3, [sp, #20]
 8000d7e:	9604      	str	r6, [sp, #16]
 8000d80:	9503      	str	r5, [sp, #12]
 8000d82:	9402      	str	r4, [sp, #8]
 8000d84:	9001      	str	r0, [sp, #4]
 8000d86:	9100      	str	r1, [sp, #0]
 8000d88:	4663      	mov	r3, ip
 8000d8a:	490a      	ldr	r1, [pc, #40]	; (8000db4 <HAL_TIM_PeriodElapsedCallback+0xb8>)
 8000d8c:	4807      	ldr	r0, [pc, #28]	; (8000dac <HAL_TIM_PeriodElapsedCallback+0xb0>)
 8000d8e:	f009 ff0d 	bl	800abac <f_printf>
}
 8000d92:	bf00      	nop
 8000d94:	3714      	adds	r7, #20
 8000d96:	46bd      	mov	sp, r7
 8000d98:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000d9a:	bf00      	nop
 8000d9c:	40014800 	.word	0x40014800
 8000da0:	48000800 	.word	0x48000800
 8000da4:	20001160 	.word	0x20001160
 8000da8:	20002310 	.word	0x20002310
 8000dac:	2000347c 	.word	0x2000347c
 8000db0:	20002380 	.word	0x20002380
 8000db4:	0800b124 	.word	0x0800b124

08000db8 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8000db8:	b480      	push	{r7}
 8000dba:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
	//printf("** Error. ** \n\r");
	while(1)
 8000dbc:	e7fe      	b.n	8000dbc <Error_Handler+0x4>
	...

08000dc0 <LL_PWR_DisableUCPDDeadBattery>:
 8000dc0:	b480      	push	{r7}
 8000dc2:	af00      	add	r7, sp, #0
 8000dc4:	4b05      	ldr	r3, [pc, #20]	; (8000ddc <LL_PWR_DisableUCPDDeadBattery+0x1c>)
 8000dc6:	689b      	ldr	r3, [r3, #8]
 8000dc8:	4a04      	ldr	r2, [pc, #16]	; (8000ddc <LL_PWR_DisableUCPDDeadBattery+0x1c>)
 8000dca:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8000dce:	6093      	str	r3, [r2, #8]
 8000dd0:	bf00      	nop
 8000dd2:	46bd      	mov	sp, r7
 8000dd4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000dd8:	4770      	bx	lr
 8000dda:	bf00      	nop
 8000ddc:	40007000 	.word	0x40007000

08000de0 <HAL_MspInit>:
 8000de0:	b580      	push	{r7, lr}
 8000de2:	b082      	sub	sp, #8
 8000de4:	af00      	add	r7, sp, #0
 8000de6:	4b0f      	ldr	r3, [pc, #60]	; (8000e24 <HAL_MspInit+0x44>)
 8000de8:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8000dea:	4a0e      	ldr	r2, [pc, #56]	; (8000e24 <HAL_MspInit+0x44>)
 8000dec:	f043 0301 	orr.w	r3, r3, #1
 8000df0:	6613      	str	r3, [r2, #96]	; 0x60
 8000df2:	4b0c      	ldr	r3, [pc, #48]	; (8000e24 <HAL_MspInit+0x44>)
 8000df4:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8000df6:	f003 0301 	and.w	r3, r3, #1
 8000dfa:	607b      	str	r3, [r7, #4]
 8000dfc:	687b      	ldr	r3, [r7, #4]
 8000dfe:	4b09      	ldr	r3, [pc, #36]	; (8000e24 <HAL_MspInit+0x44>)
 8000e00:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8000e02:	4a08      	ldr	r2, [pc, #32]	; (8000e24 <HAL_MspInit+0x44>)
 8000e04:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8000e08:	6593      	str	r3, [r2, #88]	; 0x58
 8000e0a:	4b06      	ldr	r3, [pc, #24]	; (8000e24 <HAL_MspInit+0x44>)
 8000e0c:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8000e0e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8000e12:	603b      	str	r3, [r7, #0]
 8000e14:	683b      	ldr	r3, [r7, #0]
 8000e16:	f7ff ffd3 	bl	8000dc0 <LL_PWR_DisableUCPDDeadBattery>
 8000e1a:	bf00      	nop
 8000e1c:	3708      	adds	r7, #8
 8000e1e:	46bd      	mov	sp, r7
 8000e20:	bd80      	pop	{r7, pc}
 8000e22:	bf00      	nop
 8000e24:	40021000 	.word	0x40021000

08000e28 <HAL_FDCAN_MspInit>:
 8000e28:	b580      	push	{r7, lr}
 8000e2a:	b08a      	sub	sp, #40	; 0x28
 8000e2c:	af00      	add	r7, sp, #0
 8000e2e:	6078      	str	r0, [r7, #4]
 8000e30:	f107 0314 	add.w	r3, r7, #20
 8000e34:	2200      	movs	r2, #0
 8000e36:	601a      	str	r2, [r3, #0]
 8000e38:	605a      	str	r2, [r3, #4]
 8000e3a:	609a      	str	r2, [r3, #8]
 8000e3c:	60da      	str	r2, [r3, #12]
 8000e3e:	611a      	str	r2, [r3, #16]
 8000e40:	687b      	ldr	r3, [r7, #4]
 8000e42:	681b      	ldr	r3, [r3, #0]
 8000e44:	4a18      	ldr	r2, [pc, #96]	; (8000ea8 <HAL_FDCAN_MspInit+0x80>)
 8000e46:	4293      	cmp	r3, r2
 8000e48:	d129      	bne.n	8000e9e <HAL_FDCAN_MspInit+0x76>
 8000e4a:	4b18      	ldr	r3, [pc, #96]	; (8000eac <HAL_FDCAN_MspInit+0x84>)
 8000e4c:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8000e4e:	4a17      	ldr	r2, [pc, #92]	; (8000eac <HAL_FDCAN_MspInit+0x84>)
 8000e50:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
 8000e54:	6593      	str	r3, [r2, #88]	; 0x58
 8000e56:	4b15      	ldr	r3, [pc, #84]	; (8000eac <HAL_FDCAN_MspInit+0x84>)
 8000e58:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8000e5a:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8000e5e:	613b      	str	r3, [r7, #16]
 8000e60:	693b      	ldr	r3, [r7, #16]
 8000e62:	4b12      	ldr	r3, [pc, #72]	; (8000eac <HAL_FDCAN_MspInit+0x84>)
 8000e64:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8000e66:	4a11      	ldr	r2, [pc, #68]	; (8000eac <HAL_FDCAN_MspInit+0x84>)
 8000e68:	f043 0301 	orr.w	r3, r3, #1
 8000e6c:	64d3      	str	r3, [r2, #76]	; 0x4c
 8000e6e:	4b0f      	ldr	r3, [pc, #60]	; (8000eac <HAL_FDCAN_MspInit+0x84>)
 8000e70:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8000e72:	f003 0301 	and.w	r3, r3, #1
 8000e76:	60fb      	str	r3, [r7, #12]
 8000e78:	68fb      	ldr	r3, [r7, #12]
 8000e7a:	f44f 53c0 	mov.w	r3, #6144	; 0x1800
 8000e7e:	617b      	str	r3, [r7, #20]
 8000e80:	2302      	movs	r3, #2
 8000e82:	61bb      	str	r3, [r7, #24]
 8000e84:	2300      	movs	r3, #0
 8000e86:	61fb      	str	r3, [r7, #28]
 8000e88:	2300      	movs	r3, #0
 8000e8a:	623b      	str	r3, [r7, #32]
 8000e8c:	2309      	movs	r3, #9
 8000e8e:	627b      	str	r3, [r7, #36]	; 0x24
 8000e90:	f107 0314 	add.w	r3, r7, #20
 8000e94:	4619      	mov	r1, r3
 8000e96:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 8000e9a:	f001 f927 	bl	80020ec <HAL_GPIO_Init>
 8000e9e:	bf00      	nop
 8000ea0:	3728      	adds	r7, #40	; 0x28
 8000ea2:	46bd      	mov	sp, r7
 8000ea4:	bd80      	pop	{r7, pc}
 8000ea6:	bf00      	nop
 8000ea8:	40006400 	.word	0x40006400
 8000eac:	40021000 	.word	0x40021000

08000eb0 <HAL_UART_MspInit>:
 8000eb0:	b580      	push	{r7, lr}
 8000eb2:	b08a      	sub	sp, #40	; 0x28
 8000eb4:	af00      	add	r7, sp, #0
 8000eb6:	6078      	str	r0, [r7, #4]
 8000eb8:	f107 0314 	add.w	r3, r7, #20
 8000ebc:	2200      	movs	r2, #0
 8000ebe:	601a      	str	r2, [r3, #0]
 8000ec0:	605a      	str	r2, [r3, #4]
 8000ec2:	609a      	str	r2, [r3, #8]
 8000ec4:	60da      	str	r2, [r3, #12]
 8000ec6:	611a      	str	r2, [r3, #16]
 8000ec8:	687b      	ldr	r3, [r7, #4]
 8000eca:	681b      	ldr	r3, [r3, #0]
 8000ecc:	4a17      	ldr	r2, [pc, #92]	; (8000f2c <HAL_UART_MspInit+0x7c>)
 8000ece:	4293      	cmp	r3, r2
 8000ed0:	d128      	bne.n	8000f24 <HAL_UART_MspInit+0x74>
 8000ed2:	4b17      	ldr	r3, [pc, #92]	; (8000f30 <HAL_UART_MspInit+0x80>)
 8000ed4:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8000ed6:	4a16      	ldr	r2, [pc, #88]	; (8000f30 <HAL_UART_MspInit+0x80>)
 8000ed8:	f043 0301 	orr.w	r3, r3, #1
 8000edc:	65d3      	str	r3, [r2, #92]	; 0x5c
 8000ede:	4b14      	ldr	r3, [pc, #80]	; (8000f30 <HAL_UART_MspInit+0x80>)
 8000ee0:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8000ee2:	f003 0301 	and.w	r3, r3, #1
 8000ee6:	613b      	str	r3, [r7, #16]
 8000ee8:	693b      	ldr	r3, [r7, #16]
 8000eea:	4b11      	ldr	r3, [pc, #68]	; (8000f30 <HAL_UART_MspInit+0x80>)
 8000eec:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8000eee:	4a10      	ldr	r2, [pc, #64]	; (8000f30 <HAL_UART_MspInit+0x80>)
 8000ef0:	f043 0301 	orr.w	r3, r3, #1
 8000ef4:	64d3      	str	r3, [r2, #76]	; 0x4c
 8000ef6:	4b0e      	ldr	r3, [pc, #56]	; (8000f30 <HAL_UART_MspInit+0x80>)
 8000ef8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8000efa:	f003 0301 	and.w	r3, r3, #1
 8000efe:	60fb      	str	r3, [r7, #12]
 8000f00:	68fb      	ldr	r3, [r7, #12]
 8000f02:	230c      	movs	r3, #12
 8000f04:	617b      	str	r3, [r7, #20]
 8000f06:	2302      	movs	r3, #2
 8000f08:	61bb      	str	r3, [r7, #24]
 8000f0a:	2300      	movs	r3, #0
 8000f0c:	61fb      	str	r3, [r7, #28]
 8000f0e:	2300      	movs	r3, #0
 8000f10:	623b      	str	r3, [r7, #32]
 8000f12:	230c      	movs	r3, #12
 8000f14:	627b      	str	r3, [r7, #36]	; 0x24
 8000f16:	f107 0314 	add.w	r3, r7, #20
 8000f1a:	4619      	mov	r1, r3
 8000f1c:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 8000f20:	f001 f8e4 	bl	80020ec <HAL_GPIO_Init>
 8000f24:	bf00      	nop
 8000f26:	3728      	adds	r7, #40	; 0x28
 8000f28:	46bd      	mov	sp, r7
 8000f2a:	bd80      	pop	{r7, pc}
 8000f2c:	40008000 	.word	0x40008000
 8000f30:	40021000 	.word	0x40021000

08000f34 <HAL_RTC_MspInit>:
 8000f34:	b480      	push	{r7}
 8000f36:	b083      	sub	sp, #12
 8000f38:	af00      	add	r7, sp, #0
 8000f3a:	6078      	str	r0, [r7, #4]
 8000f3c:	687b      	ldr	r3, [r7, #4]
 8000f3e:	681b      	ldr	r3, [r3, #0]
 8000f40:	4a08      	ldr	r2, [pc, #32]	; (8000f64 <HAL_RTC_MspInit+0x30>)
 8000f42:	4293      	cmp	r3, r2
 8000f44:	d107      	bne.n	8000f56 <HAL_RTC_MspInit+0x22>
 8000f46:	4b08      	ldr	r3, [pc, #32]	; (8000f68 <HAL_RTC_MspInit+0x34>)
 8000f48:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8000f4c:	4a06      	ldr	r2, [pc, #24]	; (8000f68 <HAL_RTC_MspInit+0x34>)
 8000f4e:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8000f52:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
 8000f56:	bf00      	nop
 8000f58:	370c      	adds	r7, #12
 8000f5a:	46bd      	mov	sp, r7
 8000f5c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000f60:	4770      	bx	lr
 8000f62:	bf00      	nop
 8000f64:	40002800 	.word	0x40002800
 8000f68:	40021000 	.word	0x40021000

08000f6c <HAL_SPI_MspInit>:
 8000f6c:	b580      	push	{r7, lr}
 8000f6e:	b08a      	sub	sp, #40	; 0x28
 8000f70:	af00      	add	r7, sp, #0
 8000f72:	6078      	str	r0, [r7, #4]
 8000f74:	f107 0314 	add.w	r3, r7, #20
 8000f78:	2200      	movs	r2, #0
 8000f7a:	601a      	str	r2, [r3, #0]
 8000f7c:	605a      	str	r2, [r3, #4]
 8000f7e:	609a      	str	r2, [r3, #8]
 8000f80:	60da      	str	r2, [r3, #12]
 8000f82:	611a      	str	r2, [r3, #16]
 8000f84:	687b      	ldr	r3, [r7, #4]
 8000f86:	681b      	ldr	r3, [r3, #0]
 8000f88:	4a17      	ldr	r2, [pc, #92]	; (8000fe8 <HAL_SPI_MspInit+0x7c>)
 8000f8a:	4293      	cmp	r3, r2
 8000f8c:	d128      	bne.n	8000fe0 <HAL_SPI_MspInit+0x74>
 8000f8e:	4b17      	ldr	r3, [pc, #92]	; (8000fec <HAL_SPI_MspInit+0x80>)
 8000f90:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8000f92:	4a16      	ldr	r2, [pc, #88]	; (8000fec <HAL_SPI_MspInit+0x80>)
 8000f94:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8000f98:	6593      	str	r3, [r2, #88]	; 0x58
 8000f9a:	4b14      	ldr	r3, [pc, #80]	; (8000fec <HAL_SPI_MspInit+0x80>)
 8000f9c:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8000f9e:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8000fa2:	613b      	str	r3, [r7, #16]
 8000fa4:	693b      	ldr	r3, [r7, #16]
 8000fa6:	4b11      	ldr	r3, [pc, #68]	; (8000fec <HAL_SPI_MspInit+0x80>)
 8000fa8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8000faa:	4a10      	ldr	r2, [pc, #64]	; (8000fec <HAL_SPI_MspInit+0x80>)
 8000fac:	f043 0302 	orr.w	r3, r3, #2
 8000fb0:	64d3      	str	r3, [r2, #76]	; 0x4c
 8000fb2:	4b0e      	ldr	r3, [pc, #56]	; (8000fec <HAL_SPI_MspInit+0x80>)
 8000fb4:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8000fb6:	f003 0302 	and.w	r3, r3, #2
 8000fba:	60fb      	str	r3, [r7, #12]
 8000fbc:	68fb      	ldr	r3, [r7, #12]
 8000fbe:	f44f 4360 	mov.w	r3, #57344	; 0xe000
 8000fc2:	617b      	str	r3, [r7, #20]
 8000fc4:	2302      	movs	r3, #2
 8000fc6:	61bb      	str	r3, [r7, #24]
 8000fc8:	2300      	movs	r3, #0
 8000fca:	61fb      	str	r3, [r7, #28]
 8000fcc:	2300      	movs	r3, #0
 8000fce:	623b      	str	r3, [r7, #32]
 8000fd0:	2305      	movs	r3, #5
 8000fd2:	627b      	str	r3, [r7, #36]	; 0x24
 8000fd4:	f107 0314 	add.w	r3, r7, #20
 8000fd8:	4619      	mov	r1, r3
 8000fda:	4805      	ldr	r0, [pc, #20]	; (8000ff0 <HAL_SPI_MspInit+0x84>)
 8000fdc:	f001 f886 	bl	80020ec <HAL_GPIO_Init>
 8000fe0:	bf00      	nop
 8000fe2:	3728      	adds	r7, #40	; 0x28
 8000fe4:	46bd      	mov	sp, r7
 8000fe6:	bd80      	pop	{r7, pc}
 8000fe8:	40003800 	.word	0x40003800
 8000fec:	40021000 	.word	0x40021000
 8000ff0:	48000400 	.word	0x48000400

08000ff4 <HAL_TIM_Base_MspInit>:
 8000ff4:	b480      	push	{r7}
 8000ff6:	b085      	sub	sp, #20
 8000ff8:	af00      	add	r7, sp, #0
 8000ffa:	6078      	str	r0, [r7, #4]
 8000ffc:	687b      	ldr	r3, [r7, #4]
 8000ffe:	681b      	ldr	r3, [r3, #0]
 8001000:	4a0a      	ldr	r2, [pc, #40]	; (800102c <HAL_TIM_Base_MspInit+0x38>)
 8001002:	4293      	cmp	r3, r2
 8001004:	d10b      	bne.n	800101e <HAL_TIM_Base_MspInit+0x2a>
 8001006:	4b0a      	ldr	r3, [pc, #40]	; (8001030 <HAL_TIM_Base_MspInit+0x3c>)
 8001008:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800100a:	4a09      	ldr	r2, [pc, #36]	; (8001030 <HAL_TIM_Base_MspInit+0x3c>)
 800100c:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8001010:	6613      	str	r3, [r2, #96]	; 0x60
 8001012:	4b07      	ldr	r3, [pc, #28]	; (8001030 <HAL_TIM_Base_MspInit+0x3c>)
 8001014:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8001016:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 800101a:	60fb      	str	r3, [r7, #12]
 800101c:	68fb      	ldr	r3, [r7, #12]
 800101e:	bf00      	nop
 8001020:	3714      	adds	r7, #20
 8001022:	46bd      	mov	sp, r7
 8001024:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001028:	4770      	bx	lr
 800102a:	bf00      	nop
 800102c:	40014800 	.word	0x40014800
 8001030:	40021000 	.word	0x40021000

08001034 <NMI_Handler>:
 8001034:	b480      	push	{r7}
 8001036:	af00      	add	r7, sp, #0
 8001038:	bf00      	nop
 800103a:	46bd      	mov	sp, r7
 800103c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001040:	4770      	bx	lr

08001042 <HardFault_Handler>:
 8001042:	b480      	push	{r7}
 8001044:	af00      	add	r7, sp, #0
 8001046:	e7fe      	b.n	8001046 <HardFault_Handler+0x4>

08001048 <MemManage_Handler>:
 8001048:	b480      	push	{r7}
 800104a:	af00      	add	r7, sp, #0
 800104c:	e7fe      	b.n	800104c <MemManage_Handler+0x4>

0800104e <BusFault_Handler>:
 800104e:	b480      	push	{r7}
 8001050:	af00      	add	r7, sp, #0
 8001052:	e7fe      	b.n	8001052 <BusFault_Handler+0x4>

08001054 <UsageFault_Handler>:
 8001054:	b480      	push	{r7}
 8001056:	af00      	add	r7, sp, #0
 8001058:	e7fe      	b.n	8001058 <UsageFault_Handler+0x4>

0800105a <SVC_Handler>:
 800105a:	b480      	push	{r7}
 800105c:	af00      	add	r7, sp, #0
 800105e:	bf00      	nop
 8001060:	46bd      	mov	sp, r7
 8001062:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001066:	4770      	bx	lr

08001068 <DebugMon_Handler>:
 8001068:	b480      	push	{r7}
 800106a:	af00      	add	r7, sp, #0
 800106c:	bf00      	nop
 800106e:	46bd      	mov	sp, r7
 8001070:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001074:	4770      	bx	lr

08001076 <PendSV_Handler>:
 8001076:	b480      	push	{r7}
 8001078:	af00      	add	r7, sp, #0
 800107a:	bf00      	nop
 800107c:	46bd      	mov	sp, r7
 800107e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001082:	4770      	bx	lr

08001084 <SysTick_Handler>:
 8001084:	b580      	push	{r7, lr}
 8001086:	af00      	add	r7, sp, #0
 8001088:	f000 f8b0 	bl	80011ec <HAL_IncTick>
 800108c:	bf00      	nop
 800108e:	bd80      	pop	{r7, pc}

08001090 <FDCAN1_IT0_IRQHandler>:
 8001090:	b580      	push	{r7, lr}
 8001092:	af00      	add	r7, sp, #0
 8001094:	4802      	ldr	r0, [pc, #8]	; (80010a0 <FDCAN1_IT0_IRQHandler+0x10>)
 8001096:	f000 fe1b 	bl	8001cd0 <HAL_FDCAN_IRQHandler>
 800109a:	bf00      	nop
 800109c:	bd80      	pop	{r7, pc}
 800109e:	bf00      	nop
 80010a0:	20002310 	.word	0x20002310

080010a4 <TIM1_TRG_COM_TIM17_IRQHandler>:
 80010a4:	b580      	push	{r7, lr}
 80010a6:	af00      	add	r7, sp, #0
 80010a8:	4802      	ldr	r0, [pc, #8]	; (80010b4 <TIM1_TRG_COM_TIM17_IRQHandler+0x10>)
 80010aa:	f003 fbde 	bl	800486a <HAL_TIM_IRQHandler>
 80010ae:	bf00      	nop
 80010b0:	bd80      	pop	{r7, pc}
 80010b2:	bf00      	nop
 80010b4:	20001160 	.word	0x20001160

080010b8 <EXTI15_10_IRQHandler>:
 80010b8:	b580      	push	{r7, lr}
 80010ba:	af00      	add	r7, sp, #0
 80010bc:	f44f 5000 	mov.w	r0, #8192	; 0x2000
 80010c0:	f001 f9c6 	bl	8002450 <HAL_GPIO_EXTI_IRQHandler>
 80010c4:	bf00      	nop
 80010c6:	bd80      	pop	{r7, pc}

080010c8 <SystemInit>:
 80010c8:	b480      	push	{r7}
 80010ca:	af00      	add	r7, sp, #0
 80010cc:	4b08      	ldr	r3, [pc, #32]	; (80010f0 <SystemInit+0x28>)
 80010ce:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80010d2:	4a07      	ldr	r2, [pc, #28]	; (80010f0 <SystemInit+0x28>)
 80010d4:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 80010d8:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
 80010dc:	4b04      	ldr	r3, [pc, #16]	; (80010f0 <SystemInit+0x28>)
 80010de:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 80010e2:	609a      	str	r2, [r3, #8]
 80010e4:	bf00      	nop
 80010e6:	46bd      	mov	sp, r7
 80010e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80010ec:	4770      	bx	lr
 80010ee:	bf00      	nop
 80010f0:	e000ed00 	.word	0xe000ed00

080010f4 <Reset_Handler>:
 80010f4:	480d      	ldr	r0, [pc, #52]	; (800112c <LoopForever+0x2>)
 80010f6:	4685      	mov	sp, r0
 80010f8:	480d      	ldr	r0, [pc, #52]	; (8001130 <LoopForever+0x6>)
 80010fa:	490e      	ldr	r1, [pc, #56]	; (8001134 <LoopForever+0xa>)
 80010fc:	4a0e      	ldr	r2, [pc, #56]	; (8001138 <LoopForever+0xe>)
 80010fe:	2300      	movs	r3, #0
 8001100:	e002      	b.n	8001108 <LoopCopyDataInit>

08001102 <CopyDataInit>:
 8001102:	58d4      	ldr	r4, [r2, r3]
 8001104:	50c4      	str	r4, [r0, r3]
 8001106:	3304      	adds	r3, #4

08001108 <LoopCopyDataInit>:
 8001108:	18c4      	adds	r4, r0, r3
 800110a:	428c      	cmp	r4, r1
 800110c:	d3f9      	bcc.n	8001102 <CopyDataInit>
 800110e:	4a0b      	ldr	r2, [pc, #44]	; (800113c <LoopForever+0x12>)
 8001110:	4c0b      	ldr	r4, [pc, #44]	; (8001140 <LoopForever+0x16>)
 8001112:	2300      	movs	r3, #0
 8001114:	e001      	b.n	800111a <LoopFillZerobss>

08001116 <FillZerobss>:
 8001116:	6013      	str	r3, [r2, #0]
 8001118:	3204      	adds	r2, #4

0800111a <LoopFillZerobss>:
 800111a:	42a2      	cmp	r2, r4
 800111c:	d3fb      	bcc.n	8001116 <FillZerobss>
 800111e:	f7ff ffd3 	bl	80010c8 <SystemInit>
 8001122:	f009 ffbf 	bl	800b0a4 <__libc_init_array>
 8001126:	f7ff f9f7 	bl	8000518 <main>

0800112a <LoopForever>:
 800112a:	e7fe      	b.n	800112a <LoopForever>
 800112c:	20020000 	.word	0x20020000
 8001130:	20000000 	.word	0x20000000
 8001134:	20000024 	.word	0x20000024
 8001138:	0800b26c 	.word	0x0800b26c
 800113c:	20000028 	.word	0x20000028
 8001140:	20005544 	.word	0x20005544

08001144 <ADC1_2_IRQHandler>:
 8001144:	e7fe      	b.n	8001144 <ADC1_2_IRQHandler>

08001146 <HAL_Init>:
 8001146:	b580      	push	{r7, lr}
 8001148:	b082      	sub	sp, #8
 800114a:	af00      	add	r7, sp, #0
 800114c:	2300      	movs	r3, #0
 800114e:	71fb      	strb	r3, [r7, #7]
 8001150:	2003      	movs	r0, #3
 8001152:	f000 f95b 	bl	800140c <HAL_NVIC_SetPriorityGrouping>
 8001156:	2000      	movs	r0, #0
 8001158:	f000 f80e 	bl	8001178 <HAL_InitTick>
 800115c:	4603      	mov	r3, r0
 800115e:	2b00      	cmp	r3, #0
 8001160:	d002      	beq.n	8001168 <HAL_Init+0x22>
 8001162:	2301      	movs	r3, #1
 8001164:	71fb      	strb	r3, [r7, #7]
 8001166:	e001      	b.n	800116c <HAL_Init+0x26>
 8001168:	f7ff fe3a 	bl	8000de0 <HAL_MspInit>
 800116c:	79fb      	ldrb	r3, [r7, #7]
 800116e:	4618      	mov	r0, r3
 8001170:	3708      	adds	r7, #8
 8001172:	46bd      	mov	sp, r7
 8001174:	bd80      	pop	{r7, pc}
	...

08001178 <HAL_InitTick>:
 8001178:	b580      	push	{r7, lr}
 800117a:	b084      	sub	sp, #16
 800117c:	af00      	add	r7, sp, #0
 800117e:	6078      	str	r0, [r7, #4]
 8001180:	2300      	movs	r3, #0
 8001182:	73fb      	strb	r3, [r7, #15]
 8001184:	4b16      	ldr	r3, [pc, #88]	; (80011e0 <HAL_InitTick+0x68>)
 8001186:	681b      	ldr	r3, [r3, #0]
 8001188:	2b00      	cmp	r3, #0
 800118a:	d022      	beq.n	80011d2 <HAL_InitTick+0x5a>
 800118c:	4b15      	ldr	r3, [pc, #84]	; (80011e4 <HAL_InitTick+0x6c>)
 800118e:	681a      	ldr	r2, [r3, #0]
 8001190:	4b13      	ldr	r3, [pc, #76]	; (80011e0 <HAL_InitTick+0x68>)
 8001192:	681b      	ldr	r3, [r3, #0]
 8001194:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8001198:	fbb1 f3f3 	udiv	r3, r1, r3
 800119c:	fbb2 f3f3 	udiv	r3, r2, r3
 80011a0:	4618      	mov	r0, r3
 80011a2:	f000 f966 	bl	8001472 <HAL_SYSTICK_Config>
 80011a6:	4603      	mov	r3, r0
 80011a8:	2b00      	cmp	r3, #0
 80011aa:	d10f      	bne.n	80011cc <HAL_InitTick+0x54>
 80011ac:	687b      	ldr	r3, [r7, #4]
 80011ae:	2b0f      	cmp	r3, #15
 80011b0:	d809      	bhi.n	80011c6 <HAL_InitTick+0x4e>
 80011b2:	2200      	movs	r2, #0
 80011b4:	6879      	ldr	r1, [r7, #4]
 80011b6:	f04f 30ff 	mov.w	r0, #4294967295
 80011ba:	f000 f932 	bl	8001422 <HAL_NVIC_SetPriority>
 80011be:	4a0a      	ldr	r2, [pc, #40]	; (80011e8 <HAL_InitTick+0x70>)
 80011c0:	687b      	ldr	r3, [r7, #4]
 80011c2:	6013      	str	r3, [r2, #0]
 80011c4:	e007      	b.n	80011d6 <HAL_InitTick+0x5e>
 80011c6:	2301      	movs	r3, #1
 80011c8:	73fb      	strb	r3, [r7, #15]
 80011ca:	e004      	b.n	80011d6 <HAL_InitTick+0x5e>
 80011cc:	2301      	movs	r3, #1
 80011ce:	73fb      	strb	r3, [r7, #15]
 80011d0:	e001      	b.n	80011d6 <HAL_InitTick+0x5e>
 80011d2:	2301      	movs	r3, #1
 80011d4:	73fb      	strb	r3, [r7, #15]
 80011d6:	7bfb      	ldrb	r3, [r7, #15]
 80011d8:	4618      	mov	r0, r3
 80011da:	3710      	adds	r7, #16
 80011dc:	46bd      	mov	sp, r7
 80011de:	bd80      	pop	{r7, pc}
 80011e0:	20000008 	.word	0x20000008
 80011e4:	20000000 	.word	0x20000000
 80011e8:	20000004 	.word	0x20000004

080011ec <HAL_IncTick>:
 80011ec:	b480      	push	{r7}
 80011ee:	af00      	add	r7, sp, #0
 80011f0:	4b05      	ldr	r3, [pc, #20]	; (8001208 <HAL_IncTick+0x1c>)
 80011f2:	681a      	ldr	r2, [r3, #0]
 80011f4:	4b05      	ldr	r3, [pc, #20]	; (800120c <HAL_IncTick+0x20>)
 80011f6:	681b      	ldr	r3, [r3, #0]
 80011f8:	4413      	add	r3, r2
 80011fa:	4a03      	ldr	r2, [pc, #12]	; (8001208 <HAL_IncTick+0x1c>)
 80011fc:	6013      	str	r3, [r2, #0]
 80011fe:	bf00      	nop
 8001200:	46bd      	mov	sp, r7
 8001202:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001206:	4770      	bx	lr
 8001208:	20002474 	.word	0x20002474
 800120c:	20000008 	.word	0x20000008

08001210 <HAL_GetTick>:
 8001210:	b480      	push	{r7}
 8001212:	af00      	add	r7, sp, #0
 8001214:	4b03      	ldr	r3, [pc, #12]	; (8001224 <HAL_GetTick+0x14>)
 8001216:	681b      	ldr	r3, [r3, #0]
 8001218:	4618      	mov	r0, r3
 800121a:	46bd      	mov	sp, r7
 800121c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001220:	4770      	bx	lr
 8001222:	bf00      	nop
 8001224:	20002474 	.word	0x20002474

08001228 <HAL_Delay>:
 8001228:	b580      	push	{r7, lr}
 800122a:	b084      	sub	sp, #16
 800122c:	af00      	add	r7, sp, #0
 800122e:	6078      	str	r0, [r7, #4]
 8001230:	f7ff ffee 	bl	8001210 <HAL_GetTick>
 8001234:	60b8      	str	r0, [r7, #8]
 8001236:	687b      	ldr	r3, [r7, #4]
 8001238:	60fb      	str	r3, [r7, #12]
 800123a:	68fb      	ldr	r3, [r7, #12]
 800123c:	f1b3 3fff 	cmp.w	r3, #4294967295
 8001240:	d004      	beq.n	800124c <HAL_Delay+0x24>
 8001242:	4b09      	ldr	r3, [pc, #36]	; (8001268 <HAL_Delay+0x40>)
 8001244:	681b      	ldr	r3, [r3, #0]
 8001246:	68fa      	ldr	r2, [r7, #12]
 8001248:	4413      	add	r3, r2
 800124a:	60fb      	str	r3, [r7, #12]
 800124c:	bf00      	nop
 800124e:	f7ff ffdf 	bl	8001210 <HAL_GetTick>
 8001252:	4602      	mov	r2, r0
 8001254:	68bb      	ldr	r3, [r7, #8]
 8001256:	1ad3      	subs	r3, r2, r3
 8001258:	68fa      	ldr	r2, [r7, #12]
 800125a:	429a      	cmp	r2, r3
 800125c:	d8f7      	bhi.n	800124e <HAL_Delay+0x26>
 800125e:	bf00      	nop
 8001260:	3710      	adds	r7, #16
 8001262:	46bd      	mov	sp, r7
 8001264:	bd80      	pop	{r7, pc}
 8001266:	bf00      	nop
 8001268:	20000008 	.word	0x20000008

0800126c <__NVIC_SetPriorityGrouping>:
 800126c:	b480      	push	{r7}
 800126e:	b085      	sub	sp, #20
 8001270:	af00      	add	r7, sp, #0
 8001272:	6078      	str	r0, [r7, #4]
 8001274:	687b      	ldr	r3, [r7, #4]
 8001276:	f003 0307 	and.w	r3, r3, #7
 800127a:	60fb      	str	r3, [r7, #12]
 800127c:	4b0c      	ldr	r3, [pc, #48]	; (80012b0 <__NVIC_SetPriorityGrouping+0x44>)
 800127e:	68db      	ldr	r3, [r3, #12]
 8001280:	60bb      	str	r3, [r7, #8]
 8001282:	68ba      	ldr	r2, [r7, #8]
 8001284:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 8001288:	4013      	ands	r3, r2
 800128a:	60bb      	str	r3, [r7, #8]
 800128c:	68fb      	ldr	r3, [r7, #12]
 800128e:	021a      	lsls	r2, r3, #8
 8001290:	68bb      	ldr	r3, [r7, #8]
 8001292:	4313      	orrs	r3, r2
 8001294:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8001298:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 800129c:	60bb      	str	r3, [r7, #8]
 800129e:	4a04      	ldr	r2, [pc, #16]	; (80012b0 <__NVIC_SetPriorityGrouping+0x44>)
 80012a0:	68bb      	ldr	r3, [r7, #8]
 80012a2:	60d3      	str	r3, [r2, #12]
 80012a4:	bf00      	nop
 80012a6:	3714      	adds	r7, #20
 80012a8:	46bd      	mov	sp, r7
 80012aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80012ae:	4770      	bx	lr
 80012b0:	e000ed00 	.word	0xe000ed00

080012b4 <__NVIC_GetPriorityGrouping>:
 80012b4:	b480      	push	{r7}
 80012b6:	af00      	add	r7, sp, #0
 80012b8:	4b04      	ldr	r3, [pc, #16]	; (80012cc <__NVIC_GetPriorityGrouping+0x18>)
 80012ba:	68db      	ldr	r3, [r3, #12]
 80012bc:	0a1b      	lsrs	r3, r3, #8
 80012be:	f003 0307 	and.w	r3, r3, #7
 80012c2:	4618      	mov	r0, r3
 80012c4:	46bd      	mov	sp, r7
 80012c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80012ca:	4770      	bx	lr
 80012cc:	e000ed00 	.word	0xe000ed00

080012d0 <__NVIC_EnableIRQ>:
 80012d0:	b480      	push	{r7}
 80012d2:	b083      	sub	sp, #12
 80012d4:	af00      	add	r7, sp, #0
 80012d6:	4603      	mov	r3, r0
 80012d8:	71fb      	strb	r3, [r7, #7]
 80012da:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80012de:	2b00      	cmp	r3, #0
 80012e0:	db0b      	blt.n	80012fa <__NVIC_EnableIRQ+0x2a>
 80012e2:	79fb      	ldrb	r3, [r7, #7]
 80012e4:	f003 021f 	and.w	r2, r3, #31
 80012e8:	4907      	ldr	r1, [pc, #28]	; (8001308 <__NVIC_EnableIRQ+0x38>)
 80012ea:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80012ee:	095b      	lsrs	r3, r3, #5
 80012f0:	2001      	movs	r0, #1
 80012f2:	fa00 f202 	lsl.w	r2, r0, r2
 80012f6:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 80012fa:	bf00      	nop
 80012fc:	370c      	adds	r7, #12
 80012fe:	46bd      	mov	sp, r7
 8001300:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001304:	4770      	bx	lr
 8001306:	bf00      	nop
 8001308:	e000e100 	.word	0xe000e100

0800130c <__NVIC_SetPriority>:
 800130c:	b480      	push	{r7}
 800130e:	b083      	sub	sp, #12
 8001310:	af00      	add	r7, sp, #0
 8001312:	4603      	mov	r3, r0
 8001314:	6039      	str	r1, [r7, #0]
 8001316:	71fb      	strb	r3, [r7, #7]
 8001318:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800131c:	2b00      	cmp	r3, #0
 800131e:	db0a      	blt.n	8001336 <__NVIC_SetPriority+0x2a>
 8001320:	683b      	ldr	r3, [r7, #0]
 8001322:	b2da      	uxtb	r2, r3
 8001324:	490c      	ldr	r1, [pc, #48]	; (8001358 <__NVIC_SetPriority+0x4c>)
 8001326:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800132a:	0112      	lsls	r2, r2, #4
 800132c:	b2d2      	uxtb	r2, r2
 800132e:	440b      	add	r3, r1
 8001330:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 8001334:	e00a      	b.n	800134c <__NVIC_SetPriority+0x40>
 8001336:	683b      	ldr	r3, [r7, #0]
 8001338:	b2da      	uxtb	r2, r3
 800133a:	4908      	ldr	r1, [pc, #32]	; (800135c <__NVIC_SetPriority+0x50>)
 800133c:	79fb      	ldrb	r3, [r7, #7]
 800133e:	f003 030f 	and.w	r3, r3, #15
 8001342:	3b04      	subs	r3, #4
 8001344:	0112      	lsls	r2, r2, #4
 8001346:	b2d2      	uxtb	r2, r2
 8001348:	440b      	add	r3, r1
 800134a:	761a      	strb	r2, [r3, #24]
 800134c:	bf00      	nop
 800134e:	370c      	adds	r7, #12
 8001350:	46bd      	mov	sp, r7
 8001352:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001356:	4770      	bx	lr
 8001358:	e000e100 	.word	0xe000e100
 800135c:	e000ed00 	.word	0xe000ed00

08001360 <NVIC_EncodePriority>:
 8001360:	b480      	push	{r7}
 8001362:	b089      	sub	sp, #36	; 0x24
 8001364:	af00      	add	r7, sp, #0
 8001366:	60f8      	str	r0, [r7, #12]
 8001368:	60b9      	str	r1, [r7, #8]
 800136a:	607a      	str	r2, [r7, #4]
 800136c:	68fb      	ldr	r3, [r7, #12]
 800136e:	f003 0307 	and.w	r3, r3, #7
 8001372:	61fb      	str	r3, [r7, #28]
 8001374:	69fb      	ldr	r3, [r7, #28]
 8001376:	f1c3 0307 	rsb	r3, r3, #7
 800137a:	2b04      	cmp	r3, #4
 800137c:	bf28      	it	cs
 800137e:	2304      	movcs	r3, #4
 8001380:	61bb      	str	r3, [r7, #24]
 8001382:	69fb      	ldr	r3, [r7, #28]
 8001384:	3304      	adds	r3, #4
 8001386:	2b06      	cmp	r3, #6
 8001388:	d902      	bls.n	8001390 <NVIC_EncodePriority+0x30>
 800138a:	69fb      	ldr	r3, [r7, #28]
 800138c:	3b03      	subs	r3, #3
 800138e:	e000      	b.n	8001392 <NVIC_EncodePriority+0x32>
 8001390:	2300      	movs	r3, #0
 8001392:	617b      	str	r3, [r7, #20]
 8001394:	f04f 32ff 	mov.w	r2, #4294967295
 8001398:	69bb      	ldr	r3, [r7, #24]
 800139a:	fa02 f303 	lsl.w	r3, r2, r3
 800139e:	43da      	mvns	r2, r3
 80013a0:	68bb      	ldr	r3, [r7, #8]
 80013a2:	401a      	ands	r2, r3
 80013a4:	697b      	ldr	r3, [r7, #20]
 80013a6:	409a      	lsls	r2, r3
 80013a8:	f04f 31ff 	mov.w	r1, #4294967295
 80013ac:	697b      	ldr	r3, [r7, #20]
 80013ae:	fa01 f303 	lsl.w	r3, r1, r3
 80013b2:	43d9      	mvns	r1, r3
 80013b4:	687b      	ldr	r3, [r7, #4]
 80013b6:	400b      	ands	r3, r1
 80013b8:	4313      	orrs	r3, r2
 80013ba:	4618      	mov	r0, r3
 80013bc:	3724      	adds	r7, #36	; 0x24
 80013be:	46bd      	mov	sp, r7
 80013c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80013c4:	4770      	bx	lr
	...

080013c8 <SysTick_Config>:
 80013c8:	b580      	push	{r7, lr}
 80013ca:	b082      	sub	sp, #8
 80013cc:	af00      	add	r7, sp, #0
 80013ce:	6078      	str	r0, [r7, #4]
 80013d0:	687b      	ldr	r3, [r7, #4]
 80013d2:	3b01      	subs	r3, #1
 80013d4:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 80013d8:	d301      	bcc.n	80013de <SysTick_Config+0x16>
 80013da:	2301      	movs	r3, #1
 80013dc:	e00f      	b.n	80013fe <SysTick_Config+0x36>
 80013de:	4a0a      	ldr	r2, [pc, #40]	; (8001408 <SysTick_Config+0x40>)
 80013e0:	687b      	ldr	r3, [r7, #4]
 80013e2:	3b01      	subs	r3, #1
 80013e4:	6053      	str	r3, [r2, #4]
 80013e6:	210f      	movs	r1, #15
 80013e8:	f04f 30ff 	mov.w	r0, #4294967295
 80013ec:	f7ff ff8e 	bl	800130c <__NVIC_SetPriority>
 80013f0:	4b05      	ldr	r3, [pc, #20]	; (8001408 <SysTick_Config+0x40>)
 80013f2:	2200      	movs	r2, #0
 80013f4:	609a      	str	r2, [r3, #8]
 80013f6:	4b04      	ldr	r3, [pc, #16]	; (8001408 <SysTick_Config+0x40>)
 80013f8:	2207      	movs	r2, #7
 80013fa:	601a      	str	r2, [r3, #0]
 80013fc:	2300      	movs	r3, #0
 80013fe:	4618      	mov	r0, r3
 8001400:	3708      	adds	r7, #8
 8001402:	46bd      	mov	sp, r7
 8001404:	bd80      	pop	{r7, pc}
 8001406:	bf00      	nop
 8001408:	e000e010 	.word	0xe000e010

0800140c <HAL_NVIC_SetPriorityGrouping>:
 800140c:	b580      	push	{r7, lr}
 800140e:	b082      	sub	sp, #8
 8001410:	af00      	add	r7, sp, #0
 8001412:	6078      	str	r0, [r7, #4]
 8001414:	6878      	ldr	r0, [r7, #4]
 8001416:	f7ff ff29 	bl	800126c <__NVIC_SetPriorityGrouping>
 800141a:	bf00      	nop
 800141c:	3708      	adds	r7, #8
 800141e:	46bd      	mov	sp, r7
 8001420:	bd80      	pop	{r7, pc}

08001422 <HAL_NVIC_SetPriority>:
 8001422:	b580      	push	{r7, lr}
 8001424:	b086      	sub	sp, #24
 8001426:	af00      	add	r7, sp, #0
 8001428:	4603      	mov	r3, r0
 800142a:	60b9      	str	r1, [r7, #8]
 800142c:	607a      	str	r2, [r7, #4]
 800142e:	73fb      	strb	r3, [r7, #15]
 8001430:	f7ff ff40 	bl	80012b4 <__NVIC_GetPriorityGrouping>
 8001434:	6178      	str	r0, [r7, #20]
 8001436:	687a      	ldr	r2, [r7, #4]
 8001438:	68b9      	ldr	r1, [r7, #8]
 800143a:	6978      	ldr	r0, [r7, #20]
 800143c:	f7ff ff90 	bl	8001360 <NVIC_EncodePriority>
 8001440:	4602      	mov	r2, r0
 8001442:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8001446:	4611      	mov	r1, r2
 8001448:	4618      	mov	r0, r3
 800144a:	f7ff ff5f 	bl	800130c <__NVIC_SetPriority>
 800144e:	bf00      	nop
 8001450:	3718      	adds	r7, #24
 8001452:	46bd      	mov	sp, r7
 8001454:	bd80      	pop	{r7, pc}

08001456 <HAL_NVIC_EnableIRQ>:
 8001456:	b580      	push	{r7, lr}
 8001458:	b082      	sub	sp, #8
 800145a:	af00      	add	r7, sp, #0
 800145c:	4603      	mov	r3, r0
 800145e:	71fb      	strb	r3, [r7, #7]
 8001460:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001464:	4618      	mov	r0, r3
 8001466:	f7ff ff33 	bl	80012d0 <__NVIC_EnableIRQ>
 800146a:	bf00      	nop
 800146c:	3708      	adds	r7, #8
 800146e:	46bd      	mov	sp, r7
 8001470:	bd80      	pop	{r7, pc}

08001472 <HAL_SYSTICK_Config>:
 8001472:	b580      	push	{r7, lr}
 8001474:	b082      	sub	sp, #8
 8001476:	af00      	add	r7, sp, #0
 8001478:	6078      	str	r0, [r7, #4]
 800147a:	6878      	ldr	r0, [r7, #4]
 800147c:	f7ff ffa4 	bl	80013c8 <SysTick_Config>
 8001480:	4603      	mov	r3, r0
 8001482:	4618      	mov	r0, r3
 8001484:	3708      	adds	r7, #8
 8001486:	46bd      	mov	sp, r7
 8001488:	bd80      	pop	{r7, pc}
	...

0800148c <HAL_FDCAN_Init>:
 800148c:	b580      	push	{r7, lr}
 800148e:	b084      	sub	sp, #16
 8001490:	af00      	add	r7, sp, #0
 8001492:	6078      	str	r0, [r7, #4]
 8001494:	687b      	ldr	r3, [r7, #4]
 8001496:	2b00      	cmp	r3, #0
 8001498:	d101      	bne.n	800149e <HAL_FDCAN_Init+0x12>
 800149a:	2301      	movs	r3, #1
 800149c:	e147      	b.n	800172e <HAL_FDCAN_Init+0x2a2>
 800149e:	687b      	ldr	r3, [r7, #4]
 80014a0:	f893 305c 	ldrb.w	r3, [r3, #92]	; 0x5c
 80014a4:	b2db      	uxtb	r3, r3
 80014a6:	2b00      	cmp	r3, #0
 80014a8:	d106      	bne.n	80014b8 <HAL_FDCAN_Init+0x2c>
 80014aa:	687b      	ldr	r3, [r7, #4]
 80014ac:	2200      	movs	r2, #0
 80014ae:	f883 205d 	strb.w	r2, [r3, #93]	; 0x5d
 80014b2:	6878      	ldr	r0, [r7, #4]
 80014b4:	f7ff fcb8 	bl	8000e28 <HAL_FDCAN_MspInit>
 80014b8:	687b      	ldr	r3, [r7, #4]
 80014ba:	681b      	ldr	r3, [r3, #0]
 80014bc:	699a      	ldr	r2, [r3, #24]
 80014be:	687b      	ldr	r3, [r7, #4]
 80014c0:	681b      	ldr	r3, [r3, #0]
 80014c2:	f022 0210 	bic.w	r2, r2, #16
 80014c6:	619a      	str	r2, [r3, #24]
 80014c8:	f7ff fea2 	bl	8001210 <HAL_GetTick>
 80014cc:	60f8      	str	r0, [r7, #12]
 80014ce:	e012      	b.n	80014f6 <HAL_FDCAN_Init+0x6a>
 80014d0:	f7ff fe9e 	bl	8001210 <HAL_GetTick>
 80014d4:	4602      	mov	r2, r0
 80014d6:	68fb      	ldr	r3, [r7, #12]
 80014d8:	1ad3      	subs	r3, r2, r3
 80014da:	2b0a      	cmp	r3, #10
 80014dc:	d90b      	bls.n	80014f6 <HAL_FDCAN_Init+0x6a>
 80014de:	687b      	ldr	r3, [r7, #4]
 80014e0:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80014e2:	f043 0201 	orr.w	r2, r3, #1
 80014e6:	687b      	ldr	r3, [r7, #4]
 80014e8:	661a      	str	r2, [r3, #96]	; 0x60
 80014ea:	687b      	ldr	r3, [r7, #4]
 80014ec:	2203      	movs	r2, #3
 80014ee:	f883 205c 	strb.w	r2, [r3, #92]	; 0x5c
 80014f2:	2301      	movs	r3, #1
 80014f4:	e11b      	b.n	800172e <HAL_FDCAN_Init+0x2a2>
 80014f6:	687b      	ldr	r3, [r7, #4]
 80014f8:	681b      	ldr	r3, [r3, #0]
 80014fa:	699b      	ldr	r3, [r3, #24]
 80014fc:	f003 0308 	and.w	r3, r3, #8
 8001500:	2b08      	cmp	r3, #8
 8001502:	d0e5      	beq.n	80014d0 <HAL_FDCAN_Init+0x44>
 8001504:	687b      	ldr	r3, [r7, #4]
 8001506:	681b      	ldr	r3, [r3, #0]
 8001508:	699a      	ldr	r2, [r3, #24]
 800150a:	687b      	ldr	r3, [r7, #4]
 800150c:	681b      	ldr	r3, [r3, #0]
 800150e:	f042 0201 	orr.w	r2, r2, #1
 8001512:	619a      	str	r2, [r3, #24]
 8001514:	f7ff fe7c 	bl	8001210 <HAL_GetTick>
 8001518:	60f8      	str	r0, [r7, #12]
 800151a:	e012      	b.n	8001542 <HAL_FDCAN_Init+0xb6>
 800151c:	f7ff fe78 	bl	8001210 <HAL_GetTick>
 8001520:	4602      	mov	r2, r0
 8001522:	68fb      	ldr	r3, [r7, #12]
 8001524:	1ad3      	subs	r3, r2, r3
 8001526:	2b0a      	cmp	r3, #10
 8001528:	d90b      	bls.n	8001542 <HAL_FDCAN_Init+0xb6>
 800152a:	687b      	ldr	r3, [r7, #4]
 800152c:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800152e:	f043 0201 	orr.w	r2, r3, #1
 8001532:	687b      	ldr	r3, [r7, #4]
 8001534:	661a      	str	r2, [r3, #96]	; 0x60
 8001536:	687b      	ldr	r3, [r7, #4]
 8001538:	2203      	movs	r2, #3
 800153a:	f883 205c 	strb.w	r2, [r3, #92]	; 0x5c
 800153e:	2301      	movs	r3, #1
 8001540:	e0f5      	b.n	800172e <HAL_FDCAN_Init+0x2a2>
 8001542:	687b      	ldr	r3, [r7, #4]
 8001544:	681b      	ldr	r3, [r3, #0]
 8001546:	699b      	ldr	r3, [r3, #24]
 8001548:	f003 0301 	and.w	r3, r3, #1
 800154c:	2b00      	cmp	r3, #0
 800154e:	d0e5      	beq.n	800151c <HAL_FDCAN_Init+0x90>
 8001550:	687b      	ldr	r3, [r7, #4]
 8001552:	681b      	ldr	r3, [r3, #0]
 8001554:	699a      	ldr	r2, [r3, #24]
 8001556:	687b      	ldr	r3, [r7, #4]
 8001558:	681b      	ldr	r3, [r3, #0]
 800155a:	f042 0202 	orr.w	r2, r2, #2
 800155e:	619a      	str	r2, [r3, #24]
 8001560:	687b      	ldr	r3, [r7, #4]
 8001562:	681b      	ldr	r3, [r3, #0]
 8001564:	4a74      	ldr	r2, [pc, #464]	; (8001738 <HAL_FDCAN_Init+0x2ac>)
 8001566:	4293      	cmp	r3, r2
 8001568:	d103      	bne.n	8001572 <HAL_FDCAN_Init+0xe6>
 800156a:	4a74      	ldr	r2, [pc, #464]	; (800173c <HAL_FDCAN_Init+0x2b0>)
 800156c:	687b      	ldr	r3, [r7, #4]
 800156e:	685b      	ldr	r3, [r3, #4]
 8001570:	6013      	str	r3, [r2, #0]
 8001572:	687b      	ldr	r3, [r7, #4]
 8001574:	7c1b      	ldrb	r3, [r3, #16]
 8001576:	2b01      	cmp	r3, #1
 8001578:	d108      	bne.n	800158c <HAL_FDCAN_Init+0x100>
 800157a:	687b      	ldr	r3, [r7, #4]
 800157c:	681b      	ldr	r3, [r3, #0]
 800157e:	699a      	ldr	r2, [r3, #24]
 8001580:	687b      	ldr	r3, [r7, #4]
 8001582:	681b      	ldr	r3, [r3, #0]
 8001584:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8001588:	619a      	str	r2, [r3, #24]
 800158a:	e007      	b.n	800159c <HAL_FDCAN_Init+0x110>
 800158c:	687b      	ldr	r3, [r7, #4]
 800158e:	681b      	ldr	r3, [r3, #0]
 8001590:	699a      	ldr	r2, [r3, #24]
 8001592:	687b      	ldr	r3, [r7, #4]
 8001594:	681b      	ldr	r3, [r3, #0]
 8001596:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 800159a:	619a      	str	r2, [r3, #24]
 800159c:	687b      	ldr	r3, [r7, #4]
 800159e:	7c5b      	ldrb	r3, [r3, #17]
 80015a0:	2b01      	cmp	r3, #1
 80015a2:	d108      	bne.n	80015b6 <HAL_FDCAN_Init+0x12a>
 80015a4:	687b      	ldr	r3, [r7, #4]
 80015a6:	681b      	ldr	r3, [r3, #0]
 80015a8:	699a      	ldr	r2, [r3, #24]
 80015aa:	687b      	ldr	r3, [r7, #4]
 80015ac:	681b      	ldr	r3, [r3, #0]
 80015ae:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 80015b2:	619a      	str	r2, [r3, #24]
 80015b4:	e007      	b.n	80015c6 <HAL_FDCAN_Init+0x13a>
 80015b6:	687b      	ldr	r3, [r7, #4]
 80015b8:	681b      	ldr	r3, [r3, #0]
 80015ba:	699a      	ldr	r2, [r3, #24]
 80015bc:	687b      	ldr	r3, [r7, #4]
 80015be:	681b      	ldr	r3, [r3, #0]
 80015c0:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
 80015c4:	619a      	str	r2, [r3, #24]
 80015c6:	687b      	ldr	r3, [r7, #4]
 80015c8:	7c9b      	ldrb	r3, [r3, #18]
 80015ca:	2b01      	cmp	r3, #1
 80015cc:	d108      	bne.n	80015e0 <HAL_FDCAN_Init+0x154>
 80015ce:	687b      	ldr	r3, [r7, #4]
 80015d0:	681b      	ldr	r3, [r3, #0]
 80015d2:	699a      	ldr	r2, [r3, #24]
 80015d4:	687b      	ldr	r3, [r7, #4]
 80015d6:	681b      	ldr	r3, [r3, #0]
 80015d8:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 80015dc:	619a      	str	r2, [r3, #24]
 80015de:	e007      	b.n	80015f0 <HAL_FDCAN_Init+0x164>
 80015e0:	687b      	ldr	r3, [r7, #4]
 80015e2:	681b      	ldr	r3, [r3, #0]
 80015e4:	699a      	ldr	r2, [r3, #24]
 80015e6:	687b      	ldr	r3, [r7, #4]
 80015e8:	681b      	ldr	r3, [r3, #0]
 80015ea:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 80015ee:	619a      	str	r2, [r3, #24]
 80015f0:	687b      	ldr	r3, [r7, #4]
 80015f2:	681b      	ldr	r3, [r3, #0]
 80015f4:	699b      	ldr	r3, [r3, #24]
 80015f6:	f423 7140 	bic.w	r1, r3, #768	; 0x300
 80015fa:	687b      	ldr	r3, [r7, #4]
 80015fc:	689a      	ldr	r2, [r3, #8]
 80015fe:	687b      	ldr	r3, [r7, #4]
 8001600:	681b      	ldr	r3, [r3, #0]
 8001602:	430a      	orrs	r2, r1
 8001604:	619a      	str	r2, [r3, #24]
 8001606:	687b      	ldr	r3, [r7, #4]
 8001608:	681b      	ldr	r3, [r3, #0]
 800160a:	699a      	ldr	r2, [r3, #24]
 800160c:	687b      	ldr	r3, [r7, #4]
 800160e:	681b      	ldr	r3, [r3, #0]
 8001610:	f022 02a4 	bic.w	r2, r2, #164	; 0xa4
 8001614:	619a      	str	r2, [r3, #24]
 8001616:	687b      	ldr	r3, [r7, #4]
 8001618:	681b      	ldr	r3, [r3, #0]
 800161a:	691a      	ldr	r2, [r3, #16]
 800161c:	687b      	ldr	r3, [r7, #4]
 800161e:	681b      	ldr	r3, [r3, #0]
 8001620:	f022 0210 	bic.w	r2, r2, #16
 8001624:	611a      	str	r2, [r3, #16]
 8001626:	687b      	ldr	r3, [r7, #4]
 8001628:	68db      	ldr	r3, [r3, #12]
 800162a:	2b01      	cmp	r3, #1
 800162c:	d108      	bne.n	8001640 <HAL_FDCAN_Init+0x1b4>
 800162e:	687b      	ldr	r3, [r7, #4]
 8001630:	681b      	ldr	r3, [r3, #0]
 8001632:	699a      	ldr	r2, [r3, #24]
 8001634:	687b      	ldr	r3, [r7, #4]
 8001636:	681b      	ldr	r3, [r3, #0]
 8001638:	f042 0204 	orr.w	r2, r2, #4
 800163c:	619a      	str	r2, [r3, #24]
 800163e:	e02c      	b.n	800169a <HAL_FDCAN_Init+0x20e>
 8001640:	687b      	ldr	r3, [r7, #4]
 8001642:	68db      	ldr	r3, [r3, #12]
 8001644:	2b00      	cmp	r3, #0
 8001646:	d028      	beq.n	800169a <HAL_FDCAN_Init+0x20e>
 8001648:	687b      	ldr	r3, [r7, #4]
 800164a:	68db      	ldr	r3, [r3, #12]
 800164c:	2b02      	cmp	r3, #2
 800164e:	d01c      	beq.n	800168a <HAL_FDCAN_Init+0x1fe>
 8001650:	687b      	ldr	r3, [r7, #4]
 8001652:	681b      	ldr	r3, [r3, #0]
 8001654:	699a      	ldr	r2, [r3, #24]
 8001656:	687b      	ldr	r3, [r7, #4]
 8001658:	681b      	ldr	r3, [r3, #0]
 800165a:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 800165e:	619a      	str	r2, [r3, #24]
 8001660:	687b      	ldr	r3, [r7, #4]
 8001662:	681b      	ldr	r3, [r3, #0]
 8001664:	691a      	ldr	r2, [r3, #16]
 8001666:	687b      	ldr	r3, [r7, #4]
 8001668:	681b      	ldr	r3, [r3, #0]
 800166a:	f042 0210 	orr.w	r2, r2, #16
 800166e:	611a      	str	r2, [r3, #16]
 8001670:	687b      	ldr	r3, [r7, #4]
 8001672:	68db      	ldr	r3, [r3, #12]
 8001674:	2b03      	cmp	r3, #3
 8001676:	d110      	bne.n	800169a <HAL_FDCAN_Init+0x20e>
 8001678:	687b      	ldr	r3, [r7, #4]
 800167a:	681b      	ldr	r3, [r3, #0]
 800167c:	699a      	ldr	r2, [r3, #24]
 800167e:	687b      	ldr	r3, [r7, #4]
 8001680:	681b      	ldr	r3, [r3, #0]
 8001682:	f042 0220 	orr.w	r2, r2, #32
 8001686:	619a      	str	r2, [r3, #24]
 8001688:	e007      	b.n	800169a <HAL_FDCAN_Init+0x20e>
 800168a:	687b      	ldr	r3, [r7, #4]
 800168c:	681b      	ldr	r3, [r3, #0]
 800168e:	699a      	ldr	r2, [r3, #24]
 8001690:	687b      	ldr	r3, [r7, #4]
 8001692:	681b      	ldr	r3, [r3, #0]
 8001694:	f042 0220 	orr.w	r2, r2, #32
 8001698:	619a      	str	r2, [r3, #24]
 800169a:	687b      	ldr	r3, [r7, #4]
 800169c:	699b      	ldr	r3, [r3, #24]
 800169e:	3b01      	subs	r3, #1
 80016a0:	065a      	lsls	r2, r3, #25
 80016a2:	687b      	ldr	r3, [r7, #4]
 80016a4:	69db      	ldr	r3, [r3, #28]
 80016a6:	3b01      	subs	r3, #1
 80016a8:	021b      	lsls	r3, r3, #8
 80016aa:	431a      	orrs	r2, r3
 80016ac:	687b      	ldr	r3, [r7, #4]
 80016ae:	6a1b      	ldr	r3, [r3, #32]
 80016b0:	3b01      	subs	r3, #1
 80016b2:	ea42 0103 	orr.w	r1, r2, r3
 80016b6:	687b      	ldr	r3, [r7, #4]
 80016b8:	695b      	ldr	r3, [r3, #20]
 80016ba:	3b01      	subs	r3, #1
 80016bc:	041a      	lsls	r2, r3, #16
 80016be:	687b      	ldr	r3, [r7, #4]
 80016c0:	681b      	ldr	r3, [r3, #0]
 80016c2:	430a      	orrs	r2, r1
 80016c4:	61da      	str	r2, [r3, #28]
 80016c6:	687b      	ldr	r3, [r7, #4]
 80016c8:	689b      	ldr	r3, [r3, #8]
 80016ca:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 80016ce:	d115      	bne.n	80016fc <HAL_FDCAN_Init+0x270>
 80016d0:	687b      	ldr	r3, [r7, #4]
 80016d2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80016d4:	1e5a      	subs	r2, r3, #1
 80016d6:	687b      	ldr	r3, [r7, #4]
 80016d8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80016da:	3b01      	subs	r3, #1
 80016dc:	021b      	lsls	r3, r3, #8
 80016de:	431a      	orrs	r2, r3
 80016e0:	687b      	ldr	r3, [r7, #4]
 80016e2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80016e4:	3b01      	subs	r3, #1
 80016e6:	011b      	lsls	r3, r3, #4
 80016e8:	ea42 0103 	orr.w	r1, r2, r3
 80016ec:	687b      	ldr	r3, [r7, #4]
 80016ee:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80016f0:	3b01      	subs	r3, #1
 80016f2:	041a      	lsls	r2, r3, #16
 80016f4:	687b      	ldr	r3, [r7, #4]
 80016f6:	681b      	ldr	r3, [r3, #0]
 80016f8:	430a      	orrs	r2, r1
 80016fa:	60da      	str	r2, [r3, #12]
 80016fc:	687b      	ldr	r3, [r7, #4]
 80016fe:	681b      	ldr	r3, [r3, #0]
 8001700:	f8d3 10c0 	ldr.w	r1, [r3, #192]	; 0xc0
 8001704:	687b      	ldr	r3, [r7, #4]
 8001706:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 8001708:	687b      	ldr	r3, [r7, #4]
 800170a:	681b      	ldr	r3, [r3, #0]
 800170c:	430a      	orrs	r2, r1
 800170e:	f8c3 20c0 	str.w	r2, [r3, #192]	; 0xc0
 8001712:	6878      	ldr	r0, [r7, #4]
 8001714:	f000 fc7e 	bl	8002014 <FDCAN_CalcultateRamBlockAddresses>
 8001718:	687b      	ldr	r3, [r7, #4]
 800171a:	2200      	movs	r2, #0
 800171c:	659a      	str	r2, [r3, #88]	; 0x58
 800171e:	687b      	ldr	r3, [r7, #4]
 8001720:	2200      	movs	r2, #0
 8001722:	661a      	str	r2, [r3, #96]	; 0x60
 8001724:	687b      	ldr	r3, [r7, #4]
 8001726:	2201      	movs	r2, #1
 8001728:	f883 205c 	strb.w	r2, [r3, #92]	; 0x5c
 800172c:	2300      	movs	r3, #0
 800172e:	4618      	mov	r0, r3
 8001730:	3710      	adds	r7, #16
 8001732:	46bd      	mov	sp, r7
 8001734:	bd80      	pop	{r7, pc}
 8001736:	bf00      	nop
 8001738:	40006400 	.word	0x40006400
 800173c:	40006500 	.word	0x40006500

08001740 <HAL_FDCAN_Start>:
 8001740:	b480      	push	{r7}
 8001742:	b083      	sub	sp, #12
 8001744:	af00      	add	r7, sp, #0
 8001746:	6078      	str	r0, [r7, #4]
 8001748:	687b      	ldr	r3, [r7, #4]
 800174a:	f893 305c 	ldrb.w	r3, [r3, #92]	; 0x5c
 800174e:	b2db      	uxtb	r3, r3
 8001750:	2b01      	cmp	r3, #1
 8001752:	d110      	bne.n	8001776 <HAL_FDCAN_Start+0x36>
 8001754:	687b      	ldr	r3, [r7, #4]
 8001756:	2202      	movs	r2, #2
 8001758:	f883 205c 	strb.w	r2, [r3, #92]	; 0x5c
 800175c:	687b      	ldr	r3, [r7, #4]
 800175e:	681b      	ldr	r3, [r3, #0]
 8001760:	699a      	ldr	r2, [r3, #24]
 8001762:	687b      	ldr	r3, [r7, #4]
 8001764:	681b      	ldr	r3, [r3, #0]
 8001766:	f022 0201 	bic.w	r2, r2, #1
 800176a:	619a      	str	r2, [r3, #24]
 800176c:	687b      	ldr	r3, [r7, #4]
 800176e:	2200      	movs	r2, #0
 8001770:	661a      	str	r2, [r3, #96]	; 0x60
 8001772:	2300      	movs	r3, #0
 8001774:	e006      	b.n	8001784 <HAL_FDCAN_Start+0x44>
 8001776:	687b      	ldr	r3, [r7, #4]
 8001778:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800177a:	f043 0204 	orr.w	r2, r3, #4
 800177e:	687b      	ldr	r3, [r7, #4]
 8001780:	661a      	str	r2, [r3, #96]	; 0x60
 8001782:	2301      	movs	r3, #1
 8001784:	4618      	mov	r0, r3
 8001786:	370c      	adds	r7, #12
 8001788:	46bd      	mov	sp, r7
 800178a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800178e:	4770      	bx	lr

08001790 <HAL_FDCAN_GetRxMessage>:
 8001790:	b480      	push	{r7}
 8001792:	b08b      	sub	sp, #44	; 0x2c
 8001794:	af00      	add	r7, sp, #0
 8001796:	60f8      	str	r0, [r7, #12]
 8001798:	60b9      	str	r1, [r7, #8]
 800179a:	607a      	str	r2, [r7, #4]
 800179c:	603b      	str	r3, [r7, #0]
 800179e:	68fb      	ldr	r3, [r7, #12]
 80017a0:	f893 305c 	ldrb.w	r3, [r3, #92]	; 0x5c
 80017a4:	76fb      	strb	r3, [r7, #27]
 80017a6:	7efb      	ldrb	r3, [r7, #27]
 80017a8:	2b02      	cmp	r3, #2
 80017aa:	f040 80bc 	bne.w	8001926 <HAL_FDCAN_GetRxMessage+0x196>
 80017ae:	68bb      	ldr	r3, [r7, #8]
 80017b0:	2b40      	cmp	r3, #64	; 0x40
 80017b2:	d121      	bne.n	80017f8 <HAL_FDCAN_GetRxMessage+0x68>
 80017b4:	68fb      	ldr	r3, [r7, #12]
 80017b6:	681b      	ldr	r3, [r3, #0]
 80017b8:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 80017bc:	f003 030f 	and.w	r3, r3, #15
 80017c0:	2b00      	cmp	r3, #0
 80017c2:	d107      	bne.n	80017d4 <HAL_FDCAN_GetRxMessage+0x44>
 80017c4:	68fb      	ldr	r3, [r7, #12]
 80017c6:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80017c8:	f443 7280 	orr.w	r2, r3, #256	; 0x100
 80017cc:	68fb      	ldr	r3, [r7, #12]
 80017ce:	661a      	str	r2, [r3, #96]	; 0x60
 80017d0:	2301      	movs	r3, #1
 80017d2:	e0af      	b.n	8001934 <HAL_FDCAN_GetRxMessage+0x1a4>
 80017d4:	68fb      	ldr	r3, [r7, #12]
 80017d6:	681b      	ldr	r3, [r3, #0]
 80017d8:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 80017dc:	0a1b      	lsrs	r3, r3, #8
 80017de:	f003 0303 	and.w	r3, r3, #3
 80017e2:	61fb      	str	r3, [r7, #28]
 80017e4:	68fb      	ldr	r3, [r7, #12]
 80017e6:	6c99      	ldr	r1, [r3, #72]	; 0x48
 80017e8:	69fa      	ldr	r2, [r7, #28]
 80017ea:	4613      	mov	r3, r2
 80017ec:	00db      	lsls	r3, r3, #3
 80017ee:	4413      	add	r3, r2
 80017f0:	00db      	lsls	r3, r3, #3
 80017f2:	440b      	add	r3, r1
 80017f4:	627b      	str	r3, [r7, #36]	; 0x24
 80017f6:	e020      	b.n	800183a <HAL_FDCAN_GetRxMessage+0xaa>
 80017f8:	68fb      	ldr	r3, [r7, #12]
 80017fa:	681b      	ldr	r3, [r3, #0]
 80017fc:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8001800:	f003 030f 	and.w	r3, r3, #15
 8001804:	2b00      	cmp	r3, #0
 8001806:	d107      	bne.n	8001818 <HAL_FDCAN_GetRxMessage+0x88>
 8001808:	68fb      	ldr	r3, [r7, #12]
 800180a:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800180c:	f443 7280 	orr.w	r2, r3, #256	; 0x100
 8001810:	68fb      	ldr	r3, [r7, #12]
 8001812:	661a      	str	r2, [r3, #96]	; 0x60
 8001814:	2301      	movs	r3, #1
 8001816:	e08d      	b.n	8001934 <HAL_FDCAN_GetRxMessage+0x1a4>
 8001818:	68fb      	ldr	r3, [r7, #12]
 800181a:	681b      	ldr	r3, [r3, #0]
 800181c:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8001820:	0a1b      	lsrs	r3, r3, #8
 8001822:	f003 0303 	and.w	r3, r3, #3
 8001826:	61fb      	str	r3, [r7, #28]
 8001828:	68fb      	ldr	r3, [r7, #12]
 800182a:	6cd9      	ldr	r1, [r3, #76]	; 0x4c
 800182c:	69fa      	ldr	r2, [r7, #28]
 800182e:	4613      	mov	r3, r2
 8001830:	00db      	lsls	r3, r3, #3
 8001832:	4413      	add	r3, r2
 8001834:	00db      	lsls	r3, r3, #3
 8001836:	440b      	add	r3, r1
 8001838:	627b      	str	r3, [r7, #36]	; 0x24
 800183a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800183c:	681b      	ldr	r3, [r3, #0]
 800183e:	f003 4280 	and.w	r2, r3, #1073741824	; 0x40000000
 8001842:	687b      	ldr	r3, [r7, #4]
 8001844:	605a      	str	r2, [r3, #4]
 8001846:	687b      	ldr	r3, [r7, #4]
 8001848:	685b      	ldr	r3, [r3, #4]
 800184a:	2b00      	cmp	r3, #0
 800184c:	d107      	bne.n	800185e <HAL_FDCAN_GetRxMessage+0xce>
 800184e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001850:	681b      	ldr	r3, [r3, #0]
 8001852:	0c9b      	lsrs	r3, r3, #18
 8001854:	f3c3 020a 	ubfx	r2, r3, #0, #11
 8001858:	687b      	ldr	r3, [r7, #4]
 800185a:	601a      	str	r2, [r3, #0]
 800185c:	e005      	b.n	800186a <HAL_FDCAN_GetRxMessage+0xda>
 800185e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001860:	681b      	ldr	r3, [r3, #0]
 8001862:	f023 4260 	bic.w	r2, r3, #3758096384	; 0xe0000000
 8001866:	687b      	ldr	r3, [r7, #4]
 8001868:	601a      	str	r2, [r3, #0]
 800186a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800186c:	681b      	ldr	r3, [r3, #0]
 800186e:	f003 5200 	and.w	r2, r3, #536870912	; 0x20000000
 8001872:	687b      	ldr	r3, [r7, #4]
 8001874:	609a      	str	r2, [r3, #8]
 8001876:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001878:	681b      	ldr	r3, [r3, #0]
 800187a:	f003 4200 	and.w	r2, r3, #2147483648	; 0x80000000
 800187e:	687b      	ldr	r3, [r7, #4]
 8001880:	611a      	str	r2, [r3, #16]
 8001882:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001884:	3304      	adds	r3, #4
 8001886:	627b      	str	r3, [r7, #36]	; 0x24
 8001888:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800188a:	681b      	ldr	r3, [r3, #0]
 800188c:	b29a      	uxth	r2, r3
 800188e:	687b      	ldr	r3, [r7, #4]
 8001890:	61da      	str	r2, [r3, #28]
 8001892:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001894:	681b      	ldr	r3, [r3, #0]
 8001896:	f403 2270 	and.w	r2, r3, #983040	; 0xf0000
 800189a:	687b      	ldr	r3, [r7, #4]
 800189c:	60da      	str	r2, [r3, #12]
 800189e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80018a0:	681b      	ldr	r3, [r3, #0]
 80018a2:	f403 1280 	and.w	r2, r3, #1048576	; 0x100000
 80018a6:	687b      	ldr	r3, [r7, #4]
 80018a8:	615a      	str	r2, [r3, #20]
 80018aa:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80018ac:	681b      	ldr	r3, [r3, #0]
 80018ae:	f403 1200 	and.w	r2, r3, #2097152	; 0x200000
 80018b2:	687b      	ldr	r3, [r7, #4]
 80018b4:	619a      	str	r2, [r3, #24]
 80018b6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80018b8:	681b      	ldr	r3, [r3, #0]
 80018ba:	0e1b      	lsrs	r3, r3, #24
 80018bc:	f003 027f 	and.w	r2, r3, #127	; 0x7f
 80018c0:	687b      	ldr	r3, [r7, #4]
 80018c2:	621a      	str	r2, [r3, #32]
 80018c4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80018c6:	681b      	ldr	r3, [r3, #0]
 80018c8:	0fda      	lsrs	r2, r3, #31
 80018ca:	687b      	ldr	r3, [r7, #4]
 80018cc:	625a      	str	r2, [r3, #36]	; 0x24
 80018ce:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80018d0:	3304      	adds	r3, #4
 80018d2:	627b      	str	r3, [r7, #36]	; 0x24
 80018d4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80018d6:	617b      	str	r3, [r7, #20]
 80018d8:	2300      	movs	r3, #0
 80018da:	623b      	str	r3, [r7, #32]
 80018dc:	e00a      	b.n	80018f4 <HAL_FDCAN_GetRxMessage+0x164>
 80018de:	697a      	ldr	r2, [r7, #20]
 80018e0:	6a3b      	ldr	r3, [r7, #32]
 80018e2:	441a      	add	r2, r3
 80018e4:	6839      	ldr	r1, [r7, #0]
 80018e6:	6a3b      	ldr	r3, [r7, #32]
 80018e8:	440b      	add	r3, r1
 80018ea:	7812      	ldrb	r2, [r2, #0]
 80018ec:	701a      	strb	r2, [r3, #0]
 80018ee:	6a3b      	ldr	r3, [r7, #32]
 80018f0:	3301      	adds	r3, #1
 80018f2:	623b      	str	r3, [r7, #32]
 80018f4:	687b      	ldr	r3, [r7, #4]
 80018f6:	68db      	ldr	r3, [r3, #12]
 80018f8:	0c1b      	lsrs	r3, r3, #16
 80018fa:	4a11      	ldr	r2, [pc, #68]	; (8001940 <HAL_FDCAN_GetRxMessage+0x1b0>)
 80018fc:	5cd3      	ldrb	r3, [r2, r3]
 80018fe:	461a      	mov	r2, r3
 8001900:	6a3b      	ldr	r3, [r7, #32]
 8001902:	4293      	cmp	r3, r2
 8001904:	d3eb      	bcc.n	80018de <HAL_FDCAN_GetRxMessage+0x14e>
 8001906:	68bb      	ldr	r3, [r7, #8]
 8001908:	2b40      	cmp	r3, #64	; 0x40
 800190a:	d105      	bne.n	8001918 <HAL_FDCAN_GetRxMessage+0x188>
 800190c:	68fb      	ldr	r3, [r7, #12]
 800190e:	681b      	ldr	r3, [r3, #0]
 8001910:	69fa      	ldr	r2, [r7, #28]
 8001912:	f8c3 2094 	str.w	r2, [r3, #148]	; 0x94
 8001916:	e004      	b.n	8001922 <HAL_FDCAN_GetRxMessage+0x192>
 8001918:	68fb      	ldr	r3, [r7, #12]
 800191a:	681b      	ldr	r3, [r3, #0]
 800191c:	69fa      	ldr	r2, [r7, #28]
 800191e:	f8c3 209c 	str.w	r2, [r3, #156]	; 0x9c
 8001922:	2300      	movs	r3, #0
 8001924:	e006      	b.n	8001934 <HAL_FDCAN_GetRxMessage+0x1a4>
 8001926:	68fb      	ldr	r3, [r7, #12]
 8001928:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800192a:	f043 0208 	orr.w	r2, r3, #8
 800192e:	68fb      	ldr	r3, [r7, #12]
 8001930:	661a      	str	r2, [r3, #96]	; 0x60
 8001932:	2301      	movs	r3, #1
 8001934:	4618      	mov	r0, r3
 8001936:	372c      	adds	r7, #44	; 0x2c
 8001938:	46bd      	mov	sp, r7
 800193a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800193e:	4770      	bx	lr
 8001940:	0800b1ac 	.word	0x0800b1ac

08001944 <HAL_FDCAN_ActivateNotification>:
 8001944:	b480      	push	{r7}
 8001946:	b087      	sub	sp, #28
 8001948:	af00      	add	r7, sp, #0
 800194a:	60f8      	str	r0, [r7, #12]
 800194c:	60b9      	str	r1, [r7, #8]
 800194e:	607a      	str	r2, [r7, #4]
 8001950:	68fb      	ldr	r3, [r7, #12]
 8001952:	f893 305c 	ldrb.w	r3, [r3, #92]	; 0x5c
 8001956:	75fb      	strb	r3, [r7, #23]
 8001958:	7dfb      	ldrb	r3, [r7, #23]
 800195a:	2b01      	cmp	r3, #1
 800195c:	d003      	beq.n	8001966 <HAL_FDCAN_ActivateNotification+0x22>
 800195e:	7dfb      	ldrb	r3, [r7, #23]
 8001960:	2b02      	cmp	r3, #2
 8001962:	f040 80c8 	bne.w	8001af6 <HAL_FDCAN_ActivateNotification+0x1b2>
 8001966:	68fb      	ldr	r3, [r7, #12]
 8001968:	681b      	ldr	r3, [r3, #0]
 800196a:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800196c:	613b      	str	r3, [r7, #16]
 800196e:	68bb      	ldr	r3, [r7, #8]
 8001970:	f003 0307 	and.w	r3, r3, #7
 8001974:	2b00      	cmp	r3, #0
 8001976:	d004      	beq.n	8001982 <HAL_FDCAN_ActivateNotification+0x3e>
 8001978:	693b      	ldr	r3, [r7, #16]
 800197a:	f003 0301 	and.w	r3, r3, #1
 800197e:	2b00      	cmp	r3, #0
 8001980:	d03b      	beq.n	80019fa <HAL_FDCAN_ActivateNotification+0xb6>
 8001982:	68bb      	ldr	r3, [r7, #8]
 8001984:	f003 0338 	and.w	r3, r3, #56	; 0x38
 8001988:	2b00      	cmp	r3, #0
 800198a:	d004      	beq.n	8001996 <HAL_FDCAN_ActivateNotification+0x52>
 800198c:	693b      	ldr	r3, [r7, #16]
 800198e:	f003 0302 	and.w	r3, r3, #2
 8001992:	2b00      	cmp	r3, #0
 8001994:	d031      	beq.n	80019fa <HAL_FDCAN_ActivateNotification+0xb6>
 8001996:	68bb      	ldr	r3, [r7, #8]
 8001998:	f403 73e0 	and.w	r3, r3, #448	; 0x1c0
 800199c:	2b00      	cmp	r3, #0
 800199e:	d004      	beq.n	80019aa <HAL_FDCAN_ActivateNotification+0x66>
 80019a0:	693b      	ldr	r3, [r7, #16]
 80019a2:	f003 0304 	and.w	r3, r3, #4
 80019a6:	2b00      	cmp	r3, #0
 80019a8:	d027      	beq.n	80019fa <HAL_FDCAN_ActivateNotification+0xb6>
 80019aa:	68bb      	ldr	r3, [r7, #8]
 80019ac:	f403 53f0 	and.w	r3, r3, #7680	; 0x1e00
 80019b0:	2b00      	cmp	r3, #0
 80019b2:	d004      	beq.n	80019be <HAL_FDCAN_ActivateNotification+0x7a>
 80019b4:	693b      	ldr	r3, [r7, #16]
 80019b6:	f003 0308 	and.w	r3, r3, #8
 80019ba:	2b00      	cmp	r3, #0
 80019bc:	d01d      	beq.n	80019fa <HAL_FDCAN_ActivateNotification+0xb6>
 80019be:	68bb      	ldr	r3, [r7, #8]
 80019c0:	f403 4360 	and.w	r3, r3, #57344	; 0xe000
 80019c4:	2b00      	cmp	r3, #0
 80019c6:	d004      	beq.n	80019d2 <HAL_FDCAN_ActivateNotification+0x8e>
 80019c8:	693b      	ldr	r3, [r7, #16]
 80019ca:	f003 0310 	and.w	r3, r3, #16
 80019ce:	2b00      	cmp	r3, #0
 80019d0:	d013      	beq.n	80019fa <HAL_FDCAN_ActivateNotification+0xb6>
 80019d2:	68bb      	ldr	r3, [r7, #8]
 80019d4:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 80019d8:	2b00      	cmp	r3, #0
 80019da:	d004      	beq.n	80019e6 <HAL_FDCAN_ActivateNotification+0xa2>
 80019dc:	693b      	ldr	r3, [r7, #16]
 80019de:	f003 0320 	and.w	r3, r3, #32
 80019e2:	2b00      	cmp	r3, #0
 80019e4:	d009      	beq.n	80019fa <HAL_FDCAN_ActivateNotification+0xb6>
 80019e6:	68bb      	ldr	r3, [r7, #8]
 80019e8:	f403 037c 	and.w	r3, r3, #16515072	; 0xfc0000
 80019ec:	2b00      	cmp	r3, #0
 80019ee:	d00c      	beq.n	8001a0a <HAL_FDCAN_ActivateNotification+0xc6>
 80019f0:	693b      	ldr	r3, [r7, #16]
 80019f2:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80019f6:	2b00      	cmp	r3, #0
 80019f8:	d107      	bne.n	8001a0a <HAL_FDCAN_ActivateNotification+0xc6>
 80019fa:	68fb      	ldr	r3, [r7, #12]
 80019fc:	681b      	ldr	r3, [r3, #0]
 80019fe:	6dda      	ldr	r2, [r3, #92]	; 0x5c
 8001a00:	68fb      	ldr	r3, [r7, #12]
 8001a02:	681b      	ldr	r3, [r3, #0]
 8001a04:	f042 0201 	orr.w	r2, r2, #1
 8001a08:	65da      	str	r2, [r3, #92]	; 0x5c
 8001a0a:	68bb      	ldr	r3, [r7, #8]
 8001a0c:	f003 0307 	and.w	r3, r3, #7
 8001a10:	2b00      	cmp	r3, #0
 8001a12:	d004      	beq.n	8001a1e <HAL_FDCAN_ActivateNotification+0xda>
 8001a14:	693b      	ldr	r3, [r7, #16]
 8001a16:	f003 0301 	and.w	r3, r3, #1
 8001a1a:	2b00      	cmp	r3, #0
 8001a1c:	d13b      	bne.n	8001a96 <HAL_FDCAN_ActivateNotification+0x152>
 8001a1e:	68bb      	ldr	r3, [r7, #8]
 8001a20:	f003 0338 	and.w	r3, r3, #56	; 0x38
 8001a24:	2b00      	cmp	r3, #0
 8001a26:	d004      	beq.n	8001a32 <HAL_FDCAN_ActivateNotification+0xee>
 8001a28:	693b      	ldr	r3, [r7, #16]
 8001a2a:	f003 0302 	and.w	r3, r3, #2
 8001a2e:	2b00      	cmp	r3, #0
 8001a30:	d131      	bne.n	8001a96 <HAL_FDCAN_ActivateNotification+0x152>
 8001a32:	68bb      	ldr	r3, [r7, #8]
 8001a34:	f403 73e0 	and.w	r3, r3, #448	; 0x1c0
 8001a38:	2b00      	cmp	r3, #0
 8001a3a:	d004      	beq.n	8001a46 <HAL_FDCAN_ActivateNotification+0x102>
 8001a3c:	693b      	ldr	r3, [r7, #16]
 8001a3e:	f003 0304 	and.w	r3, r3, #4
 8001a42:	2b00      	cmp	r3, #0
 8001a44:	d127      	bne.n	8001a96 <HAL_FDCAN_ActivateNotification+0x152>
 8001a46:	68bb      	ldr	r3, [r7, #8]
 8001a48:	f403 53f0 	and.w	r3, r3, #7680	; 0x1e00
 8001a4c:	2b00      	cmp	r3, #0
 8001a4e:	d004      	beq.n	8001a5a <HAL_FDCAN_ActivateNotification+0x116>
 8001a50:	693b      	ldr	r3, [r7, #16]
 8001a52:	f003 0308 	and.w	r3, r3, #8
 8001a56:	2b00      	cmp	r3, #0
 8001a58:	d11d      	bne.n	8001a96 <HAL_FDCAN_ActivateNotification+0x152>
 8001a5a:	68bb      	ldr	r3, [r7, #8]
 8001a5c:	f403 4360 	and.w	r3, r3, #57344	; 0xe000
 8001a60:	2b00      	cmp	r3, #0
 8001a62:	d004      	beq.n	8001a6e <HAL_FDCAN_ActivateNotification+0x12a>
 8001a64:	693b      	ldr	r3, [r7, #16]
 8001a66:	f003 0310 	and.w	r3, r3, #16
 8001a6a:	2b00      	cmp	r3, #0
 8001a6c:	d113      	bne.n	8001a96 <HAL_FDCAN_ActivateNotification+0x152>
 8001a6e:	68bb      	ldr	r3, [r7, #8]
 8001a70:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 8001a74:	2b00      	cmp	r3, #0
 8001a76:	d004      	beq.n	8001a82 <HAL_FDCAN_ActivateNotification+0x13e>
 8001a78:	693b      	ldr	r3, [r7, #16]
 8001a7a:	f003 0320 	and.w	r3, r3, #32
 8001a7e:	2b00      	cmp	r3, #0
 8001a80:	d109      	bne.n	8001a96 <HAL_FDCAN_ActivateNotification+0x152>
 8001a82:	68bb      	ldr	r3, [r7, #8]
 8001a84:	f403 037c 	and.w	r3, r3, #16515072	; 0xfc0000
 8001a88:	2b00      	cmp	r3, #0
 8001a8a:	d00c      	beq.n	8001aa6 <HAL_FDCAN_ActivateNotification+0x162>
 8001a8c:	693b      	ldr	r3, [r7, #16]
 8001a8e:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8001a92:	2b00      	cmp	r3, #0
 8001a94:	d007      	beq.n	8001aa6 <HAL_FDCAN_ActivateNotification+0x162>
 8001a96:	68fb      	ldr	r3, [r7, #12]
 8001a98:	681b      	ldr	r3, [r3, #0]
 8001a9a:	6dda      	ldr	r2, [r3, #92]	; 0x5c
 8001a9c:	68fb      	ldr	r3, [r7, #12]
 8001a9e:	681b      	ldr	r3, [r3, #0]
 8001aa0:	f042 0202 	orr.w	r2, r2, #2
 8001aa4:	65da      	str	r2, [r3, #92]	; 0x5c
 8001aa6:	68bb      	ldr	r3, [r7, #8]
 8001aa8:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8001aac:	2b00      	cmp	r3, #0
 8001aae:	d009      	beq.n	8001ac4 <HAL_FDCAN_ActivateNotification+0x180>
 8001ab0:	68fb      	ldr	r3, [r7, #12]
 8001ab2:	681b      	ldr	r3, [r3, #0]
 8001ab4:	f8d3 10dc 	ldr.w	r1, [r3, #220]	; 0xdc
 8001ab8:	68fb      	ldr	r3, [r7, #12]
 8001aba:	681b      	ldr	r3, [r3, #0]
 8001abc:	687a      	ldr	r2, [r7, #4]
 8001abe:	430a      	orrs	r2, r1
 8001ac0:	f8c3 20dc 	str.w	r2, [r3, #220]	; 0xdc
 8001ac4:	68bb      	ldr	r3, [r7, #8]
 8001ac6:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8001aca:	2b00      	cmp	r3, #0
 8001acc:	d009      	beq.n	8001ae2 <HAL_FDCAN_ActivateNotification+0x19e>
 8001ace:	68fb      	ldr	r3, [r7, #12]
 8001ad0:	681b      	ldr	r3, [r3, #0]
 8001ad2:	f8d3 10e0 	ldr.w	r1, [r3, #224]	; 0xe0
 8001ad6:	68fb      	ldr	r3, [r7, #12]
 8001ad8:	681b      	ldr	r3, [r3, #0]
 8001ada:	687a      	ldr	r2, [r7, #4]
 8001adc:	430a      	orrs	r2, r1
 8001ade:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 8001ae2:	68fb      	ldr	r3, [r7, #12]
 8001ae4:	681b      	ldr	r3, [r3, #0]
 8001ae6:	6d59      	ldr	r1, [r3, #84]	; 0x54
 8001ae8:	68fb      	ldr	r3, [r7, #12]
 8001aea:	681b      	ldr	r3, [r3, #0]
 8001aec:	68ba      	ldr	r2, [r7, #8]
 8001aee:	430a      	orrs	r2, r1
 8001af0:	655a      	str	r2, [r3, #84]	; 0x54
 8001af2:	2300      	movs	r3, #0
 8001af4:	e006      	b.n	8001b04 <HAL_FDCAN_ActivateNotification+0x1c0>
 8001af6:	68fb      	ldr	r3, [r7, #12]
 8001af8:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8001afa:	f043 0202 	orr.w	r2, r3, #2
 8001afe:	68fb      	ldr	r3, [r7, #12]
 8001b00:	661a      	str	r2, [r3, #96]	; 0x60
 8001b02:	2301      	movs	r3, #1
 8001b04:	4618      	mov	r0, r3
 8001b06:	371c      	adds	r7, #28
 8001b08:	46bd      	mov	sp, r7
 8001b0a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001b0e:	4770      	bx	lr

08001b10 <HAL_FDCAN_DeactivateNotification>:
 8001b10:	b480      	push	{r7}
 8001b12:	b087      	sub	sp, #28
 8001b14:	af00      	add	r7, sp, #0
 8001b16:	6078      	str	r0, [r7, #4]
 8001b18:	6039      	str	r1, [r7, #0]
 8001b1a:	687b      	ldr	r3, [r7, #4]
 8001b1c:	f893 305c 	ldrb.w	r3, [r3, #92]	; 0x5c
 8001b20:	75fb      	strb	r3, [r7, #23]
 8001b22:	7dfb      	ldrb	r3, [r7, #23]
 8001b24:	2b01      	cmp	r3, #1
 8001b26:	d003      	beq.n	8001b30 <HAL_FDCAN_DeactivateNotification+0x20>
 8001b28:	7dfb      	ldrb	r3, [r7, #23]
 8001b2a:	2b02      	cmp	r3, #2
 8001b2c:	f040 80c3 	bne.w	8001cb6 <HAL_FDCAN_DeactivateNotification+0x1a6>
 8001b30:	687b      	ldr	r3, [r7, #4]
 8001b32:	681b      	ldr	r3, [r3, #0]
 8001b34:	6d59      	ldr	r1, [r3, #84]	; 0x54
 8001b36:	683b      	ldr	r3, [r7, #0]
 8001b38:	43da      	mvns	r2, r3
 8001b3a:	687b      	ldr	r3, [r7, #4]
 8001b3c:	681b      	ldr	r3, [r3, #0]
 8001b3e:	400a      	ands	r2, r1
 8001b40:	655a      	str	r2, [r3, #84]	; 0x54
 8001b42:	683b      	ldr	r3, [r7, #0]
 8001b44:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8001b48:	2b00      	cmp	r3, #0
 8001b4a:	d004      	beq.n	8001b56 <HAL_FDCAN_DeactivateNotification+0x46>
 8001b4c:	687b      	ldr	r3, [r7, #4]
 8001b4e:	681b      	ldr	r3, [r3, #0]
 8001b50:	2200      	movs	r2, #0
 8001b52:	f8c3 20dc 	str.w	r2, [r3, #220]	; 0xdc
 8001b56:	683b      	ldr	r3, [r7, #0]
 8001b58:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8001b5c:	2b00      	cmp	r3, #0
 8001b5e:	d004      	beq.n	8001b6a <HAL_FDCAN_DeactivateNotification+0x5a>
 8001b60:	687b      	ldr	r3, [r7, #4]
 8001b62:	681b      	ldr	r3, [r3, #0]
 8001b64:	2200      	movs	r2, #0
 8001b66:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 8001b6a:	687b      	ldr	r3, [r7, #4]
 8001b6c:	681b      	ldr	r3, [r3, #0]
 8001b6e:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8001b70:	613b      	str	r3, [r7, #16]
 8001b72:	687b      	ldr	r3, [r7, #4]
 8001b74:	681b      	ldr	r3, [r3, #0]
 8001b76:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8001b78:	60fb      	str	r3, [r7, #12]
 8001b7a:	693b      	ldr	r3, [r7, #16]
 8001b7c:	f003 0307 	and.w	r3, r3, #7
 8001b80:	2b00      	cmp	r3, #0
 8001b82:	d004      	beq.n	8001b8e <HAL_FDCAN_DeactivateNotification+0x7e>
 8001b84:	68fb      	ldr	r3, [r7, #12]
 8001b86:	f003 0301 	and.w	r3, r3, #1
 8001b8a:	2b00      	cmp	r3, #0
 8001b8c:	d043      	beq.n	8001c16 <HAL_FDCAN_DeactivateNotification+0x106>
 8001b8e:	693b      	ldr	r3, [r7, #16]
 8001b90:	f003 0338 	and.w	r3, r3, #56	; 0x38
 8001b94:	2b00      	cmp	r3, #0
 8001b96:	d004      	beq.n	8001ba2 <HAL_FDCAN_DeactivateNotification+0x92>
 8001b98:	68fb      	ldr	r3, [r7, #12]
 8001b9a:	f003 0302 	and.w	r3, r3, #2
 8001b9e:	2b00      	cmp	r3, #0
 8001ba0:	d039      	beq.n	8001c16 <HAL_FDCAN_DeactivateNotification+0x106>
 8001ba2:	693b      	ldr	r3, [r7, #16]
 8001ba4:	f403 73e0 	and.w	r3, r3, #448	; 0x1c0
 8001ba8:	2b00      	cmp	r3, #0
 8001baa:	d004      	beq.n	8001bb6 <HAL_FDCAN_DeactivateNotification+0xa6>
 8001bac:	68fb      	ldr	r3, [r7, #12]
 8001bae:	f003 0304 	and.w	r3, r3, #4
 8001bb2:	2b00      	cmp	r3, #0
 8001bb4:	d02f      	beq.n	8001c16 <HAL_FDCAN_DeactivateNotification+0x106>
 8001bb6:	693b      	ldr	r3, [r7, #16]
 8001bb8:	f403 53f0 	and.w	r3, r3, #7680	; 0x1e00
 8001bbc:	2b00      	cmp	r3, #0
 8001bbe:	d004      	beq.n	8001bca <HAL_FDCAN_DeactivateNotification+0xba>
 8001bc0:	68fb      	ldr	r3, [r7, #12]
 8001bc2:	f003 0308 	and.w	r3, r3, #8
 8001bc6:	2b00      	cmp	r3, #0
 8001bc8:	d025      	beq.n	8001c16 <HAL_FDCAN_DeactivateNotification+0x106>
 8001bca:	693b      	ldr	r3, [r7, #16]
 8001bcc:	f403 4360 	and.w	r3, r3, #57344	; 0xe000
 8001bd0:	2b00      	cmp	r3, #0
 8001bd2:	d004      	beq.n	8001bde <HAL_FDCAN_DeactivateNotification+0xce>
 8001bd4:	68fb      	ldr	r3, [r7, #12]
 8001bd6:	f003 0310 	and.w	r3, r3, #16
 8001bda:	2b00      	cmp	r3, #0
 8001bdc:	d01b      	beq.n	8001c16 <HAL_FDCAN_DeactivateNotification+0x106>
 8001bde:	693b      	ldr	r3, [r7, #16]
 8001be0:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 8001be4:	2b00      	cmp	r3, #0
 8001be6:	d004      	beq.n	8001bf2 <HAL_FDCAN_DeactivateNotification+0xe2>
 8001be8:	68fb      	ldr	r3, [r7, #12]
 8001bea:	f003 0320 	and.w	r3, r3, #32
 8001bee:	2b00      	cmp	r3, #0
 8001bf0:	d011      	beq.n	8001c16 <HAL_FDCAN_DeactivateNotification+0x106>
 8001bf2:	693b      	ldr	r3, [r7, #16]
 8001bf4:	f403 037c 	and.w	r3, r3, #16515072	; 0xfc0000
 8001bf8:	2b00      	cmp	r3, #0
 8001bfa:	d004      	beq.n	8001c06 <HAL_FDCAN_DeactivateNotification+0xf6>
 8001bfc:	68fb      	ldr	r3, [r7, #12]
 8001bfe:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8001c02:	2b00      	cmp	r3, #0
 8001c04:	d007      	beq.n	8001c16 <HAL_FDCAN_DeactivateNotification+0x106>
 8001c06:	687b      	ldr	r3, [r7, #4]
 8001c08:	681b      	ldr	r3, [r3, #0]
 8001c0a:	6dda      	ldr	r2, [r3, #92]	; 0x5c
 8001c0c:	687b      	ldr	r3, [r7, #4]
 8001c0e:	681b      	ldr	r3, [r3, #0]
 8001c10:	f022 0201 	bic.w	r2, r2, #1
 8001c14:	65da      	str	r2, [r3, #92]	; 0x5c
 8001c16:	693b      	ldr	r3, [r7, #16]
 8001c18:	f003 0307 	and.w	r3, r3, #7
 8001c1c:	2b00      	cmp	r3, #0
 8001c1e:	d004      	beq.n	8001c2a <HAL_FDCAN_DeactivateNotification+0x11a>
 8001c20:	68fb      	ldr	r3, [r7, #12]
 8001c22:	f003 0301 	and.w	r3, r3, #1
 8001c26:	2b00      	cmp	r3, #0
 8001c28:	d143      	bne.n	8001cb2 <HAL_FDCAN_DeactivateNotification+0x1a2>
 8001c2a:	693b      	ldr	r3, [r7, #16]
 8001c2c:	f003 0338 	and.w	r3, r3, #56	; 0x38
 8001c30:	2b00      	cmp	r3, #0
 8001c32:	d004      	beq.n	8001c3e <HAL_FDCAN_DeactivateNotification+0x12e>
 8001c34:	68fb      	ldr	r3, [r7, #12]
 8001c36:	f003 0302 	and.w	r3, r3, #2
 8001c3a:	2b00      	cmp	r3, #0
 8001c3c:	d139      	bne.n	8001cb2 <HAL_FDCAN_DeactivateNotification+0x1a2>
 8001c3e:	693b      	ldr	r3, [r7, #16]
 8001c40:	f403 73e0 	and.w	r3, r3, #448	; 0x1c0
 8001c44:	2b00      	cmp	r3, #0
 8001c46:	d004      	beq.n	8001c52 <HAL_FDCAN_DeactivateNotification+0x142>
 8001c48:	68fb      	ldr	r3, [r7, #12]
 8001c4a:	f003 0304 	and.w	r3, r3, #4
 8001c4e:	2b00      	cmp	r3, #0
 8001c50:	d12f      	bne.n	8001cb2 <HAL_FDCAN_DeactivateNotification+0x1a2>
 8001c52:	693b      	ldr	r3, [r7, #16]
 8001c54:	f403 53f0 	and.w	r3, r3, #7680	; 0x1e00
 8001c58:	2b00      	cmp	r3, #0
 8001c5a:	d004      	beq.n	8001c66 <HAL_FDCAN_DeactivateNotification+0x156>
 8001c5c:	68fb      	ldr	r3, [r7, #12]
 8001c5e:	f003 0308 	and.w	r3, r3, #8
 8001c62:	2b00      	cmp	r3, #0
 8001c64:	d125      	bne.n	8001cb2 <HAL_FDCAN_DeactivateNotification+0x1a2>
 8001c66:	693b      	ldr	r3, [r7, #16]
 8001c68:	f403 4360 	and.w	r3, r3, #57344	; 0xe000
 8001c6c:	2b00      	cmp	r3, #0
 8001c6e:	d004      	beq.n	8001c7a <HAL_FDCAN_DeactivateNotification+0x16a>
 8001c70:	68fb      	ldr	r3, [r7, #12]
 8001c72:	f003 0310 	and.w	r3, r3, #16
 8001c76:	2b00      	cmp	r3, #0
 8001c78:	d11b      	bne.n	8001cb2 <HAL_FDCAN_DeactivateNotification+0x1a2>
 8001c7a:	693b      	ldr	r3, [r7, #16]
 8001c7c:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 8001c80:	2b00      	cmp	r3, #0
 8001c82:	d004      	beq.n	8001c8e <HAL_FDCAN_DeactivateNotification+0x17e>
 8001c84:	68fb      	ldr	r3, [r7, #12]
 8001c86:	f003 0320 	and.w	r3, r3, #32
 8001c8a:	2b00      	cmp	r3, #0
 8001c8c:	d111      	bne.n	8001cb2 <HAL_FDCAN_DeactivateNotification+0x1a2>
 8001c8e:	693b      	ldr	r3, [r7, #16]
 8001c90:	f403 037c 	and.w	r3, r3, #16515072	; 0xfc0000
 8001c94:	2b00      	cmp	r3, #0
 8001c96:	d004      	beq.n	8001ca2 <HAL_FDCAN_DeactivateNotification+0x192>
 8001c98:	68fb      	ldr	r3, [r7, #12]
 8001c9a:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8001c9e:	2b00      	cmp	r3, #0
 8001ca0:	d107      	bne.n	8001cb2 <HAL_FDCAN_DeactivateNotification+0x1a2>
 8001ca2:	687b      	ldr	r3, [r7, #4]
 8001ca4:	681b      	ldr	r3, [r3, #0]
 8001ca6:	6dda      	ldr	r2, [r3, #92]	; 0x5c
 8001ca8:	687b      	ldr	r3, [r7, #4]
 8001caa:	681b      	ldr	r3, [r3, #0]
 8001cac:	f022 0202 	bic.w	r2, r2, #2
 8001cb0:	65da      	str	r2, [r3, #92]	; 0x5c
 8001cb2:	2300      	movs	r3, #0
 8001cb4:	e006      	b.n	8001cc4 <HAL_FDCAN_DeactivateNotification+0x1b4>
 8001cb6:	687b      	ldr	r3, [r7, #4]
 8001cb8:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8001cba:	f043 0202 	orr.w	r2, r3, #2
 8001cbe:	687b      	ldr	r3, [r7, #4]
 8001cc0:	661a      	str	r2, [r3, #96]	; 0x60
 8001cc2:	2301      	movs	r3, #1
 8001cc4:	4618      	mov	r0, r3
 8001cc6:	371c      	adds	r7, #28
 8001cc8:	46bd      	mov	sp, r7
 8001cca:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001cce:	4770      	bx	lr

08001cd0 <HAL_FDCAN_IRQHandler>:
 8001cd0:	b580      	push	{r7, lr}
 8001cd2:	b08a      	sub	sp, #40	; 0x28
 8001cd4:	af00      	add	r7, sp, #0
 8001cd6:	6078      	str	r0, [r7, #4]
 8001cd8:	687b      	ldr	r3, [r7, #4]
 8001cda:	681b      	ldr	r3, [r3, #0]
 8001cdc:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8001cde:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00
 8001ce2:	627b      	str	r3, [r7, #36]	; 0x24
 8001ce4:	687b      	ldr	r3, [r7, #4]
 8001ce6:	681b      	ldr	r3, [r3, #0]
 8001ce8:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8001cea:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8001cec:	4013      	ands	r3, r2
 8001cee:	627b      	str	r3, [r7, #36]	; 0x24
 8001cf0:	687b      	ldr	r3, [r7, #4]
 8001cf2:	681b      	ldr	r3, [r3, #0]
 8001cf4:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8001cf6:	f003 0307 	and.w	r3, r3, #7
 8001cfa:	623b      	str	r3, [r7, #32]
 8001cfc:	687b      	ldr	r3, [r7, #4]
 8001cfe:	681b      	ldr	r3, [r3, #0]
 8001d00:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8001d02:	6a3a      	ldr	r2, [r7, #32]
 8001d04:	4013      	ands	r3, r2
 8001d06:	623b      	str	r3, [r7, #32]
 8001d08:	687b      	ldr	r3, [r7, #4]
 8001d0a:	681b      	ldr	r3, [r3, #0]
 8001d0c:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8001d0e:	f003 0338 	and.w	r3, r3, #56	; 0x38
 8001d12:	61fb      	str	r3, [r7, #28]
 8001d14:	687b      	ldr	r3, [r7, #4]
 8001d16:	681b      	ldr	r3, [r3, #0]
 8001d18:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8001d1a:	69fa      	ldr	r2, [r7, #28]
 8001d1c:	4013      	ands	r3, r2
 8001d1e:	61fb      	str	r3, [r7, #28]
 8001d20:	687b      	ldr	r3, [r7, #4]
 8001d22:	681b      	ldr	r3, [r3, #0]
 8001d24:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8001d26:	f403 0371 	and.w	r3, r3, #15794176	; 0xf10000
 8001d2a:	61bb      	str	r3, [r7, #24]
 8001d2c:	687b      	ldr	r3, [r7, #4]
 8001d2e:	681b      	ldr	r3, [r3, #0]
 8001d30:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8001d32:	69ba      	ldr	r2, [r7, #24]
 8001d34:	4013      	ands	r3, r2
 8001d36:	61bb      	str	r3, [r7, #24]
 8001d38:	687b      	ldr	r3, [r7, #4]
 8001d3a:	681b      	ldr	r3, [r3, #0]
 8001d3c:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8001d3e:	f403 2360 	and.w	r3, r3, #917504	; 0xe0000
 8001d42:	617b      	str	r3, [r7, #20]
 8001d44:	687b      	ldr	r3, [r7, #4]
 8001d46:	681b      	ldr	r3, [r3, #0]
 8001d48:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8001d4a:	697a      	ldr	r2, [r7, #20]
 8001d4c:	4013      	ands	r3, r2
 8001d4e:	617b      	str	r3, [r7, #20]
 8001d50:	687b      	ldr	r3, [r7, #4]
 8001d52:	681b      	ldr	r3, [r3, #0]
 8001d54:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8001d56:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8001d5a:	2b00      	cmp	r3, #0
 8001d5c:	d00d      	beq.n	8001d7a <HAL_FDCAN_IRQHandler+0xaa>
 8001d5e:	687b      	ldr	r3, [r7, #4]
 8001d60:	681b      	ldr	r3, [r3, #0]
 8001d62:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8001d64:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8001d68:	2b00      	cmp	r3, #0
 8001d6a:	d006      	beq.n	8001d7a <HAL_FDCAN_IRQHandler+0xaa>
 8001d6c:	687b      	ldr	r3, [r7, #4]
 8001d6e:	681b      	ldr	r3, [r3, #0]
 8001d70:	2240      	movs	r2, #64	; 0x40
 8001d72:	651a      	str	r2, [r3, #80]	; 0x50
 8001d74:	6878      	ldr	r0, [r7, #4]
 8001d76:	f000 f92e 	bl	8001fd6 <HAL_FDCAN_HighPriorityMessageCallback>
 8001d7a:	687b      	ldr	r3, [r7, #4]
 8001d7c:	681b      	ldr	r3, [r3, #0]
 8001d7e:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8001d80:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8001d84:	2b00      	cmp	r3, #0
 8001d86:	d01b      	beq.n	8001dc0 <HAL_FDCAN_IRQHandler+0xf0>
 8001d88:	687b      	ldr	r3, [r7, #4]
 8001d8a:	681b      	ldr	r3, [r3, #0]
 8001d8c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8001d8e:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8001d92:	2b00      	cmp	r3, #0
 8001d94:	d014      	beq.n	8001dc0 <HAL_FDCAN_IRQHandler+0xf0>
 8001d96:	687b      	ldr	r3, [r7, #4]
 8001d98:	681b      	ldr	r3, [r3, #0]
 8001d9a:	f8d3 30d8 	ldr.w	r3, [r3, #216]	; 0xd8
 8001d9e:	613b      	str	r3, [r7, #16]
 8001da0:	687b      	ldr	r3, [r7, #4]
 8001da2:	681b      	ldr	r3, [r3, #0]
 8001da4:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8001da8:	693a      	ldr	r2, [r7, #16]
 8001daa:	4013      	ands	r3, r2
 8001dac:	613b      	str	r3, [r7, #16]
 8001dae:	687b      	ldr	r3, [r7, #4]
 8001db0:	681b      	ldr	r3, [r3, #0]
 8001db2:	f44f 7280 	mov.w	r2, #256	; 0x100
 8001db6:	651a      	str	r2, [r3, #80]	; 0x50
 8001db8:	6939      	ldr	r1, [r7, #16]
 8001dba:	6878      	ldr	r0, [r7, #4]
 8001dbc:	f000 f8ec 	bl	8001f98 <HAL_FDCAN_TxBufferAbortCallback>
 8001dc0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001dc2:	2b00      	cmp	r3, #0
 8001dc4:	d007      	beq.n	8001dd6 <HAL_FDCAN_IRQHandler+0x106>
 8001dc6:	687b      	ldr	r3, [r7, #4]
 8001dc8:	681b      	ldr	r3, [r3, #0]
 8001dca:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8001dcc:	651a      	str	r2, [r3, #80]	; 0x50
 8001dce:	6a79      	ldr	r1, [r7, #36]	; 0x24
 8001dd0:	6878      	ldr	r0, [r7, #4]
 8001dd2:	f000 f8b6 	bl	8001f42 <HAL_FDCAN_TxEventFifoCallback>
 8001dd6:	6a3b      	ldr	r3, [r7, #32]
 8001dd8:	2b00      	cmp	r3, #0
 8001dda:	d007      	beq.n	8001dec <HAL_FDCAN_IRQHandler+0x11c>
 8001ddc:	687b      	ldr	r3, [r7, #4]
 8001dde:	681b      	ldr	r3, [r3, #0]
 8001de0:	6a3a      	ldr	r2, [r7, #32]
 8001de2:	651a      	str	r2, [r3, #80]	; 0x50
 8001de4:	6a39      	ldr	r1, [r7, #32]
 8001de6:	6878      	ldr	r0, [r7, #4]
 8001de8:	f7fe fee6 	bl	8000bb8 <HAL_FDCAN_RxFifo0Callback>
 8001dec:	69fb      	ldr	r3, [r7, #28]
 8001dee:	2b00      	cmp	r3, #0
 8001df0:	d007      	beq.n	8001e02 <HAL_FDCAN_IRQHandler+0x132>
 8001df2:	687b      	ldr	r3, [r7, #4]
 8001df4:	681b      	ldr	r3, [r3, #0]
 8001df6:	69fa      	ldr	r2, [r7, #28]
 8001df8:	651a      	str	r2, [r3, #80]	; 0x50
 8001dfa:	69f9      	ldr	r1, [r7, #28]
 8001dfc:	6878      	ldr	r0, [r7, #4]
 8001dfe:	f000 f8ab 	bl	8001f58 <HAL_FDCAN_RxFifo1Callback>
 8001e02:	687b      	ldr	r3, [r7, #4]
 8001e04:	681b      	ldr	r3, [r3, #0]
 8001e06:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8001e08:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8001e0c:	2b00      	cmp	r3, #0
 8001e0e:	d00e      	beq.n	8001e2e <HAL_FDCAN_IRQHandler+0x15e>
 8001e10:	687b      	ldr	r3, [r7, #4]
 8001e12:	681b      	ldr	r3, [r3, #0]
 8001e14:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8001e16:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8001e1a:	2b00      	cmp	r3, #0
 8001e1c:	d007      	beq.n	8001e2e <HAL_FDCAN_IRQHandler+0x15e>
 8001e1e:	687b      	ldr	r3, [r7, #4]
 8001e20:	681b      	ldr	r3, [r3, #0]
 8001e22:	f44f 7200 	mov.w	r2, #512	; 0x200
 8001e26:	651a      	str	r2, [r3, #80]	; 0x50
 8001e28:	6878      	ldr	r0, [r7, #4]
 8001e2a:	f000 f8a0 	bl	8001f6e <HAL_FDCAN_TxFifoEmptyCallback>
 8001e2e:	687b      	ldr	r3, [r7, #4]
 8001e30:	681b      	ldr	r3, [r3, #0]
 8001e32:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8001e34:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8001e38:	2b00      	cmp	r3, #0
 8001e3a:	d01a      	beq.n	8001e72 <HAL_FDCAN_IRQHandler+0x1a2>
 8001e3c:	687b      	ldr	r3, [r7, #4]
 8001e3e:	681b      	ldr	r3, [r3, #0]
 8001e40:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8001e42:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8001e46:	2b00      	cmp	r3, #0
 8001e48:	d013      	beq.n	8001e72 <HAL_FDCAN_IRQHandler+0x1a2>
 8001e4a:	687b      	ldr	r3, [r7, #4]
 8001e4c:	681b      	ldr	r3, [r3, #0]
 8001e4e:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
 8001e52:	60fb      	str	r3, [r7, #12]
 8001e54:	687b      	ldr	r3, [r7, #4]
 8001e56:	681b      	ldr	r3, [r3, #0]
 8001e58:	f8d3 30dc 	ldr.w	r3, [r3, #220]	; 0xdc
 8001e5c:	68fa      	ldr	r2, [r7, #12]
 8001e5e:	4013      	ands	r3, r2
 8001e60:	60fb      	str	r3, [r7, #12]
 8001e62:	687b      	ldr	r3, [r7, #4]
 8001e64:	681b      	ldr	r3, [r3, #0]
 8001e66:	2280      	movs	r2, #128	; 0x80
 8001e68:	651a      	str	r2, [r3, #80]	; 0x50
 8001e6a:	68f9      	ldr	r1, [r7, #12]
 8001e6c:	6878      	ldr	r0, [r7, #4]
 8001e6e:	f000 f888 	bl	8001f82 <HAL_FDCAN_TxBufferCompleteCallback>
 8001e72:	687b      	ldr	r3, [r7, #4]
 8001e74:	681b      	ldr	r3, [r3, #0]
 8001e76:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8001e78:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 8001e7c:	2b00      	cmp	r3, #0
 8001e7e:	d00e      	beq.n	8001e9e <HAL_FDCAN_IRQHandler+0x1ce>
 8001e80:	687b      	ldr	r3, [r7, #4]
 8001e82:	681b      	ldr	r3, [r3, #0]
 8001e84:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8001e86:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 8001e8a:	2b00      	cmp	r3, #0
 8001e8c:	d007      	beq.n	8001e9e <HAL_FDCAN_IRQHandler+0x1ce>
 8001e8e:	687b      	ldr	r3, [r7, #4]
 8001e90:	681b      	ldr	r3, [r3, #0]
 8001e92:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8001e96:	651a      	str	r2, [r3, #80]	; 0x50
 8001e98:	6878      	ldr	r0, [r7, #4]
 8001e9a:	f000 f888 	bl	8001fae <HAL_FDCAN_TimestampWraparoundCallback>
 8001e9e:	687b      	ldr	r3, [r7, #4]
 8001ea0:	681b      	ldr	r3, [r3, #0]
 8001ea2:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8001ea4:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 8001ea8:	2b00      	cmp	r3, #0
 8001eaa:	d00e      	beq.n	8001eca <HAL_FDCAN_IRQHandler+0x1fa>
 8001eac:	687b      	ldr	r3, [r7, #4]
 8001eae:	681b      	ldr	r3, [r3, #0]
 8001eb0:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8001eb2:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 8001eb6:	2b00      	cmp	r3, #0
 8001eb8:	d007      	beq.n	8001eca <HAL_FDCAN_IRQHandler+0x1fa>
 8001eba:	687b      	ldr	r3, [r7, #4]
 8001ebc:	681b      	ldr	r3, [r3, #0]
 8001ebe:	f44f 4200 	mov.w	r2, #32768	; 0x8000
 8001ec2:	651a      	str	r2, [r3, #80]	; 0x50
 8001ec4:	6878      	ldr	r0, [r7, #4]
 8001ec6:	f000 f87c 	bl	8001fc2 <HAL_FDCAN_TimeoutOccurredCallback>
 8001eca:	687b      	ldr	r3, [r7, #4]
 8001ecc:	681b      	ldr	r3, [r3, #0]
 8001ece:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8001ed0:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8001ed4:	2b00      	cmp	r3, #0
 8001ed6:	d011      	beq.n	8001efc <HAL_FDCAN_IRQHandler+0x22c>
 8001ed8:	687b      	ldr	r3, [r7, #4]
 8001eda:	681b      	ldr	r3, [r3, #0]
 8001edc:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8001ede:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8001ee2:	2b00      	cmp	r3, #0
 8001ee4:	d00a      	beq.n	8001efc <HAL_FDCAN_IRQHandler+0x22c>
 8001ee6:	687b      	ldr	r3, [r7, #4]
 8001ee8:	681b      	ldr	r3, [r3, #0]
 8001eea:	f44f 4280 	mov.w	r2, #16384	; 0x4000
 8001eee:	651a      	str	r2, [r3, #80]	; 0x50
 8001ef0:	687b      	ldr	r3, [r7, #4]
 8001ef2:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8001ef4:	f043 0280 	orr.w	r2, r3, #128	; 0x80
 8001ef8:	687b      	ldr	r3, [r7, #4]
 8001efa:	661a      	str	r2, [r3, #96]	; 0x60
 8001efc:	697b      	ldr	r3, [r7, #20]
 8001efe:	2b00      	cmp	r3, #0
 8001f00:	d007      	beq.n	8001f12 <HAL_FDCAN_IRQHandler+0x242>
 8001f02:	687b      	ldr	r3, [r7, #4]
 8001f04:	681b      	ldr	r3, [r3, #0]
 8001f06:	697a      	ldr	r2, [r7, #20]
 8001f08:	651a      	str	r2, [r3, #80]	; 0x50
 8001f0a:	6979      	ldr	r1, [r7, #20]
 8001f0c:	6878      	ldr	r0, [r7, #4]
 8001f0e:	f000 f876 	bl	8001ffe <HAL_FDCAN_ErrorStatusCallback>
 8001f12:	69bb      	ldr	r3, [r7, #24]
 8001f14:	2b00      	cmp	r3, #0
 8001f16:	d009      	beq.n	8001f2c <HAL_FDCAN_IRQHandler+0x25c>
 8001f18:	687b      	ldr	r3, [r7, #4]
 8001f1a:	681b      	ldr	r3, [r3, #0]
 8001f1c:	69ba      	ldr	r2, [r7, #24]
 8001f1e:	651a      	str	r2, [r3, #80]	; 0x50
 8001f20:	687b      	ldr	r3, [r7, #4]
 8001f22:	6e1a      	ldr	r2, [r3, #96]	; 0x60
 8001f24:	69bb      	ldr	r3, [r7, #24]
 8001f26:	431a      	orrs	r2, r3
 8001f28:	687b      	ldr	r3, [r7, #4]
 8001f2a:	661a      	str	r2, [r3, #96]	; 0x60
 8001f2c:	687b      	ldr	r3, [r7, #4]
 8001f2e:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8001f30:	2b00      	cmp	r3, #0
 8001f32:	d002      	beq.n	8001f3a <HAL_FDCAN_IRQHandler+0x26a>
 8001f34:	6878      	ldr	r0, [r7, #4]
 8001f36:	f000 f858 	bl	8001fea <HAL_FDCAN_ErrorCallback>
 8001f3a:	bf00      	nop
 8001f3c:	3728      	adds	r7, #40	; 0x28
 8001f3e:	46bd      	mov	sp, r7
 8001f40:	bd80      	pop	{r7, pc}

08001f42 <HAL_FDCAN_TxEventFifoCallback>:
 8001f42:	b480      	push	{r7}
 8001f44:	b083      	sub	sp, #12
 8001f46:	af00      	add	r7, sp, #0
 8001f48:	6078      	str	r0, [r7, #4]
 8001f4a:	6039      	str	r1, [r7, #0]
 8001f4c:	bf00      	nop
 8001f4e:	370c      	adds	r7, #12
 8001f50:	46bd      	mov	sp, r7
 8001f52:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001f56:	4770      	bx	lr

08001f58 <HAL_FDCAN_RxFifo1Callback>:
 8001f58:	b480      	push	{r7}
 8001f5a:	b083      	sub	sp, #12
 8001f5c:	af00      	add	r7, sp, #0
 8001f5e:	6078      	str	r0, [r7, #4]
 8001f60:	6039      	str	r1, [r7, #0]
 8001f62:	bf00      	nop
 8001f64:	370c      	adds	r7, #12
 8001f66:	46bd      	mov	sp, r7
 8001f68:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001f6c:	4770      	bx	lr

08001f6e <HAL_FDCAN_TxFifoEmptyCallback>:
 8001f6e:	b480      	push	{r7}
 8001f70:	b083      	sub	sp, #12
 8001f72:	af00      	add	r7, sp, #0
 8001f74:	6078      	str	r0, [r7, #4]
 8001f76:	bf00      	nop
 8001f78:	370c      	adds	r7, #12
 8001f7a:	46bd      	mov	sp, r7
 8001f7c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001f80:	4770      	bx	lr

08001f82 <HAL_FDCAN_TxBufferCompleteCallback>:
 8001f82:	b480      	push	{r7}
 8001f84:	b083      	sub	sp, #12
 8001f86:	af00      	add	r7, sp, #0
 8001f88:	6078      	str	r0, [r7, #4]
 8001f8a:	6039      	str	r1, [r7, #0]
 8001f8c:	bf00      	nop
 8001f8e:	370c      	adds	r7, #12
 8001f90:	46bd      	mov	sp, r7
 8001f92:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001f96:	4770      	bx	lr

08001f98 <HAL_FDCAN_TxBufferAbortCallback>:
 8001f98:	b480      	push	{r7}
 8001f9a:	b083      	sub	sp, #12
 8001f9c:	af00      	add	r7, sp, #0
 8001f9e:	6078      	str	r0, [r7, #4]
 8001fa0:	6039      	str	r1, [r7, #0]
 8001fa2:	bf00      	nop
 8001fa4:	370c      	adds	r7, #12
 8001fa6:	46bd      	mov	sp, r7
 8001fa8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001fac:	4770      	bx	lr

08001fae <HAL_FDCAN_TimestampWraparoundCallback>:
 8001fae:	b480      	push	{r7}
 8001fb0:	b083      	sub	sp, #12
 8001fb2:	af00      	add	r7, sp, #0
 8001fb4:	6078      	str	r0, [r7, #4]
 8001fb6:	bf00      	nop
 8001fb8:	370c      	adds	r7, #12
 8001fba:	46bd      	mov	sp, r7
 8001fbc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001fc0:	4770      	bx	lr

08001fc2 <HAL_FDCAN_TimeoutOccurredCallback>:
 8001fc2:	b480      	push	{r7}
 8001fc4:	b083      	sub	sp, #12
 8001fc6:	af00      	add	r7, sp, #0
 8001fc8:	6078      	str	r0, [r7, #4]
 8001fca:	bf00      	nop
 8001fcc:	370c      	adds	r7, #12
 8001fce:	46bd      	mov	sp, r7
 8001fd0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001fd4:	4770      	bx	lr

08001fd6 <HAL_FDCAN_HighPriorityMessageCallback>:
 8001fd6:	b480      	push	{r7}
 8001fd8:	b083      	sub	sp, #12
 8001fda:	af00      	add	r7, sp, #0
 8001fdc:	6078      	str	r0, [r7, #4]
 8001fde:	bf00      	nop
 8001fe0:	370c      	adds	r7, #12
 8001fe2:	46bd      	mov	sp, r7
 8001fe4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001fe8:	4770      	bx	lr

08001fea <HAL_FDCAN_ErrorCallback>:
 8001fea:	b480      	push	{r7}
 8001fec:	b083      	sub	sp, #12
 8001fee:	af00      	add	r7, sp, #0
 8001ff0:	6078      	str	r0, [r7, #4]
 8001ff2:	bf00      	nop
 8001ff4:	370c      	adds	r7, #12
 8001ff6:	46bd      	mov	sp, r7
 8001ff8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001ffc:	4770      	bx	lr

08001ffe <HAL_FDCAN_ErrorStatusCallback>:
 8001ffe:	b480      	push	{r7}
 8002000:	b083      	sub	sp, #12
 8002002:	af00      	add	r7, sp, #0
 8002004:	6078      	str	r0, [r7, #4]
 8002006:	6039      	str	r1, [r7, #0]
 8002008:	bf00      	nop
 800200a:	370c      	adds	r7, #12
 800200c:	46bd      	mov	sp, r7
 800200e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002012:	4770      	bx	lr

08002014 <FDCAN_CalcultateRamBlockAddresses>:
 8002014:	b480      	push	{r7}
 8002016:	b085      	sub	sp, #20
 8002018:	af00      	add	r7, sp, #0
 800201a:	6078      	str	r0, [r7, #4]
 800201c:	4b30      	ldr	r3, [pc, #192]	; (80020e0 <FDCAN_CalcultateRamBlockAddresses+0xcc>)
 800201e:	60bb      	str	r3, [r7, #8]
 8002020:	687b      	ldr	r3, [r7, #4]
 8002022:	681b      	ldr	r3, [r3, #0]
 8002024:	4a2f      	ldr	r2, [pc, #188]	; (80020e4 <FDCAN_CalcultateRamBlockAddresses+0xd0>)
 8002026:	4293      	cmp	r3, r2
 8002028:	d103      	bne.n	8002032 <FDCAN_CalcultateRamBlockAddresses+0x1e>
 800202a:	68bb      	ldr	r3, [r7, #8]
 800202c:	f503 7354 	add.w	r3, r3, #848	; 0x350
 8002030:	60bb      	str	r3, [r7, #8]
 8002032:	687b      	ldr	r3, [r7, #4]
 8002034:	681b      	ldr	r3, [r3, #0]
 8002036:	4a2c      	ldr	r2, [pc, #176]	; (80020e8 <FDCAN_CalcultateRamBlockAddresses+0xd4>)
 8002038:	4293      	cmp	r3, r2
 800203a:	d103      	bne.n	8002044 <FDCAN_CalcultateRamBlockAddresses+0x30>
 800203c:	68bb      	ldr	r3, [r7, #8]
 800203e:	f503 63d4 	add.w	r3, r3, #1696	; 0x6a0
 8002042:	60bb      	str	r3, [r7, #8]
 8002044:	687b      	ldr	r3, [r7, #4]
 8002046:	68ba      	ldr	r2, [r7, #8]
 8002048:	641a      	str	r2, [r3, #64]	; 0x40
 800204a:	687b      	ldr	r3, [r7, #4]
 800204c:	681b      	ldr	r3, [r3, #0]
 800204e:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8002052:	f423 11f8 	bic.w	r1, r3, #2031616	; 0x1f0000
 8002056:	687b      	ldr	r3, [r7, #4]
 8002058:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800205a:	041a      	lsls	r2, r3, #16
 800205c:	687b      	ldr	r3, [r7, #4]
 800205e:	681b      	ldr	r3, [r3, #0]
 8002060:	430a      	orrs	r2, r1
 8002062:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
 8002066:	68bb      	ldr	r3, [r7, #8]
 8002068:	f103 0270 	add.w	r2, r3, #112	; 0x70
 800206c:	687b      	ldr	r3, [r7, #4]
 800206e:	645a      	str	r2, [r3, #68]	; 0x44
 8002070:	687b      	ldr	r3, [r7, #4]
 8002072:	681b      	ldr	r3, [r3, #0]
 8002074:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8002078:	f023 6170 	bic.w	r1, r3, #251658240	; 0xf000000
 800207c:	687b      	ldr	r3, [r7, #4]
 800207e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002080:	061a      	lsls	r2, r3, #24
 8002082:	687b      	ldr	r3, [r7, #4]
 8002084:	681b      	ldr	r3, [r3, #0]
 8002086:	430a      	orrs	r2, r1
 8002088:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
 800208c:	68bb      	ldr	r3, [r7, #8]
 800208e:	f103 02b0 	add.w	r2, r3, #176	; 0xb0
 8002092:	687b      	ldr	r3, [r7, #4]
 8002094:	649a      	str	r2, [r3, #72]	; 0x48
 8002096:	68bb      	ldr	r3, [r7, #8]
 8002098:	f503 72c4 	add.w	r2, r3, #392	; 0x188
 800209c:	687b      	ldr	r3, [r7, #4]
 800209e:	64da      	str	r2, [r3, #76]	; 0x4c
 80020a0:	68bb      	ldr	r3, [r7, #8]
 80020a2:	f503 7218 	add.w	r2, r3, #608	; 0x260
 80020a6:	687b      	ldr	r3, [r7, #4]
 80020a8:	651a      	str	r2, [r3, #80]	; 0x50
 80020aa:	68bb      	ldr	r3, [r7, #8]
 80020ac:	f503 721e 	add.w	r2, r3, #632	; 0x278
 80020b0:	687b      	ldr	r3, [r7, #4]
 80020b2:	655a      	str	r2, [r3, #84]	; 0x54
 80020b4:	68bb      	ldr	r3, [r7, #8]
 80020b6:	60fb      	str	r3, [r7, #12]
 80020b8:	e005      	b.n	80020c6 <FDCAN_CalcultateRamBlockAddresses+0xb2>
 80020ba:	68fb      	ldr	r3, [r7, #12]
 80020bc:	2200      	movs	r2, #0
 80020be:	601a      	str	r2, [r3, #0]
 80020c0:	68fb      	ldr	r3, [r7, #12]
 80020c2:	3304      	adds	r3, #4
 80020c4:	60fb      	str	r3, [r7, #12]
 80020c6:	68bb      	ldr	r3, [r7, #8]
 80020c8:	f503 7354 	add.w	r3, r3, #848	; 0x350
 80020cc:	68fa      	ldr	r2, [r7, #12]
 80020ce:	429a      	cmp	r2, r3
 80020d0:	d3f3      	bcc.n	80020ba <FDCAN_CalcultateRamBlockAddresses+0xa6>
 80020d2:	bf00      	nop
 80020d4:	3714      	adds	r7, #20
 80020d6:	46bd      	mov	sp, r7
 80020d8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80020dc:	4770      	bx	lr
 80020de:	bf00      	nop
 80020e0:	4000a400 	.word	0x4000a400
 80020e4:	40006800 	.word	0x40006800
 80020e8:	40006c00 	.word	0x40006c00

080020ec <HAL_GPIO_Init>:
 80020ec:	b480      	push	{r7}
 80020ee:	b087      	sub	sp, #28
 80020f0:	af00      	add	r7, sp, #0
 80020f2:	6078      	str	r0, [r7, #4]
 80020f4:	6039      	str	r1, [r7, #0]
 80020f6:	2300      	movs	r3, #0
 80020f8:	617b      	str	r3, [r7, #20]
 80020fa:	e15a      	b.n	80023b2 <HAL_GPIO_Init+0x2c6>
 80020fc:	683b      	ldr	r3, [r7, #0]
 80020fe:	681a      	ldr	r2, [r3, #0]
 8002100:	2101      	movs	r1, #1
 8002102:	697b      	ldr	r3, [r7, #20]
 8002104:	fa01 f303 	lsl.w	r3, r1, r3
 8002108:	4013      	ands	r3, r2
 800210a:	60fb      	str	r3, [r7, #12]
 800210c:	68fb      	ldr	r3, [r7, #12]
 800210e:	2b00      	cmp	r3, #0
 8002110:	f000 814c 	beq.w	80023ac <HAL_GPIO_Init+0x2c0>
 8002114:	683b      	ldr	r3, [r7, #0]
 8002116:	685b      	ldr	r3, [r3, #4]
 8002118:	2b01      	cmp	r3, #1
 800211a:	d00b      	beq.n	8002134 <HAL_GPIO_Init+0x48>
 800211c:	683b      	ldr	r3, [r7, #0]
 800211e:	685b      	ldr	r3, [r3, #4]
 8002120:	2b02      	cmp	r3, #2
 8002122:	d007      	beq.n	8002134 <HAL_GPIO_Init+0x48>
 8002124:	683b      	ldr	r3, [r7, #0]
 8002126:	685b      	ldr	r3, [r3, #4]
 8002128:	2b11      	cmp	r3, #17
 800212a:	d003      	beq.n	8002134 <HAL_GPIO_Init+0x48>
 800212c:	683b      	ldr	r3, [r7, #0]
 800212e:	685b      	ldr	r3, [r3, #4]
 8002130:	2b12      	cmp	r3, #18
 8002132:	d130      	bne.n	8002196 <HAL_GPIO_Init+0xaa>
 8002134:	687b      	ldr	r3, [r7, #4]
 8002136:	689b      	ldr	r3, [r3, #8]
 8002138:	613b      	str	r3, [r7, #16]
 800213a:	697b      	ldr	r3, [r7, #20]
 800213c:	005b      	lsls	r3, r3, #1
 800213e:	2203      	movs	r2, #3
 8002140:	fa02 f303 	lsl.w	r3, r2, r3
 8002144:	43db      	mvns	r3, r3
 8002146:	693a      	ldr	r2, [r7, #16]
 8002148:	4013      	ands	r3, r2
 800214a:	613b      	str	r3, [r7, #16]
 800214c:	683b      	ldr	r3, [r7, #0]
 800214e:	68da      	ldr	r2, [r3, #12]
 8002150:	697b      	ldr	r3, [r7, #20]
 8002152:	005b      	lsls	r3, r3, #1
 8002154:	fa02 f303 	lsl.w	r3, r2, r3
 8002158:	693a      	ldr	r2, [r7, #16]
 800215a:	4313      	orrs	r3, r2
 800215c:	613b      	str	r3, [r7, #16]
 800215e:	687b      	ldr	r3, [r7, #4]
 8002160:	693a      	ldr	r2, [r7, #16]
 8002162:	609a      	str	r2, [r3, #8]
 8002164:	687b      	ldr	r3, [r7, #4]
 8002166:	685b      	ldr	r3, [r3, #4]
 8002168:	613b      	str	r3, [r7, #16]
 800216a:	2201      	movs	r2, #1
 800216c:	697b      	ldr	r3, [r7, #20]
 800216e:	fa02 f303 	lsl.w	r3, r2, r3
 8002172:	43db      	mvns	r3, r3
 8002174:	693a      	ldr	r2, [r7, #16]
 8002176:	4013      	ands	r3, r2
 8002178:	613b      	str	r3, [r7, #16]
 800217a:	683b      	ldr	r3, [r7, #0]
 800217c:	685b      	ldr	r3, [r3, #4]
 800217e:	091b      	lsrs	r3, r3, #4
 8002180:	f003 0201 	and.w	r2, r3, #1
 8002184:	697b      	ldr	r3, [r7, #20]
 8002186:	fa02 f303 	lsl.w	r3, r2, r3
 800218a:	693a      	ldr	r2, [r7, #16]
 800218c:	4313      	orrs	r3, r2
 800218e:	613b      	str	r3, [r7, #16]
 8002190:	687b      	ldr	r3, [r7, #4]
 8002192:	693a      	ldr	r2, [r7, #16]
 8002194:	605a      	str	r2, [r3, #4]
 8002196:	687b      	ldr	r3, [r7, #4]
 8002198:	68db      	ldr	r3, [r3, #12]
 800219a:	613b      	str	r3, [r7, #16]
 800219c:	697b      	ldr	r3, [r7, #20]
 800219e:	005b      	lsls	r3, r3, #1
 80021a0:	2203      	movs	r2, #3
 80021a2:	fa02 f303 	lsl.w	r3, r2, r3
 80021a6:	43db      	mvns	r3, r3
 80021a8:	693a      	ldr	r2, [r7, #16]
 80021aa:	4013      	ands	r3, r2
 80021ac:	613b      	str	r3, [r7, #16]
 80021ae:	683b      	ldr	r3, [r7, #0]
 80021b0:	689a      	ldr	r2, [r3, #8]
 80021b2:	697b      	ldr	r3, [r7, #20]
 80021b4:	005b      	lsls	r3, r3, #1
 80021b6:	fa02 f303 	lsl.w	r3, r2, r3
 80021ba:	693a      	ldr	r2, [r7, #16]
 80021bc:	4313      	orrs	r3, r2
 80021be:	613b      	str	r3, [r7, #16]
 80021c0:	687b      	ldr	r3, [r7, #4]
 80021c2:	693a      	ldr	r2, [r7, #16]
 80021c4:	60da      	str	r2, [r3, #12]
 80021c6:	683b      	ldr	r3, [r7, #0]
 80021c8:	685b      	ldr	r3, [r3, #4]
 80021ca:	2b02      	cmp	r3, #2
 80021cc:	d003      	beq.n	80021d6 <HAL_GPIO_Init+0xea>
 80021ce:	683b      	ldr	r3, [r7, #0]
 80021d0:	685b      	ldr	r3, [r3, #4]
 80021d2:	2b12      	cmp	r3, #18
 80021d4:	d123      	bne.n	800221e <HAL_GPIO_Init+0x132>
 80021d6:	697b      	ldr	r3, [r7, #20]
 80021d8:	08da      	lsrs	r2, r3, #3
 80021da:	687b      	ldr	r3, [r7, #4]
 80021dc:	3208      	adds	r2, #8
 80021de:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80021e2:	613b      	str	r3, [r7, #16]
 80021e4:	697b      	ldr	r3, [r7, #20]
 80021e6:	f003 0307 	and.w	r3, r3, #7
 80021ea:	009b      	lsls	r3, r3, #2
 80021ec:	220f      	movs	r2, #15
 80021ee:	fa02 f303 	lsl.w	r3, r2, r3
 80021f2:	43db      	mvns	r3, r3
 80021f4:	693a      	ldr	r2, [r7, #16]
 80021f6:	4013      	ands	r3, r2
 80021f8:	613b      	str	r3, [r7, #16]
 80021fa:	683b      	ldr	r3, [r7, #0]
 80021fc:	691a      	ldr	r2, [r3, #16]
 80021fe:	697b      	ldr	r3, [r7, #20]
 8002200:	f003 0307 	and.w	r3, r3, #7
 8002204:	009b      	lsls	r3, r3, #2
 8002206:	fa02 f303 	lsl.w	r3, r2, r3
 800220a:	693a      	ldr	r2, [r7, #16]
 800220c:	4313      	orrs	r3, r2
 800220e:	613b      	str	r3, [r7, #16]
 8002210:	697b      	ldr	r3, [r7, #20]
 8002212:	08da      	lsrs	r2, r3, #3
 8002214:	687b      	ldr	r3, [r7, #4]
 8002216:	3208      	adds	r2, #8
 8002218:	6939      	ldr	r1, [r7, #16]
 800221a:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 800221e:	687b      	ldr	r3, [r7, #4]
 8002220:	681b      	ldr	r3, [r3, #0]
 8002222:	613b      	str	r3, [r7, #16]
 8002224:	697b      	ldr	r3, [r7, #20]
 8002226:	005b      	lsls	r3, r3, #1
 8002228:	2203      	movs	r2, #3
 800222a:	fa02 f303 	lsl.w	r3, r2, r3
 800222e:	43db      	mvns	r3, r3
 8002230:	693a      	ldr	r2, [r7, #16]
 8002232:	4013      	ands	r3, r2
 8002234:	613b      	str	r3, [r7, #16]
 8002236:	683b      	ldr	r3, [r7, #0]
 8002238:	685b      	ldr	r3, [r3, #4]
 800223a:	f003 0203 	and.w	r2, r3, #3
 800223e:	697b      	ldr	r3, [r7, #20]
 8002240:	005b      	lsls	r3, r3, #1
 8002242:	fa02 f303 	lsl.w	r3, r2, r3
 8002246:	693a      	ldr	r2, [r7, #16]
 8002248:	4313      	orrs	r3, r2
 800224a:	613b      	str	r3, [r7, #16]
 800224c:	687b      	ldr	r3, [r7, #4]
 800224e:	693a      	ldr	r2, [r7, #16]
 8002250:	601a      	str	r2, [r3, #0]
 8002252:	683b      	ldr	r3, [r7, #0]
 8002254:	685b      	ldr	r3, [r3, #4]
 8002256:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800225a:	2b00      	cmp	r3, #0
 800225c:	f000 80a6 	beq.w	80023ac <HAL_GPIO_Init+0x2c0>
 8002260:	4b5b      	ldr	r3, [pc, #364]	; (80023d0 <HAL_GPIO_Init+0x2e4>)
 8002262:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8002264:	4a5a      	ldr	r2, [pc, #360]	; (80023d0 <HAL_GPIO_Init+0x2e4>)
 8002266:	f043 0301 	orr.w	r3, r3, #1
 800226a:	6613      	str	r3, [r2, #96]	; 0x60
 800226c:	4b58      	ldr	r3, [pc, #352]	; (80023d0 <HAL_GPIO_Init+0x2e4>)
 800226e:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8002270:	f003 0301 	and.w	r3, r3, #1
 8002274:	60bb      	str	r3, [r7, #8]
 8002276:	68bb      	ldr	r3, [r7, #8]
 8002278:	4a56      	ldr	r2, [pc, #344]	; (80023d4 <HAL_GPIO_Init+0x2e8>)
 800227a:	697b      	ldr	r3, [r7, #20]
 800227c:	089b      	lsrs	r3, r3, #2
 800227e:	3302      	adds	r3, #2
 8002280:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8002284:	613b      	str	r3, [r7, #16]
 8002286:	697b      	ldr	r3, [r7, #20]
 8002288:	f003 0303 	and.w	r3, r3, #3
 800228c:	009b      	lsls	r3, r3, #2
 800228e:	220f      	movs	r2, #15
 8002290:	fa02 f303 	lsl.w	r3, r2, r3
 8002294:	43db      	mvns	r3, r3
 8002296:	693a      	ldr	r2, [r7, #16]
 8002298:	4013      	ands	r3, r2
 800229a:	613b      	str	r3, [r7, #16]
 800229c:	687b      	ldr	r3, [r7, #4]
 800229e:	f1b3 4f90 	cmp.w	r3, #1207959552	; 0x48000000
 80022a2:	d01f      	beq.n	80022e4 <HAL_GPIO_Init+0x1f8>
 80022a4:	687b      	ldr	r3, [r7, #4]
 80022a6:	4a4c      	ldr	r2, [pc, #304]	; (80023d8 <HAL_GPIO_Init+0x2ec>)
 80022a8:	4293      	cmp	r3, r2
 80022aa:	d019      	beq.n	80022e0 <HAL_GPIO_Init+0x1f4>
 80022ac:	687b      	ldr	r3, [r7, #4]
 80022ae:	4a4b      	ldr	r2, [pc, #300]	; (80023dc <HAL_GPIO_Init+0x2f0>)
 80022b0:	4293      	cmp	r3, r2
 80022b2:	d013      	beq.n	80022dc <HAL_GPIO_Init+0x1f0>
 80022b4:	687b      	ldr	r3, [r7, #4]
 80022b6:	4a4a      	ldr	r2, [pc, #296]	; (80023e0 <HAL_GPIO_Init+0x2f4>)
 80022b8:	4293      	cmp	r3, r2
 80022ba:	d00d      	beq.n	80022d8 <HAL_GPIO_Init+0x1ec>
 80022bc:	687b      	ldr	r3, [r7, #4]
 80022be:	4a49      	ldr	r2, [pc, #292]	; (80023e4 <HAL_GPIO_Init+0x2f8>)
 80022c0:	4293      	cmp	r3, r2
 80022c2:	d007      	beq.n	80022d4 <HAL_GPIO_Init+0x1e8>
 80022c4:	687b      	ldr	r3, [r7, #4]
 80022c6:	4a48      	ldr	r2, [pc, #288]	; (80023e8 <HAL_GPIO_Init+0x2fc>)
 80022c8:	4293      	cmp	r3, r2
 80022ca:	d101      	bne.n	80022d0 <HAL_GPIO_Init+0x1e4>
 80022cc:	2305      	movs	r3, #5
 80022ce:	e00a      	b.n	80022e6 <HAL_GPIO_Init+0x1fa>
 80022d0:	2306      	movs	r3, #6
 80022d2:	e008      	b.n	80022e6 <HAL_GPIO_Init+0x1fa>
 80022d4:	2304      	movs	r3, #4
 80022d6:	e006      	b.n	80022e6 <HAL_GPIO_Init+0x1fa>
 80022d8:	2303      	movs	r3, #3
 80022da:	e004      	b.n	80022e6 <HAL_GPIO_Init+0x1fa>
 80022dc:	2302      	movs	r3, #2
 80022de:	e002      	b.n	80022e6 <HAL_GPIO_Init+0x1fa>
 80022e0:	2301      	movs	r3, #1
 80022e2:	e000      	b.n	80022e6 <HAL_GPIO_Init+0x1fa>
 80022e4:	2300      	movs	r3, #0
 80022e6:	697a      	ldr	r2, [r7, #20]
 80022e8:	f002 0203 	and.w	r2, r2, #3
 80022ec:	0092      	lsls	r2, r2, #2
 80022ee:	4093      	lsls	r3, r2
 80022f0:	693a      	ldr	r2, [r7, #16]
 80022f2:	4313      	orrs	r3, r2
 80022f4:	613b      	str	r3, [r7, #16]
 80022f6:	4937      	ldr	r1, [pc, #220]	; (80023d4 <HAL_GPIO_Init+0x2e8>)
 80022f8:	697b      	ldr	r3, [r7, #20]
 80022fa:	089b      	lsrs	r3, r3, #2
 80022fc:	3302      	adds	r3, #2
 80022fe:	693a      	ldr	r2, [r7, #16]
 8002300:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8002304:	4b39      	ldr	r3, [pc, #228]	; (80023ec <HAL_GPIO_Init+0x300>)
 8002306:	681b      	ldr	r3, [r3, #0]
 8002308:	613b      	str	r3, [r7, #16]
 800230a:	68fb      	ldr	r3, [r7, #12]
 800230c:	43db      	mvns	r3, r3
 800230e:	693a      	ldr	r2, [r7, #16]
 8002310:	4013      	ands	r3, r2
 8002312:	613b      	str	r3, [r7, #16]
 8002314:	683b      	ldr	r3, [r7, #0]
 8002316:	685b      	ldr	r3, [r3, #4]
 8002318:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 800231c:	2b00      	cmp	r3, #0
 800231e:	d003      	beq.n	8002328 <HAL_GPIO_Init+0x23c>
 8002320:	693a      	ldr	r2, [r7, #16]
 8002322:	68fb      	ldr	r3, [r7, #12]
 8002324:	4313      	orrs	r3, r2
 8002326:	613b      	str	r3, [r7, #16]
 8002328:	4a30      	ldr	r2, [pc, #192]	; (80023ec <HAL_GPIO_Init+0x300>)
 800232a:	693b      	ldr	r3, [r7, #16]
 800232c:	6013      	str	r3, [r2, #0]
 800232e:	4b2f      	ldr	r3, [pc, #188]	; (80023ec <HAL_GPIO_Init+0x300>)
 8002330:	685b      	ldr	r3, [r3, #4]
 8002332:	613b      	str	r3, [r7, #16]
 8002334:	68fb      	ldr	r3, [r7, #12]
 8002336:	43db      	mvns	r3, r3
 8002338:	693a      	ldr	r2, [r7, #16]
 800233a:	4013      	ands	r3, r2
 800233c:	613b      	str	r3, [r7, #16]
 800233e:	683b      	ldr	r3, [r7, #0]
 8002340:	685b      	ldr	r3, [r3, #4]
 8002342:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8002346:	2b00      	cmp	r3, #0
 8002348:	d003      	beq.n	8002352 <HAL_GPIO_Init+0x266>
 800234a:	693a      	ldr	r2, [r7, #16]
 800234c:	68fb      	ldr	r3, [r7, #12]
 800234e:	4313      	orrs	r3, r2
 8002350:	613b      	str	r3, [r7, #16]
 8002352:	4a26      	ldr	r2, [pc, #152]	; (80023ec <HAL_GPIO_Init+0x300>)
 8002354:	693b      	ldr	r3, [r7, #16]
 8002356:	6053      	str	r3, [r2, #4]
 8002358:	4b24      	ldr	r3, [pc, #144]	; (80023ec <HAL_GPIO_Init+0x300>)
 800235a:	689b      	ldr	r3, [r3, #8]
 800235c:	613b      	str	r3, [r7, #16]
 800235e:	68fb      	ldr	r3, [r7, #12]
 8002360:	43db      	mvns	r3, r3
 8002362:	693a      	ldr	r2, [r7, #16]
 8002364:	4013      	ands	r3, r2
 8002366:	613b      	str	r3, [r7, #16]
 8002368:	683b      	ldr	r3, [r7, #0]
 800236a:	685b      	ldr	r3, [r3, #4]
 800236c:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8002370:	2b00      	cmp	r3, #0
 8002372:	d003      	beq.n	800237c <HAL_GPIO_Init+0x290>
 8002374:	693a      	ldr	r2, [r7, #16]
 8002376:	68fb      	ldr	r3, [r7, #12]
 8002378:	4313      	orrs	r3, r2
 800237a:	613b      	str	r3, [r7, #16]
 800237c:	4a1b      	ldr	r2, [pc, #108]	; (80023ec <HAL_GPIO_Init+0x300>)
 800237e:	693b      	ldr	r3, [r7, #16]
 8002380:	6093      	str	r3, [r2, #8]
 8002382:	4b1a      	ldr	r3, [pc, #104]	; (80023ec <HAL_GPIO_Init+0x300>)
 8002384:	68db      	ldr	r3, [r3, #12]
 8002386:	613b      	str	r3, [r7, #16]
 8002388:	68fb      	ldr	r3, [r7, #12]
 800238a:	43db      	mvns	r3, r3
 800238c:	693a      	ldr	r2, [r7, #16]
 800238e:	4013      	ands	r3, r2
 8002390:	613b      	str	r3, [r7, #16]
 8002392:	683b      	ldr	r3, [r7, #0]
 8002394:	685b      	ldr	r3, [r3, #4]
 8002396:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 800239a:	2b00      	cmp	r3, #0
 800239c:	d003      	beq.n	80023a6 <HAL_GPIO_Init+0x2ba>
 800239e:	693a      	ldr	r2, [r7, #16]
 80023a0:	68fb      	ldr	r3, [r7, #12]
 80023a2:	4313      	orrs	r3, r2
 80023a4:	613b      	str	r3, [r7, #16]
 80023a6:	4a11      	ldr	r2, [pc, #68]	; (80023ec <HAL_GPIO_Init+0x300>)
 80023a8:	693b      	ldr	r3, [r7, #16]
 80023aa:	60d3      	str	r3, [r2, #12]
 80023ac:	697b      	ldr	r3, [r7, #20]
 80023ae:	3301      	adds	r3, #1
 80023b0:	617b      	str	r3, [r7, #20]
 80023b2:	683b      	ldr	r3, [r7, #0]
 80023b4:	681a      	ldr	r2, [r3, #0]
 80023b6:	697b      	ldr	r3, [r7, #20]
 80023b8:	fa22 f303 	lsr.w	r3, r2, r3
 80023bc:	2b00      	cmp	r3, #0
 80023be:	f47f ae9d 	bne.w	80020fc <HAL_GPIO_Init+0x10>
 80023c2:	bf00      	nop
 80023c4:	371c      	adds	r7, #28
 80023c6:	46bd      	mov	sp, r7
 80023c8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80023cc:	4770      	bx	lr
 80023ce:	bf00      	nop
 80023d0:	40021000 	.word	0x40021000
 80023d4:	40010000 	.word	0x40010000
 80023d8:	48000400 	.word	0x48000400
 80023dc:	48000800 	.word	0x48000800
 80023e0:	48000c00 	.word	0x48000c00
 80023e4:	48001000 	.word	0x48001000
 80023e8:	48001400 	.word	0x48001400
 80023ec:	40010400 	.word	0x40010400

080023f0 <HAL_GPIO_ReadPin>:
 80023f0:	b480      	push	{r7}
 80023f2:	b085      	sub	sp, #20
 80023f4:	af00      	add	r7, sp, #0
 80023f6:	6078      	str	r0, [r7, #4]
 80023f8:	460b      	mov	r3, r1
 80023fa:	807b      	strh	r3, [r7, #2]
 80023fc:	687b      	ldr	r3, [r7, #4]
 80023fe:	691a      	ldr	r2, [r3, #16]
 8002400:	887b      	ldrh	r3, [r7, #2]
 8002402:	4013      	ands	r3, r2
 8002404:	2b00      	cmp	r3, #0
 8002406:	d002      	beq.n	800240e <HAL_GPIO_ReadPin+0x1e>
 8002408:	2301      	movs	r3, #1
 800240a:	73fb      	strb	r3, [r7, #15]
 800240c:	e001      	b.n	8002412 <HAL_GPIO_ReadPin+0x22>
 800240e:	2300      	movs	r3, #0
 8002410:	73fb      	strb	r3, [r7, #15]
 8002412:	7bfb      	ldrb	r3, [r7, #15]
 8002414:	4618      	mov	r0, r3
 8002416:	3714      	adds	r7, #20
 8002418:	46bd      	mov	sp, r7
 800241a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800241e:	4770      	bx	lr

08002420 <HAL_GPIO_WritePin>:
 8002420:	b480      	push	{r7}
 8002422:	b083      	sub	sp, #12
 8002424:	af00      	add	r7, sp, #0
 8002426:	6078      	str	r0, [r7, #4]
 8002428:	460b      	mov	r3, r1
 800242a:	807b      	strh	r3, [r7, #2]
 800242c:	4613      	mov	r3, r2
 800242e:	707b      	strb	r3, [r7, #1]
 8002430:	787b      	ldrb	r3, [r7, #1]
 8002432:	2b00      	cmp	r3, #0
 8002434:	d003      	beq.n	800243e <HAL_GPIO_WritePin+0x1e>
 8002436:	887a      	ldrh	r2, [r7, #2]
 8002438:	687b      	ldr	r3, [r7, #4]
 800243a:	619a      	str	r2, [r3, #24]
 800243c:	e002      	b.n	8002444 <HAL_GPIO_WritePin+0x24>
 800243e:	887a      	ldrh	r2, [r7, #2]
 8002440:	687b      	ldr	r3, [r7, #4]
 8002442:	629a      	str	r2, [r3, #40]	; 0x28
 8002444:	bf00      	nop
 8002446:	370c      	adds	r7, #12
 8002448:	46bd      	mov	sp, r7
 800244a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800244e:	4770      	bx	lr

08002450 <HAL_GPIO_EXTI_IRQHandler>:
 8002450:	b580      	push	{r7, lr}
 8002452:	b082      	sub	sp, #8
 8002454:	af00      	add	r7, sp, #0
 8002456:	4603      	mov	r3, r0
 8002458:	80fb      	strh	r3, [r7, #6]
 800245a:	4b08      	ldr	r3, [pc, #32]	; (800247c <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 800245c:	695a      	ldr	r2, [r3, #20]
 800245e:	88fb      	ldrh	r3, [r7, #6]
 8002460:	4013      	ands	r3, r2
 8002462:	2b00      	cmp	r3, #0
 8002464:	d006      	beq.n	8002474 <HAL_GPIO_EXTI_IRQHandler+0x24>
 8002466:	4a05      	ldr	r2, [pc, #20]	; (800247c <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 8002468:	88fb      	ldrh	r3, [r7, #6]
 800246a:	6153      	str	r3, [r2, #20]
 800246c:	88fb      	ldrh	r3, [r7, #6]
 800246e:	4618      	mov	r0, r3
 8002470:	f000 f806 	bl	8002480 <HAL_GPIO_EXTI_Callback>
 8002474:	bf00      	nop
 8002476:	3708      	adds	r7, #8
 8002478:	46bd      	mov	sp, r7
 800247a:	bd80      	pop	{r7, pc}
 800247c:	40010400 	.word	0x40010400

08002480 <HAL_GPIO_EXTI_Callback>:
 8002480:	b480      	push	{r7}
 8002482:	b083      	sub	sp, #12
 8002484:	af00      	add	r7, sp, #0
 8002486:	4603      	mov	r3, r0
 8002488:	80fb      	strh	r3, [r7, #6]
 800248a:	bf00      	nop
 800248c:	370c      	adds	r7, #12
 800248e:	46bd      	mov	sp, r7
 8002490:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002494:	4770      	bx	lr
	...

08002498 <HAL_PWR_EnableBkUpAccess>:
 8002498:	b480      	push	{r7}
 800249a:	af00      	add	r7, sp, #0
 800249c:	4b05      	ldr	r3, [pc, #20]	; (80024b4 <HAL_PWR_EnableBkUpAccess+0x1c>)
 800249e:	681b      	ldr	r3, [r3, #0]
 80024a0:	4a04      	ldr	r2, [pc, #16]	; (80024b4 <HAL_PWR_EnableBkUpAccess+0x1c>)
 80024a2:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80024a6:	6013      	str	r3, [r2, #0]
 80024a8:	bf00      	nop
 80024aa:	46bd      	mov	sp, r7
 80024ac:	f85d 7b04 	ldr.w	r7, [sp], #4
 80024b0:	4770      	bx	lr
 80024b2:	bf00      	nop
 80024b4:	40007000 	.word	0x40007000

080024b8 <HAL_PWREx_ControlVoltageScaling>:
 80024b8:	b480      	push	{r7}
 80024ba:	b085      	sub	sp, #20
 80024bc:	af00      	add	r7, sp, #0
 80024be:	6078      	str	r0, [r7, #4]
 80024c0:	687b      	ldr	r3, [r7, #4]
 80024c2:	2b00      	cmp	r3, #0
 80024c4:	d141      	bne.n	800254a <HAL_PWREx_ControlVoltageScaling+0x92>
 80024c6:	4b4b      	ldr	r3, [pc, #300]	; (80025f4 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 80024c8:	681b      	ldr	r3, [r3, #0]
 80024ca:	f403 63c0 	and.w	r3, r3, #1536	; 0x600
 80024ce:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80024d2:	d131      	bne.n	8002538 <HAL_PWREx_ControlVoltageScaling+0x80>
 80024d4:	4b47      	ldr	r3, [pc, #284]	; (80025f4 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 80024d6:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 80024da:	4a46      	ldr	r2, [pc, #280]	; (80025f4 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 80024dc:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 80024e0:	f8c2 3080 	str.w	r3, [r2, #128]	; 0x80
 80024e4:	4b43      	ldr	r3, [pc, #268]	; (80025f4 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 80024e6:	681b      	ldr	r3, [r3, #0]
 80024e8:	f423 63c0 	bic.w	r3, r3, #1536	; 0x600
 80024ec:	4a41      	ldr	r2, [pc, #260]	; (80025f4 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 80024ee:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 80024f2:	6013      	str	r3, [r2, #0]
 80024f4:	4b40      	ldr	r3, [pc, #256]	; (80025f8 <HAL_PWREx_ControlVoltageScaling+0x140>)
 80024f6:	681b      	ldr	r3, [r3, #0]
 80024f8:	2232      	movs	r2, #50	; 0x32
 80024fa:	fb02 f303 	mul.w	r3, r2, r3
 80024fe:	4a3f      	ldr	r2, [pc, #252]	; (80025fc <HAL_PWREx_ControlVoltageScaling+0x144>)
 8002500:	fba2 2303 	umull	r2, r3, r2, r3
 8002504:	0c9b      	lsrs	r3, r3, #18
 8002506:	3301      	adds	r3, #1
 8002508:	60fb      	str	r3, [r7, #12]
 800250a:	e002      	b.n	8002512 <HAL_PWREx_ControlVoltageScaling+0x5a>
 800250c:	68fb      	ldr	r3, [r7, #12]
 800250e:	3b01      	subs	r3, #1
 8002510:	60fb      	str	r3, [r7, #12]
 8002512:	4b38      	ldr	r3, [pc, #224]	; (80025f4 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8002514:	695b      	ldr	r3, [r3, #20]
 8002516:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 800251a:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800251e:	d102      	bne.n	8002526 <HAL_PWREx_ControlVoltageScaling+0x6e>
 8002520:	68fb      	ldr	r3, [r7, #12]
 8002522:	2b00      	cmp	r3, #0
 8002524:	d1f2      	bne.n	800250c <HAL_PWREx_ControlVoltageScaling+0x54>
 8002526:	4b33      	ldr	r3, [pc, #204]	; (80025f4 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8002528:	695b      	ldr	r3, [r3, #20]
 800252a:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 800252e:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8002532:	d158      	bne.n	80025e6 <HAL_PWREx_ControlVoltageScaling+0x12e>
 8002534:	2303      	movs	r3, #3
 8002536:	e057      	b.n	80025e8 <HAL_PWREx_ControlVoltageScaling+0x130>
 8002538:	4b2e      	ldr	r3, [pc, #184]	; (80025f4 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 800253a:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800253e:	4a2d      	ldr	r2, [pc, #180]	; (80025f4 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8002540:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8002544:	f8c2 3080 	str.w	r3, [r2, #128]	; 0x80
 8002548:	e04d      	b.n	80025e6 <HAL_PWREx_ControlVoltageScaling+0x12e>
 800254a:	687b      	ldr	r3, [r7, #4]
 800254c:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8002550:	d141      	bne.n	80025d6 <HAL_PWREx_ControlVoltageScaling+0x11e>
 8002552:	4b28      	ldr	r3, [pc, #160]	; (80025f4 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8002554:	681b      	ldr	r3, [r3, #0]
 8002556:	f403 63c0 	and.w	r3, r3, #1536	; 0x600
 800255a:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800255e:	d131      	bne.n	80025c4 <HAL_PWREx_ControlVoltageScaling+0x10c>
 8002560:	4b24      	ldr	r3, [pc, #144]	; (80025f4 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8002562:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8002566:	4a23      	ldr	r2, [pc, #140]	; (80025f4 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8002568:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800256c:	f8c2 3080 	str.w	r3, [r2, #128]	; 0x80
 8002570:	4b20      	ldr	r3, [pc, #128]	; (80025f4 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8002572:	681b      	ldr	r3, [r3, #0]
 8002574:	f423 63c0 	bic.w	r3, r3, #1536	; 0x600
 8002578:	4a1e      	ldr	r2, [pc, #120]	; (80025f4 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 800257a:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800257e:	6013      	str	r3, [r2, #0]
 8002580:	4b1d      	ldr	r3, [pc, #116]	; (80025f8 <HAL_PWREx_ControlVoltageScaling+0x140>)
 8002582:	681b      	ldr	r3, [r3, #0]
 8002584:	2232      	movs	r2, #50	; 0x32
 8002586:	fb02 f303 	mul.w	r3, r2, r3
 800258a:	4a1c      	ldr	r2, [pc, #112]	; (80025fc <HAL_PWREx_ControlVoltageScaling+0x144>)
 800258c:	fba2 2303 	umull	r2, r3, r2, r3
 8002590:	0c9b      	lsrs	r3, r3, #18
 8002592:	3301      	adds	r3, #1
 8002594:	60fb      	str	r3, [r7, #12]
 8002596:	e002      	b.n	800259e <HAL_PWREx_ControlVoltageScaling+0xe6>
 8002598:	68fb      	ldr	r3, [r7, #12]
 800259a:	3b01      	subs	r3, #1
 800259c:	60fb      	str	r3, [r7, #12]
 800259e:	4b15      	ldr	r3, [pc, #84]	; (80025f4 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 80025a0:	695b      	ldr	r3, [r3, #20]
 80025a2:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 80025a6:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80025aa:	d102      	bne.n	80025b2 <HAL_PWREx_ControlVoltageScaling+0xfa>
 80025ac:	68fb      	ldr	r3, [r7, #12]
 80025ae:	2b00      	cmp	r3, #0
 80025b0:	d1f2      	bne.n	8002598 <HAL_PWREx_ControlVoltageScaling+0xe0>
 80025b2:	4b10      	ldr	r3, [pc, #64]	; (80025f4 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 80025b4:	695b      	ldr	r3, [r3, #20]
 80025b6:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 80025ba:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80025be:	d112      	bne.n	80025e6 <HAL_PWREx_ControlVoltageScaling+0x12e>
 80025c0:	2303      	movs	r3, #3
 80025c2:	e011      	b.n	80025e8 <HAL_PWREx_ControlVoltageScaling+0x130>
 80025c4:	4b0b      	ldr	r3, [pc, #44]	; (80025f4 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 80025c6:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 80025ca:	4a0a      	ldr	r2, [pc, #40]	; (80025f4 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 80025cc:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80025d0:	f8c2 3080 	str.w	r3, [r2, #128]	; 0x80
 80025d4:	e007      	b.n	80025e6 <HAL_PWREx_ControlVoltageScaling+0x12e>
 80025d6:	4b07      	ldr	r3, [pc, #28]	; (80025f4 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 80025d8:	681b      	ldr	r3, [r3, #0]
 80025da:	f423 63c0 	bic.w	r3, r3, #1536	; 0x600
 80025de:	4a05      	ldr	r2, [pc, #20]	; (80025f4 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 80025e0:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 80025e4:	6013      	str	r3, [r2, #0]
 80025e6:	2300      	movs	r3, #0
 80025e8:	4618      	mov	r0, r3
 80025ea:	3714      	adds	r7, #20
 80025ec:	46bd      	mov	sp, r7
 80025ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 80025f2:	4770      	bx	lr
 80025f4:	40007000 	.word	0x40007000
 80025f8:	20000000 	.word	0x20000000
 80025fc:	431bde83 	.word	0x431bde83

08002600 <HAL_RCC_OscConfig>:
 8002600:	b580      	push	{r7, lr}
 8002602:	b088      	sub	sp, #32
 8002604:	af00      	add	r7, sp, #0
 8002606:	6078      	str	r0, [r7, #4]
 8002608:	687b      	ldr	r3, [r7, #4]
 800260a:	2b00      	cmp	r3, #0
 800260c:	d101      	bne.n	8002612 <HAL_RCC_OscConfig+0x12>
 800260e:	2301      	movs	r3, #1
 8002610:	e308      	b.n	8002c24 <HAL_RCC_OscConfig+0x624>
 8002612:	687b      	ldr	r3, [r7, #4]
 8002614:	681b      	ldr	r3, [r3, #0]
 8002616:	f003 0301 	and.w	r3, r3, #1
 800261a:	2b00      	cmp	r3, #0
 800261c:	d075      	beq.n	800270a <HAL_RCC_OscConfig+0x10a>
 800261e:	4ba3      	ldr	r3, [pc, #652]	; (80028ac <HAL_RCC_OscConfig+0x2ac>)
 8002620:	689b      	ldr	r3, [r3, #8]
 8002622:	f003 030c 	and.w	r3, r3, #12
 8002626:	61bb      	str	r3, [r7, #24]
 8002628:	4ba0      	ldr	r3, [pc, #640]	; (80028ac <HAL_RCC_OscConfig+0x2ac>)
 800262a:	68db      	ldr	r3, [r3, #12]
 800262c:	f003 0303 	and.w	r3, r3, #3
 8002630:	617b      	str	r3, [r7, #20]
 8002632:	69bb      	ldr	r3, [r7, #24]
 8002634:	2b0c      	cmp	r3, #12
 8002636:	d102      	bne.n	800263e <HAL_RCC_OscConfig+0x3e>
 8002638:	697b      	ldr	r3, [r7, #20]
 800263a:	2b03      	cmp	r3, #3
 800263c:	d002      	beq.n	8002644 <HAL_RCC_OscConfig+0x44>
 800263e:	69bb      	ldr	r3, [r7, #24]
 8002640:	2b08      	cmp	r3, #8
 8002642:	d10b      	bne.n	800265c <HAL_RCC_OscConfig+0x5c>
 8002644:	4b99      	ldr	r3, [pc, #612]	; (80028ac <HAL_RCC_OscConfig+0x2ac>)
 8002646:	681b      	ldr	r3, [r3, #0]
 8002648:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800264c:	2b00      	cmp	r3, #0
 800264e:	d05b      	beq.n	8002708 <HAL_RCC_OscConfig+0x108>
 8002650:	687b      	ldr	r3, [r7, #4]
 8002652:	685b      	ldr	r3, [r3, #4]
 8002654:	2b00      	cmp	r3, #0
 8002656:	d157      	bne.n	8002708 <HAL_RCC_OscConfig+0x108>
 8002658:	2301      	movs	r3, #1
 800265a:	e2e3      	b.n	8002c24 <HAL_RCC_OscConfig+0x624>
 800265c:	687b      	ldr	r3, [r7, #4]
 800265e:	685b      	ldr	r3, [r3, #4]
 8002660:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8002664:	d106      	bne.n	8002674 <HAL_RCC_OscConfig+0x74>
 8002666:	4b91      	ldr	r3, [pc, #580]	; (80028ac <HAL_RCC_OscConfig+0x2ac>)
 8002668:	681b      	ldr	r3, [r3, #0]
 800266a:	4a90      	ldr	r2, [pc, #576]	; (80028ac <HAL_RCC_OscConfig+0x2ac>)
 800266c:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8002670:	6013      	str	r3, [r2, #0]
 8002672:	e01d      	b.n	80026b0 <HAL_RCC_OscConfig+0xb0>
 8002674:	687b      	ldr	r3, [r7, #4]
 8002676:	685b      	ldr	r3, [r3, #4]
 8002678:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 800267c:	d10c      	bne.n	8002698 <HAL_RCC_OscConfig+0x98>
 800267e:	4b8b      	ldr	r3, [pc, #556]	; (80028ac <HAL_RCC_OscConfig+0x2ac>)
 8002680:	681b      	ldr	r3, [r3, #0]
 8002682:	4a8a      	ldr	r2, [pc, #552]	; (80028ac <HAL_RCC_OscConfig+0x2ac>)
 8002684:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8002688:	6013      	str	r3, [r2, #0]
 800268a:	4b88      	ldr	r3, [pc, #544]	; (80028ac <HAL_RCC_OscConfig+0x2ac>)
 800268c:	681b      	ldr	r3, [r3, #0]
 800268e:	4a87      	ldr	r2, [pc, #540]	; (80028ac <HAL_RCC_OscConfig+0x2ac>)
 8002690:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8002694:	6013      	str	r3, [r2, #0]
 8002696:	e00b      	b.n	80026b0 <HAL_RCC_OscConfig+0xb0>
 8002698:	4b84      	ldr	r3, [pc, #528]	; (80028ac <HAL_RCC_OscConfig+0x2ac>)
 800269a:	681b      	ldr	r3, [r3, #0]
 800269c:	4a83      	ldr	r2, [pc, #524]	; (80028ac <HAL_RCC_OscConfig+0x2ac>)
 800269e:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 80026a2:	6013      	str	r3, [r2, #0]
 80026a4:	4b81      	ldr	r3, [pc, #516]	; (80028ac <HAL_RCC_OscConfig+0x2ac>)
 80026a6:	681b      	ldr	r3, [r3, #0]
 80026a8:	4a80      	ldr	r2, [pc, #512]	; (80028ac <HAL_RCC_OscConfig+0x2ac>)
 80026aa:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 80026ae:	6013      	str	r3, [r2, #0]
 80026b0:	687b      	ldr	r3, [r7, #4]
 80026b2:	685b      	ldr	r3, [r3, #4]
 80026b4:	2b00      	cmp	r3, #0
 80026b6:	d013      	beq.n	80026e0 <HAL_RCC_OscConfig+0xe0>
 80026b8:	f7fe fdaa 	bl	8001210 <HAL_GetTick>
 80026bc:	6138      	str	r0, [r7, #16]
 80026be:	e008      	b.n	80026d2 <HAL_RCC_OscConfig+0xd2>
 80026c0:	f7fe fda6 	bl	8001210 <HAL_GetTick>
 80026c4:	4602      	mov	r2, r0
 80026c6:	693b      	ldr	r3, [r7, #16]
 80026c8:	1ad3      	subs	r3, r2, r3
 80026ca:	2b64      	cmp	r3, #100	; 0x64
 80026cc:	d901      	bls.n	80026d2 <HAL_RCC_OscConfig+0xd2>
 80026ce:	2303      	movs	r3, #3
 80026d0:	e2a8      	b.n	8002c24 <HAL_RCC_OscConfig+0x624>
 80026d2:	4b76      	ldr	r3, [pc, #472]	; (80028ac <HAL_RCC_OscConfig+0x2ac>)
 80026d4:	681b      	ldr	r3, [r3, #0]
 80026d6:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80026da:	2b00      	cmp	r3, #0
 80026dc:	d0f0      	beq.n	80026c0 <HAL_RCC_OscConfig+0xc0>
 80026de:	e014      	b.n	800270a <HAL_RCC_OscConfig+0x10a>
 80026e0:	f7fe fd96 	bl	8001210 <HAL_GetTick>
 80026e4:	6138      	str	r0, [r7, #16]
 80026e6:	e008      	b.n	80026fa <HAL_RCC_OscConfig+0xfa>
 80026e8:	f7fe fd92 	bl	8001210 <HAL_GetTick>
 80026ec:	4602      	mov	r2, r0
 80026ee:	693b      	ldr	r3, [r7, #16]
 80026f0:	1ad3      	subs	r3, r2, r3
 80026f2:	2b64      	cmp	r3, #100	; 0x64
 80026f4:	d901      	bls.n	80026fa <HAL_RCC_OscConfig+0xfa>
 80026f6:	2303      	movs	r3, #3
 80026f8:	e294      	b.n	8002c24 <HAL_RCC_OscConfig+0x624>
 80026fa:	4b6c      	ldr	r3, [pc, #432]	; (80028ac <HAL_RCC_OscConfig+0x2ac>)
 80026fc:	681b      	ldr	r3, [r3, #0]
 80026fe:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8002702:	2b00      	cmp	r3, #0
 8002704:	d1f0      	bne.n	80026e8 <HAL_RCC_OscConfig+0xe8>
 8002706:	e000      	b.n	800270a <HAL_RCC_OscConfig+0x10a>
 8002708:	bf00      	nop
 800270a:	687b      	ldr	r3, [r7, #4]
 800270c:	681b      	ldr	r3, [r3, #0]
 800270e:	f003 0302 	and.w	r3, r3, #2
 8002712:	2b00      	cmp	r3, #0
 8002714:	d075      	beq.n	8002802 <HAL_RCC_OscConfig+0x202>
 8002716:	4b65      	ldr	r3, [pc, #404]	; (80028ac <HAL_RCC_OscConfig+0x2ac>)
 8002718:	689b      	ldr	r3, [r3, #8]
 800271a:	f003 030c 	and.w	r3, r3, #12
 800271e:	61bb      	str	r3, [r7, #24]
 8002720:	4b62      	ldr	r3, [pc, #392]	; (80028ac <HAL_RCC_OscConfig+0x2ac>)
 8002722:	68db      	ldr	r3, [r3, #12]
 8002724:	f003 0303 	and.w	r3, r3, #3
 8002728:	617b      	str	r3, [r7, #20]
 800272a:	69bb      	ldr	r3, [r7, #24]
 800272c:	2b0c      	cmp	r3, #12
 800272e:	d102      	bne.n	8002736 <HAL_RCC_OscConfig+0x136>
 8002730:	697b      	ldr	r3, [r7, #20]
 8002732:	2b02      	cmp	r3, #2
 8002734:	d002      	beq.n	800273c <HAL_RCC_OscConfig+0x13c>
 8002736:	69bb      	ldr	r3, [r7, #24]
 8002738:	2b04      	cmp	r3, #4
 800273a:	d11f      	bne.n	800277c <HAL_RCC_OscConfig+0x17c>
 800273c:	4b5b      	ldr	r3, [pc, #364]	; (80028ac <HAL_RCC_OscConfig+0x2ac>)
 800273e:	681b      	ldr	r3, [r3, #0]
 8002740:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8002744:	2b00      	cmp	r3, #0
 8002746:	d005      	beq.n	8002754 <HAL_RCC_OscConfig+0x154>
 8002748:	687b      	ldr	r3, [r7, #4]
 800274a:	68db      	ldr	r3, [r3, #12]
 800274c:	2b00      	cmp	r3, #0
 800274e:	d101      	bne.n	8002754 <HAL_RCC_OscConfig+0x154>
 8002750:	2301      	movs	r3, #1
 8002752:	e267      	b.n	8002c24 <HAL_RCC_OscConfig+0x624>
 8002754:	4b55      	ldr	r3, [pc, #340]	; (80028ac <HAL_RCC_OscConfig+0x2ac>)
 8002756:	685b      	ldr	r3, [r3, #4]
 8002758:	f023 42fe 	bic.w	r2, r3, #2130706432	; 0x7f000000
 800275c:	687b      	ldr	r3, [r7, #4]
 800275e:	691b      	ldr	r3, [r3, #16]
 8002760:	061b      	lsls	r3, r3, #24
 8002762:	4952      	ldr	r1, [pc, #328]	; (80028ac <HAL_RCC_OscConfig+0x2ac>)
 8002764:	4313      	orrs	r3, r2
 8002766:	604b      	str	r3, [r1, #4]
 8002768:	4b51      	ldr	r3, [pc, #324]	; (80028b0 <HAL_RCC_OscConfig+0x2b0>)
 800276a:	681b      	ldr	r3, [r3, #0]
 800276c:	4618      	mov	r0, r3
 800276e:	f7fe fd03 	bl	8001178 <HAL_InitTick>
 8002772:	4603      	mov	r3, r0
 8002774:	2b00      	cmp	r3, #0
 8002776:	d043      	beq.n	8002800 <HAL_RCC_OscConfig+0x200>
 8002778:	2301      	movs	r3, #1
 800277a:	e253      	b.n	8002c24 <HAL_RCC_OscConfig+0x624>
 800277c:	687b      	ldr	r3, [r7, #4]
 800277e:	68db      	ldr	r3, [r3, #12]
 8002780:	2b00      	cmp	r3, #0
 8002782:	d023      	beq.n	80027cc <HAL_RCC_OscConfig+0x1cc>
 8002784:	4b49      	ldr	r3, [pc, #292]	; (80028ac <HAL_RCC_OscConfig+0x2ac>)
 8002786:	681b      	ldr	r3, [r3, #0]
 8002788:	4a48      	ldr	r2, [pc, #288]	; (80028ac <HAL_RCC_OscConfig+0x2ac>)
 800278a:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800278e:	6013      	str	r3, [r2, #0]
 8002790:	f7fe fd3e 	bl	8001210 <HAL_GetTick>
 8002794:	6138      	str	r0, [r7, #16]
 8002796:	e008      	b.n	80027aa <HAL_RCC_OscConfig+0x1aa>
 8002798:	f7fe fd3a 	bl	8001210 <HAL_GetTick>
 800279c:	4602      	mov	r2, r0
 800279e:	693b      	ldr	r3, [r7, #16]
 80027a0:	1ad3      	subs	r3, r2, r3
 80027a2:	2b02      	cmp	r3, #2
 80027a4:	d901      	bls.n	80027aa <HAL_RCC_OscConfig+0x1aa>
 80027a6:	2303      	movs	r3, #3
 80027a8:	e23c      	b.n	8002c24 <HAL_RCC_OscConfig+0x624>
 80027aa:	4b40      	ldr	r3, [pc, #256]	; (80028ac <HAL_RCC_OscConfig+0x2ac>)
 80027ac:	681b      	ldr	r3, [r3, #0]
 80027ae:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 80027b2:	2b00      	cmp	r3, #0
 80027b4:	d0f0      	beq.n	8002798 <HAL_RCC_OscConfig+0x198>
 80027b6:	4b3d      	ldr	r3, [pc, #244]	; (80028ac <HAL_RCC_OscConfig+0x2ac>)
 80027b8:	685b      	ldr	r3, [r3, #4]
 80027ba:	f023 42fe 	bic.w	r2, r3, #2130706432	; 0x7f000000
 80027be:	687b      	ldr	r3, [r7, #4]
 80027c0:	691b      	ldr	r3, [r3, #16]
 80027c2:	061b      	lsls	r3, r3, #24
 80027c4:	4939      	ldr	r1, [pc, #228]	; (80028ac <HAL_RCC_OscConfig+0x2ac>)
 80027c6:	4313      	orrs	r3, r2
 80027c8:	604b      	str	r3, [r1, #4]
 80027ca:	e01a      	b.n	8002802 <HAL_RCC_OscConfig+0x202>
 80027cc:	4b37      	ldr	r3, [pc, #220]	; (80028ac <HAL_RCC_OscConfig+0x2ac>)
 80027ce:	681b      	ldr	r3, [r3, #0]
 80027d0:	4a36      	ldr	r2, [pc, #216]	; (80028ac <HAL_RCC_OscConfig+0x2ac>)
 80027d2:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 80027d6:	6013      	str	r3, [r2, #0]
 80027d8:	f7fe fd1a 	bl	8001210 <HAL_GetTick>
 80027dc:	6138      	str	r0, [r7, #16]
 80027de:	e008      	b.n	80027f2 <HAL_RCC_OscConfig+0x1f2>
 80027e0:	f7fe fd16 	bl	8001210 <HAL_GetTick>
 80027e4:	4602      	mov	r2, r0
 80027e6:	693b      	ldr	r3, [r7, #16]
 80027e8:	1ad3      	subs	r3, r2, r3
 80027ea:	2b02      	cmp	r3, #2
 80027ec:	d901      	bls.n	80027f2 <HAL_RCC_OscConfig+0x1f2>
 80027ee:	2303      	movs	r3, #3
 80027f0:	e218      	b.n	8002c24 <HAL_RCC_OscConfig+0x624>
 80027f2:	4b2e      	ldr	r3, [pc, #184]	; (80028ac <HAL_RCC_OscConfig+0x2ac>)
 80027f4:	681b      	ldr	r3, [r3, #0]
 80027f6:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 80027fa:	2b00      	cmp	r3, #0
 80027fc:	d1f0      	bne.n	80027e0 <HAL_RCC_OscConfig+0x1e0>
 80027fe:	e000      	b.n	8002802 <HAL_RCC_OscConfig+0x202>
 8002800:	bf00      	nop
 8002802:	687b      	ldr	r3, [r7, #4]
 8002804:	681b      	ldr	r3, [r3, #0]
 8002806:	f003 0308 	and.w	r3, r3, #8
 800280a:	2b00      	cmp	r3, #0
 800280c:	d03c      	beq.n	8002888 <HAL_RCC_OscConfig+0x288>
 800280e:	687b      	ldr	r3, [r7, #4]
 8002810:	695b      	ldr	r3, [r3, #20]
 8002812:	2b00      	cmp	r3, #0
 8002814:	d01c      	beq.n	8002850 <HAL_RCC_OscConfig+0x250>
 8002816:	4b25      	ldr	r3, [pc, #148]	; (80028ac <HAL_RCC_OscConfig+0x2ac>)
 8002818:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 800281c:	4a23      	ldr	r2, [pc, #140]	; (80028ac <HAL_RCC_OscConfig+0x2ac>)
 800281e:	f043 0301 	orr.w	r3, r3, #1
 8002822:	f8c2 3094 	str.w	r3, [r2, #148]	; 0x94
 8002826:	f7fe fcf3 	bl	8001210 <HAL_GetTick>
 800282a:	6138      	str	r0, [r7, #16]
 800282c:	e008      	b.n	8002840 <HAL_RCC_OscConfig+0x240>
 800282e:	f7fe fcef 	bl	8001210 <HAL_GetTick>
 8002832:	4602      	mov	r2, r0
 8002834:	693b      	ldr	r3, [r7, #16]
 8002836:	1ad3      	subs	r3, r2, r3
 8002838:	2b02      	cmp	r3, #2
 800283a:	d901      	bls.n	8002840 <HAL_RCC_OscConfig+0x240>
 800283c:	2303      	movs	r3, #3
 800283e:	e1f1      	b.n	8002c24 <HAL_RCC_OscConfig+0x624>
 8002840:	4b1a      	ldr	r3, [pc, #104]	; (80028ac <HAL_RCC_OscConfig+0x2ac>)
 8002842:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 8002846:	f003 0302 	and.w	r3, r3, #2
 800284a:	2b00      	cmp	r3, #0
 800284c:	d0ef      	beq.n	800282e <HAL_RCC_OscConfig+0x22e>
 800284e:	e01b      	b.n	8002888 <HAL_RCC_OscConfig+0x288>
 8002850:	4b16      	ldr	r3, [pc, #88]	; (80028ac <HAL_RCC_OscConfig+0x2ac>)
 8002852:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 8002856:	4a15      	ldr	r2, [pc, #84]	; (80028ac <HAL_RCC_OscConfig+0x2ac>)
 8002858:	f023 0301 	bic.w	r3, r3, #1
 800285c:	f8c2 3094 	str.w	r3, [r2, #148]	; 0x94
 8002860:	f7fe fcd6 	bl	8001210 <HAL_GetTick>
 8002864:	6138      	str	r0, [r7, #16]
 8002866:	e008      	b.n	800287a <HAL_RCC_OscConfig+0x27a>
 8002868:	f7fe fcd2 	bl	8001210 <HAL_GetTick>
 800286c:	4602      	mov	r2, r0
 800286e:	693b      	ldr	r3, [r7, #16]
 8002870:	1ad3      	subs	r3, r2, r3
 8002872:	2b02      	cmp	r3, #2
 8002874:	d901      	bls.n	800287a <HAL_RCC_OscConfig+0x27a>
 8002876:	2303      	movs	r3, #3
 8002878:	e1d4      	b.n	8002c24 <HAL_RCC_OscConfig+0x624>
 800287a:	4b0c      	ldr	r3, [pc, #48]	; (80028ac <HAL_RCC_OscConfig+0x2ac>)
 800287c:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 8002880:	f003 0302 	and.w	r3, r3, #2
 8002884:	2b00      	cmp	r3, #0
 8002886:	d1ef      	bne.n	8002868 <HAL_RCC_OscConfig+0x268>
 8002888:	687b      	ldr	r3, [r7, #4]
 800288a:	681b      	ldr	r3, [r3, #0]
 800288c:	f003 0304 	and.w	r3, r3, #4
 8002890:	2b00      	cmp	r3, #0
 8002892:	f000 80ab 	beq.w	80029ec <HAL_RCC_OscConfig+0x3ec>
 8002896:	2300      	movs	r3, #0
 8002898:	77fb      	strb	r3, [r7, #31]
 800289a:	4b04      	ldr	r3, [pc, #16]	; (80028ac <HAL_RCC_OscConfig+0x2ac>)
 800289c:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800289e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80028a2:	2b00      	cmp	r3, #0
 80028a4:	d106      	bne.n	80028b4 <HAL_RCC_OscConfig+0x2b4>
 80028a6:	2301      	movs	r3, #1
 80028a8:	e005      	b.n	80028b6 <HAL_RCC_OscConfig+0x2b6>
 80028aa:	bf00      	nop
 80028ac:	40021000 	.word	0x40021000
 80028b0:	20000004 	.word	0x20000004
 80028b4:	2300      	movs	r3, #0
 80028b6:	2b00      	cmp	r3, #0
 80028b8:	d00d      	beq.n	80028d6 <HAL_RCC_OscConfig+0x2d6>
 80028ba:	4baf      	ldr	r3, [pc, #700]	; (8002b78 <HAL_RCC_OscConfig+0x578>)
 80028bc:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80028be:	4aae      	ldr	r2, [pc, #696]	; (8002b78 <HAL_RCC_OscConfig+0x578>)
 80028c0:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80028c4:	6593      	str	r3, [r2, #88]	; 0x58
 80028c6:	4bac      	ldr	r3, [pc, #688]	; (8002b78 <HAL_RCC_OscConfig+0x578>)
 80028c8:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80028ca:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80028ce:	60fb      	str	r3, [r7, #12]
 80028d0:	68fb      	ldr	r3, [r7, #12]
 80028d2:	2301      	movs	r3, #1
 80028d4:	77fb      	strb	r3, [r7, #31]
 80028d6:	4ba9      	ldr	r3, [pc, #676]	; (8002b7c <HAL_RCC_OscConfig+0x57c>)
 80028d8:	681b      	ldr	r3, [r3, #0]
 80028da:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80028de:	2b00      	cmp	r3, #0
 80028e0:	d118      	bne.n	8002914 <HAL_RCC_OscConfig+0x314>
 80028e2:	4ba6      	ldr	r3, [pc, #664]	; (8002b7c <HAL_RCC_OscConfig+0x57c>)
 80028e4:	681b      	ldr	r3, [r3, #0]
 80028e6:	4aa5      	ldr	r2, [pc, #660]	; (8002b7c <HAL_RCC_OscConfig+0x57c>)
 80028e8:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80028ec:	6013      	str	r3, [r2, #0]
 80028ee:	f7fe fc8f 	bl	8001210 <HAL_GetTick>
 80028f2:	6138      	str	r0, [r7, #16]
 80028f4:	e008      	b.n	8002908 <HAL_RCC_OscConfig+0x308>
 80028f6:	f7fe fc8b 	bl	8001210 <HAL_GetTick>
 80028fa:	4602      	mov	r2, r0
 80028fc:	693b      	ldr	r3, [r7, #16]
 80028fe:	1ad3      	subs	r3, r2, r3
 8002900:	2b02      	cmp	r3, #2
 8002902:	d901      	bls.n	8002908 <HAL_RCC_OscConfig+0x308>
 8002904:	2303      	movs	r3, #3
 8002906:	e18d      	b.n	8002c24 <HAL_RCC_OscConfig+0x624>
 8002908:	4b9c      	ldr	r3, [pc, #624]	; (8002b7c <HAL_RCC_OscConfig+0x57c>)
 800290a:	681b      	ldr	r3, [r3, #0]
 800290c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8002910:	2b00      	cmp	r3, #0
 8002912:	d0f0      	beq.n	80028f6 <HAL_RCC_OscConfig+0x2f6>
 8002914:	687b      	ldr	r3, [r7, #4]
 8002916:	689b      	ldr	r3, [r3, #8]
 8002918:	2b01      	cmp	r3, #1
 800291a:	d108      	bne.n	800292e <HAL_RCC_OscConfig+0x32e>
 800291c:	4b96      	ldr	r3, [pc, #600]	; (8002b78 <HAL_RCC_OscConfig+0x578>)
 800291e:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8002922:	4a95      	ldr	r2, [pc, #596]	; (8002b78 <HAL_RCC_OscConfig+0x578>)
 8002924:	f043 0301 	orr.w	r3, r3, #1
 8002928:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
 800292c:	e024      	b.n	8002978 <HAL_RCC_OscConfig+0x378>
 800292e:	687b      	ldr	r3, [r7, #4]
 8002930:	689b      	ldr	r3, [r3, #8]
 8002932:	2b05      	cmp	r3, #5
 8002934:	d110      	bne.n	8002958 <HAL_RCC_OscConfig+0x358>
 8002936:	4b90      	ldr	r3, [pc, #576]	; (8002b78 <HAL_RCC_OscConfig+0x578>)
 8002938:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800293c:	4a8e      	ldr	r2, [pc, #568]	; (8002b78 <HAL_RCC_OscConfig+0x578>)
 800293e:	f043 0304 	orr.w	r3, r3, #4
 8002942:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
 8002946:	4b8c      	ldr	r3, [pc, #560]	; (8002b78 <HAL_RCC_OscConfig+0x578>)
 8002948:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800294c:	4a8a      	ldr	r2, [pc, #552]	; (8002b78 <HAL_RCC_OscConfig+0x578>)
 800294e:	f043 0301 	orr.w	r3, r3, #1
 8002952:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
 8002956:	e00f      	b.n	8002978 <HAL_RCC_OscConfig+0x378>
 8002958:	4b87      	ldr	r3, [pc, #540]	; (8002b78 <HAL_RCC_OscConfig+0x578>)
 800295a:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800295e:	4a86      	ldr	r2, [pc, #536]	; (8002b78 <HAL_RCC_OscConfig+0x578>)
 8002960:	f023 0301 	bic.w	r3, r3, #1
 8002964:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
 8002968:	4b83      	ldr	r3, [pc, #524]	; (8002b78 <HAL_RCC_OscConfig+0x578>)
 800296a:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800296e:	4a82      	ldr	r2, [pc, #520]	; (8002b78 <HAL_RCC_OscConfig+0x578>)
 8002970:	f023 0304 	bic.w	r3, r3, #4
 8002974:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
 8002978:	687b      	ldr	r3, [r7, #4]
 800297a:	689b      	ldr	r3, [r3, #8]
 800297c:	2b00      	cmp	r3, #0
 800297e:	d016      	beq.n	80029ae <HAL_RCC_OscConfig+0x3ae>
 8002980:	f7fe fc46 	bl	8001210 <HAL_GetTick>
 8002984:	6138      	str	r0, [r7, #16]
 8002986:	e00a      	b.n	800299e <HAL_RCC_OscConfig+0x39e>
 8002988:	f7fe fc42 	bl	8001210 <HAL_GetTick>
 800298c:	4602      	mov	r2, r0
 800298e:	693b      	ldr	r3, [r7, #16]
 8002990:	1ad3      	subs	r3, r2, r3
 8002992:	f241 3288 	movw	r2, #5000	; 0x1388
 8002996:	4293      	cmp	r3, r2
 8002998:	d901      	bls.n	800299e <HAL_RCC_OscConfig+0x39e>
 800299a:	2303      	movs	r3, #3
 800299c:	e142      	b.n	8002c24 <HAL_RCC_OscConfig+0x624>
 800299e:	4b76      	ldr	r3, [pc, #472]	; (8002b78 <HAL_RCC_OscConfig+0x578>)
 80029a0:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 80029a4:	f003 0302 	and.w	r3, r3, #2
 80029a8:	2b00      	cmp	r3, #0
 80029aa:	d0ed      	beq.n	8002988 <HAL_RCC_OscConfig+0x388>
 80029ac:	e015      	b.n	80029da <HAL_RCC_OscConfig+0x3da>
 80029ae:	f7fe fc2f 	bl	8001210 <HAL_GetTick>
 80029b2:	6138      	str	r0, [r7, #16]
 80029b4:	e00a      	b.n	80029cc <HAL_RCC_OscConfig+0x3cc>
 80029b6:	f7fe fc2b 	bl	8001210 <HAL_GetTick>
 80029ba:	4602      	mov	r2, r0
 80029bc:	693b      	ldr	r3, [r7, #16]
 80029be:	1ad3      	subs	r3, r2, r3
 80029c0:	f241 3288 	movw	r2, #5000	; 0x1388
 80029c4:	4293      	cmp	r3, r2
 80029c6:	d901      	bls.n	80029cc <HAL_RCC_OscConfig+0x3cc>
 80029c8:	2303      	movs	r3, #3
 80029ca:	e12b      	b.n	8002c24 <HAL_RCC_OscConfig+0x624>
 80029cc:	4b6a      	ldr	r3, [pc, #424]	; (8002b78 <HAL_RCC_OscConfig+0x578>)
 80029ce:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 80029d2:	f003 0302 	and.w	r3, r3, #2
 80029d6:	2b00      	cmp	r3, #0
 80029d8:	d1ed      	bne.n	80029b6 <HAL_RCC_OscConfig+0x3b6>
 80029da:	7ffb      	ldrb	r3, [r7, #31]
 80029dc:	2b01      	cmp	r3, #1
 80029de:	d105      	bne.n	80029ec <HAL_RCC_OscConfig+0x3ec>
 80029e0:	4b65      	ldr	r3, [pc, #404]	; (8002b78 <HAL_RCC_OscConfig+0x578>)
 80029e2:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80029e4:	4a64      	ldr	r2, [pc, #400]	; (8002b78 <HAL_RCC_OscConfig+0x578>)
 80029e6:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 80029ea:	6593      	str	r3, [r2, #88]	; 0x58
 80029ec:	687b      	ldr	r3, [r7, #4]
 80029ee:	681b      	ldr	r3, [r3, #0]
 80029f0:	f003 0320 	and.w	r3, r3, #32
 80029f4:	2b00      	cmp	r3, #0
 80029f6:	d03c      	beq.n	8002a72 <HAL_RCC_OscConfig+0x472>
 80029f8:	687b      	ldr	r3, [r7, #4]
 80029fa:	699b      	ldr	r3, [r3, #24]
 80029fc:	2b00      	cmp	r3, #0
 80029fe:	d01c      	beq.n	8002a3a <HAL_RCC_OscConfig+0x43a>
 8002a00:	4b5d      	ldr	r3, [pc, #372]	; (8002b78 <HAL_RCC_OscConfig+0x578>)
 8002a02:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8002a06:	4a5c      	ldr	r2, [pc, #368]	; (8002b78 <HAL_RCC_OscConfig+0x578>)
 8002a08:	f043 0301 	orr.w	r3, r3, #1
 8002a0c:	f8c2 3098 	str.w	r3, [r2, #152]	; 0x98
 8002a10:	f7fe fbfe 	bl	8001210 <HAL_GetTick>
 8002a14:	6138      	str	r0, [r7, #16]
 8002a16:	e008      	b.n	8002a2a <HAL_RCC_OscConfig+0x42a>
 8002a18:	f7fe fbfa 	bl	8001210 <HAL_GetTick>
 8002a1c:	4602      	mov	r2, r0
 8002a1e:	693b      	ldr	r3, [r7, #16]
 8002a20:	1ad3      	subs	r3, r2, r3
 8002a22:	2b02      	cmp	r3, #2
 8002a24:	d901      	bls.n	8002a2a <HAL_RCC_OscConfig+0x42a>
 8002a26:	2303      	movs	r3, #3
 8002a28:	e0fc      	b.n	8002c24 <HAL_RCC_OscConfig+0x624>
 8002a2a:	4b53      	ldr	r3, [pc, #332]	; (8002b78 <HAL_RCC_OscConfig+0x578>)
 8002a2c:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8002a30:	f003 0302 	and.w	r3, r3, #2
 8002a34:	2b00      	cmp	r3, #0
 8002a36:	d0ef      	beq.n	8002a18 <HAL_RCC_OscConfig+0x418>
 8002a38:	e01b      	b.n	8002a72 <HAL_RCC_OscConfig+0x472>
 8002a3a:	4b4f      	ldr	r3, [pc, #316]	; (8002b78 <HAL_RCC_OscConfig+0x578>)
 8002a3c:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8002a40:	4a4d      	ldr	r2, [pc, #308]	; (8002b78 <HAL_RCC_OscConfig+0x578>)
 8002a42:	f023 0301 	bic.w	r3, r3, #1
 8002a46:	f8c2 3098 	str.w	r3, [r2, #152]	; 0x98
 8002a4a:	f7fe fbe1 	bl	8001210 <HAL_GetTick>
 8002a4e:	6138      	str	r0, [r7, #16]
 8002a50:	e008      	b.n	8002a64 <HAL_RCC_OscConfig+0x464>
 8002a52:	f7fe fbdd 	bl	8001210 <HAL_GetTick>
 8002a56:	4602      	mov	r2, r0
 8002a58:	693b      	ldr	r3, [r7, #16]
 8002a5a:	1ad3      	subs	r3, r2, r3
 8002a5c:	2b02      	cmp	r3, #2
 8002a5e:	d901      	bls.n	8002a64 <HAL_RCC_OscConfig+0x464>
 8002a60:	2303      	movs	r3, #3
 8002a62:	e0df      	b.n	8002c24 <HAL_RCC_OscConfig+0x624>
 8002a64:	4b44      	ldr	r3, [pc, #272]	; (8002b78 <HAL_RCC_OscConfig+0x578>)
 8002a66:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8002a6a:	f003 0302 	and.w	r3, r3, #2
 8002a6e:	2b00      	cmp	r3, #0
 8002a70:	d1ef      	bne.n	8002a52 <HAL_RCC_OscConfig+0x452>
 8002a72:	687b      	ldr	r3, [r7, #4]
 8002a74:	69db      	ldr	r3, [r3, #28]
 8002a76:	2b00      	cmp	r3, #0
 8002a78:	f000 80d3 	beq.w	8002c22 <HAL_RCC_OscConfig+0x622>
 8002a7c:	4b3e      	ldr	r3, [pc, #248]	; (8002b78 <HAL_RCC_OscConfig+0x578>)
 8002a7e:	689b      	ldr	r3, [r3, #8]
 8002a80:	f003 030c 	and.w	r3, r3, #12
 8002a84:	2b0c      	cmp	r3, #12
 8002a86:	f000 808d 	beq.w	8002ba4 <HAL_RCC_OscConfig+0x5a4>
 8002a8a:	687b      	ldr	r3, [r7, #4]
 8002a8c:	69db      	ldr	r3, [r3, #28]
 8002a8e:	2b02      	cmp	r3, #2
 8002a90:	d15a      	bne.n	8002b48 <HAL_RCC_OscConfig+0x548>
 8002a92:	4b39      	ldr	r3, [pc, #228]	; (8002b78 <HAL_RCC_OscConfig+0x578>)
 8002a94:	681b      	ldr	r3, [r3, #0]
 8002a96:	4a38      	ldr	r2, [pc, #224]	; (8002b78 <HAL_RCC_OscConfig+0x578>)
 8002a98:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 8002a9c:	6013      	str	r3, [r2, #0]
 8002a9e:	f7fe fbb7 	bl	8001210 <HAL_GetTick>
 8002aa2:	6138      	str	r0, [r7, #16]
 8002aa4:	e008      	b.n	8002ab8 <HAL_RCC_OscConfig+0x4b8>
 8002aa6:	f7fe fbb3 	bl	8001210 <HAL_GetTick>
 8002aaa:	4602      	mov	r2, r0
 8002aac:	693b      	ldr	r3, [r7, #16]
 8002aae:	1ad3      	subs	r3, r2, r3
 8002ab0:	2b02      	cmp	r3, #2
 8002ab2:	d901      	bls.n	8002ab8 <HAL_RCC_OscConfig+0x4b8>
 8002ab4:	2303      	movs	r3, #3
 8002ab6:	e0b5      	b.n	8002c24 <HAL_RCC_OscConfig+0x624>
 8002ab8:	4b2f      	ldr	r3, [pc, #188]	; (8002b78 <HAL_RCC_OscConfig+0x578>)
 8002aba:	681b      	ldr	r3, [r3, #0]
 8002abc:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8002ac0:	2b00      	cmp	r3, #0
 8002ac2:	d1f0      	bne.n	8002aa6 <HAL_RCC_OscConfig+0x4a6>
 8002ac4:	4b2c      	ldr	r3, [pc, #176]	; (8002b78 <HAL_RCC_OscConfig+0x578>)
 8002ac6:	68da      	ldr	r2, [r3, #12]
 8002ac8:	4b2d      	ldr	r3, [pc, #180]	; (8002b80 <HAL_RCC_OscConfig+0x580>)
 8002aca:	4013      	ands	r3, r2
 8002acc:	687a      	ldr	r2, [r7, #4]
 8002ace:	6a11      	ldr	r1, [r2, #32]
 8002ad0:	687a      	ldr	r2, [r7, #4]
 8002ad2:	6a52      	ldr	r2, [r2, #36]	; 0x24
 8002ad4:	3a01      	subs	r2, #1
 8002ad6:	0112      	lsls	r2, r2, #4
 8002ad8:	4311      	orrs	r1, r2
 8002ada:	687a      	ldr	r2, [r7, #4]
 8002adc:	6a92      	ldr	r2, [r2, #40]	; 0x28
 8002ade:	0212      	lsls	r2, r2, #8
 8002ae0:	4311      	orrs	r1, r2
 8002ae2:	687a      	ldr	r2, [r7, #4]
 8002ae4:	6b12      	ldr	r2, [r2, #48]	; 0x30
 8002ae6:	0852      	lsrs	r2, r2, #1
 8002ae8:	3a01      	subs	r2, #1
 8002aea:	0552      	lsls	r2, r2, #21
 8002aec:	4311      	orrs	r1, r2
 8002aee:	687a      	ldr	r2, [r7, #4]
 8002af0:	6b52      	ldr	r2, [r2, #52]	; 0x34
 8002af2:	0852      	lsrs	r2, r2, #1
 8002af4:	3a01      	subs	r2, #1
 8002af6:	0652      	lsls	r2, r2, #25
 8002af8:	4311      	orrs	r1, r2
 8002afa:	687a      	ldr	r2, [r7, #4]
 8002afc:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 8002afe:	06d2      	lsls	r2, r2, #27
 8002b00:	430a      	orrs	r2, r1
 8002b02:	491d      	ldr	r1, [pc, #116]	; (8002b78 <HAL_RCC_OscConfig+0x578>)
 8002b04:	4313      	orrs	r3, r2
 8002b06:	60cb      	str	r3, [r1, #12]
 8002b08:	4b1b      	ldr	r3, [pc, #108]	; (8002b78 <HAL_RCC_OscConfig+0x578>)
 8002b0a:	681b      	ldr	r3, [r3, #0]
 8002b0c:	4a1a      	ldr	r2, [pc, #104]	; (8002b78 <HAL_RCC_OscConfig+0x578>)
 8002b0e:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8002b12:	6013      	str	r3, [r2, #0]
 8002b14:	4b18      	ldr	r3, [pc, #96]	; (8002b78 <HAL_RCC_OscConfig+0x578>)
 8002b16:	68db      	ldr	r3, [r3, #12]
 8002b18:	4a17      	ldr	r2, [pc, #92]	; (8002b78 <HAL_RCC_OscConfig+0x578>)
 8002b1a:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8002b1e:	60d3      	str	r3, [r2, #12]
 8002b20:	f7fe fb76 	bl	8001210 <HAL_GetTick>
 8002b24:	6138      	str	r0, [r7, #16]
 8002b26:	e008      	b.n	8002b3a <HAL_RCC_OscConfig+0x53a>
 8002b28:	f7fe fb72 	bl	8001210 <HAL_GetTick>
 8002b2c:	4602      	mov	r2, r0
 8002b2e:	693b      	ldr	r3, [r7, #16]
 8002b30:	1ad3      	subs	r3, r2, r3
 8002b32:	2b02      	cmp	r3, #2
 8002b34:	d901      	bls.n	8002b3a <HAL_RCC_OscConfig+0x53a>
 8002b36:	2303      	movs	r3, #3
 8002b38:	e074      	b.n	8002c24 <HAL_RCC_OscConfig+0x624>
 8002b3a:	4b0f      	ldr	r3, [pc, #60]	; (8002b78 <HAL_RCC_OscConfig+0x578>)
 8002b3c:	681b      	ldr	r3, [r3, #0]
 8002b3e:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8002b42:	2b00      	cmp	r3, #0
 8002b44:	d0f0      	beq.n	8002b28 <HAL_RCC_OscConfig+0x528>
 8002b46:	e06c      	b.n	8002c22 <HAL_RCC_OscConfig+0x622>
 8002b48:	4b0b      	ldr	r3, [pc, #44]	; (8002b78 <HAL_RCC_OscConfig+0x578>)
 8002b4a:	681b      	ldr	r3, [r3, #0]
 8002b4c:	4a0a      	ldr	r2, [pc, #40]	; (8002b78 <HAL_RCC_OscConfig+0x578>)
 8002b4e:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 8002b52:	6013      	str	r3, [r2, #0]
 8002b54:	4b08      	ldr	r3, [pc, #32]	; (8002b78 <HAL_RCC_OscConfig+0x578>)
 8002b56:	68db      	ldr	r3, [r3, #12]
 8002b58:	4a07      	ldr	r2, [pc, #28]	; (8002b78 <HAL_RCC_OscConfig+0x578>)
 8002b5a:	f023 0303 	bic.w	r3, r3, #3
 8002b5e:	60d3      	str	r3, [r2, #12]
 8002b60:	4b05      	ldr	r3, [pc, #20]	; (8002b78 <HAL_RCC_OscConfig+0x578>)
 8002b62:	68db      	ldr	r3, [r3, #12]
 8002b64:	4a04      	ldr	r2, [pc, #16]	; (8002b78 <HAL_RCC_OscConfig+0x578>)
 8002b66:	f023 7388 	bic.w	r3, r3, #17825792	; 0x1100000
 8002b6a:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8002b6e:	60d3      	str	r3, [r2, #12]
 8002b70:	f7fe fb4e 	bl	8001210 <HAL_GetTick>
 8002b74:	6138      	str	r0, [r7, #16]
 8002b76:	e00e      	b.n	8002b96 <HAL_RCC_OscConfig+0x596>
 8002b78:	40021000 	.word	0x40021000
 8002b7c:	40007000 	.word	0x40007000
 8002b80:	019f800c 	.word	0x019f800c
 8002b84:	f7fe fb44 	bl	8001210 <HAL_GetTick>
 8002b88:	4602      	mov	r2, r0
 8002b8a:	693b      	ldr	r3, [r7, #16]
 8002b8c:	1ad3      	subs	r3, r2, r3
 8002b8e:	2b02      	cmp	r3, #2
 8002b90:	d901      	bls.n	8002b96 <HAL_RCC_OscConfig+0x596>
 8002b92:	2303      	movs	r3, #3
 8002b94:	e046      	b.n	8002c24 <HAL_RCC_OscConfig+0x624>
 8002b96:	4b25      	ldr	r3, [pc, #148]	; (8002c2c <HAL_RCC_OscConfig+0x62c>)
 8002b98:	681b      	ldr	r3, [r3, #0]
 8002b9a:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8002b9e:	2b00      	cmp	r3, #0
 8002ba0:	d1f0      	bne.n	8002b84 <HAL_RCC_OscConfig+0x584>
 8002ba2:	e03e      	b.n	8002c22 <HAL_RCC_OscConfig+0x622>
 8002ba4:	687b      	ldr	r3, [r7, #4]
 8002ba6:	69db      	ldr	r3, [r3, #28]
 8002ba8:	2b01      	cmp	r3, #1
 8002baa:	d101      	bne.n	8002bb0 <HAL_RCC_OscConfig+0x5b0>
 8002bac:	2301      	movs	r3, #1
 8002bae:	e039      	b.n	8002c24 <HAL_RCC_OscConfig+0x624>
 8002bb0:	4b1e      	ldr	r3, [pc, #120]	; (8002c2c <HAL_RCC_OscConfig+0x62c>)
 8002bb2:	68db      	ldr	r3, [r3, #12]
 8002bb4:	617b      	str	r3, [r7, #20]
 8002bb6:	697b      	ldr	r3, [r7, #20]
 8002bb8:	f003 0203 	and.w	r2, r3, #3
 8002bbc:	687b      	ldr	r3, [r7, #4]
 8002bbe:	6a1b      	ldr	r3, [r3, #32]
 8002bc0:	429a      	cmp	r2, r3
 8002bc2:	d12c      	bne.n	8002c1e <HAL_RCC_OscConfig+0x61e>
 8002bc4:	697b      	ldr	r3, [r7, #20]
 8002bc6:	f003 02f0 	and.w	r2, r3, #240	; 0xf0
 8002bca:	687b      	ldr	r3, [r7, #4]
 8002bcc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002bce:	3b01      	subs	r3, #1
 8002bd0:	011b      	lsls	r3, r3, #4
 8002bd2:	429a      	cmp	r2, r3
 8002bd4:	d123      	bne.n	8002c1e <HAL_RCC_OscConfig+0x61e>
 8002bd6:	697b      	ldr	r3, [r7, #20]
 8002bd8:	f403 42fe 	and.w	r2, r3, #32512	; 0x7f00
 8002bdc:	687b      	ldr	r3, [r7, #4]
 8002bde:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8002be0:	021b      	lsls	r3, r3, #8
 8002be2:	429a      	cmp	r2, r3
 8002be4:	d11b      	bne.n	8002c1e <HAL_RCC_OscConfig+0x61e>
 8002be6:	697b      	ldr	r3, [r7, #20]
 8002be8:	f003 4278 	and.w	r2, r3, #4160749568	; 0xf8000000
 8002bec:	687b      	ldr	r3, [r7, #4]
 8002bee:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002bf0:	06db      	lsls	r3, r3, #27
 8002bf2:	429a      	cmp	r2, r3
 8002bf4:	d113      	bne.n	8002c1e <HAL_RCC_OscConfig+0x61e>
 8002bf6:	697b      	ldr	r3, [r7, #20]
 8002bf8:	f403 02c0 	and.w	r2, r3, #6291456	; 0x600000
 8002bfc:	687b      	ldr	r3, [r7, #4]
 8002bfe:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002c00:	085b      	lsrs	r3, r3, #1
 8002c02:	3b01      	subs	r3, #1
 8002c04:	055b      	lsls	r3, r3, #21
 8002c06:	429a      	cmp	r2, r3
 8002c08:	d109      	bne.n	8002c1e <HAL_RCC_OscConfig+0x61e>
 8002c0a:	697b      	ldr	r3, [r7, #20]
 8002c0c:	f003 62c0 	and.w	r2, r3, #100663296	; 0x6000000
 8002c10:	687b      	ldr	r3, [r7, #4]
 8002c12:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8002c14:	085b      	lsrs	r3, r3, #1
 8002c16:	3b01      	subs	r3, #1
 8002c18:	065b      	lsls	r3, r3, #25
 8002c1a:	429a      	cmp	r2, r3
 8002c1c:	d001      	beq.n	8002c22 <HAL_RCC_OscConfig+0x622>
 8002c1e:	2301      	movs	r3, #1
 8002c20:	e000      	b.n	8002c24 <HAL_RCC_OscConfig+0x624>
 8002c22:	2300      	movs	r3, #0
 8002c24:	4618      	mov	r0, r3
 8002c26:	3720      	adds	r7, #32
 8002c28:	46bd      	mov	sp, r7
 8002c2a:	bd80      	pop	{r7, pc}
 8002c2c:	40021000 	.word	0x40021000

08002c30 <HAL_RCC_ClockConfig>:
 8002c30:	b580      	push	{r7, lr}
 8002c32:	b086      	sub	sp, #24
 8002c34:	af00      	add	r7, sp, #0
 8002c36:	6078      	str	r0, [r7, #4]
 8002c38:	6039      	str	r1, [r7, #0]
 8002c3a:	2300      	movs	r3, #0
 8002c3c:	617b      	str	r3, [r7, #20]
 8002c3e:	687b      	ldr	r3, [r7, #4]
 8002c40:	2b00      	cmp	r3, #0
 8002c42:	d101      	bne.n	8002c48 <HAL_RCC_ClockConfig+0x18>
 8002c44:	2301      	movs	r3, #1
 8002c46:	e11e      	b.n	8002e86 <HAL_RCC_ClockConfig+0x256>
 8002c48:	4b91      	ldr	r3, [pc, #580]	; (8002e90 <HAL_RCC_ClockConfig+0x260>)
 8002c4a:	681b      	ldr	r3, [r3, #0]
 8002c4c:	f003 030f 	and.w	r3, r3, #15
 8002c50:	683a      	ldr	r2, [r7, #0]
 8002c52:	429a      	cmp	r2, r3
 8002c54:	d910      	bls.n	8002c78 <HAL_RCC_ClockConfig+0x48>
 8002c56:	4b8e      	ldr	r3, [pc, #568]	; (8002e90 <HAL_RCC_ClockConfig+0x260>)
 8002c58:	681b      	ldr	r3, [r3, #0]
 8002c5a:	f023 020f 	bic.w	r2, r3, #15
 8002c5e:	498c      	ldr	r1, [pc, #560]	; (8002e90 <HAL_RCC_ClockConfig+0x260>)
 8002c60:	683b      	ldr	r3, [r7, #0]
 8002c62:	4313      	orrs	r3, r2
 8002c64:	600b      	str	r3, [r1, #0]
 8002c66:	4b8a      	ldr	r3, [pc, #552]	; (8002e90 <HAL_RCC_ClockConfig+0x260>)
 8002c68:	681b      	ldr	r3, [r3, #0]
 8002c6a:	f003 030f 	and.w	r3, r3, #15
 8002c6e:	683a      	ldr	r2, [r7, #0]
 8002c70:	429a      	cmp	r2, r3
 8002c72:	d001      	beq.n	8002c78 <HAL_RCC_ClockConfig+0x48>
 8002c74:	2301      	movs	r3, #1
 8002c76:	e106      	b.n	8002e86 <HAL_RCC_ClockConfig+0x256>
 8002c78:	687b      	ldr	r3, [r7, #4]
 8002c7a:	681b      	ldr	r3, [r3, #0]
 8002c7c:	f003 0301 	and.w	r3, r3, #1
 8002c80:	2b00      	cmp	r3, #0
 8002c82:	d073      	beq.n	8002d6c <HAL_RCC_ClockConfig+0x13c>
 8002c84:	687b      	ldr	r3, [r7, #4]
 8002c86:	685b      	ldr	r3, [r3, #4]
 8002c88:	2b03      	cmp	r3, #3
 8002c8a:	d129      	bne.n	8002ce0 <HAL_RCC_ClockConfig+0xb0>
 8002c8c:	4b81      	ldr	r3, [pc, #516]	; (8002e94 <HAL_RCC_ClockConfig+0x264>)
 8002c8e:	681b      	ldr	r3, [r3, #0]
 8002c90:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8002c94:	2b00      	cmp	r3, #0
 8002c96:	d101      	bne.n	8002c9c <HAL_RCC_ClockConfig+0x6c>
 8002c98:	2301      	movs	r3, #1
 8002c9a:	e0f4      	b.n	8002e86 <HAL_RCC_ClockConfig+0x256>
 8002c9c:	f000 f99e 	bl	8002fdc <RCC_GetSysClockFreqFromPLLSource>
 8002ca0:	6138      	str	r0, [r7, #16]
 8002ca2:	693b      	ldr	r3, [r7, #16]
 8002ca4:	4a7c      	ldr	r2, [pc, #496]	; (8002e98 <HAL_RCC_ClockConfig+0x268>)
 8002ca6:	4293      	cmp	r3, r2
 8002ca8:	d93f      	bls.n	8002d2a <HAL_RCC_ClockConfig+0xfa>
 8002caa:	4b7a      	ldr	r3, [pc, #488]	; (8002e94 <HAL_RCC_ClockConfig+0x264>)
 8002cac:	689b      	ldr	r3, [r3, #8]
 8002cae:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 8002cb2:	2b00      	cmp	r3, #0
 8002cb4:	d009      	beq.n	8002cca <HAL_RCC_ClockConfig+0x9a>
 8002cb6:	687b      	ldr	r3, [r7, #4]
 8002cb8:	681b      	ldr	r3, [r3, #0]
 8002cba:	f003 0302 	and.w	r3, r3, #2
 8002cbe:	2b00      	cmp	r3, #0
 8002cc0:	d033      	beq.n	8002d2a <HAL_RCC_ClockConfig+0xfa>
 8002cc2:	687b      	ldr	r3, [r7, #4]
 8002cc4:	689b      	ldr	r3, [r3, #8]
 8002cc6:	2b00      	cmp	r3, #0
 8002cc8:	d12f      	bne.n	8002d2a <HAL_RCC_ClockConfig+0xfa>
 8002cca:	4b72      	ldr	r3, [pc, #456]	; (8002e94 <HAL_RCC_ClockConfig+0x264>)
 8002ccc:	689b      	ldr	r3, [r3, #8]
 8002cce:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8002cd2:	4a70      	ldr	r2, [pc, #448]	; (8002e94 <HAL_RCC_ClockConfig+0x264>)
 8002cd4:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8002cd8:	6093      	str	r3, [r2, #8]
 8002cda:	2380      	movs	r3, #128	; 0x80
 8002cdc:	617b      	str	r3, [r7, #20]
 8002cde:	e024      	b.n	8002d2a <HAL_RCC_ClockConfig+0xfa>
 8002ce0:	687b      	ldr	r3, [r7, #4]
 8002ce2:	685b      	ldr	r3, [r3, #4]
 8002ce4:	2b02      	cmp	r3, #2
 8002ce6:	d107      	bne.n	8002cf8 <HAL_RCC_ClockConfig+0xc8>
 8002ce8:	4b6a      	ldr	r3, [pc, #424]	; (8002e94 <HAL_RCC_ClockConfig+0x264>)
 8002cea:	681b      	ldr	r3, [r3, #0]
 8002cec:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8002cf0:	2b00      	cmp	r3, #0
 8002cf2:	d109      	bne.n	8002d08 <HAL_RCC_ClockConfig+0xd8>
 8002cf4:	2301      	movs	r3, #1
 8002cf6:	e0c6      	b.n	8002e86 <HAL_RCC_ClockConfig+0x256>
 8002cf8:	4b66      	ldr	r3, [pc, #408]	; (8002e94 <HAL_RCC_ClockConfig+0x264>)
 8002cfa:	681b      	ldr	r3, [r3, #0]
 8002cfc:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8002d00:	2b00      	cmp	r3, #0
 8002d02:	d101      	bne.n	8002d08 <HAL_RCC_ClockConfig+0xd8>
 8002d04:	2301      	movs	r3, #1
 8002d06:	e0be      	b.n	8002e86 <HAL_RCC_ClockConfig+0x256>
 8002d08:	f000 f8ce 	bl	8002ea8 <HAL_RCC_GetSysClockFreq>
 8002d0c:	6138      	str	r0, [r7, #16]
 8002d0e:	693b      	ldr	r3, [r7, #16]
 8002d10:	4a61      	ldr	r2, [pc, #388]	; (8002e98 <HAL_RCC_ClockConfig+0x268>)
 8002d12:	4293      	cmp	r3, r2
 8002d14:	d909      	bls.n	8002d2a <HAL_RCC_ClockConfig+0xfa>
 8002d16:	4b5f      	ldr	r3, [pc, #380]	; (8002e94 <HAL_RCC_ClockConfig+0x264>)
 8002d18:	689b      	ldr	r3, [r3, #8]
 8002d1a:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8002d1e:	4a5d      	ldr	r2, [pc, #372]	; (8002e94 <HAL_RCC_ClockConfig+0x264>)
 8002d20:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8002d24:	6093      	str	r3, [r2, #8]
 8002d26:	2380      	movs	r3, #128	; 0x80
 8002d28:	617b      	str	r3, [r7, #20]
 8002d2a:	4b5a      	ldr	r3, [pc, #360]	; (8002e94 <HAL_RCC_ClockConfig+0x264>)
 8002d2c:	689b      	ldr	r3, [r3, #8]
 8002d2e:	f023 0203 	bic.w	r2, r3, #3
 8002d32:	687b      	ldr	r3, [r7, #4]
 8002d34:	685b      	ldr	r3, [r3, #4]
 8002d36:	4957      	ldr	r1, [pc, #348]	; (8002e94 <HAL_RCC_ClockConfig+0x264>)
 8002d38:	4313      	orrs	r3, r2
 8002d3a:	608b      	str	r3, [r1, #8]
 8002d3c:	f7fe fa68 	bl	8001210 <HAL_GetTick>
 8002d40:	60f8      	str	r0, [r7, #12]
 8002d42:	e00a      	b.n	8002d5a <HAL_RCC_ClockConfig+0x12a>
 8002d44:	f7fe fa64 	bl	8001210 <HAL_GetTick>
 8002d48:	4602      	mov	r2, r0
 8002d4a:	68fb      	ldr	r3, [r7, #12]
 8002d4c:	1ad3      	subs	r3, r2, r3
 8002d4e:	f241 3288 	movw	r2, #5000	; 0x1388
 8002d52:	4293      	cmp	r3, r2
 8002d54:	d901      	bls.n	8002d5a <HAL_RCC_ClockConfig+0x12a>
 8002d56:	2303      	movs	r3, #3
 8002d58:	e095      	b.n	8002e86 <HAL_RCC_ClockConfig+0x256>
 8002d5a:	4b4e      	ldr	r3, [pc, #312]	; (8002e94 <HAL_RCC_ClockConfig+0x264>)
 8002d5c:	689b      	ldr	r3, [r3, #8]
 8002d5e:	f003 020c 	and.w	r2, r3, #12
 8002d62:	687b      	ldr	r3, [r7, #4]
 8002d64:	685b      	ldr	r3, [r3, #4]
 8002d66:	009b      	lsls	r3, r3, #2
 8002d68:	429a      	cmp	r2, r3
 8002d6a:	d1eb      	bne.n	8002d44 <HAL_RCC_ClockConfig+0x114>
 8002d6c:	687b      	ldr	r3, [r7, #4]
 8002d6e:	681b      	ldr	r3, [r3, #0]
 8002d70:	f003 0302 	and.w	r3, r3, #2
 8002d74:	2b00      	cmp	r3, #0
 8002d76:	d023      	beq.n	8002dc0 <HAL_RCC_ClockConfig+0x190>
 8002d78:	687b      	ldr	r3, [r7, #4]
 8002d7a:	681b      	ldr	r3, [r3, #0]
 8002d7c:	f003 0304 	and.w	r3, r3, #4
 8002d80:	2b00      	cmp	r3, #0
 8002d82:	d005      	beq.n	8002d90 <HAL_RCC_ClockConfig+0x160>
 8002d84:	4b43      	ldr	r3, [pc, #268]	; (8002e94 <HAL_RCC_ClockConfig+0x264>)
 8002d86:	689b      	ldr	r3, [r3, #8]
 8002d88:	4a42      	ldr	r2, [pc, #264]	; (8002e94 <HAL_RCC_ClockConfig+0x264>)
 8002d8a:	f443 63e0 	orr.w	r3, r3, #1792	; 0x700
 8002d8e:	6093      	str	r3, [r2, #8]
 8002d90:	687b      	ldr	r3, [r7, #4]
 8002d92:	681b      	ldr	r3, [r3, #0]
 8002d94:	f003 0308 	and.w	r3, r3, #8
 8002d98:	2b00      	cmp	r3, #0
 8002d9a:	d007      	beq.n	8002dac <HAL_RCC_ClockConfig+0x17c>
 8002d9c:	4b3d      	ldr	r3, [pc, #244]	; (8002e94 <HAL_RCC_ClockConfig+0x264>)
 8002d9e:	689b      	ldr	r3, [r3, #8]
 8002da0:	f423 537c 	bic.w	r3, r3, #16128	; 0x3f00
 8002da4:	4a3b      	ldr	r2, [pc, #236]	; (8002e94 <HAL_RCC_ClockConfig+0x264>)
 8002da6:	f443 63e0 	orr.w	r3, r3, #1792	; 0x700
 8002daa:	6093      	str	r3, [r2, #8]
 8002dac:	4b39      	ldr	r3, [pc, #228]	; (8002e94 <HAL_RCC_ClockConfig+0x264>)
 8002dae:	689b      	ldr	r3, [r3, #8]
 8002db0:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8002db4:	687b      	ldr	r3, [r7, #4]
 8002db6:	689b      	ldr	r3, [r3, #8]
 8002db8:	4936      	ldr	r1, [pc, #216]	; (8002e94 <HAL_RCC_ClockConfig+0x264>)
 8002dba:	4313      	orrs	r3, r2
 8002dbc:	608b      	str	r3, [r1, #8]
 8002dbe:	e008      	b.n	8002dd2 <HAL_RCC_ClockConfig+0x1a2>
 8002dc0:	697b      	ldr	r3, [r7, #20]
 8002dc2:	2b80      	cmp	r3, #128	; 0x80
 8002dc4:	d105      	bne.n	8002dd2 <HAL_RCC_ClockConfig+0x1a2>
 8002dc6:	4b33      	ldr	r3, [pc, #204]	; (8002e94 <HAL_RCC_ClockConfig+0x264>)
 8002dc8:	689b      	ldr	r3, [r3, #8]
 8002dca:	4a32      	ldr	r2, [pc, #200]	; (8002e94 <HAL_RCC_ClockConfig+0x264>)
 8002dcc:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8002dd0:	6093      	str	r3, [r2, #8]
 8002dd2:	4b2f      	ldr	r3, [pc, #188]	; (8002e90 <HAL_RCC_ClockConfig+0x260>)
 8002dd4:	681b      	ldr	r3, [r3, #0]
 8002dd6:	f003 030f 	and.w	r3, r3, #15
 8002dda:	683a      	ldr	r2, [r7, #0]
 8002ddc:	429a      	cmp	r2, r3
 8002dde:	d21d      	bcs.n	8002e1c <HAL_RCC_ClockConfig+0x1ec>
 8002de0:	4b2b      	ldr	r3, [pc, #172]	; (8002e90 <HAL_RCC_ClockConfig+0x260>)
 8002de2:	681b      	ldr	r3, [r3, #0]
 8002de4:	f023 020f 	bic.w	r2, r3, #15
 8002de8:	4929      	ldr	r1, [pc, #164]	; (8002e90 <HAL_RCC_ClockConfig+0x260>)
 8002dea:	683b      	ldr	r3, [r7, #0]
 8002dec:	4313      	orrs	r3, r2
 8002dee:	600b      	str	r3, [r1, #0]
 8002df0:	f7fe fa0e 	bl	8001210 <HAL_GetTick>
 8002df4:	60f8      	str	r0, [r7, #12]
 8002df6:	e00a      	b.n	8002e0e <HAL_RCC_ClockConfig+0x1de>
 8002df8:	f7fe fa0a 	bl	8001210 <HAL_GetTick>
 8002dfc:	4602      	mov	r2, r0
 8002dfe:	68fb      	ldr	r3, [r7, #12]
 8002e00:	1ad3      	subs	r3, r2, r3
 8002e02:	f241 3288 	movw	r2, #5000	; 0x1388
 8002e06:	4293      	cmp	r3, r2
 8002e08:	d901      	bls.n	8002e0e <HAL_RCC_ClockConfig+0x1de>
 8002e0a:	2303      	movs	r3, #3
 8002e0c:	e03b      	b.n	8002e86 <HAL_RCC_ClockConfig+0x256>
 8002e0e:	4b20      	ldr	r3, [pc, #128]	; (8002e90 <HAL_RCC_ClockConfig+0x260>)
 8002e10:	681b      	ldr	r3, [r3, #0]
 8002e12:	f003 030f 	and.w	r3, r3, #15
 8002e16:	683a      	ldr	r2, [r7, #0]
 8002e18:	429a      	cmp	r2, r3
 8002e1a:	d1ed      	bne.n	8002df8 <HAL_RCC_ClockConfig+0x1c8>
 8002e1c:	687b      	ldr	r3, [r7, #4]
 8002e1e:	681b      	ldr	r3, [r3, #0]
 8002e20:	f003 0304 	and.w	r3, r3, #4
 8002e24:	2b00      	cmp	r3, #0
 8002e26:	d008      	beq.n	8002e3a <HAL_RCC_ClockConfig+0x20a>
 8002e28:	4b1a      	ldr	r3, [pc, #104]	; (8002e94 <HAL_RCC_ClockConfig+0x264>)
 8002e2a:	689b      	ldr	r3, [r3, #8]
 8002e2c:	f423 62e0 	bic.w	r2, r3, #1792	; 0x700
 8002e30:	687b      	ldr	r3, [r7, #4]
 8002e32:	68db      	ldr	r3, [r3, #12]
 8002e34:	4917      	ldr	r1, [pc, #92]	; (8002e94 <HAL_RCC_ClockConfig+0x264>)
 8002e36:	4313      	orrs	r3, r2
 8002e38:	608b      	str	r3, [r1, #8]
 8002e3a:	687b      	ldr	r3, [r7, #4]
 8002e3c:	681b      	ldr	r3, [r3, #0]
 8002e3e:	f003 0308 	and.w	r3, r3, #8
 8002e42:	2b00      	cmp	r3, #0
 8002e44:	d009      	beq.n	8002e5a <HAL_RCC_ClockConfig+0x22a>
 8002e46:	4b13      	ldr	r3, [pc, #76]	; (8002e94 <HAL_RCC_ClockConfig+0x264>)
 8002e48:	689b      	ldr	r3, [r3, #8]
 8002e4a:	f423 5260 	bic.w	r2, r3, #14336	; 0x3800
 8002e4e:	687b      	ldr	r3, [r7, #4]
 8002e50:	691b      	ldr	r3, [r3, #16]
 8002e52:	00db      	lsls	r3, r3, #3
 8002e54:	490f      	ldr	r1, [pc, #60]	; (8002e94 <HAL_RCC_ClockConfig+0x264>)
 8002e56:	4313      	orrs	r3, r2
 8002e58:	608b      	str	r3, [r1, #8]
 8002e5a:	f000 f825 	bl	8002ea8 <HAL_RCC_GetSysClockFreq>
 8002e5e:	4601      	mov	r1, r0
 8002e60:	4b0c      	ldr	r3, [pc, #48]	; (8002e94 <HAL_RCC_ClockConfig+0x264>)
 8002e62:	689b      	ldr	r3, [r3, #8]
 8002e64:	091b      	lsrs	r3, r3, #4
 8002e66:	f003 030f 	and.w	r3, r3, #15
 8002e6a:	4a0c      	ldr	r2, [pc, #48]	; (8002e9c <HAL_RCC_ClockConfig+0x26c>)
 8002e6c:	5cd3      	ldrb	r3, [r2, r3]
 8002e6e:	f003 031f 	and.w	r3, r3, #31
 8002e72:	fa21 f303 	lsr.w	r3, r1, r3
 8002e76:	4a0a      	ldr	r2, [pc, #40]	; (8002ea0 <HAL_RCC_ClockConfig+0x270>)
 8002e78:	6013      	str	r3, [r2, #0]
 8002e7a:	4b0a      	ldr	r3, [pc, #40]	; (8002ea4 <HAL_RCC_ClockConfig+0x274>)
 8002e7c:	681b      	ldr	r3, [r3, #0]
 8002e7e:	4618      	mov	r0, r3
 8002e80:	f7fe f97a 	bl	8001178 <HAL_InitTick>
 8002e84:	4603      	mov	r3, r0
 8002e86:	4618      	mov	r0, r3
 8002e88:	3718      	adds	r7, #24
 8002e8a:	46bd      	mov	sp, r7
 8002e8c:	bd80      	pop	{r7, pc}
 8002e8e:	bf00      	nop
 8002e90:	40022000 	.word	0x40022000
 8002e94:	40021000 	.word	0x40021000
 8002e98:	04c4b400 	.word	0x04c4b400
 8002e9c:	0800b194 	.word	0x0800b194
 8002ea0:	20000000 	.word	0x20000000
 8002ea4:	20000004 	.word	0x20000004

08002ea8 <HAL_RCC_GetSysClockFreq>:
 8002ea8:	b480      	push	{r7}
 8002eaa:	b087      	sub	sp, #28
 8002eac:	af00      	add	r7, sp, #0
 8002eae:	4b2c      	ldr	r3, [pc, #176]	; (8002f60 <HAL_RCC_GetSysClockFreq+0xb8>)
 8002eb0:	689b      	ldr	r3, [r3, #8]
 8002eb2:	f003 030c 	and.w	r3, r3, #12
 8002eb6:	2b04      	cmp	r3, #4
 8002eb8:	d102      	bne.n	8002ec0 <HAL_RCC_GetSysClockFreq+0x18>
 8002eba:	4b2a      	ldr	r3, [pc, #168]	; (8002f64 <HAL_RCC_GetSysClockFreq+0xbc>)
 8002ebc:	613b      	str	r3, [r7, #16]
 8002ebe:	e047      	b.n	8002f50 <HAL_RCC_GetSysClockFreq+0xa8>
 8002ec0:	4b27      	ldr	r3, [pc, #156]	; (8002f60 <HAL_RCC_GetSysClockFreq+0xb8>)
 8002ec2:	689b      	ldr	r3, [r3, #8]
 8002ec4:	f003 030c 	and.w	r3, r3, #12
 8002ec8:	2b08      	cmp	r3, #8
 8002eca:	d102      	bne.n	8002ed2 <HAL_RCC_GetSysClockFreq+0x2a>
 8002ecc:	4b26      	ldr	r3, [pc, #152]	; (8002f68 <HAL_RCC_GetSysClockFreq+0xc0>)
 8002ece:	613b      	str	r3, [r7, #16]
 8002ed0:	e03e      	b.n	8002f50 <HAL_RCC_GetSysClockFreq+0xa8>
 8002ed2:	4b23      	ldr	r3, [pc, #140]	; (8002f60 <HAL_RCC_GetSysClockFreq+0xb8>)
 8002ed4:	689b      	ldr	r3, [r3, #8]
 8002ed6:	f003 030c 	and.w	r3, r3, #12
 8002eda:	2b0c      	cmp	r3, #12
 8002edc:	d136      	bne.n	8002f4c <HAL_RCC_GetSysClockFreq+0xa4>
 8002ede:	4b20      	ldr	r3, [pc, #128]	; (8002f60 <HAL_RCC_GetSysClockFreq+0xb8>)
 8002ee0:	68db      	ldr	r3, [r3, #12]
 8002ee2:	f003 0303 	and.w	r3, r3, #3
 8002ee6:	60fb      	str	r3, [r7, #12]
 8002ee8:	4b1d      	ldr	r3, [pc, #116]	; (8002f60 <HAL_RCC_GetSysClockFreq+0xb8>)
 8002eea:	68db      	ldr	r3, [r3, #12]
 8002eec:	091b      	lsrs	r3, r3, #4
 8002eee:	f003 030f 	and.w	r3, r3, #15
 8002ef2:	3301      	adds	r3, #1
 8002ef4:	60bb      	str	r3, [r7, #8]
 8002ef6:	68fb      	ldr	r3, [r7, #12]
 8002ef8:	2b03      	cmp	r3, #3
 8002efa:	d10c      	bne.n	8002f16 <HAL_RCC_GetSysClockFreq+0x6e>
 8002efc:	4a1a      	ldr	r2, [pc, #104]	; (8002f68 <HAL_RCC_GetSysClockFreq+0xc0>)
 8002efe:	68bb      	ldr	r3, [r7, #8]
 8002f00:	fbb2 f3f3 	udiv	r3, r2, r3
 8002f04:	4a16      	ldr	r2, [pc, #88]	; (8002f60 <HAL_RCC_GetSysClockFreq+0xb8>)
 8002f06:	68d2      	ldr	r2, [r2, #12]
 8002f08:	0a12      	lsrs	r2, r2, #8
 8002f0a:	f002 027f 	and.w	r2, r2, #127	; 0x7f
 8002f0e:	fb02 f303 	mul.w	r3, r2, r3
 8002f12:	617b      	str	r3, [r7, #20]
 8002f14:	e00c      	b.n	8002f30 <HAL_RCC_GetSysClockFreq+0x88>
 8002f16:	4a13      	ldr	r2, [pc, #76]	; (8002f64 <HAL_RCC_GetSysClockFreq+0xbc>)
 8002f18:	68bb      	ldr	r3, [r7, #8]
 8002f1a:	fbb2 f3f3 	udiv	r3, r2, r3
 8002f1e:	4a10      	ldr	r2, [pc, #64]	; (8002f60 <HAL_RCC_GetSysClockFreq+0xb8>)
 8002f20:	68d2      	ldr	r2, [r2, #12]
 8002f22:	0a12      	lsrs	r2, r2, #8
 8002f24:	f002 027f 	and.w	r2, r2, #127	; 0x7f
 8002f28:	fb02 f303 	mul.w	r3, r2, r3
 8002f2c:	617b      	str	r3, [r7, #20]
 8002f2e:	bf00      	nop
 8002f30:	4b0b      	ldr	r3, [pc, #44]	; (8002f60 <HAL_RCC_GetSysClockFreq+0xb8>)
 8002f32:	68db      	ldr	r3, [r3, #12]
 8002f34:	0e5b      	lsrs	r3, r3, #25
 8002f36:	f003 0303 	and.w	r3, r3, #3
 8002f3a:	3301      	adds	r3, #1
 8002f3c:	005b      	lsls	r3, r3, #1
 8002f3e:	607b      	str	r3, [r7, #4]
 8002f40:	697a      	ldr	r2, [r7, #20]
 8002f42:	687b      	ldr	r3, [r7, #4]
 8002f44:	fbb2 f3f3 	udiv	r3, r2, r3
 8002f48:	613b      	str	r3, [r7, #16]
 8002f4a:	e001      	b.n	8002f50 <HAL_RCC_GetSysClockFreq+0xa8>
 8002f4c:	2300      	movs	r3, #0
 8002f4e:	613b      	str	r3, [r7, #16]
 8002f50:	693b      	ldr	r3, [r7, #16]
 8002f52:	4618      	mov	r0, r3
 8002f54:	371c      	adds	r7, #28
 8002f56:	46bd      	mov	sp, r7
 8002f58:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002f5c:	4770      	bx	lr
 8002f5e:	bf00      	nop
 8002f60:	40021000 	.word	0x40021000
 8002f64:	00f42400 	.word	0x00f42400
 8002f68:	016e3600 	.word	0x016e3600

08002f6c <HAL_RCC_GetHCLKFreq>:
 8002f6c:	b480      	push	{r7}
 8002f6e:	af00      	add	r7, sp, #0
 8002f70:	4b03      	ldr	r3, [pc, #12]	; (8002f80 <HAL_RCC_GetHCLKFreq+0x14>)
 8002f72:	681b      	ldr	r3, [r3, #0]
 8002f74:	4618      	mov	r0, r3
 8002f76:	46bd      	mov	sp, r7
 8002f78:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002f7c:	4770      	bx	lr
 8002f7e:	bf00      	nop
 8002f80:	20000000 	.word	0x20000000

08002f84 <HAL_RCC_GetPCLK1Freq>:
 8002f84:	b580      	push	{r7, lr}
 8002f86:	af00      	add	r7, sp, #0
 8002f88:	f7ff fff0 	bl	8002f6c <HAL_RCC_GetHCLKFreq>
 8002f8c:	4601      	mov	r1, r0
 8002f8e:	4b06      	ldr	r3, [pc, #24]	; (8002fa8 <HAL_RCC_GetPCLK1Freq+0x24>)
 8002f90:	689b      	ldr	r3, [r3, #8]
 8002f92:	0a1b      	lsrs	r3, r3, #8
 8002f94:	f003 0307 	and.w	r3, r3, #7
 8002f98:	4a04      	ldr	r2, [pc, #16]	; (8002fac <HAL_RCC_GetPCLK1Freq+0x28>)
 8002f9a:	5cd3      	ldrb	r3, [r2, r3]
 8002f9c:	f003 031f 	and.w	r3, r3, #31
 8002fa0:	fa21 f303 	lsr.w	r3, r1, r3
 8002fa4:	4618      	mov	r0, r3
 8002fa6:	bd80      	pop	{r7, pc}
 8002fa8:	40021000 	.word	0x40021000
 8002fac:	0800b1a4 	.word	0x0800b1a4

08002fb0 <HAL_RCC_GetPCLK2Freq>:
 8002fb0:	b580      	push	{r7, lr}
 8002fb2:	af00      	add	r7, sp, #0
 8002fb4:	f7ff ffda 	bl	8002f6c <HAL_RCC_GetHCLKFreq>
 8002fb8:	4601      	mov	r1, r0
 8002fba:	4b06      	ldr	r3, [pc, #24]	; (8002fd4 <HAL_RCC_GetPCLK2Freq+0x24>)
 8002fbc:	689b      	ldr	r3, [r3, #8]
 8002fbe:	0adb      	lsrs	r3, r3, #11
 8002fc0:	f003 0307 	and.w	r3, r3, #7
 8002fc4:	4a04      	ldr	r2, [pc, #16]	; (8002fd8 <HAL_RCC_GetPCLK2Freq+0x28>)
 8002fc6:	5cd3      	ldrb	r3, [r2, r3]
 8002fc8:	f003 031f 	and.w	r3, r3, #31
 8002fcc:	fa21 f303 	lsr.w	r3, r1, r3
 8002fd0:	4618      	mov	r0, r3
 8002fd2:	bd80      	pop	{r7, pc}
 8002fd4:	40021000 	.word	0x40021000
 8002fd8:	0800b1a4 	.word	0x0800b1a4

08002fdc <RCC_GetSysClockFreqFromPLLSource>:
 8002fdc:	b480      	push	{r7}
 8002fde:	b087      	sub	sp, #28
 8002fe0:	af00      	add	r7, sp, #0
 8002fe2:	4b1e      	ldr	r3, [pc, #120]	; (800305c <RCC_GetSysClockFreqFromPLLSource+0x80>)
 8002fe4:	68db      	ldr	r3, [r3, #12]
 8002fe6:	f003 0303 	and.w	r3, r3, #3
 8002fea:	613b      	str	r3, [r7, #16]
 8002fec:	4b1b      	ldr	r3, [pc, #108]	; (800305c <RCC_GetSysClockFreqFromPLLSource+0x80>)
 8002fee:	68db      	ldr	r3, [r3, #12]
 8002ff0:	091b      	lsrs	r3, r3, #4
 8002ff2:	f003 030f 	and.w	r3, r3, #15
 8002ff6:	3301      	adds	r3, #1
 8002ff8:	60fb      	str	r3, [r7, #12]
 8002ffa:	693b      	ldr	r3, [r7, #16]
 8002ffc:	2b03      	cmp	r3, #3
 8002ffe:	d10c      	bne.n	800301a <RCC_GetSysClockFreqFromPLLSource+0x3e>
 8003000:	4a17      	ldr	r2, [pc, #92]	; (8003060 <RCC_GetSysClockFreqFromPLLSource+0x84>)
 8003002:	68fb      	ldr	r3, [r7, #12]
 8003004:	fbb2 f3f3 	udiv	r3, r2, r3
 8003008:	4a14      	ldr	r2, [pc, #80]	; (800305c <RCC_GetSysClockFreqFromPLLSource+0x80>)
 800300a:	68d2      	ldr	r2, [r2, #12]
 800300c:	0a12      	lsrs	r2, r2, #8
 800300e:	f002 027f 	and.w	r2, r2, #127	; 0x7f
 8003012:	fb02 f303 	mul.w	r3, r2, r3
 8003016:	617b      	str	r3, [r7, #20]
 8003018:	e00c      	b.n	8003034 <RCC_GetSysClockFreqFromPLLSource+0x58>
 800301a:	4a12      	ldr	r2, [pc, #72]	; (8003064 <RCC_GetSysClockFreqFromPLLSource+0x88>)
 800301c:	68fb      	ldr	r3, [r7, #12]
 800301e:	fbb2 f3f3 	udiv	r3, r2, r3
 8003022:	4a0e      	ldr	r2, [pc, #56]	; (800305c <RCC_GetSysClockFreqFromPLLSource+0x80>)
 8003024:	68d2      	ldr	r2, [r2, #12]
 8003026:	0a12      	lsrs	r2, r2, #8
 8003028:	f002 027f 	and.w	r2, r2, #127	; 0x7f
 800302c:	fb02 f303 	mul.w	r3, r2, r3
 8003030:	617b      	str	r3, [r7, #20]
 8003032:	bf00      	nop
 8003034:	4b09      	ldr	r3, [pc, #36]	; (800305c <RCC_GetSysClockFreqFromPLLSource+0x80>)
 8003036:	68db      	ldr	r3, [r3, #12]
 8003038:	0e5b      	lsrs	r3, r3, #25
 800303a:	f003 0303 	and.w	r3, r3, #3
 800303e:	3301      	adds	r3, #1
 8003040:	005b      	lsls	r3, r3, #1
 8003042:	60bb      	str	r3, [r7, #8]
 8003044:	697a      	ldr	r2, [r7, #20]
 8003046:	68bb      	ldr	r3, [r7, #8]
 8003048:	fbb2 f3f3 	udiv	r3, r2, r3
 800304c:	607b      	str	r3, [r7, #4]
 800304e:	687b      	ldr	r3, [r7, #4]
 8003050:	4618      	mov	r0, r3
 8003052:	371c      	adds	r7, #28
 8003054:	46bd      	mov	sp, r7
 8003056:	f85d 7b04 	ldr.w	r7, [sp], #4
 800305a:	4770      	bx	lr
 800305c:	40021000 	.word	0x40021000
 8003060:	016e3600 	.word	0x016e3600
 8003064:	00f42400 	.word	0x00f42400

08003068 <HAL_RCCEx_PeriphCLKConfig>:
 8003068:	b580      	push	{r7, lr}
 800306a:	b086      	sub	sp, #24
 800306c:	af00      	add	r7, sp, #0
 800306e:	6078      	str	r0, [r7, #4]
 8003070:	2300      	movs	r3, #0
 8003072:	74fb      	strb	r3, [r7, #19]
 8003074:	2300      	movs	r3, #0
 8003076:	74bb      	strb	r3, [r7, #18]
 8003078:	687b      	ldr	r3, [r7, #4]
 800307a:	681b      	ldr	r3, [r3, #0]
 800307c:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 8003080:	2b00      	cmp	r3, #0
 8003082:	f000 8098 	beq.w	80031b6 <HAL_RCCEx_PeriphCLKConfig+0x14e>
 8003086:	2300      	movs	r3, #0
 8003088:	747b      	strb	r3, [r7, #17]
 800308a:	4b43      	ldr	r3, [pc, #268]	; (8003198 <HAL_RCCEx_PeriphCLKConfig+0x130>)
 800308c:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800308e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8003092:	2b00      	cmp	r3, #0
 8003094:	d10d      	bne.n	80030b2 <HAL_RCCEx_PeriphCLKConfig+0x4a>
 8003096:	4b40      	ldr	r3, [pc, #256]	; (8003198 <HAL_RCCEx_PeriphCLKConfig+0x130>)
 8003098:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800309a:	4a3f      	ldr	r2, [pc, #252]	; (8003198 <HAL_RCCEx_PeriphCLKConfig+0x130>)
 800309c:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80030a0:	6593      	str	r3, [r2, #88]	; 0x58
 80030a2:	4b3d      	ldr	r3, [pc, #244]	; (8003198 <HAL_RCCEx_PeriphCLKConfig+0x130>)
 80030a4:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80030a6:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80030aa:	60bb      	str	r3, [r7, #8]
 80030ac:	68bb      	ldr	r3, [r7, #8]
 80030ae:	2301      	movs	r3, #1
 80030b0:	747b      	strb	r3, [r7, #17]
 80030b2:	4b3a      	ldr	r3, [pc, #232]	; (800319c <HAL_RCCEx_PeriphCLKConfig+0x134>)
 80030b4:	681b      	ldr	r3, [r3, #0]
 80030b6:	4a39      	ldr	r2, [pc, #228]	; (800319c <HAL_RCCEx_PeriphCLKConfig+0x134>)
 80030b8:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80030bc:	6013      	str	r3, [r2, #0]
 80030be:	f7fe f8a7 	bl	8001210 <HAL_GetTick>
 80030c2:	60f8      	str	r0, [r7, #12]
 80030c4:	e009      	b.n	80030da <HAL_RCCEx_PeriphCLKConfig+0x72>
 80030c6:	f7fe f8a3 	bl	8001210 <HAL_GetTick>
 80030ca:	4602      	mov	r2, r0
 80030cc:	68fb      	ldr	r3, [r7, #12]
 80030ce:	1ad3      	subs	r3, r2, r3
 80030d0:	2b02      	cmp	r3, #2
 80030d2:	d902      	bls.n	80030da <HAL_RCCEx_PeriphCLKConfig+0x72>
 80030d4:	2303      	movs	r3, #3
 80030d6:	74fb      	strb	r3, [r7, #19]
 80030d8:	e005      	b.n	80030e6 <HAL_RCCEx_PeriphCLKConfig+0x7e>
 80030da:	4b30      	ldr	r3, [pc, #192]	; (800319c <HAL_RCCEx_PeriphCLKConfig+0x134>)
 80030dc:	681b      	ldr	r3, [r3, #0]
 80030de:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80030e2:	2b00      	cmp	r3, #0
 80030e4:	d0ef      	beq.n	80030c6 <HAL_RCCEx_PeriphCLKConfig+0x5e>
 80030e6:	7cfb      	ldrb	r3, [r7, #19]
 80030e8:	2b00      	cmp	r3, #0
 80030ea:	d159      	bne.n	80031a0 <HAL_RCCEx_PeriphCLKConfig+0x138>
 80030ec:	4b2a      	ldr	r3, [pc, #168]	; (8003198 <HAL_RCCEx_PeriphCLKConfig+0x130>)
 80030ee:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 80030f2:	f403 7340 	and.w	r3, r3, #768	; 0x300
 80030f6:	617b      	str	r3, [r7, #20]
 80030f8:	697b      	ldr	r3, [r7, #20]
 80030fa:	2b00      	cmp	r3, #0
 80030fc:	d01e      	beq.n	800313c <HAL_RCCEx_PeriphCLKConfig+0xd4>
 80030fe:	687b      	ldr	r3, [r7, #4]
 8003100:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8003102:	697a      	ldr	r2, [r7, #20]
 8003104:	429a      	cmp	r2, r3
 8003106:	d019      	beq.n	800313c <HAL_RCCEx_PeriphCLKConfig+0xd4>
 8003108:	4b23      	ldr	r3, [pc, #140]	; (8003198 <HAL_RCCEx_PeriphCLKConfig+0x130>)
 800310a:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800310e:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8003112:	617b      	str	r3, [r7, #20]
 8003114:	4b20      	ldr	r3, [pc, #128]	; (8003198 <HAL_RCCEx_PeriphCLKConfig+0x130>)
 8003116:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800311a:	4a1f      	ldr	r2, [pc, #124]	; (8003198 <HAL_RCCEx_PeriphCLKConfig+0x130>)
 800311c:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8003120:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
 8003124:	4b1c      	ldr	r3, [pc, #112]	; (8003198 <HAL_RCCEx_PeriphCLKConfig+0x130>)
 8003126:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800312a:	4a1b      	ldr	r2, [pc, #108]	; (8003198 <HAL_RCCEx_PeriphCLKConfig+0x130>)
 800312c:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8003130:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
 8003134:	4a18      	ldr	r2, [pc, #96]	; (8003198 <HAL_RCCEx_PeriphCLKConfig+0x130>)
 8003136:	697b      	ldr	r3, [r7, #20]
 8003138:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
 800313c:	697b      	ldr	r3, [r7, #20]
 800313e:	f003 0301 	and.w	r3, r3, #1
 8003142:	2b00      	cmp	r3, #0
 8003144:	d016      	beq.n	8003174 <HAL_RCCEx_PeriphCLKConfig+0x10c>
 8003146:	f7fe f863 	bl	8001210 <HAL_GetTick>
 800314a:	60f8      	str	r0, [r7, #12]
 800314c:	e00b      	b.n	8003166 <HAL_RCCEx_PeriphCLKConfig+0xfe>
 800314e:	f7fe f85f 	bl	8001210 <HAL_GetTick>
 8003152:	4602      	mov	r2, r0
 8003154:	68fb      	ldr	r3, [r7, #12]
 8003156:	1ad3      	subs	r3, r2, r3
 8003158:	f241 3288 	movw	r2, #5000	; 0x1388
 800315c:	4293      	cmp	r3, r2
 800315e:	d902      	bls.n	8003166 <HAL_RCCEx_PeriphCLKConfig+0xfe>
 8003160:	2303      	movs	r3, #3
 8003162:	74fb      	strb	r3, [r7, #19]
 8003164:	e006      	b.n	8003174 <HAL_RCCEx_PeriphCLKConfig+0x10c>
 8003166:	4b0c      	ldr	r3, [pc, #48]	; (8003198 <HAL_RCCEx_PeriphCLKConfig+0x130>)
 8003168:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800316c:	f003 0302 	and.w	r3, r3, #2
 8003170:	2b00      	cmp	r3, #0
 8003172:	d0ec      	beq.n	800314e <HAL_RCCEx_PeriphCLKConfig+0xe6>
 8003174:	7cfb      	ldrb	r3, [r7, #19]
 8003176:	2b00      	cmp	r3, #0
 8003178:	d10b      	bne.n	8003192 <HAL_RCCEx_PeriphCLKConfig+0x12a>
 800317a:	4b07      	ldr	r3, [pc, #28]	; (8003198 <HAL_RCCEx_PeriphCLKConfig+0x130>)
 800317c:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8003180:	f423 7240 	bic.w	r2, r3, #768	; 0x300
 8003184:	687b      	ldr	r3, [r7, #4]
 8003186:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8003188:	4903      	ldr	r1, [pc, #12]	; (8003198 <HAL_RCCEx_PeriphCLKConfig+0x130>)
 800318a:	4313      	orrs	r3, r2
 800318c:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 8003190:	e008      	b.n	80031a4 <HAL_RCCEx_PeriphCLKConfig+0x13c>
 8003192:	7cfb      	ldrb	r3, [r7, #19]
 8003194:	74bb      	strb	r3, [r7, #18]
 8003196:	e005      	b.n	80031a4 <HAL_RCCEx_PeriphCLKConfig+0x13c>
 8003198:	40021000 	.word	0x40021000
 800319c:	40007000 	.word	0x40007000
 80031a0:	7cfb      	ldrb	r3, [r7, #19]
 80031a2:	74bb      	strb	r3, [r7, #18]
 80031a4:	7c7b      	ldrb	r3, [r7, #17]
 80031a6:	2b01      	cmp	r3, #1
 80031a8:	d105      	bne.n	80031b6 <HAL_RCCEx_PeriphCLKConfig+0x14e>
 80031aa:	4baf      	ldr	r3, [pc, #700]	; (8003468 <HAL_RCCEx_PeriphCLKConfig+0x400>)
 80031ac:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80031ae:	4aae      	ldr	r2, [pc, #696]	; (8003468 <HAL_RCCEx_PeriphCLKConfig+0x400>)
 80031b0:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 80031b4:	6593      	str	r3, [r2, #88]	; 0x58
 80031b6:	687b      	ldr	r3, [r7, #4]
 80031b8:	681b      	ldr	r3, [r3, #0]
 80031ba:	f003 0301 	and.w	r3, r3, #1
 80031be:	2b00      	cmp	r3, #0
 80031c0:	d00a      	beq.n	80031d8 <HAL_RCCEx_PeriphCLKConfig+0x170>
 80031c2:	4ba9      	ldr	r3, [pc, #676]	; (8003468 <HAL_RCCEx_PeriphCLKConfig+0x400>)
 80031c4:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80031c8:	f023 0203 	bic.w	r2, r3, #3
 80031cc:	687b      	ldr	r3, [r7, #4]
 80031ce:	685b      	ldr	r3, [r3, #4]
 80031d0:	49a5      	ldr	r1, [pc, #660]	; (8003468 <HAL_RCCEx_PeriphCLKConfig+0x400>)
 80031d2:	4313      	orrs	r3, r2
 80031d4:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 80031d8:	687b      	ldr	r3, [r7, #4]
 80031da:	681b      	ldr	r3, [r3, #0]
 80031dc:	f003 0302 	and.w	r3, r3, #2
 80031e0:	2b00      	cmp	r3, #0
 80031e2:	d00a      	beq.n	80031fa <HAL_RCCEx_PeriphCLKConfig+0x192>
 80031e4:	4ba0      	ldr	r3, [pc, #640]	; (8003468 <HAL_RCCEx_PeriphCLKConfig+0x400>)
 80031e6:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80031ea:	f023 020c 	bic.w	r2, r3, #12
 80031ee:	687b      	ldr	r3, [r7, #4]
 80031f0:	689b      	ldr	r3, [r3, #8]
 80031f2:	499d      	ldr	r1, [pc, #628]	; (8003468 <HAL_RCCEx_PeriphCLKConfig+0x400>)
 80031f4:	4313      	orrs	r3, r2
 80031f6:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 80031fa:	687b      	ldr	r3, [r7, #4]
 80031fc:	681b      	ldr	r3, [r3, #0]
 80031fe:	f003 0304 	and.w	r3, r3, #4
 8003202:	2b00      	cmp	r3, #0
 8003204:	d00a      	beq.n	800321c <HAL_RCCEx_PeriphCLKConfig+0x1b4>
 8003206:	4b98      	ldr	r3, [pc, #608]	; (8003468 <HAL_RCCEx_PeriphCLKConfig+0x400>)
 8003208:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800320c:	f023 0230 	bic.w	r2, r3, #48	; 0x30
 8003210:	687b      	ldr	r3, [r7, #4]
 8003212:	68db      	ldr	r3, [r3, #12]
 8003214:	4994      	ldr	r1, [pc, #592]	; (8003468 <HAL_RCCEx_PeriphCLKConfig+0x400>)
 8003216:	4313      	orrs	r3, r2
 8003218:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 800321c:	687b      	ldr	r3, [r7, #4]
 800321e:	681b      	ldr	r3, [r3, #0]
 8003220:	f003 0308 	and.w	r3, r3, #8
 8003224:	2b00      	cmp	r3, #0
 8003226:	d00a      	beq.n	800323e <HAL_RCCEx_PeriphCLKConfig+0x1d6>
 8003228:	4b8f      	ldr	r3, [pc, #572]	; (8003468 <HAL_RCCEx_PeriphCLKConfig+0x400>)
 800322a:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800322e:	f023 02c0 	bic.w	r2, r3, #192	; 0xc0
 8003232:	687b      	ldr	r3, [r7, #4]
 8003234:	691b      	ldr	r3, [r3, #16]
 8003236:	498c      	ldr	r1, [pc, #560]	; (8003468 <HAL_RCCEx_PeriphCLKConfig+0x400>)
 8003238:	4313      	orrs	r3, r2
 800323a:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 800323e:	687b      	ldr	r3, [r7, #4]
 8003240:	681b      	ldr	r3, [r3, #0]
 8003242:	f003 0310 	and.w	r3, r3, #16
 8003246:	2b00      	cmp	r3, #0
 8003248:	d00a      	beq.n	8003260 <HAL_RCCEx_PeriphCLKConfig+0x1f8>
 800324a:	4b87      	ldr	r3, [pc, #540]	; (8003468 <HAL_RCCEx_PeriphCLKConfig+0x400>)
 800324c:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8003250:	f423 7240 	bic.w	r2, r3, #768	; 0x300
 8003254:	687b      	ldr	r3, [r7, #4]
 8003256:	695b      	ldr	r3, [r3, #20]
 8003258:	4983      	ldr	r1, [pc, #524]	; (8003468 <HAL_RCCEx_PeriphCLKConfig+0x400>)
 800325a:	4313      	orrs	r3, r2
 800325c:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 8003260:	687b      	ldr	r3, [r7, #4]
 8003262:	681b      	ldr	r3, [r3, #0]
 8003264:	f003 0320 	and.w	r3, r3, #32
 8003268:	2b00      	cmp	r3, #0
 800326a:	d00a      	beq.n	8003282 <HAL_RCCEx_PeriphCLKConfig+0x21a>
 800326c:	4b7e      	ldr	r3, [pc, #504]	; (8003468 <HAL_RCCEx_PeriphCLKConfig+0x400>)
 800326e:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8003272:	f423 6240 	bic.w	r2, r3, #3072	; 0xc00
 8003276:	687b      	ldr	r3, [r7, #4]
 8003278:	699b      	ldr	r3, [r3, #24]
 800327a:	497b      	ldr	r1, [pc, #492]	; (8003468 <HAL_RCCEx_PeriphCLKConfig+0x400>)
 800327c:	4313      	orrs	r3, r2
 800327e:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 8003282:	687b      	ldr	r3, [r7, #4]
 8003284:	681b      	ldr	r3, [r3, #0]
 8003286:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800328a:	2b00      	cmp	r3, #0
 800328c:	d00a      	beq.n	80032a4 <HAL_RCCEx_PeriphCLKConfig+0x23c>
 800328e:	4b76      	ldr	r3, [pc, #472]	; (8003468 <HAL_RCCEx_PeriphCLKConfig+0x400>)
 8003290:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8003294:	f423 5240 	bic.w	r2, r3, #12288	; 0x3000
 8003298:	687b      	ldr	r3, [r7, #4]
 800329a:	69db      	ldr	r3, [r3, #28]
 800329c:	4972      	ldr	r1, [pc, #456]	; (8003468 <HAL_RCCEx_PeriphCLKConfig+0x400>)
 800329e:	4313      	orrs	r3, r2
 80032a0:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 80032a4:	687b      	ldr	r3, [r7, #4]
 80032a6:	681b      	ldr	r3, [r3, #0]
 80032a8:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80032ac:	2b00      	cmp	r3, #0
 80032ae:	d00a      	beq.n	80032c6 <HAL_RCCEx_PeriphCLKConfig+0x25e>
 80032b0:	4b6d      	ldr	r3, [pc, #436]	; (8003468 <HAL_RCCEx_PeriphCLKConfig+0x400>)
 80032b2:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80032b6:	f423 4240 	bic.w	r2, r3, #49152	; 0xc000
 80032ba:	687b      	ldr	r3, [r7, #4]
 80032bc:	6a1b      	ldr	r3, [r3, #32]
 80032be:	496a      	ldr	r1, [pc, #424]	; (8003468 <HAL_RCCEx_PeriphCLKConfig+0x400>)
 80032c0:	4313      	orrs	r3, r2
 80032c2:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 80032c6:	687b      	ldr	r3, [r7, #4]
 80032c8:	681b      	ldr	r3, [r3, #0]
 80032ca:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80032ce:	2b00      	cmp	r3, #0
 80032d0:	d00a      	beq.n	80032e8 <HAL_RCCEx_PeriphCLKConfig+0x280>
 80032d2:	4b65      	ldr	r3, [pc, #404]	; (8003468 <HAL_RCCEx_PeriphCLKConfig+0x400>)
 80032d4:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80032d8:	f423 3240 	bic.w	r2, r3, #196608	; 0x30000
 80032dc:	687b      	ldr	r3, [r7, #4]
 80032de:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80032e0:	4961      	ldr	r1, [pc, #388]	; (8003468 <HAL_RCCEx_PeriphCLKConfig+0x400>)
 80032e2:	4313      	orrs	r3, r2
 80032e4:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 80032e8:	687b      	ldr	r3, [r7, #4]
 80032ea:	681b      	ldr	r3, [r3, #0]
 80032ec:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80032f0:	2b00      	cmp	r3, #0
 80032f2:	d00a      	beq.n	800330a <HAL_RCCEx_PeriphCLKConfig+0x2a2>
 80032f4:	4b5c      	ldr	r3, [pc, #368]	; (8003468 <HAL_RCCEx_PeriphCLKConfig+0x400>)
 80032f6:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 80032fa:	f023 0203 	bic.w	r2, r3, #3
 80032fe:	687b      	ldr	r3, [r7, #4]
 8003300:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8003302:	4959      	ldr	r1, [pc, #356]	; (8003468 <HAL_RCCEx_PeriphCLKConfig+0x400>)
 8003304:	4313      	orrs	r3, r2
 8003306:	f8c1 309c 	str.w	r3, [r1, #156]	; 0x9c
 800330a:	687b      	ldr	r3, [r7, #4]
 800330c:	681b      	ldr	r3, [r3, #0]
 800330e:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8003312:	2b00      	cmp	r3, #0
 8003314:	d00a      	beq.n	800332c <HAL_RCCEx_PeriphCLKConfig+0x2c4>
 8003316:	4b54      	ldr	r3, [pc, #336]	; (8003468 <HAL_RCCEx_PeriphCLKConfig+0x400>)
 8003318:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800331c:	f423 2240 	bic.w	r2, r3, #786432	; 0xc0000
 8003320:	687b      	ldr	r3, [r7, #4]
 8003322:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003324:	4950      	ldr	r1, [pc, #320]	; (8003468 <HAL_RCCEx_PeriphCLKConfig+0x400>)
 8003326:	4313      	orrs	r3, r2
 8003328:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 800332c:	687b      	ldr	r3, [r7, #4]
 800332e:	681b      	ldr	r3, [r3, #0]
 8003330:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8003334:	2b00      	cmp	r3, #0
 8003336:	d015      	beq.n	8003364 <HAL_RCCEx_PeriphCLKConfig+0x2fc>
 8003338:	4b4b      	ldr	r3, [pc, #300]	; (8003468 <HAL_RCCEx_PeriphCLKConfig+0x400>)
 800333a:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800333e:	f423 1240 	bic.w	r2, r3, #3145728	; 0x300000
 8003342:	687b      	ldr	r3, [r7, #4]
 8003344:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003346:	4948      	ldr	r1, [pc, #288]	; (8003468 <HAL_RCCEx_PeriphCLKConfig+0x400>)
 8003348:	4313      	orrs	r3, r2
 800334a:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 800334e:	687b      	ldr	r3, [r7, #4]
 8003350:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003352:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 8003356:	d105      	bne.n	8003364 <HAL_RCCEx_PeriphCLKConfig+0x2fc>
 8003358:	4b43      	ldr	r3, [pc, #268]	; (8003468 <HAL_RCCEx_PeriphCLKConfig+0x400>)
 800335a:	68db      	ldr	r3, [r3, #12]
 800335c:	4a42      	ldr	r2, [pc, #264]	; (8003468 <HAL_RCCEx_PeriphCLKConfig+0x400>)
 800335e:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8003362:	60d3      	str	r3, [r2, #12]
 8003364:	687b      	ldr	r3, [r7, #4]
 8003366:	681b      	ldr	r3, [r3, #0]
 8003368:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 800336c:	2b00      	cmp	r3, #0
 800336e:	d015      	beq.n	800339c <HAL_RCCEx_PeriphCLKConfig+0x334>
 8003370:	4b3d      	ldr	r3, [pc, #244]	; (8003468 <HAL_RCCEx_PeriphCLKConfig+0x400>)
 8003372:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8003376:	f423 0240 	bic.w	r2, r3, #12582912	; 0xc00000
 800337a:	687b      	ldr	r3, [r7, #4]
 800337c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800337e:	493a      	ldr	r1, [pc, #232]	; (8003468 <HAL_RCCEx_PeriphCLKConfig+0x400>)
 8003380:	4313      	orrs	r3, r2
 8003382:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 8003386:	687b      	ldr	r3, [r7, #4]
 8003388:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800338a:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 800338e:	d105      	bne.n	800339c <HAL_RCCEx_PeriphCLKConfig+0x334>
 8003390:	4b35      	ldr	r3, [pc, #212]	; (8003468 <HAL_RCCEx_PeriphCLKConfig+0x400>)
 8003392:	68db      	ldr	r3, [r3, #12]
 8003394:	4a34      	ldr	r2, [pc, #208]	; (8003468 <HAL_RCCEx_PeriphCLKConfig+0x400>)
 8003396:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 800339a:	60d3      	str	r3, [r2, #12]
 800339c:	687b      	ldr	r3, [r7, #4]
 800339e:	681b      	ldr	r3, [r3, #0]
 80033a0:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 80033a4:	2b00      	cmp	r3, #0
 80033a6:	d015      	beq.n	80033d4 <HAL_RCCEx_PeriphCLKConfig+0x36c>
 80033a8:	4b2f      	ldr	r3, [pc, #188]	; (8003468 <HAL_RCCEx_PeriphCLKConfig+0x400>)
 80033aa:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80033ae:	f023 7240 	bic.w	r2, r3, #50331648	; 0x3000000
 80033b2:	687b      	ldr	r3, [r7, #4]
 80033b4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80033b6:	492c      	ldr	r1, [pc, #176]	; (8003468 <HAL_RCCEx_PeriphCLKConfig+0x400>)
 80033b8:	4313      	orrs	r3, r2
 80033ba:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 80033be:	687b      	ldr	r3, [r7, #4]
 80033c0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80033c2:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 80033c6:	d105      	bne.n	80033d4 <HAL_RCCEx_PeriphCLKConfig+0x36c>
 80033c8:	4b27      	ldr	r3, [pc, #156]	; (8003468 <HAL_RCCEx_PeriphCLKConfig+0x400>)
 80033ca:	68db      	ldr	r3, [r3, #12]
 80033cc:	4a26      	ldr	r2, [pc, #152]	; (8003468 <HAL_RCCEx_PeriphCLKConfig+0x400>)
 80033ce:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 80033d2:	60d3      	str	r3, [r2, #12]
 80033d4:	687b      	ldr	r3, [r7, #4]
 80033d6:	681b      	ldr	r3, [r3, #0]
 80033d8:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 80033dc:	2b00      	cmp	r3, #0
 80033de:	d015      	beq.n	800340c <HAL_RCCEx_PeriphCLKConfig+0x3a4>
 80033e0:	4b21      	ldr	r3, [pc, #132]	; (8003468 <HAL_RCCEx_PeriphCLKConfig+0x400>)
 80033e2:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80033e6:	f023 6240 	bic.w	r2, r3, #201326592	; 0xc000000
 80033ea:	687b      	ldr	r3, [r7, #4]
 80033ec:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80033ee:	491e      	ldr	r1, [pc, #120]	; (8003468 <HAL_RCCEx_PeriphCLKConfig+0x400>)
 80033f0:	4313      	orrs	r3, r2
 80033f2:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 80033f6:	687b      	ldr	r3, [r7, #4]
 80033f8:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80033fa:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 80033fe:	d105      	bne.n	800340c <HAL_RCCEx_PeriphCLKConfig+0x3a4>
 8003400:	4b19      	ldr	r3, [pc, #100]	; (8003468 <HAL_RCCEx_PeriphCLKConfig+0x400>)
 8003402:	68db      	ldr	r3, [r3, #12]
 8003404:	4a18      	ldr	r2, [pc, #96]	; (8003468 <HAL_RCCEx_PeriphCLKConfig+0x400>)
 8003406:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 800340a:	60d3      	str	r3, [r2, #12]
 800340c:	687b      	ldr	r3, [r7, #4]
 800340e:	681b      	ldr	r3, [r3, #0]
 8003410:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8003414:	2b00      	cmp	r3, #0
 8003416:	d015      	beq.n	8003444 <HAL_RCCEx_PeriphCLKConfig+0x3dc>
 8003418:	4b13      	ldr	r3, [pc, #76]	; (8003468 <HAL_RCCEx_PeriphCLKConfig+0x400>)
 800341a:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800341e:	f023 6240 	bic.w	r2, r3, #201326592	; 0xc000000
 8003422:	687b      	ldr	r3, [r7, #4]
 8003424:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003426:	4910      	ldr	r1, [pc, #64]	; (8003468 <HAL_RCCEx_PeriphCLKConfig+0x400>)
 8003428:	4313      	orrs	r3, r2
 800342a:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 800342e:	687b      	ldr	r3, [r7, #4]
 8003430:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003432:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 8003436:	d105      	bne.n	8003444 <HAL_RCCEx_PeriphCLKConfig+0x3dc>
 8003438:	4b0b      	ldr	r3, [pc, #44]	; (8003468 <HAL_RCCEx_PeriphCLKConfig+0x400>)
 800343a:	68db      	ldr	r3, [r3, #12]
 800343c:	4a0a      	ldr	r2, [pc, #40]	; (8003468 <HAL_RCCEx_PeriphCLKConfig+0x400>)
 800343e:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8003442:	60d3      	str	r3, [r2, #12]
 8003444:	687b      	ldr	r3, [r7, #4]
 8003446:	681b      	ldr	r3, [r3, #0]
 8003448:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 800344c:	2b00      	cmp	r3, #0
 800344e:	d018      	beq.n	8003482 <HAL_RCCEx_PeriphCLKConfig+0x41a>
 8003450:	4b05      	ldr	r3, [pc, #20]	; (8003468 <HAL_RCCEx_PeriphCLKConfig+0x400>)
 8003452:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8003456:	f023 5240 	bic.w	r2, r3, #805306368	; 0x30000000
 800345a:	687b      	ldr	r3, [r7, #4]
 800345c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800345e:	4902      	ldr	r1, [pc, #8]	; (8003468 <HAL_RCCEx_PeriphCLKConfig+0x400>)
 8003460:	4313      	orrs	r3, r2
 8003462:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 8003466:	e001      	b.n	800346c <HAL_RCCEx_PeriphCLKConfig+0x404>
 8003468:	40021000 	.word	0x40021000
 800346c:	687b      	ldr	r3, [r7, #4]
 800346e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8003470:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 8003474:	d105      	bne.n	8003482 <HAL_RCCEx_PeriphCLKConfig+0x41a>
 8003476:	4b21      	ldr	r3, [pc, #132]	; (80034fc <HAL_RCCEx_PeriphCLKConfig+0x494>)
 8003478:	68db      	ldr	r3, [r3, #12]
 800347a:	4a20      	ldr	r2, [pc, #128]	; (80034fc <HAL_RCCEx_PeriphCLKConfig+0x494>)
 800347c:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8003480:	60d3      	str	r3, [r2, #12]
 8003482:	687b      	ldr	r3, [r7, #4]
 8003484:	681b      	ldr	r3, [r3, #0]
 8003486:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 800348a:	2b00      	cmp	r3, #0
 800348c:	d015      	beq.n	80034ba <HAL_RCCEx_PeriphCLKConfig+0x452>
 800348e:	4b1b      	ldr	r3, [pc, #108]	; (80034fc <HAL_RCCEx_PeriphCLKConfig+0x494>)
 8003490:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8003494:	f023 4240 	bic.w	r2, r3, #3221225472	; 0xc0000000
 8003498:	687b      	ldr	r3, [r7, #4]
 800349a:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800349c:	4917      	ldr	r1, [pc, #92]	; (80034fc <HAL_RCCEx_PeriphCLKConfig+0x494>)
 800349e:	4313      	orrs	r3, r2
 80034a0:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 80034a4:	687b      	ldr	r3, [r7, #4]
 80034a6:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80034a8:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80034ac:	d105      	bne.n	80034ba <HAL_RCCEx_PeriphCLKConfig+0x452>
 80034ae:	4b13      	ldr	r3, [pc, #76]	; (80034fc <HAL_RCCEx_PeriphCLKConfig+0x494>)
 80034b0:	68db      	ldr	r3, [r3, #12]
 80034b2:	4a12      	ldr	r2, [pc, #72]	; (80034fc <HAL_RCCEx_PeriphCLKConfig+0x494>)
 80034b4:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80034b8:	60d3      	str	r3, [r2, #12]
 80034ba:	687b      	ldr	r3, [r7, #4]
 80034bc:	681b      	ldr	r3, [r3, #0]
 80034be:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 80034c2:	2b00      	cmp	r3, #0
 80034c4:	d015      	beq.n	80034f2 <HAL_RCCEx_PeriphCLKConfig+0x48a>
 80034c6:	4b0d      	ldr	r3, [pc, #52]	; (80034fc <HAL_RCCEx_PeriphCLKConfig+0x494>)
 80034c8:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 80034cc:	f423 1240 	bic.w	r2, r3, #3145728	; 0x300000
 80034d0:	687b      	ldr	r3, [r7, #4]
 80034d2:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80034d4:	4909      	ldr	r1, [pc, #36]	; (80034fc <HAL_RCCEx_PeriphCLKConfig+0x494>)
 80034d6:	4313      	orrs	r3, r2
 80034d8:	f8c1 309c 	str.w	r3, [r1, #156]	; 0x9c
 80034dc:	687b      	ldr	r3, [r7, #4]
 80034de:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80034e0:	f5b3 1f00 	cmp.w	r3, #2097152	; 0x200000
 80034e4:	d105      	bne.n	80034f2 <HAL_RCCEx_PeriphCLKConfig+0x48a>
 80034e6:	4b05      	ldr	r3, [pc, #20]	; (80034fc <HAL_RCCEx_PeriphCLKConfig+0x494>)
 80034e8:	68db      	ldr	r3, [r3, #12]
 80034ea:	4a04      	ldr	r2, [pc, #16]	; (80034fc <HAL_RCCEx_PeriphCLKConfig+0x494>)
 80034ec:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 80034f0:	60d3      	str	r3, [r2, #12]
 80034f2:	7cbb      	ldrb	r3, [r7, #18]
 80034f4:	4618      	mov	r0, r3
 80034f6:	3718      	adds	r7, #24
 80034f8:	46bd      	mov	sp, r7
 80034fa:	bd80      	pop	{r7, pc}
 80034fc:	40021000 	.word	0x40021000

08003500 <HAL_RTC_Init>:
 8003500:	b580      	push	{r7, lr}
 8003502:	b084      	sub	sp, #16
 8003504:	af00      	add	r7, sp, #0
 8003506:	6078      	str	r0, [r7, #4]
 8003508:	2301      	movs	r3, #1
 800350a:	73fb      	strb	r3, [r7, #15]
 800350c:	687b      	ldr	r3, [r7, #4]
 800350e:	2b00      	cmp	r3, #0
 8003510:	d05c      	beq.n	80035cc <HAL_RTC_Init+0xcc>
 8003512:	687b      	ldr	r3, [r7, #4]
 8003514:	f893 3025 	ldrb.w	r3, [r3, #37]	; 0x25
 8003518:	b2db      	uxtb	r3, r3
 800351a:	2b00      	cmp	r3, #0
 800351c:	d106      	bne.n	800352c <HAL_RTC_Init+0x2c>
 800351e:	687b      	ldr	r3, [r7, #4]
 8003520:	2200      	movs	r2, #0
 8003522:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
 8003526:	6878      	ldr	r0, [r7, #4]
 8003528:	f7fd fd04 	bl	8000f34 <HAL_RTC_MspInit>
 800352c:	687b      	ldr	r3, [r7, #4]
 800352e:	2202      	movs	r2, #2
 8003530:	f883 2025 	strb.w	r2, [r3, #37]	; 0x25
 8003534:	4b28      	ldr	r3, [pc, #160]	; (80035d8 <HAL_RTC_Init+0xd8>)
 8003536:	22ca      	movs	r2, #202	; 0xca
 8003538:	625a      	str	r2, [r3, #36]	; 0x24
 800353a:	4b27      	ldr	r3, [pc, #156]	; (80035d8 <HAL_RTC_Init+0xd8>)
 800353c:	2253      	movs	r2, #83	; 0x53
 800353e:	625a      	str	r2, [r3, #36]	; 0x24
 8003540:	6878      	ldr	r0, [r7, #4]
 8003542:	f000 f98d 	bl	8003860 <RTC_EnterInitMode>
 8003546:	4603      	mov	r3, r0
 8003548:	73fb      	strb	r3, [r7, #15]
 800354a:	7bfb      	ldrb	r3, [r7, #15]
 800354c:	2b00      	cmp	r3, #0
 800354e:	d133      	bne.n	80035b8 <HAL_RTC_Init+0xb8>
 8003550:	4b21      	ldr	r3, [pc, #132]	; (80035d8 <HAL_RTC_Init+0xd8>)
 8003552:	699b      	ldr	r3, [r3, #24]
 8003554:	4a20      	ldr	r2, [pc, #128]	; (80035d8 <HAL_RTC_Init+0xd8>)
 8003556:	f023 638e 	bic.w	r3, r3, #74448896	; 0x4700000
 800355a:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800355e:	6193      	str	r3, [r2, #24]
 8003560:	4b1d      	ldr	r3, [pc, #116]	; (80035d8 <HAL_RTC_Init+0xd8>)
 8003562:	699a      	ldr	r2, [r3, #24]
 8003564:	687b      	ldr	r3, [r7, #4]
 8003566:	6859      	ldr	r1, [r3, #4]
 8003568:	687b      	ldr	r3, [r7, #4]
 800356a:	691b      	ldr	r3, [r3, #16]
 800356c:	4319      	orrs	r1, r3
 800356e:	687b      	ldr	r3, [r7, #4]
 8003570:	699b      	ldr	r3, [r3, #24]
 8003572:	430b      	orrs	r3, r1
 8003574:	4918      	ldr	r1, [pc, #96]	; (80035d8 <HAL_RTC_Init+0xd8>)
 8003576:	4313      	orrs	r3, r2
 8003578:	618b      	str	r3, [r1, #24]
 800357a:	687b      	ldr	r3, [r7, #4]
 800357c:	68da      	ldr	r2, [r3, #12]
 800357e:	687b      	ldr	r3, [r7, #4]
 8003580:	689b      	ldr	r3, [r3, #8]
 8003582:	041b      	lsls	r3, r3, #16
 8003584:	4914      	ldr	r1, [pc, #80]	; (80035d8 <HAL_RTC_Init+0xd8>)
 8003586:	4313      	orrs	r3, r2
 8003588:	610b      	str	r3, [r1, #16]
 800358a:	6878      	ldr	r0, [r7, #4]
 800358c:	f000 f99c 	bl	80038c8 <RTC_ExitInitMode>
 8003590:	4603      	mov	r3, r0
 8003592:	73fb      	strb	r3, [r7, #15]
 8003594:	7bfb      	ldrb	r3, [r7, #15]
 8003596:	2b00      	cmp	r3, #0
 8003598:	d10e      	bne.n	80035b8 <HAL_RTC_Init+0xb8>
 800359a:	4b0f      	ldr	r3, [pc, #60]	; (80035d8 <HAL_RTC_Init+0xd8>)
 800359c:	699b      	ldr	r3, [r3, #24]
 800359e:	f023 4260 	bic.w	r2, r3, #3758096384	; 0xe0000000
 80035a2:	687b      	ldr	r3, [r7, #4]
 80035a4:	6a19      	ldr	r1, [r3, #32]
 80035a6:	687b      	ldr	r3, [r7, #4]
 80035a8:	69db      	ldr	r3, [r3, #28]
 80035aa:	4319      	orrs	r1, r3
 80035ac:	687b      	ldr	r3, [r7, #4]
 80035ae:	695b      	ldr	r3, [r3, #20]
 80035b0:	430b      	orrs	r3, r1
 80035b2:	4909      	ldr	r1, [pc, #36]	; (80035d8 <HAL_RTC_Init+0xd8>)
 80035b4:	4313      	orrs	r3, r2
 80035b6:	618b      	str	r3, [r1, #24]
 80035b8:	4b07      	ldr	r3, [pc, #28]	; (80035d8 <HAL_RTC_Init+0xd8>)
 80035ba:	22ff      	movs	r2, #255	; 0xff
 80035bc:	625a      	str	r2, [r3, #36]	; 0x24
 80035be:	7bfb      	ldrb	r3, [r7, #15]
 80035c0:	2b00      	cmp	r3, #0
 80035c2:	d103      	bne.n	80035cc <HAL_RTC_Init+0xcc>
 80035c4:	687b      	ldr	r3, [r7, #4]
 80035c6:	2201      	movs	r2, #1
 80035c8:	f883 2025 	strb.w	r2, [r3, #37]	; 0x25
 80035cc:	7bfb      	ldrb	r3, [r7, #15]
 80035ce:	4618      	mov	r0, r3
 80035d0:	3710      	adds	r7, #16
 80035d2:	46bd      	mov	sp, r7
 80035d4:	bd80      	pop	{r7, pc}
 80035d6:	bf00      	nop
 80035d8:	40002800 	.word	0x40002800

080035dc <HAL_RTC_SetTime>:
 80035dc:	b590      	push	{r4, r7, lr}
 80035de:	b087      	sub	sp, #28
 80035e0:	af00      	add	r7, sp, #0
 80035e2:	60f8      	str	r0, [r7, #12]
 80035e4:	60b9      	str	r1, [r7, #8]
 80035e6:	607a      	str	r2, [r7, #4]
 80035e8:	68fb      	ldr	r3, [r7, #12]
 80035ea:	f893 3024 	ldrb.w	r3, [r3, #36]	; 0x24
 80035ee:	2b01      	cmp	r3, #1
 80035f0:	d101      	bne.n	80035f6 <HAL_RTC_SetTime+0x1a>
 80035f2:	2302      	movs	r3, #2
 80035f4:	e081      	b.n	80036fa <HAL_RTC_SetTime+0x11e>
 80035f6:	68fb      	ldr	r3, [r7, #12]
 80035f8:	2201      	movs	r2, #1
 80035fa:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
 80035fe:	68fb      	ldr	r3, [r7, #12]
 8003600:	2202      	movs	r2, #2
 8003602:	f883 2025 	strb.w	r2, [r3, #37]	; 0x25
 8003606:	4b3f      	ldr	r3, [pc, #252]	; (8003704 <HAL_RTC_SetTime+0x128>)
 8003608:	22ca      	movs	r2, #202	; 0xca
 800360a:	625a      	str	r2, [r3, #36]	; 0x24
 800360c:	4b3d      	ldr	r3, [pc, #244]	; (8003704 <HAL_RTC_SetTime+0x128>)
 800360e:	2253      	movs	r2, #83	; 0x53
 8003610:	625a      	str	r2, [r3, #36]	; 0x24
 8003612:	68f8      	ldr	r0, [r7, #12]
 8003614:	f000 f924 	bl	8003860 <RTC_EnterInitMode>
 8003618:	4603      	mov	r3, r0
 800361a:	74fb      	strb	r3, [r7, #19]
 800361c:	7cfb      	ldrb	r3, [r7, #19]
 800361e:	2b00      	cmp	r3, #0
 8003620:	d15c      	bne.n	80036dc <HAL_RTC_SetTime+0x100>
 8003622:	687b      	ldr	r3, [r7, #4]
 8003624:	2b00      	cmp	r3, #0
 8003626:	d125      	bne.n	8003674 <HAL_RTC_SetTime+0x98>
 8003628:	4b36      	ldr	r3, [pc, #216]	; (8003704 <HAL_RTC_SetTime+0x128>)
 800362a:	699b      	ldr	r3, [r3, #24]
 800362c:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8003630:	2b00      	cmp	r3, #0
 8003632:	d102      	bne.n	800363a <HAL_RTC_SetTime+0x5e>
 8003634:	68bb      	ldr	r3, [r7, #8]
 8003636:	2200      	movs	r2, #0
 8003638:	70da      	strb	r2, [r3, #3]
 800363a:	68bb      	ldr	r3, [r7, #8]
 800363c:	781b      	ldrb	r3, [r3, #0]
 800363e:	4618      	mov	r0, r3
 8003640:	f000 f980 	bl	8003944 <RTC_ByteToBcd2>
 8003644:	4603      	mov	r3, r0
 8003646:	041c      	lsls	r4, r3, #16
 8003648:	68bb      	ldr	r3, [r7, #8]
 800364a:	785b      	ldrb	r3, [r3, #1]
 800364c:	4618      	mov	r0, r3
 800364e:	f000 f979 	bl	8003944 <RTC_ByteToBcd2>
 8003652:	4603      	mov	r3, r0
 8003654:	021b      	lsls	r3, r3, #8
 8003656:	431c      	orrs	r4, r3
 8003658:	68bb      	ldr	r3, [r7, #8]
 800365a:	789b      	ldrb	r3, [r3, #2]
 800365c:	4618      	mov	r0, r3
 800365e:	f000 f971 	bl	8003944 <RTC_ByteToBcd2>
 8003662:	4603      	mov	r3, r0
 8003664:	ea44 0203 	orr.w	r2, r4, r3
 8003668:	68bb      	ldr	r3, [r7, #8]
 800366a:	78db      	ldrb	r3, [r3, #3]
 800366c:	059b      	lsls	r3, r3, #22
 800366e:	4313      	orrs	r3, r2
 8003670:	617b      	str	r3, [r7, #20]
 8003672:	e017      	b.n	80036a4 <HAL_RTC_SetTime+0xc8>
 8003674:	4b23      	ldr	r3, [pc, #140]	; (8003704 <HAL_RTC_SetTime+0x128>)
 8003676:	699b      	ldr	r3, [r3, #24]
 8003678:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800367c:	2b00      	cmp	r3, #0
 800367e:	d102      	bne.n	8003686 <HAL_RTC_SetTime+0xaa>
 8003680:	68bb      	ldr	r3, [r7, #8]
 8003682:	2200      	movs	r2, #0
 8003684:	70da      	strb	r2, [r3, #3]
 8003686:	68bb      	ldr	r3, [r7, #8]
 8003688:	781b      	ldrb	r3, [r3, #0]
 800368a:	041a      	lsls	r2, r3, #16
 800368c:	68bb      	ldr	r3, [r7, #8]
 800368e:	785b      	ldrb	r3, [r3, #1]
 8003690:	021b      	lsls	r3, r3, #8
 8003692:	4313      	orrs	r3, r2
 8003694:	68ba      	ldr	r2, [r7, #8]
 8003696:	7892      	ldrb	r2, [r2, #2]
 8003698:	431a      	orrs	r2, r3
 800369a:	68bb      	ldr	r3, [r7, #8]
 800369c:	78db      	ldrb	r3, [r3, #3]
 800369e:	059b      	lsls	r3, r3, #22
 80036a0:	4313      	orrs	r3, r2
 80036a2:	617b      	str	r3, [r7, #20]
 80036a4:	4a17      	ldr	r2, [pc, #92]	; (8003704 <HAL_RTC_SetTime+0x128>)
 80036a6:	697b      	ldr	r3, [r7, #20]
 80036a8:	f003 337f 	and.w	r3, r3, #2139062143	; 0x7f7f7f7f
 80036ac:	f023 43fe 	bic.w	r3, r3, #2130706432	; 0x7f000000
 80036b0:	6013      	str	r3, [r2, #0]
 80036b2:	4b14      	ldr	r3, [pc, #80]	; (8003704 <HAL_RTC_SetTime+0x128>)
 80036b4:	699b      	ldr	r3, [r3, #24]
 80036b6:	4a13      	ldr	r2, [pc, #76]	; (8003704 <HAL_RTC_SetTime+0x128>)
 80036b8:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 80036bc:	6193      	str	r3, [r2, #24]
 80036be:	4b11      	ldr	r3, [pc, #68]	; (8003704 <HAL_RTC_SetTime+0x128>)
 80036c0:	699a      	ldr	r2, [r3, #24]
 80036c2:	68bb      	ldr	r3, [r7, #8]
 80036c4:	68d9      	ldr	r1, [r3, #12]
 80036c6:	68bb      	ldr	r3, [r7, #8]
 80036c8:	691b      	ldr	r3, [r3, #16]
 80036ca:	430b      	orrs	r3, r1
 80036cc:	490d      	ldr	r1, [pc, #52]	; (8003704 <HAL_RTC_SetTime+0x128>)
 80036ce:	4313      	orrs	r3, r2
 80036d0:	618b      	str	r3, [r1, #24]
 80036d2:	68f8      	ldr	r0, [r7, #12]
 80036d4:	f000 f8f8 	bl	80038c8 <RTC_ExitInitMode>
 80036d8:	4603      	mov	r3, r0
 80036da:	74fb      	strb	r3, [r7, #19]
 80036dc:	4b09      	ldr	r3, [pc, #36]	; (8003704 <HAL_RTC_SetTime+0x128>)
 80036de:	22ff      	movs	r2, #255	; 0xff
 80036e0:	625a      	str	r2, [r3, #36]	; 0x24
 80036e2:	7cfb      	ldrb	r3, [r7, #19]
 80036e4:	2b00      	cmp	r3, #0
 80036e6:	d103      	bne.n	80036f0 <HAL_RTC_SetTime+0x114>
 80036e8:	68fb      	ldr	r3, [r7, #12]
 80036ea:	2201      	movs	r2, #1
 80036ec:	f883 2025 	strb.w	r2, [r3, #37]	; 0x25
 80036f0:	68fb      	ldr	r3, [r7, #12]
 80036f2:	2200      	movs	r2, #0
 80036f4:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
 80036f8:	7cfb      	ldrb	r3, [r7, #19]
 80036fa:	4618      	mov	r0, r3
 80036fc:	371c      	adds	r7, #28
 80036fe:	46bd      	mov	sp, r7
 8003700:	bd90      	pop	{r4, r7, pc}
 8003702:	bf00      	nop
 8003704:	40002800 	.word	0x40002800

08003708 <HAL_RTC_SetDate>:
 8003708:	b590      	push	{r4, r7, lr}
 800370a:	b087      	sub	sp, #28
 800370c:	af00      	add	r7, sp, #0
 800370e:	60f8      	str	r0, [r7, #12]
 8003710:	60b9      	str	r1, [r7, #8]
 8003712:	607a      	str	r2, [r7, #4]
 8003714:	68fb      	ldr	r3, [r7, #12]
 8003716:	f893 3024 	ldrb.w	r3, [r3, #36]	; 0x24
 800371a:	2b01      	cmp	r3, #1
 800371c:	d101      	bne.n	8003722 <HAL_RTC_SetDate+0x1a>
 800371e:	2302      	movs	r3, #2
 8003720:	e071      	b.n	8003806 <HAL_RTC_SetDate+0xfe>
 8003722:	68fb      	ldr	r3, [r7, #12]
 8003724:	2201      	movs	r2, #1
 8003726:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
 800372a:	68fb      	ldr	r3, [r7, #12]
 800372c:	2202      	movs	r2, #2
 800372e:	f883 2025 	strb.w	r2, [r3, #37]	; 0x25
 8003732:	687b      	ldr	r3, [r7, #4]
 8003734:	2b00      	cmp	r3, #0
 8003736:	d10e      	bne.n	8003756 <HAL_RTC_SetDate+0x4e>
 8003738:	68bb      	ldr	r3, [r7, #8]
 800373a:	785b      	ldrb	r3, [r3, #1]
 800373c:	f003 0310 	and.w	r3, r3, #16
 8003740:	2b00      	cmp	r3, #0
 8003742:	d008      	beq.n	8003756 <HAL_RTC_SetDate+0x4e>
 8003744:	68bb      	ldr	r3, [r7, #8]
 8003746:	785b      	ldrb	r3, [r3, #1]
 8003748:	f023 0310 	bic.w	r3, r3, #16
 800374c:	b2db      	uxtb	r3, r3
 800374e:	330a      	adds	r3, #10
 8003750:	b2da      	uxtb	r2, r3
 8003752:	68bb      	ldr	r3, [r7, #8]
 8003754:	705a      	strb	r2, [r3, #1]
 8003756:	687b      	ldr	r3, [r7, #4]
 8003758:	2b00      	cmp	r3, #0
 800375a:	d11c      	bne.n	8003796 <HAL_RTC_SetDate+0x8e>
 800375c:	68bb      	ldr	r3, [r7, #8]
 800375e:	78db      	ldrb	r3, [r3, #3]
 8003760:	4618      	mov	r0, r3
 8003762:	f000 f8ef 	bl	8003944 <RTC_ByteToBcd2>
 8003766:	4603      	mov	r3, r0
 8003768:	041c      	lsls	r4, r3, #16
 800376a:	68bb      	ldr	r3, [r7, #8]
 800376c:	785b      	ldrb	r3, [r3, #1]
 800376e:	4618      	mov	r0, r3
 8003770:	f000 f8e8 	bl	8003944 <RTC_ByteToBcd2>
 8003774:	4603      	mov	r3, r0
 8003776:	021b      	lsls	r3, r3, #8
 8003778:	431c      	orrs	r4, r3
 800377a:	68bb      	ldr	r3, [r7, #8]
 800377c:	789b      	ldrb	r3, [r3, #2]
 800377e:	4618      	mov	r0, r3
 8003780:	f000 f8e0 	bl	8003944 <RTC_ByteToBcd2>
 8003784:	4603      	mov	r3, r0
 8003786:	ea44 0203 	orr.w	r2, r4, r3
 800378a:	68bb      	ldr	r3, [r7, #8]
 800378c:	781b      	ldrb	r3, [r3, #0]
 800378e:	035b      	lsls	r3, r3, #13
 8003790:	4313      	orrs	r3, r2
 8003792:	617b      	str	r3, [r7, #20]
 8003794:	e00e      	b.n	80037b4 <HAL_RTC_SetDate+0xac>
 8003796:	68bb      	ldr	r3, [r7, #8]
 8003798:	78db      	ldrb	r3, [r3, #3]
 800379a:	041a      	lsls	r2, r3, #16
 800379c:	68bb      	ldr	r3, [r7, #8]
 800379e:	785b      	ldrb	r3, [r3, #1]
 80037a0:	021b      	lsls	r3, r3, #8
 80037a2:	4313      	orrs	r3, r2
 80037a4:	68ba      	ldr	r2, [r7, #8]
 80037a6:	7892      	ldrb	r2, [r2, #2]
 80037a8:	431a      	orrs	r2, r3
 80037aa:	68bb      	ldr	r3, [r7, #8]
 80037ac:	781b      	ldrb	r3, [r3, #0]
 80037ae:	035b      	lsls	r3, r3, #13
 80037b0:	4313      	orrs	r3, r2
 80037b2:	617b      	str	r3, [r7, #20]
 80037b4:	4b16      	ldr	r3, [pc, #88]	; (8003810 <HAL_RTC_SetDate+0x108>)
 80037b6:	22ca      	movs	r2, #202	; 0xca
 80037b8:	625a      	str	r2, [r3, #36]	; 0x24
 80037ba:	4b15      	ldr	r3, [pc, #84]	; (8003810 <HAL_RTC_SetDate+0x108>)
 80037bc:	2253      	movs	r2, #83	; 0x53
 80037be:	625a      	str	r2, [r3, #36]	; 0x24
 80037c0:	68f8      	ldr	r0, [r7, #12]
 80037c2:	f000 f84d 	bl	8003860 <RTC_EnterInitMode>
 80037c6:	4603      	mov	r3, r0
 80037c8:	74fb      	strb	r3, [r7, #19]
 80037ca:	7cfb      	ldrb	r3, [r7, #19]
 80037cc:	2b00      	cmp	r3, #0
 80037ce:	d10b      	bne.n	80037e8 <HAL_RTC_SetDate+0xe0>
 80037d0:	4a0f      	ldr	r2, [pc, #60]	; (8003810 <HAL_RTC_SetDate+0x108>)
 80037d2:	697b      	ldr	r3, [r7, #20]
 80037d4:	f023 437f 	bic.w	r3, r3, #4278190080	; 0xff000000
 80037d8:	f023 03c0 	bic.w	r3, r3, #192	; 0xc0
 80037dc:	6053      	str	r3, [r2, #4]
 80037de:	68f8      	ldr	r0, [r7, #12]
 80037e0:	f000 f872 	bl	80038c8 <RTC_ExitInitMode>
 80037e4:	4603      	mov	r3, r0
 80037e6:	74fb      	strb	r3, [r7, #19]
 80037e8:	4b09      	ldr	r3, [pc, #36]	; (8003810 <HAL_RTC_SetDate+0x108>)
 80037ea:	22ff      	movs	r2, #255	; 0xff
 80037ec:	625a      	str	r2, [r3, #36]	; 0x24
 80037ee:	7cfb      	ldrb	r3, [r7, #19]
 80037f0:	2b00      	cmp	r3, #0
 80037f2:	d103      	bne.n	80037fc <HAL_RTC_SetDate+0xf4>
 80037f4:	68fb      	ldr	r3, [r7, #12]
 80037f6:	2201      	movs	r2, #1
 80037f8:	f883 2025 	strb.w	r2, [r3, #37]	; 0x25
 80037fc:	68fb      	ldr	r3, [r7, #12]
 80037fe:	2200      	movs	r2, #0
 8003800:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
 8003804:	7cfb      	ldrb	r3, [r7, #19]
 8003806:	4618      	mov	r0, r3
 8003808:	371c      	adds	r7, #28
 800380a:	46bd      	mov	sp, r7
 800380c:	bd90      	pop	{r4, r7, pc}
 800380e:	bf00      	nop
 8003810:	40002800 	.word	0x40002800

08003814 <HAL_RTC_WaitForSynchro>:
 8003814:	b580      	push	{r7, lr}
 8003816:	b084      	sub	sp, #16
 8003818:	af00      	add	r7, sp, #0
 800381a:	6078      	str	r0, [r7, #4]
 800381c:	4b0f      	ldr	r3, [pc, #60]	; (800385c <HAL_RTC_WaitForSynchro+0x48>)
 800381e:	68db      	ldr	r3, [r3, #12]
 8003820:	4a0e      	ldr	r2, [pc, #56]	; (800385c <HAL_RTC_WaitForSynchro+0x48>)
 8003822:	f063 03a0 	orn	r3, r3, #160	; 0xa0
 8003826:	60d3      	str	r3, [r2, #12]
 8003828:	f7fd fcf2 	bl	8001210 <HAL_GetTick>
 800382c:	60f8      	str	r0, [r7, #12]
 800382e:	e009      	b.n	8003844 <HAL_RTC_WaitForSynchro+0x30>
 8003830:	f7fd fcee 	bl	8001210 <HAL_GetTick>
 8003834:	4602      	mov	r2, r0
 8003836:	68fb      	ldr	r3, [r7, #12]
 8003838:	1ad3      	subs	r3, r2, r3
 800383a:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 800383e:	d901      	bls.n	8003844 <HAL_RTC_WaitForSynchro+0x30>
 8003840:	2303      	movs	r3, #3
 8003842:	e006      	b.n	8003852 <HAL_RTC_WaitForSynchro+0x3e>
 8003844:	4b05      	ldr	r3, [pc, #20]	; (800385c <HAL_RTC_WaitForSynchro+0x48>)
 8003846:	68db      	ldr	r3, [r3, #12]
 8003848:	f003 0320 	and.w	r3, r3, #32
 800384c:	2b00      	cmp	r3, #0
 800384e:	d0ef      	beq.n	8003830 <HAL_RTC_WaitForSynchro+0x1c>
 8003850:	2300      	movs	r3, #0
 8003852:	4618      	mov	r0, r3
 8003854:	3710      	adds	r7, #16
 8003856:	46bd      	mov	sp, r7
 8003858:	bd80      	pop	{r7, pc}
 800385a:	bf00      	nop
 800385c:	40002800 	.word	0x40002800

08003860 <RTC_EnterInitMode>:
 8003860:	b580      	push	{r7, lr}
 8003862:	b084      	sub	sp, #16
 8003864:	af00      	add	r7, sp, #0
 8003866:	6078      	str	r0, [r7, #4]
 8003868:	2300      	movs	r3, #0
 800386a:	73fb      	strb	r3, [r7, #15]
 800386c:	4b15      	ldr	r3, [pc, #84]	; (80038c4 <RTC_EnterInitMode+0x64>)
 800386e:	68db      	ldr	r3, [r3, #12]
 8003870:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8003874:	2b00      	cmp	r3, #0
 8003876:	d120      	bne.n	80038ba <RTC_EnterInitMode+0x5a>
 8003878:	4b12      	ldr	r3, [pc, #72]	; (80038c4 <RTC_EnterInitMode+0x64>)
 800387a:	68db      	ldr	r3, [r3, #12]
 800387c:	4a11      	ldr	r2, [pc, #68]	; (80038c4 <RTC_EnterInitMode+0x64>)
 800387e:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8003882:	60d3      	str	r3, [r2, #12]
 8003884:	f7fd fcc4 	bl	8001210 <HAL_GetTick>
 8003888:	60b8      	str	r0, [r7, #8]
 800388a:	e00d      	b.n	80038a8 <RTC_EnterInitMode+0x48>
 800388c:	f7fd fcc0 	bl	8001210 <HAL_GetTick>
 8003890:	4602      	mov	r2, r0
 8003892:	68bb      	ldr	r3, [r7, #8]
 8003894:	1ad3      	subs	r3, r2, r3
 8003896:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 800389a:	d905      	bls.n	80038a8 <RTC_EnterInitMode+0x48>
 800389c:	2303      	movs	r3, #3
 800389e:	73fb      	strb	r3, [r7, #15]
 80038a0:	687b      	ldr	r3, [r7, #4]
 80038a2:	2203      	movs	r2, #3
 80038a4:	f883 2025 	strb.w	r2, [r3, #37]	; 0x25
 80038a8:	4b06      	ldr	r3, [pc, #24]	; (80038c4 <RTC_EnterInitMode+0x64>)
 80038aa:	68db      	ldr	r3, [r3, #12]
 80038ac:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80038b0:	2b00      	cmp	r3, #0
 80038b2:	d102      	bne.n	80038ba <RTC_EnterInitMode+0x5a>
 80038b4:	7bfb      	ldrb	r3, [r7, #15]
 80038b6:	2b03      	cmp	r3, #3
 80038b8:	d1e8      	bne.n	800388c <RTC_EnterInitMode+0x2c>
 80038ba:	7bfb      	ldrb	r3, [r7, #15]
 80038bc:	4618      	mov	r0, r3
 80038be:	3710      	adds	r7, #16
 80038c0:	46bd      	mov	sp, r7
 80038c2:	bd80      	pop	{r7, pc}
 80038c4:	40002800 	.word	0x40002800

080038c8 <RTC_ExitInitMode>:
 80038c8:	b580      	push	{r7, lr}
 80038ca:	b084      	sub	sp, #16
 80038cc:	af00      	add	r7, sp, #0
 80038ce:	6078      	str	r0, [r7, #4]
 80038d0:	2300      	movs	r3, #0
 80038d2:	73fb      	strb	r3, [r7, #15]
 80038d4:	4b1a      	ldr	r3, [pc, #104]	; (8003940 <RTC_ExitInitMode+0x78>)
 80038d6:	68db      	ldr	r3, [r3, #12]
 80038d8:	4a19      	ldr	r2, [pc, #100]	; (8003940 <RTC_ExitInitMode+0x78>)
 80038da:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 80038de:	60d3      	str	r3, [r2, #12]
 80038e0:	4b17      	ldr	r3, [pc, #92]	; (8003940 <RTC_ExitInitMode+0x78>)
 80038e2:	699b      	ldr	r3, [r3, #24]
 80038e4:	f003 0320 	and.w	r3, r3, #32
 80038e8:	2b00      	cmp	r3, #0
 80038ea:	d10c      	bne.n	8003906 <RTC_ExitInitMode+0x3e>
 80038ec:	6878      	ldr	r0, [r7, #4]
 80038ee:	f7ff ff91 	bl	8003814 <HAL_RTC_WaitForSynchro>
 80038f2:	4603      	mov	r3, r0
 80038f4:	2b00      	cmp	r3, #0
 80038f6:	d01e      	beq.n	8003936 <RTC_ExitInitMode+0x6e>
 80038f8:	687b      	ldr	r3, [r7, #4]
 80038fa:	2203      	movs	r2, #3
 80038fc:	f883 2025 	strb.w	r2, [r3, #37]	; 0x25
 8003900:	2303      	movs	r3, #3
 8003902:	73fb      	strb	r3, [r7, #15]
 8003904:	e017      	b.n	8003936 <RTC_ExitInitMode+0x6e>
 8003906:	4b0e      	ldr	r3, [pc, #56]	; (8003940 <RTC_ExitInitMode+0x78>)
 8003908:	699b      	ldr	r3, [r3, #24]
 800390a:	4a0d      	ldr	r2, [pc, #52]	; (8003940 <RTC_ExitInitMode+0x78>)
 800390c:	f023 0320 	bic.w	r3, r3, #32
 8003910:	6193      	str	r3, [r2, #24]
 8003912:	6878      	ldr	r0, [r7, #4]
 8003914:	f7ff ff7e 	bl	8003814 <HAL_RTC_WaitForSynchro>
 8003918:	4603      	mov	r3, r0
 800391a:	2b00      	cmp	r3, #0
 800391c:	d005      	beq.n	800392a <RTC_ExitInitMode+0x62>
 800391e:	687b      	ldr	r3, [r7, #4]
 8003920:	2203      	movs	r2, #3
 8003922:	f883 2025 	strb.w	r2, [r3, #37]	; 0x25
 8003926:	2303      	movs	r3, #3
 8003928:	73fb      	strb	r3, [r7, #15]
 800392a:	4b05      	ldr	r3, [pc, #20]	; (8003940 <RTC_ExitInitMode+0x78>)
 800392c:	699b      	ldr	r3, [r3, #24]
 800392e:	4a04      	ldr	r2, [pc, #16]	; (8003940 <RTC_ExitInitMode+0x78>)
 8003930:	f043 0320 	orr.w	r3, r3, #32
 8003934:	6193      	str	r3, [r2, #24]
 8003936:	7bfb      	ldrb	r3, [r7, #15]
 8003938:	4618      	mov	r0, r3
 800393a:	3710      	adds	r7, #16
 800393c:	46bd      	mov	sp, r7
 800393e:	bd80      	pop	{r7, pc}
 8003940:	40002800 	.word	0x40002800

08003944 <RTC_ByteToBcd2>:
 8003944:	b480      	push	{r7}
 8003946:	b085      	sub	sp, #20
 8003948:	af00      	add	r7, sp, #0
 800394a:	4603      	mov	r3, r0
 800394c:	71fb      	strb	r3, [r7, #7]
 800394e:	2300      	movs	r3, #0
 8003950:	60fb      	str	r3, [r7, #12]
 8003952:	79fb      	ldrb	r3, [r7, #7]
 8003954:	72fb      	strb	r3, [r7, #11]
 8003956:	e005      	b.n	8003964 <RTC_ByteToBcd2+0x20>
 8003958:	68fb      	ldr	r3, [r7, #12]
 800395a:	3301      	adds	r3, #1
 800395c:	60fb      	str	r3, [r7, #12]
 800395e:	7afb      	ldrb	r3, [r7, #11]
 8003960:	3b0a      	subs	r3, #10
 8003962:	72fb      	strb	r3, [r7, #11]
 8003964:	7afb      	ldrb	r3, [r7, #11]
 8003966:	2b09      	cmp	r3, #9
 8003968:	d8f6      	bhi.n	8003958 <RTC_ByteToBcd2+0x14>
 800396a:	68fb      	ldr	r3, [r7, #12]
 800396c:	b2db      	uxtb	r3, r3
 800396e:	011b      	lsls	r3, r3, #4
 8003970:	b2da      	uxtb	r2, r3
 8003972:	7afb      	ldrb	r3, [r7, #11]
 8003974:	4313      	orrs	r3, r2
 8003976:	b2db      	uxtb	r3, r3
 8003978:	4618      	mov	r0, r3
 800397a:	3714      	adds	r7, #20
 800397c:	46bd      	mov	sp, r7
 800397e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003982:	4770      	bx	lr

08003984 <HAL_SPI_Init>:
 8003984:	b580      	push	{r7, lr}
 8003986:	b084      	sub	sp, #16
 8003988:	af00      	add	r7, sp, #0
 800398a:	6078      	str	r0, [r7, #4]
 800398c:	687b      	ldr	r3, [r7, #4]
 800398e:	2b00      	cmp	r3, #0
 8003990:	d101      	bne.n	8003996 <HAL_SPI_Init+0x12>
 8003992:	2301      	movs	r3, #1
 8003994:	e084      	b.n	8003aa0 <HAL_SPI_Init+0x11c>
 8003996:	687b      	ldr	r3, [r7, #4]
 8003998:	2200      	movs	r2, #0
 800399a:	629a      	str	r2, [r3, #40]	; 0x28
 800399c:	687b      	ldr	r3, [r7, #4]
 800399e:	f893 305d 	ldrb.w	r3, [r3, #93]	; 0x5d
 80039a2:	b2db      	uxtb	r3, r3
 80039a4:	2b00      	cmp	r3, #0
 80039a6:	d106      	bne.n	80039b6 <HAL_SPI_Init+0x32>
 80039a8:	687b      	ldr	r3, [r7, #4]
 80039aa:	2200      	movs	r2, #0
 80039ac:	f883 205c 	strb.w	r2, [r3, #92]	; 0x5c
 80039b0:	6878      	ldr	r0, [r7, #4]
 80039b2:	f7fd fadb 	bl	8000f6c <HAL_SPI_MspInit>
 80039b6:	687b      	ldr	r3, [r7, #4]
 80039b8:	2202      	movs	r2, #2
 80039ba:	f883 205d 	strb.w	r2, [r3, #93]	; 0x5d
 80039be:	687b      	ldr	r3, [r7, #4]
 80039c0:	681b      	ldr	r3, [r3, #0]
 80039c2:	681a      	ldr	r2, [r3, #0]
 80039c4:	687b      	ldr	r3, [r7, #4]
 80039c6:	681b      	ldr	r3, [r3, #0]
 80039c8:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 80039cc:	601a      	str	r2, [r3, #0]
 80039ce:	687b      	ldr	r3, [r7, #4]
 80039d0:	68db      	ldr	r3, [r3, #12]
 80039d2:	f5b3 6fe0 	cmp.w	r3, #1792	; 0x700
 80039d6:	d902      	bls.n	80039de <HAL_SPI_Init+0x5a>
 80039d8:	2300      	movs	r3, #0
 80039da:	60fb      	str	r3, [r7, #12]
 80039dc:	e002      	b.n	80039e4 <HAL_SPI_Init+0x60>
 80039de:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80039e2:	60fb      	str	r3, [r7, #12]
 80039e4:	687b      	ldr	r3, [r7, #4]
 80039e6:	68db      	ldr	r3, [r3, #12]
 80039e8:	f5b3 6f70 	cmp.w	r3, #3840	; 0xf00
 80039ec:	d007      	beq.n	80039fe <HAL_SPI_Init+0x7a>
 80039ee:	687b      	ldr	r3, [r7, #4]
 80039f0:	68db      	ldr	r3, [r3, #12]
 80039f2:	f5b3 6fe0 	cmp.w	r3, #1792	; 0x700
 80039f6:	d002      	beq.n	80039fe <HAL_SPI_Init+0x7a>
 80039f8:	687b      	ldr	r3, [r7, #4]
 80039fa:	2200      	movs	r2, #0
 80039fc:	629a      	str	r2, [r3, #40]	; 0x28
 80039fe:	687b      	ldr	r3, [r7, #4]
 8003a00:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003a02:	2b00      	cmp	r3, #0
 8003a04:	d10b      	bne.n	8003a1e <HAL_SPI_Init+0x9a>
 8003a06:	687b      	ldr	r3, [r7, #4]
 8003a08:	68db      	ldr	r3, [r3, #12]
 8003a0a:	f5b3 6fe0 	cmp.w	r3, #1792	; 0x700
 8003a0e:	d903      	bls.n	8003a18 <HAL_SPI_Init+0x94>
 8003a10:	687b      	ldr	r3, [r7, #4]
 8003a12:	2202      	movs	r2, #2
 8003a14:	631a      	str	r2, [r3, #48]	; 0x30
 8003a16:	e002      	b.n	8003a1e <HAL_SPI_Init+0x9a>
 8003a18:	687b      	ldr	r3, [r7, #4]
 8003a1a:	2201      	movs	r2, #1
 8003a1c:	631a      	str	r2, [r3, #48]	; 0x30
 8003a1e:	687b      	ldr	r3, [r7, #4]
 8003a20:	685a      	ldr	r2, [r3, #4]
 8003a22:	687b      	ldr	r3, [r7, #4]
 8003a24:	689b      	ldr	r3, [r3, #8]
 8003a26:	431a      	orrs	r2, r3
 8003a28:	687b      	ldr	r3, [r7, #4]
 8003a2a:	691b      	ldr	r3, [r3, #16]
 8003a2c:	431a      	orrs	r2, r3
 8003a2e:	687b      	ldr	r3, [r7, #4]
 8003a30:	695b      	ldr	r3, [r3, #20]
 8003a32:	431a      	orrs	r2, r3
 8003a34:	687b      	ldr	r3, [r7, #4]
 8003a36:	699b      	ldr	r3, [r3, #24]
 8003a38:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8003a3c:	431a      	orrs	r2, r3
 8003a3e:	687b      	ldr	r3, [r7, #4]
 8003a40:	69db      	ldr	r3, [r3, #28]
 8003a42:	431a      	orrs	r2, r3
 8003a44:	687b      	ldr	r3, [r7, #4]
 8003a46:	6a1b      	ldr	r3, [r3, #32]
 8003a48:	ea42 0103 	orr.w	r1, r2, r3
 8003a4c:	687b      	ldr	r3, [r7, #4]
 8003a4e:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8003a50:	687b      	ldr	r3, [r7, #4]
 8003a52:	681b      	ldr	r3, [r3, #0]
 8003a54:	430a      	orrs	r2, r1
 8003a56:	601a      	str	r2, [r3, #0]
 8003a58:	687b      	ldr	r3, [r7, #4]
 8003a5a:	699b      	ldr	r3, [r3, #24]
 8003a5c:	0c1b      	lsrs	r3, r3, #16
 8003a5e:	f003 0204 	and.w	r2, r3, #4
 8003a62:	687b      	ldr	r3, [r7, #4]
 8003a64:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003a66:	431a      	orrs	r2, r3
 8003a68:	687b      	ldr	r3, [r7, #4]
 8003a6a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8003a6c:	431a      	orrs	r2, r3
 8003a6e:	687b      	ldr	r3, [r7, #4]
 8003a70:	68db      	ldr	r3, [r3, #12]
 8003a72:	ea42 0103 	orr.w	r1, r2, r3
 8003a76:	687b      	ldr	r3, [r7, #4]
 8003a78:	681b      	ldr	r3, [r3, #0]
 8003a7a:	68fa      	ldr	r2, [r7, #12]
 8003a7c:	430a      	orrs	r2, r1
 8003a7e:	605a      	str	r2, [r3, #4]
 8003a80:	687b      	ldr	r3, [r7, #4]
 8003a82:	681b      	ldr	r3, [r3, #0]
 8003a84:	69da      	ldr	r2, [r3, #28]
 8003a86:	687b      	ldr	r3, [r7, #4]
 8003a88:	681b      	ldr	r3, [r3, #0]
 8003a8a:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8003a8e:	61da      	str	r2, [r3, #28]
 8003a90:	687b      	ldr	r3, [r7, #4]
 8003a92:	2200      	movs	r2, #0
 8003a94:	661a      	str	r2, [r3, #96]	; 0x60
 8003a96:	687b      	ldr	r3, [r7, #4]
 8003a98:	2201      	movs	r2, #1
 8003a9a:	f883 205d 	strb.w	r2, [r3, #93]	; 0x5d
 8003a9e:	2300      	movs	r3, #0
 8003aa0:	4618      	mov	r0, r3
 8003aa2:	3710      	adds	r7, #16
 8003aa4:	46bd      	mov	sp, r7
 8003aa6:	bd80      	pop	{r7, pc}

08003aa8 <HAL_SPI_Transmit>:
 8003aa8:	b580      	push	{r7, lr}
 8003aaa:	b088      	sub	sp, #32
 8003aac:	af00      	add	r7, sp, #0
 8003aae:	60f8      	str	r0, [r7, #12]
 8003ab0:	60b9      	str	r1, [r7, #8]
 8003ab2:	603b      	str	r3, [r7, #0]
 8003ab4:	4613      	mov	r3, r2
 8003ab6:	80fb      	strh	r3, [r7, #6]
 8003ab8:	2300      	movs	r3, #0
 8003aba:	77fb      	strb	r3, [r7, #31]
 8003abc:	68fb      	ldr	r3, [r7, #12]
 8003abe:	f893 305c 	ldrb.w	r3, [r3, #92]	; 0x5c
 8003ac2:	2b01      	cmp	r3, #1
 8003ac4:	d101      	bne.n	8003aca <HAL_SPI_Transmit+0x22>
 8003ac6:	2302      	movs	r3, #2
 8003ac8:	e150      	b.n	8003d6c <HAL_SPI_Transmit+0x2c4>
 8003aca:	68fb      	ldr	r3, [r7, #12]
 8003acc:	2201      	movs	r2, #1
 8003ace:	f883 205c 	strb.w	r2, [r3, #92]	; 0x5c
 8003ad2:	f7fd fb9d 	bl	8001210 <HAL_GetTick>
 8003ad6:	61b8      	str	r0, [r7, #24]
 8003ad8:	88fb      	ldrh	r3, [r7, #6]
 8003ada:	82fb      	strh	r3, [r7, #22]
 8003adc:	68fb      	ldr	r3, [r7, #12]
 8003ade:	f893 305d 	ldrb.w	r3, [r3, #93]	; 0x5d
 8003ae2:	b2db      	uxtb	r3, r3
 8003ae4:	2b01      	cmp	r3, #1
 8003ae6:	d002      	beq.n	8003aee <HAL_SPI_Transmit+0x46>
 8003ae8:	2302      	movs	r3, #2
 8003aea:	77fb      	strb	r3, [r7, #31]
 8003aec:	e135      	b.n	8003d5a <HAL_SPI_Transmit+0x2b2>
 8003aee:	68bb      	ldr	r3, [r7, #8]
 8003af0:	2b00      	cmp	r3, #0
 8003af2:	d002      	beq.n	8003afa <HAL_SPI_Transmit+0x52>
 8003af4:	88fb      	ldrh	r3, [r7, #6]
 8003af6:	2b00      	cmp	r3, #0
 8003af8:	d102      	bne.n	8003b00 <HAL_SPI_Transmit+0x58>
 8003afa:	2301      	movs	r3, #1
 8003afc:	77fb      	strb	r3, [r7, #31]
 8003afe:	e12c      	b.n	8003d5a <HAL_SPI_Transmit+0x2b2>
 8003b00:	68fb      	ldr	r3, [r7, #12]
 8003b02:	2203      	movs	r2, #3
 8003b04:	f883 205d 	strb.w	r2, [r3, #93]	; 0x5d
 8003b08:	68fb      	ldr	r3, [r7, #12]
 8003b0a:	2200      	movs	r2, #0
 8003b0c:	661a      	str	r2, [r3, #96]	; 0x60
 8003b0e:	68fb      	ldr	r3, [r7, #12]
 8003b10:	68ba      	ldr	r2, [r7, #8]
 8003b12:	639a      	str	r2, [r3, #56]	; 0x38
 8003b14:	68fb      	ldr	r3, [r7, #12]
 8003b16:	88fa      	ldrh	r2, [r7, #6]
 8003b18:	879a      	strh	r2, [r3, #60]	; 0x3c
 8003b1a:	68fb      	ldr	r3, [r7, #12]
 8003b1c:	88fa      	ldrh	r2, [r7, #6]
 8003b1e:	87da      	strh	r2, [r3, #62]	; 0x3e
 8003b20:	68fb      	ldr	r3, [r7, #12]
 8003b22:	2200      	movs	r2, #0
 8003b24:	641a      	str	r2, [r3, #64]	; 0x40
 8003b26:	68fb      	ldr	r3, [r7, #12]
 8003b28:	2200      	movs	r2, #0
 8003b2a:	f8a3 2044 	strh.w	r2, [r3, #68]	; 0x44
 8003b2e:	68fb      	ldr	r3, [r7, #12]
 8003b30:	2200      	movs	r2, #0
 8003b32:	f8a3 2046 	strh.w	r2, [r3, #70]	; 0x46
 8003b36:	68fb      	ldr	r3, [r7, #12]
 8003b38:	2200      	movs	r2, #0
 8003b3a:	651a      	str	r2, [r3, #80]	; 0x50
 8003b3c:	68fb      	ldr	r3, [r7, #12]
 8003b3e:	2200      	movs	r2, #0
 8003b40:	64da      	str	r2, [r3, #76]	; 0x4c
 8003b42:	68fb      	ldr	r3, [r7, #12]
 8003b44:	689b      	ldr	r3, [r3, #8]
 8003b46:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8003b4a:	d107      	bne.n	8003b5c <HAL_SPI_Transmit+0xb4>
 8003b4c:	68fb      	ldr	r3, [r7, #12]
 8003b4e:	681b      	ldr	r3, [r3, #0]
 8003b50:	681a      	ldr	r2, [r3, #0]
 8003b52:	68fb      	ldr	r3, [r7, #12]
 8003b54:	681b      	ldr	r3, [r3, #0]
 8003b56:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8003b5a:	601a      	str	r2, [r3, #0]
 8003b5c:	68fb      	ldr	r3, [r7, #12]
 8003b5e:	681b      	ldr	r3, [r3, #0]
 8003b60:	681b      	ldr	r3, [r3, #0]
 8003b62:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8003b66:	2b40      	cmp	r3, #64	; 0x40
 8003b68:	d007      	beq.n	8003b7a <HAL_SPI_Transmit+0xd2>
 8003b6a:	68fb      	ldr	r3, [r7, #12]
 8003b6c:	681b      	ldr	r3, [r3, #0]
 8003b6e:	681a      	ldr	r2, [r3, #0]
 8003b70:	68fb      	ldr	r3, [r7, #12]
 8003b72:	681b      	ldr	r3, [r3, #0]
 8003b74:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8003b78:	601a      	str	r2, [r3, #0]
 8003b7a:	68fb      	ldr	r3, [r7, #12]
 8003b7c:	68db      	ldr	r3, [r3, #12]
 8003b7e:	f5b3 6fe0 	cmp.w	r3, #1792	; 0x700
 8003b82:	d94b      	bls.n	8003c1c <HAL_SPI_Transmit+0x174>
 8003b84:	68fb      	ldr	r3, [r7, #12]
 8003b86:	685b      	ldr	r3, [r3, #4]
 8003b88:	2b00      	cmp	r3, #0
 8003b8a:	d002      	beq.n	8003b92 <HAL_SPI_Transmit+0xea>
 8003b8c:	8afb      	ldrh	r3, [r7, #22]
 8003b8e:	2b01      	cmp	r3, #1
 8003b90:	d13e      	bne.n	8003c10 <HAL_SPI_Transmit+0x168>
 8003b92:	68fb      	ldr	r3, [r7, #12]
 8003b94:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8003b96:	881a      	ldrh	r2, [r3, #0]
 8003b98:	68fb      	ldr	r3, [r7, #12]
 8003b9a:	681b      	ldr	r3, [r3, #0]
 8003b9c:	60da      	str	r2, [r3, #12]
 8003b9e:	68fb      	ldr	r3, [r7, #12]
 8003ba0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8003ba2:	1c9a      	adds	r2, r3, #2
 8003ba4:	68fb      	ldr	r3, [r7, #12]
 8003ba6:	639a      	str	r2, [r3, #56]	; 0x38
 8003ba8:	68fb      	ldr	r3, [r7, #12]
 8003baa:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8003bac:	b29b      	uxth	r3, r3
 8003bae:	3b01      	subs	r3, #1
 8003bb0:	b29a      	uxth	r2, r3
 8003bb2:	68fb      	ldr	r3, [r7, #12]
 8003bb4:	87da      	strh	r2, [r3, #62]	; 0x3e
 8003bb6:	e02b      	b.n	8003c10 <HAL_SPI_Transmit+0x168>
 8003bb8:	68fb      	ldr	r3, [r7, #12]
 8003bba:	681b      	ldr	r3, [r3, #0]
 8003bbc:	689b      	ldr	r3, [r3, #8]
 8003bbe:	f003 0302 	and.w	r3, r3, #2
 8003bc2:	2b02      	cmp	r3, #2
 8003bc4:	d112      	bne.n	8003bec <HAL_SPI_Transmit+0x144>
 8003bc6:	68fb      	ldr	r3, [r7, #12]
 8003bc8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8003bca:	881a      	ldrh	r2, [r3, #0]
 8003bcc:	68fb      	ldr	r3, [r7, #12]
 8003bce:	681b      	ldr	r3, [r3, #0]
 8003bd0:	60da      	str	r2, [r3, #12]
 8003bd2:	68fb      	ldr	r3, [r7, #12]
 8003bd4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8003bd6:	1c9a      	adds	r2, r3, #2
 8003bd8:	68fb      	ldr	r3, [r7, #12]
 8003bda:	639a      	str	r2, [r3, #56]	; 0x38
 8003bdc:	68fb      	ldr	r3, [r7, #12]
 8003bde:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8003be0:	b29b      	uxth	r3, r3
 8003be2:	3b01      	subs	r3, #1
 8003be4:	b29a      	uxth	r2, r3
 8003be6:	68fb      	ldr	r3, [r7, #12]
 8003be8:	87da      	strh	r2, [r3, #62]	; 0x3e
 8003bea:	e011      	b.n	8003c10 <HAL_SPI_Transmit+0x168>
 8003bec:	f7fd fb10 	bl	8001210 <HAL_GetTick>
 8003bf0:	4602      	mov	r2, r0
 8003bf2:	69bb      	ldr	r3, [r7, #24]
 8003bf4:	1ad3      	subs	r3, r2, r3
 8003bf6:	683a      	ldr	r2, [r7, #0]
 8003bf8:	429a      	cmp	r2, r3
 8003bfa:	d803      	bhi.n	8003c04 <HAL_SPI_Transmit+0x15c>
 8003bfc:	683b      	ldr	r3, [r7, #0]
 8003bfe:	f1b3 3fff 	cmp.w	r3, #4294967295
 8003c02:	d102      	bne.n	8003c0a <HAL_SPI_Transmit+0x162>
 8003c04:	683b      	ldr	r3, [r7, #0]
 8003c06:	2b00      	cmp	r3, #0
 8003c08:	d102      	bne.n	8003c10 <HAL_SPI_Transmit+0x168>
 8003c0a:	2303      	movs	r3, #3
 8003c0c:	77fb      	strb	r3, [r7, #31]
 8003c0e:	e0a4      	b.n	8003d5a <HAL_SPI_Transmit+0x2b2>
 8003c10:	68fb      	ldr	r3, [r7, #12]
 8003c12:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8003c14:	b29b      	uxth	r3, r3
 8003c16:	2b00      	cmp	r3, #0
 8003c18:	d1ce      	bne.n	8003bb8 <HAL_SPI_Transmit+0x110>
 8003c1a:	e07c      	b.n	8003d16 <HAL_SPI_Transmit+0x26e>
 8003c1c:	68fb      	ldr	r3, [r7, #12]
 8003c1e:	685b      	ldr	r3, [r3, #4]
 8003c20:	2b00      	cmp	r3, #0
 8003c22:	d002      	beq.n	8003c2a <HAL_SPI_Transmit+0x182>
 8003c24:	8afb      	ldrh	r3, [r7, #22]
 8003c26:	2b01      	cmp	r3, #1
 8003c28:	d170      	bne.n	8003d0c <HAL_SPI_Transmit+0x264>
 8003c2a:	68fb      	ldr	r3, [r7, #12]
 8003c2c:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8003c2e:	b29b      	uxth	r3, r3
 8003c30:	2b01      	cmp	r3, #1
 8003c32:	d912      	bls.n	8003c5a <HAL_SPI_Transmit+0x1b2>
 8003c34:	68fb      	ldr	r3, [r7, #12]
 8003c36:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8003c38:	881a      	ldrh	r2, [r3, #0]
 8003c3a:	68fb      	ldr	r3, [r7, #12]
 8003c3c:	681b      	ldr	r3, [r3, #0]
 8003c3e:	60da      	str	r2, [r3, #12]
 8003c40:	68fb      	ldr	r3, [r7, #12]
 8003c42:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8003c44:	1c9a      	adds	r2, r3, #2
 8003c46:	68fb      	ldr	r3, [r7, #12]
 8003c48:	639a      	str	r2, [r3, #56]	; 0x38
 8003c4a:	68fb      	ldr	r3, [r7, #12]
 8003c4c:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8003c4e:	b29b      	uxth	r3, r3
 8003c50:	3b02      	subs	r3, #2
 8003c52:	b29a      	uxth	r2, r3
 8003c54:	68fb      	ldr	r3, [r7, #12]
 8003c56:	87da      	strh	r2, [r3, #62]	; 0x3e
 8003c58:	e058      	b.n	8003d0c <HAL_SPI_Transmit+0x264>
 8003c5a:	68fb      	ldr	r3, [r7, #12]
 8003c5c:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8003c5e:	68fb      	ldr	r3, [r7, #12]
 8003c60:	681b      	ldr	r3, [r3, #0]
 8003c62:	330c      	adds	r3, #12
 8003c64:	7812      	ldrb	r2, [r2, #0]
 8003c66:	701a      	strb	r2, [r3, #0]
 8003c68:	68fb      	ldr	r3, [r7, #12]
 8003c6a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8003c6c:	1c5a      	adds	r2, r3, #1
 8003c6e:	68fb      	ldr	r3, [r7, #12]
 8003c70:	639a      	str	r2, [r3, #56]	; 0x38
 8003c72:	68fb      	ldr	r3, [r7, #12]
 8003c74:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8003c76:	b29b      	uxth	r3, r3
 8003c78:	3b01      	subs	r3, #1
 8003c7a:	b29a      	uxth	r2, r3
 8003c7c:	68fb      	ldr	r3, [r7, #12]
 8003c7e:	87da      	strh	r2, [r3, #62]	; 0x3e
 8003c80:	e044      	b.n	8003d0c <HAL_SPI_Transmit+0x264>
 8003c82:	68fb      	ldr	r3, [r7, #12]
 8003c84:	681b      	ldr	r3, [r3, #0]
 8003c86:	689b      	ldr	r3, [r3, #8]
 8003c88:	f003 0302 	and.w	r3, r3, #2
 8003c8c:	2b02      	cmp	r3, #2
 8003c8e:	d12b      	bne.n	8003ce8 <HAL_SPI_Transmit+0x240>
 8003c90:	68fb      	ldr	r3, [r7, #12]
 8003c92:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8003c94:	b29b      	uxth	r3, r3
 8003c96:	2b01      	cmp	r3, #1
 8003c98:	d912      	bls.n	8003cc0 <HAL_SPI_Transmit+0x218>
 8003c9a:	68fb      	ldr	r3, [r7, #12]
 8003c9c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8003c9e:	881a      	ldrh	r2, [r3, #0]
 8003ca0:	68fb      	ldr	r3, [r7, #12]
 8003ca2:	681b      	ldr	r3, [r3, #0]
 8003ca4:	60da      	str	r2, [r3, #12]
 8003ca6:	68fb      	ldr	r3, [r7, #12]
 8003ca8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8003caa:	1c9a      	adds	r2, r3, #2
 8003cac:	68fb      	ldr	r3, [r7, #12]
 8003cae:	639a      	str	r2, [r3, #56]	; 0x38
 8003cb0:	68fb      	ldr	r3, [r7, #12]
 8003cb2:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8003cb4:	b29b      	uxth	r3, r3
 8003cb6:	3b02      	subs	r3, #2
 8003cb8:	b29a      	uxth	r2, r3
 8003cba:	68fb      	ldr	r3, [r7, #12]
 8003cbc:	87da      	strh	r2, [r3, #62]	; 0x3e
 8003cbe:	e025      	b.n	8003d0c <HAL_SPI_Transmit+0x264>
 8003cc0:	68fb      	ldr	r3, [r7, #12]
 8003cc2:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8003cc4:	68fb      	ldr	r3, [r7, #12]
 8003cc6:	681b      	ldr	r3, [r3, #0]
 8003cc8:	330c      	adds	r3, #12
 8003cca:	7812      	ldrb	r2, [r2, #0]
 8003ccc:	701a      	strb	r2, [r3, #0]
 8003cce:	68fb      	ldr	r3, [r7, #12]
 8003cd0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8003cd2:	1c5a      	adds	r2, r3, #1
 8003cd4:	68fb      	ldr	r3, [r7, #12]
 8003cd6:	639a      	str	r2, [r3, #56]	; 0x38
 8003cd8:	68fb      	ldr	r3, [r7, #12]
 8003cda:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8003cdc:	b29b      	uxth	r3, r3
 8003cde:	3b01      	subs	r3, #1
 8003ce0:	b29a      	uxth	r2, r3
 8003ce2:	68fb      	ldr	r3, [r7, #12]
 8003ce4:	87da      	strh	r2, [r3, #62]	; 0x3e
 8003ce6:	e011      	b.n	8003d0c <HAL_SPI_Transmit+0x264>
 8003ce8:	f7fd fa92 	bl	8001210 <HAL_GetTick>
 8003cec:	4602      	mov	r2, r0
 8003cee:	69bb      	ldr	r3, [r7, #24]
 8003cf0:	1ad3      	subs	r3, r2, r3
 8003cf2:	683a      	ldr	r2, [r7, #0]
 8003cf4:	429a      	cmp	r2, r3
 8003cf6:	d803      	bhi.n	8003d00 <HAL_SPI_Transmit+0x258>
 8003cf8:	683b      	ldr	r3, [r7, #0]
 8003cfa:	f1b3 3fff 	cmp.w	r3, #4294967295
 8003cfe:	d102      	bne.n	8003d06 <HAL_SPI_Transmit+0x25e>
 8003d00:	683b      	ldr	r3, [r7, #0]
 8003d02:	2b00      	cmp	r3, #0
 8003d04:	d102      	bne.n	8003d0c <HAL_SPI_Transmit+0x264>
 8003d06:	2303      	movs	r3, #3
 8003d08:	77fb      	strb	r3, [r7, #31]
 8003d0a:	e026      	b.n	8003d5a <HAL_SPI_Transmit+0x2b2>
 8003d0c:	68fb      	ldr	r3, [r7, #12]
 8003d0e:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8003d10:	b29b      	uxth	r3, r3
 8003d12:	2b00      	cmp	r3, #0
 8003d14:	d1b5      	bne.n	8003c82 <HAL_SPI_Transmit+0x1da>
 8003d16:	69ba      	ldr	r2, [r7, #24]
 8003d18:	6839      	ldr	r1, [r7, #0]
 8003d1a:	68f8      	ldr	r0, [r7, #12]
 8003d1c:	f000 fca2 	bl	8004664 <SPI_EndRxTxTransaction>
 8003d20:	4603      	mov	r3, r0
 8003d22:	2b00      	cmp	r3, #0
 8003d24:	d002      	beq.n	8003d2c <HAL_SPI_Transmit+0x284>
 8003d26:	68fb      	ldr	r3, [r7, #12]
 8003d28:	2220      	movs	r2, #32
 8003d2a:	661a      	str	r2, [r3, #96]	; 0x60
 8003d2c:	68fb      	ldr	r3, [r7, #12]
 8003d2e:	689b      	ldr	r3, [r3, #8]
 8003d30:	2b00      	cmp	r3, #0
 8003d32:	d10a      	bne.n	8003d4a <HAL_SPI_Transmit+0x2a2>
 8003d34:	2300      	movs	r3, #0
 8003d36:	613b      	str	r3, [r7, #16]
 8003d38:	68fb      	ldr	r3, [r7, #12]
 8003d3a:	681b      	ldr	r3, [r3, #0]
 8003d3c:	68db      	ldr	r3, [r3, #12]
 8003d3e:	613b      	str	r3, [r7, #16]
 8003d40:	68fb      	ldr	r3, [r7, #12]
 8003d42:	681b      	ldr	r3, [r3, #0]
 8003d44:	689b      	ldr	r3, [r3, #8]
 8003d46:	613b      	str	r3, [r7, #16]
 8003d48:	693b      	ldr	r3, [r7, #16]
 8003d4a:	68fb      	ldr	r3, [r7, #12]
 8003d4c:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8003d4e:	2b00      	cmp	r3, #0
 8003d50:	d002      	beq.n	8003d58 <HAL_SPI_Transmit+0x2b0>
 8003d52:	2301      	movs	r3, #1
 8003d54:	77fb      	strb	r3, [r7, #31]
 8003d56:	e000      	b.n	8003d5a <HAL_SPI_Transmit+0x2b2>
 8003d58:	bf00      	nop
 8003d5a:	68fb      	ldr	r3, [r7, #12]
 8003d5c:	2201      	movs	r2, #1
 8003d5e:	f883 205d 	strb.w	r2, [r3, #93]	; 0x5d
 8003d62:	68fb      	ldr	r3, [r7, #12]
 8003d64:	2200      	movs	r2, #0
 8003d66:	f883 205c 	strb.w	r2, [r3, #92]	; 0x5c
 8003d6a:	7ffb      	ldrb	r3, [r7, #31]
 8003d6c:	4618      	mov	r0, r3
 8003d6e:	3720      	adds	r7, #32
 8003d70:	46bd      	mov	sp, r7
 8003d72:	bd80      	pop	{r7, pc}

08003d74 <HAL_SPI_Receive>:
 8003d74:	b580      	push	{r7, lr}
 8003d76:	b088      	sub	sp, #32
 8003d78:	af02      	add	r7, sp, #8
 8003d7a:	60f8      	str	r0, [r7, #12]
 8003d7c:	60b9      	str	r1, [r7, #8]
 8003d7e:	603b      	str	r3, [r7, #0]
 8003d80:	4613      	mov	r3, r2
 8003d82:	80fb      	strh	r3, [r7, #6]
 8003d84:	2300      	movs	r3, #0
 8003d86:	75fb      	strb	r3, [r7, #23]
 8003d88:	68fb      	ldr	r3, [r7, #12]
 8003d8a:	685b      	ldr	r3, [r3, #4]
 8003d8c:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8003d90:	d112      	bne.n	8003db8 <HAL_SPI_Receive+0x44>
 8003d92:	68fb      	ldr	r3, [r7, #12]
 8003d94:	689b      	ldr	r3, [r3, #8]
 8003d96:	2b00      	cmp	r3, #0
 8003d98:	d10e      	bne.n	8003db8 <HAL_SPI_Receive+0x44>
 8003d9a:	68fb      	ldr	r3, [r7, #12]
 8003d9c:	2204      	movs	r2, #4
 8003d9e:	f883 205d 	strb.w	r2, [r3, #93]	; 0x5d
 8003da2:	88fa      	ldrh	r2, [r7, #6]
 8003da4:	683b      	ldr	r3, [r7, #0]
 8003da6:	9300      	str	r3, [sp, #0]
 8003da8:	4613      	mov	r3, r2
 8003daa:	68ba      	ldr	r2, [r7, #8]
 8003dac:	68b9      	ldr	r1, [r7, #8]
 8003dae:	68f8      	ldr	r0, [r7, #12]
 8003db0:	f000 f908 	bl	8003fc4 <HAL_SPI_TransmitReceive>
 8003db4:	4603      	mov	r3, r0
 8003db6:	e101      	b.n	8003fbc <HAL_SPI_Receive+0x248>
 8003db8:	68fb      	ldr	r3, [r7, #12]
 8003dba:	f893 305c 	ldrb.w	r3, [r3, #92]	; 0x5c
 8003dbe:	2b01      	cmp	r3, #1
 8003dc0:	d101      	bne.n	8003dc6 <HAL_SPI_Receive+0x52>
 8003dc2:	2302      	movs	r3, #2
 8003dc4:	e0fa      	b.n	8003fbc <HAL_SPI_Receive+0x248>
 8003dc6:	68fb      	ldr	r3, [r7, #12]
 8003dc8:	2201      	movs	r2, #1
 8003dca:	f883 205c 	strb.w	r2, [r3, #92]	; 0x5c
 8003dce:	f7fd fa1f 	bl	8001210 <HAL_GetTick>
 8003dd2:	6138      	str	r0, [r7, #16]
 8003dd4:	68fb      	ldr	r3, [r7, #12]
 8003dd6:	f893 305d 	ldrb.w	r3, [r3, #93]	; 0x5d
 8003dda:	b2db      	uxtb	r3, r3
 8003ddc:	2b01      	cmp	r3, #1
 8003dde:	d002      	beq.n	8003de6 <HAL_SPI_Receive+0x72>
 8003de0:	2302      	movs	r3, #2
 8003de2:	75fb      	strb	r3, [r7, #23]
 8003de4:	e0e1      	b.n	8003faa <HAL_SPI_Receive+0x236>
 8003de6:	68bb      	ldr	r3, [r7, #8]
 8003de8:	2b00      	cmp	r3, #0
 8003dea:	d002      	beq.n	8003df2 <HAL_SPI_Receive+0x7e>
 8003dec:	88fb      	ldrh	r3, [r7, #6]
 8003dee:	2b00      	cmp	r3, #0
 8003df0:	d102      	bne.n	8003df8 <HAL_SPI_Receive+0x84>
 8003df2:	2301      	movs	r3, #1
 8003df4:	75fb      	strb	r3, [r7, #23]
 8003df6:	e0d8      	b.n	8003faa <HAL_SPI_Receive+0x236>
 8003df8:	68fb      	ldr	r3, [r7, #12]
 8003dfa:	2204      	movs	r2, #4
 8003dfc:	f883 205d 	strb.w	r2, [r3, #93]	; 0x5d
 8003e00:	68fb      	ldr	r3, [r7, #12]
 8003e02:	2200      	movs	r2, #0
 8003e04:	661a      	str	r2, [r3, #96]	; 0x60
 8003e06:	68fb      	ldr	r3, [r7, #12]
 8003e08:	68ba      	ldr	r2, [r7, #8]
 8003e0a:	641a      	str	r2, [r3, #64]	; 0x40
 8003e0c:	68fb      	ldr	r3, [r7, #12]
 8003e0e:	88fa      	ldrh	r2, [r7, #6]
 8003e10:	f8a3 2044 	strh.w	r2, [r3, #68]	; 0x44
 8003e14:	68fb      	ldr	r3, [r7, #12]
 8003e16:	88fa      	ldrh	r2, [r7, #6]
 8003e18:	f8a3 2046 	strh.w	r2, [r3, #70]	; 0x46
 8003e1c:	68fb      	ldr	r3, [r7, #12]
 8003e1e:	2200      	movs	r2, #0
 8003e20:	639a      	str	r2, [r3, #56]	; 0x38
 8003e22:	68fb      	ldr	r3, [r7, #12]
 8003e24:	2200      	movs	r2, #0
 8003e26:	879a      	strh	r2, [r3, #60]	; 0x3c
 8003e28:	68fb      	ldr	r3, [r7, #12]
 8003e2a:	2200      	movs	r2, #0
 8003e2c:	87da      	strh	r2, [r3, #62]	; 0x3e
 8003e2e:	68fb      	ldr	r3, [r7, #12]
 8003e30:	2200      	movs	r2, #0
 8003e32:	64da      	str	r2, [r3, #76]	; 0x4c
 8003e34:	68fb      	ldr	r3, [r7, #12]
 8003e36:	2200      	movs	r2, #0
 8003e38:	651a      	str	r2, [r3, #80]	; 0x50
 8003e3a:	68fb      	ldr	r3, [r7, #12]
 8003e3c:	68db      	ldr	r3, [r3, #12]
 8003e3e:	f5b3 6fe0 	cmp.w	r3, #1792	; 0x700
 8003e42:	d908      	bls.n	8003e56 <HAL_SPI_Receive+0xe2>
 8003e44:	68fb      	ldr	r3, [r7, #12]
 8003e46:	681b      	ldr	r3, [r3, #0]
 8003e48:	685a      	ldr	r2, [r3, #4]
 8003e4a:	68fb      	ldr	r3, [r7, #12]
 8003e4c:	681b      	ldr	r3, [r3, #0]
 8003e4e:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 8003e52:	605a      	str	r2, [r3, #4]
 8003e54:	e007      	b.n	8003e66 <HAL_SPI_Receive+0xf2>
 8003e56:	68fb      	ldr	r3, [r7, #12]
 8003e58:	681b      	ldr	r3, [r3, #0]
 8003e5a:	685a      	ldr	r2, [r3, #4]
 8003e5c:	68fb      	ldr	r3, [r7, #12]
 8003e5e:	681b      	ldr	r3, [r3, #0]
 8003e60:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8003e64:	605a      	str	r2, [r3, #4]
 8003e66:	68fb      	ldr	r3, [r7, #12]
 8003e68:	689b      	ldr	r3, [r3, #8]
 8003e6a:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8003e6e:	d107      	bne.n	8003e80 <HAL_SPI_Receive+0x10c>
 8003e70:	68fb      	ldr	r3, [r7, #12]
 8003e72:	681b      	ldr	r3, [r3, #0]
 8003e74:	681a      	ldr	r2, [r3, #0]
 8003e76:	68fb      	ldr	r3, [r7, #12]
 8003e78:	681b      	ldr	r3, [r3, #0]
 8003e7a:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
 8003e7e:	601a      	str	r2, [r3, #0]
 8003e80:	68fb      	ldr	r3, [r7, #12]
 8003e82:	681b      	ldr	r3, [r3, #0]
 8003e84:	681b      	ldr	r3, [r3, #0]
 8003e86:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8003e8a:	2b40      	cmp	r3, #64	; 0x40
 8003e8c:	d007      	beq.n	8003e9e <HAL_SPI_Receive+0x12a>
 8003e8e:	68fb      	ldr	r3, [r7, #12]
 8003e90:	681b      	ldr	r3, [r3, #0]
 8003e92:	681a      	ldr	r2, [r3, #0]
 8003e94:	68fb      	ldr	r3, [r7, #12]
 8003e96:	681b      	ldr	r3, [r3, #0]
 8003e98:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8003e9c:	601a      	str	r2, [r3, #0]
 8003e9e:	68fb      	ldr	r3, [r7, #12]
 8003ea0:	68db      	ldr	r3, [r3, #12]
 8003ea2:	f5b3 6fe0 	cmp.w	r3, #1792	; 0x700
 8003ea6:	d867      	bhi.n	8003f78 <HAL_SPI_Receive+0x204>
 8003ea8:	e030      	b.n	8003f0c <HAL_SPI_Receive+0x198>
 8003eaa:	68fb      	ldr	r3, [r7, #12]
 8003eac:	681b      	ldr	r3, [r3, #0]
 8003eae:	689b      	ldr	r3, [r3, #8]
 8003eb0:	f003 0301 	and.w	r3, r3, #1
 8003eb4:	2b01      	cmp	r3, #1
 8003eb6:	d117      	bne.n	8003ee8 <HAL_SPI_Receive+0x174>
 8003eb8:	68fb      	ldr	r3, [r7, #12]
 8003eba:	681b      	ldr	r3, [r3, #0]
 8003ebc:	f103 020c 	add.w	r2, r3, #12
 8003ec0:	68fb      	ldr	r3, [r7, #12]
 8003ec2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003ec4:	7812      	ldrb	r2, [r2, #0]
 8003ec6:	b2d2      	uxtb	r2, r2
 8003ec8:	701a      	strb	r2, [r3, #0]
 8003eca:	68fb      	ldr	r3, [r7, #12]
 8003ecc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003ece:	1c5a      	adds	r2, r3, #1
 8003ed0:	68fb      	ldr	r3, [r7, #12]
 8003ed2:	641a      	str	r2, [r3, #64]	; 0x40
 8003ed4:	68fb      	ldr	r3, [r7, #12]
 8003ed6:	f8b3 3046 	ldrh.w	r3, [r3, #70]	; 0x46
 8003eda:	b29b      	uxth	r3, r3
 8003edc:	3b01      	subs	r3, #1
 8003ede:	b29a      	uxth	r2, r3
 8003ee0:	68fb      	ldr	r3, [r7, #12]
 8003ee2:	f8a3 2046 	strh.w	r2, [r3, #70]	; 0x46
 8003ee6:	e011      	b.n	8003f0c <HAL_SPI_Receive+0x198>
 8003ee8:	f7fd f992 	bl	8001210 <HAL_GetTick>
 8003eec:	4602      	mov	r2, r0
 8003eee:	693b      	ldr	r3, [r7, #16]
 8003ef0:	1ad3      	subs	r3, r2, r3
 8003ef2:	683a      	ldr	r2, [r7, #0]
 8003ef4:	429a      	cmp	r2, r3
 8003ef6:	d803      	bhi.n	8003f00 <HAL_SPI_Receive+0x18c>
 8003ef8:	683b      	ldr	r3, [r7, #0]
 8003efa:	f1b3 3fff 	cmp.w	r3, #4294967295
 8003efe:	d102      	bne.n	8003f06 <HAL_SPI_Receive+0x192>
 8003f00:	683b      	ldr	r3, [r7, #0]
 8003f02:	2b00      	cmp	r3, #0
 8003f04:	d102      	bne.n	8003f0c <HAL_SPI_Receive+0x198>
 8003f06:	2303      	movs	r3, #3
 8003f08:	75fb      	strb	r3, [r7, #23]
 8003f0a:	e04e      	b.n	8003faa <HAL_SPI_Receive+0x236>
 8003f0c:	68fb      	ldr	r3, [r7, #12]
 8003f0e:	f8b3 3046 	ldrh.w	r3, [r3, #70]	; 0x46
 8003f12:	b29b      	uxth	r3, r3
 8003f14:	2b00      	cmp	r3, #0
 8003f16:	d1c8      	bne.n	8003eaa <HAL_SPI_Receive+0x136>
 8003f18:	e034      	b.n	8003f84 <HAL_SPI_Receive+0x210>
 8003f1a:	68fb      	ldr	r3, [r7, #12]
 8003f1c:	681b      	ldr	r3, [r3, #0]
 8003f1e:	689b      	ldr	r3, [r3, #8]
 8003f20:	f003 0301 	and.w	r3, r3, #1
 8003f24:	2b01      	cmp	r3, #1
 8003f26:	d115      	bne.n	8003f54 <HAL_SPI_Receive+0x1e0>
 8003f28:	68fb      	ldr	r3, [r7, #12]
 8003f2a:	681b      	ldr	r3, [r3, #0]
 8003f2c:	68da      	ldr	r2, [r3, #12]
 8003f2e:	68fb      	ldr	r3, [r7, #12]
 8003f30:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003f32:	b292      	uxth	r2, r2
 8003f34:	801a      	strh	r2, [r3, #0]
 8003f36:	68fb      	ldr	r3, [r7, #12]
 8003f38:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003f3a:	1c9a      	adds	r2, r3, #2
 8003f3c:	68fb      	ldr	r3, [r7, #12]
 8003f3e:	641a      	str	r2, [r3, #64]	; 0x40
 8003f40:	68fb      	ldr	r3, [r7, #12]
 8003f42:	f8b3 3046 	ldrh.w	r3, [r3, #70]	; 0x46
 8003f46:	b29b      	uxth	r3, r3
 8003f48:	3b01      	subs	r3, #1
 8003f4a:	b29a      	uxth	r2, r3
 8003f4c:	68fb      	ldr	r3, [r7, #12]
 8003f4e:	f8a3 2046 	strh.w	r2, [r3, #70]	; 0x46
 8003f52:	e011      	b.n	8003f78 <HAL_SPI_Receive+0x204>
 8003f54:	f7fd f95c 	bl	8001210 <HAL_GetTick>
 8003f58:	4602      	mov	r2, r0
 8003f5a:	693b      	ldr	r3, [r7, #16]
 8003f5c:	1ad3      	subs	r3, r2, r3
 8003f5e:	683a      	ldr	r2, [r7, #0]
 8003f60:	429a      	cmp	r2, r3
 8003f62:	d803      	bhi.n	8003f6c <HAL_SPI_Receive+0x1f8>
 8003f64:	683b      	ldr	r3, [r7, #0]
 8003f66:	f1b3 3fff 	cmp.w	r3, #4294967295
 8003f6a:	d102      	bne.n	8003f72 <HAL_SPI_Receive+0x1fe>
 8003f6c:	683b      	ldr	r3, [r7, #0]
 8003f6e:	2b00      	cmp	r3, #0
 8003f70:	d102      	bne.n	8003f78 <HAL_SPI_Receive+0x204>
 8003f72:	2303      	movs	r3, #3
 8003f74:	75fb      	strb	r3, [r7, #23]
 8003f76:	e018      	b.n	8003faa <HAL_SPI_Receive+0x236>
 8003f78:	68fb      	ldr	r3, [r7, #12]
 8003f7a:	f8b3 3046 	ldrh.w	r3, [r3, #70]	; 0x46
 8003f7e:	b29b      	uxth	r3, r3
 8003f80:	2b00      	cmp	r3, #0
 8003f82:	d1ca      	bne.n	8003f1a <HAL_SPI_Receive+0x1a6>
 8003f84:	693a      	ldr	r2, [r7, #16]
 8003f86:	6839      	ldr	r1, [r7, #0]
 8003f88:	68f8      	ldr	r0, [r7, #12]
 8003f8a:	f000 fb13 	bl	80045b4 <SPI_EndRxTransaction>
 8003f8e:	4603      	mov	r3, r0
 8003f90:	2b00      	cmp	r3, #0
 8003f92:	d002      	beq.n	8003f9a <HAL_SPI_Receive+0x226>
 8003f94:	68fb      	ldr	r3, [r7, #12]
 8003f96:	2220      	movs	r2, #32
 8003f98:	661a      	str	r2, [r3, #96]	; 0x60
 8003f9a:	68fb      	ldr	r3, [r7, #12]
 8003f9c:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8003f9e:	2b00      	cmp	r3, #0
 8003fa0:	d002      	beq.n	8003fa8 <HAL_SPI_Receive+0x234>
 8003fa2:	2301      	movs	r3, #1
 8003fa4:	75fb      	strb	r3, [r7, #23]
 8003fa6:	e000      	b.n	8003faa <HAL_SPI_Receive+0x236>
 8003fa8:	bf00      	nop
 8003faa:	68fb      	ldr	r3, [r7, #12]
 8003fac:	2201      	movs	r2, #1
 8003fae:	f883 205d 	strb.w	r2, [r3, #93]	; 0x5d
 8003fb2:	68fb      	ldr	r3, [r7, #12]
 8003fb4:	2200      	movs	r2, #0
 8003fb6:	f883 205c 	strb.w	r2, [r3, #92]	; 0x5c
 8003fba:	7dfb      	ldrb	r3, [r7, #23]
 8003fbc:	4618      	mov	r0, r3
 8003fbe:	3718      	adds	r7, #24
 8003fc0:	46bd      	mov	sp, r7
 8003fc2:	bd80      	pop	{r7, pc}

08003fc4 <HAL_SPI_TransmitReceive>:
 8003fc4:	b580      	push	{r7, lr}
 8003fc6:	b08a      	sub	sp, #40	; 0x28
 8003fc8:	af00      	add	r7, sp, #0
 8003fca:	60f8      	str	r0, [r7, #12]
 8003fcc:	60b9      	str	r1, [r7, #8]
 8003fce:	607a      	str	r2, [r7, #4]
 8003fd0:	807b      	strh	r3, [r7, #2]
 8003fd2:	2301      	movs	r3, #1
 8003fd4:	627b      	str	r3, [r7, #36]	; 0x24
 8003fd6:	2300      	movs	r3, #0
 8003fd8:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 8003fdc:	68fb      	ldr	r3, [r7, #12]
 8003fde:	f893 305c 	ldrb.w	r3, [r3, #92]	; 0x5c
 8003fe2:	2b01      	cmp	r3, #1
 8003fe4:	d101      	bne.n	8003fea <HAL_SPI_TransmitReceive+0x26>
 8003fe6:	2302      	movs	r3, #2
 8003fe8:	e1fb      	b.n	80043e2 <HAL_SPI_TransmitReceive+0x41e>
 8003fea:	68fb      	ldr	r3, [r7, #12]
 8003fec:	2201      	movs	r2, #1
 8003fee:	f883 205c 	strb.w	r2, [r3, #92]	; 0x5c
 8003ff2:	f7fd f90d 	bl	8001210 <HAL_GetTick>
 8003ff6:	61f8      	str	r0, [r7, #28]
 8003ff8:	68fb      	ldr	r3, [r7, #12]
 8003ffa:	f893 305d 	ldrb.w	r3, [r3, #93]	; 0x5d
 8003ffe:	76fb      	strb	r3, [r7, #27]
 8004000:	68fb      	ldr	r3, [r7, #12]
 8004002:	685b      	ldr	r3, [r3, #4]
 8004004:	617b      	str	r3, [r7, #20]
 8004006:	887b      	ldrh	r3, [r7, #2]
 8004008:	827b      	strh	r3, [r7, #18]
 800400a:	887b      	ldrh	r3, [r7, #2]
 800400c:	823b      	strh	r3, [r7, #16]
 800400e:	7efb      	ldrb	r3, [r7, #27]
 8004010:	2b01      	cmp	r3, #1
 8004012:	d00e      	beq.n	8004032 <HAL_SPI_TransmitReceive+0x6e>
 8004014:	697b      	ldr	r3, [r7, #20]
 8004016:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800401a:	d106      	bne.n	800402a <HAL_SPI_TransmitReceive+0x66>
 800401c:	68fb      	ldr	r3, [r7, #12]
 800401e:	689b      	ldr	r3, [r3, #8]
 8004020:	2b00      	cmp	r3, #0
 8004022:	d102      	bne.n	800402a <HAL_SPI_TransmitReceive+0x66>
 8004024:	7efb      	ldrb	r3, [r7, #27]
 8004026:	2b04      	cmp	r3, #4
 8004028:	d003      	beq.n	8004032 <HAL_SPI_TransmitReceive+0x6e>
 800402a:	2302      	movs	r3, #2
 800402c:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 8004030:	e1cd      	b.n	80043ce <HAL_SPI_TransmitReceive+0x40a>
 8004032:	68bb      	ldr	r3, [r7, #8]
 8004034:	2b00      	cmp	r3, #0
 8004036:	d005      	beq.n	8004044 <HAL_SPI_TransmitReceive+0x80>
 8004038:	687b      	ldr	r3, [r7, #4]
 800403a:	2b00      	cmp	r3, #0
 800403c:	d002      	beq.n	8004044 <HAL_SPI_TransmitReceive+0x80>
 800403e:	887b      	ldrh	r3, [r7, #2]
 8004040:	2b00      	cmp	r3, #0
 8004042:	d103      	bne.n	800404c <HAL_SPI_TransmitReceive+0x88>
 8004044:	2301      	movs	r3, #1
 8004046:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 800404a:	e1c0      	b.n	80043ce <HAL_SPI_TransmitReceive+0x40a>
 800404c:	68fb      	ldr	r3, [r7, #12]
 800404e:	f893 305d 	ldrb.w	r3, [r3, #93]	; 0x5d
 8004052:	b2db      	uxtb	r3, r3
 8004054:	2b04      	cmp	r3, #4
 8004056:	d003      	beq.n	8004060 <HAL_SPI_TransmitReceive+0x9c>
 8004058:	68fb      	ldr	r3, [r7, #12]
 800405a:	2205      	movs	r2, #5
 800405c:	f883 205d 	strb.w	r2, [r3, #93]	; 0x5d
 8004060:	68fb      	ldr	r3, [r7, #12]
 8004062:	2200      	movs	r2, #0
 8004064:	661a      	str	r2, [r3, #96]	; 0x60
 8004066:	68fb      	ldr	r3, [r7, #12]
 8004068:	687a      	ldr	r2, [r7, #4]
 800406a:	641a      	str	r2, [r3, #64]	; 0x40
 800406c:	68fb      	ldr	r3, [r7, #12]
 800406e:	887a      	ldrh	r2, [r7, #2]
 8004070:	f8a3 2046 	strh.w	r2, [r3, #70]	; 0x46
 8004074:	68fb      	ldr	r3, [r7, #12]
 8004076:	887a      	ldrh	r2, [r7, #2]
 8004078:	f8a3 2044 	strh.w	r2, [r3, #68]	; 0x44
 800407c:	68fb      	ldr	r3, [r7, #12]
 800407e:	68ba      	ldr	r2, [r7, #8]
 8004080:	639a      	str	r2, [r3, #56]	; 0x38
 8004082:	68fb      	ldr	r3, [r7, #12]
 8004084:	887a      	ldrh	r2, [r7, #2]
 8004086:	87da      	strh	r2, [r3, #62]	; 0x3e
 8004088:	68fb      	ldr	r3, [r7, #12]
 800408a:	887a      	ldrh	r2, [r7, #2]
 800408c:	879a      	strh	r2, [r3, #60]	; 0x3c
 800408e:	68fb      	ldr	r3, [r7, #12]
 8004090:	2200      	movs	r2, #0
 8004092:	64da      	str	r2, [r3, #76]	; 0x4c
 8004094:	68fb      	ldr	r3, [r7, #12]
 8004096:	2200      	movs	r2, #0
 8004098:	651a      	str	r2, [r3, #80]	; 0x50
 800409a:	68fb      	ldr	r3, [r7, #12]
 800409c:	68db      	ldr	r3, [r3, #12]
 800409e:	f5b3 6fe0 	cmp.w	r3, #1792	; 0x700
 80040a2:	d802      	bhi.n	80040aa <HAL_SPI_TransmitReceive+0xe6>
 80040a4:	8a3b      	ldrh	r3, [r7, #16]
 80040a6:	2b01      	cmp	r3, #1
 80040a8:	d908      	bls.n	80040bc <HAL_SPI_TransmitReceive+0xf8>
 80040aa:	68fb      	ldr	r3, [r7, #12]
 80040ac:	681b      	ldr	r3, [r3, #0]
 80040ae:	685a      	ldr	r2, [r3, #4]
 80040b0:	68fb      	ldr	r3, [r7, #12]
 80040b2:	681b      	ldr	r3, [r3, #0]
 80040b4:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 80040b8:	605a      	str	r2, [r3, #4]
 80040ba:	e007      	b.n	80040cc <HAL_SPI_TransmitReceive+0x108>
 80040bc:	68fb      	ldr	r3, [r7, #12]
 80040be:	681b      	ldr	r3, [r3, #0]
 80040c0:	685a      	ldr	r2, [r3, #4]
 80040c2:	68fb      	ldr	r3, [r7, #12]
 80040c4:	681b      	ldr	r3, [r3, #0]
 80040c6:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 80040ca:	605a      	str	r2, [r3, #4]
 80040cc:	68fb      	ldr	r3, [r7, #12]
 80040ce:	681b      	ldr	r3, [r3, #0]
 80040d0:	681b      	ldr	r3, [r3, #0]
 80040d2:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80040d6:	2b40      	cmp	r3, #64	; 0x40
 80040d8:	d007      	beq.n	80040ea <HAL_SPI_TransmitReceive+0x126>
 80040da:	68fb      	ldr	r3, [r7, #12]
 80040dc:	681b      	ldr	r3, [r3, #0]
 80040de:	681a      	ldr	r2, [r3, #0]
 80040e0:	68fb      	ldr	r3, [r7, #12]
 80040e2:	681b      	ldr	r3, [r3, #0]
 80040e4:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 80040e8:	601a      	str	r2, [r3, #0]
 80040ea:	68fb      	ldr	r3, [r7, #12]
 80040ec:	68db      	ldr	r3, [r3, #12]
 80040ee:	f5b3 6fe0 	cmp.w	r3, #1792	; 0x700
 80040f2:	d97c      	bls.n	80041ee <HAL_SPI_TransmitReceive+0x22a>
 80040f4:	68fb      	ldr	r3, [r7, #12]
 80040f6:	685b      	ldr	r3, [r3, #4]
 80040f8:	2b00      	cmp	r3, #0
 80040fa:	d002      	beq.n	8004102 <HAL_SPI_TransmitReceive+0x13e>
 80040fc:	8a7b      	ldrh	r3, [r7, #18]
 80040fe:	2b01      	cmp	r3, #1
 8004100:	d169      	bne.n	80041d6 <HAL_SPI_TransmitReceive+0x212>
 8004102:	68fb      	ldr	r3, [r7, #12]
 8004104:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004106:	881a      	ldrh	r2, [r3, #0]
 8004108:	68fb      	ldr	r3, [r7, #12]
 800410a:	681b      	ldr	r3, [r3, #0]
 800410c:	60da      	str	r2, [r3, #12]
 800410e:	68fb      	ldr	r3, [r7, #12]
 8004110:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004112:	1c9a      	adds	r2, r3, #2
 8004114:	68fb      	ldr	r3, [r7, #12]
 8004116:	639a      	str	r2, [r3, #56]	; 0x38
 8004118:	68fb      	ldr	r3, [r7, #12]
 800411a:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 800411c:	b29b      	uxth	r3, r3
 800411e:	3b01      	subs	r3, #1
 8004120:	b29a      	uxth	r2, r3
 8004122:	68fb      	ldr	r3, [r7, #12]
 8004124:	87da      	strh	r2, [r3, #62]	; 0x3e
 8004126:	e056      	b.n	80041d6 <HAL_SPI_TransmitReceive+0x212>
 8004128:	68fb      	ldr	r3, [r7, #12]
 800412a:	681b      	ldr	r3, [r3, #0]
 800412c:	689b      	ldr	r3, [r3, #8]
 800412e:	f003 0302 	and.w	r3, r3, #2
 8004132:	2b02      	cmp	r3, #2
 8004134:	d11b      	bne.n	800416e <HAL_SPI_TransmitReceive+0x1aa>
 8004136:	68fb      	ldr	r3, [r7, #12]
 8004138:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 800413a:	b29b      	uxth	r3, r3
 800413c:	2b00      	cmp	r3, #0
 800413e:	d016      	beq.n	800416e <HAL_SPI_TransmitReceive+0x1aa>
 8004140:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004142:	2b01      	cmp	r3, #1
 8004144:	d113      	bne.n	800416e <HAL_SPI_TransmitReceive+0x1aa>
 8004146:	68fb      	ldr	r3, [r7, #12]
 8004148:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800414a:	881a      	ldrh	r2, [r3, #0]
 800414c:	68fb      	ldr	r3, [r7, #12]
 800414e:	681b      	ldr	r3, [r3, #0]
 8004150:	60da      	str	r2, [r3, #12]
 8004152:	68fb      	ldr	r3, [r7, #12]
 8004154:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004156:	1c9a      	adds	r2, r3, #2
 8004158:	68fb      	ldr	r3, [r7, #12]
 800415a:	639a      	str	r2, [r3, #56]	; 0x38
 800415c:	68fb      	ldr	r3, [r7, #12]
 800415e:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8004160:	b29b      	uxth	r3, r3
 8004162:	3b01      	subs	r3, #1
 8004164:	b29a      	uxth	r2, r3
 8004166:	68fb      	ldr	r3, [r7, #12]
 8004168:	87da      	strh	r2, [r3, #62]	; 0x3e
 800416a:	2300      	movs	r3, #0
 800416c:	627b      	str	r3, [r7, #36]	; 0x24
 800416e:	68fb      	ldr	r3, [r7, #12]
 8004170:	681b      	ldr	r3, [r3, #0]
 8004172:	689b      	ldr	r3, [r3, #8]
 8004174:	f003 0301 	and.w	r3, r3, #1
 8004178:	2b01      	cmp	r3, #1
 800417a:	d11c      	bne.n	80041b6 <HAL_SPI_TransmitReceive+0x1f2>
 800417c:	68fb      	ldr	r3, [r7, #12]
 800417e:	f8b3 3046 	ldrh.w	r3, [r3, #70]	; 0x46
 8004182:	b29b      	uxth	r3, r3
 8004184:	2b00      	cmp	r3, #0
 8004186:	d016      	beq.n	80041b6 <HAL_SPI_TransmitReceive+0x1f2>
 8004188:	68fb      	ldr	r3, [r7, #12]
 800418a:	681b      	ldr	r3, [r3, #0]
 800418c:	68da      	ldr	r2, [r3, #12]
 800418e:	68fb      	ldr	r3, [r7, #12]
 8004190:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004192:	b292      	uxth	r2, r2
 8004194:	801a      	strh	r2, [r3, #0]
 8004196:	68fb      	ldr	r3, [r7, #12]
 8004198:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800419a:	1c9a      	adds	r2, r3, #2
 800419c:	68fb      	ldr	r3, [r7, #12]
 800419e:	641a      	str	r2, [r3, #64]	; 0x40
 80041a0:	68fb      	ldr	r3, [r7, #12]
 80041a2:	f8b3 3046 	ldrh.w	r3, [r3, #70]	; 0x46
 80041a6:	b29b      	uxth	r3, r3
 80041a8:	3b01      	subs	r3, #1
 80041aa:	b29a      	uxth	r2, r3
 80041ac:	68fb      	ldr	r3, [r7, #12]
 80041ae:	f8a3 2046 	strh.w	r2, [r3, #70]	; 0x46
 80041b2:	2301      	movs	r3, #1
 80041b4:	627b      	str	r3, [r7, #36]	; 0x24
 80041b6:	f7fd f82b 	bl	8001210 <HAL_GetTick>
 80041ba:	4602      	mov	r2, r0
 80041bc:	69fb      	ldr	r3, [r7, #28]
 80041be:	1ad3      	subs	r3, r2, r3
 80041c0:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 80041c2:	429a      	cmp	r2, r3
 80041c4:	d807      	bhi.n	80041d6 <HAL_SPI_TransmitReceive+0x212>
 80041c6:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80041c8:	f1b3 3fff 	cmp.w	r3, #4294967295
 80041cc:	d003      	beq.n	80041d6 <HAL_SPI_TransmitReceive+0x212>
 80041ce:	2303      	movs	r3, #3
 80041d0:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 80041d4:	e0fb      	b.n	80043ce <HAL_SPI_TransmitReceive+0x40a>
 80041d6:	68fb      	ldr	r3, [r7, #12]
 80041d8:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 80041da:	b29b      	uxth	r3, r3
 80041dc:	2b00      	cmp	r3, #0
 80041de:	d1a3      	bne.n	8004128 <HAL_SPI_TransmitReceive+0x164>
 80041e0:	68fb      	ldr	r3, [r7, #12]
 80041e2:	f8b3 3046 	ldrh.w	r3, [r3, #70]	; 0x46
 80041e6:	b29b      	uxth	r3, r3
 80041e8:	2b00      	cmp	r3, #0
 80041ea:	d19d      	bne.n	8004128 <HAL_SPI_TransmitReceive+0x164>
 80041ec:	e0df      	b.n	80043ae <HAL_SPI_TransmitReceive+0x3ea>
 80041ee:	68fb      	ldr	r3, [r7, #12]
 80041f0:	685b      	ldr	r3, [r3, #4]
 80041f2:	2b00      	cmp	r3, #0
 80041f4:	d003      	beq.n	80041fe <HAL_SPI_TransmitReceive+0x23a>
 80041f6:	8a7b      	ldrh	r3, [r7, #18]
 80041f8:	2b01      	cmp	r3, #1
 80041fa:	f040 80cb 	bne.w	8004394 <HAL_SPI_TransmitReceive+0x3d0>
 80041fe:	68fb      	ldr	r3, [r7, #12]
 8004200:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8004202:	b29b      	uxth	r3, r3
 8004204:	2b01      	cmp	r3, #1
 8004206:	d912      	bls.n	800422e <HAL_SPI_TransmitReceive+0x26a>
 8004208:	68fb      	ldr	r3, [r7, #12]
 800420a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800420c:	881a      	ldrh	r2, [r3, #0]
 800420e:	68fb      	ldr	r3, [r7, #12]
 8004210:	681b      	ldr	r3, [r3, #0]
 8004212:	60da      	str	r2, [r3, #12]
 8004214:	68fb      	ldr	r3, [r7, #12]
 8004216:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004218:	1c9a      	adds	r2, r3, #2
 800421a:	68fb      	ldr	r3, [r7, #12]
 800421c:	639a      	str	r2, [r3, #56]	; 0x38
 800421e:	68fb      	ldr	r3, [r7, #12]
 8004220:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8004222:	b29b      	uxth	r3, r3
 8004224:	3b02      	subs	r3, #2
 8004226:	b29a      	uxth	r2, r3
 8004228:	68fb      	ldr	r3, [r7, #12]
 800422a:	87da      	strh	r2, [r3, #62]	; 0x3e
 800422c:	e0b2      	b.n	8004394 <HAL_SPI_TransmitReceive+0x3d0>
 800422e:	68fb      	ldr	r3, [r7, #12]
 8004230:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8004232:	68fb      	ldr	r3, [r7, #12]
 8004234:	681b      	ldr	r3, [r3, #0]
 8004236:	330c      	adds	r3, #12
 8004238:	7812      	ldrb	r2, [r2, #0]
 800423a:	701a      	strb	r2, [r3, #0]
 800423c:	68fb      	ldr	r3, [r7, #12]
 800423e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004240:	1c5a      	adds	r2, r3, #1
 8004242:	68fb      	ldr	r3, [r7, #12]
 8004244:	639a      	str	r2, [r3, #56]	; 0x38
 8004246:	68fb      	ldr	r3, [r7, #12]
 8004248:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 800424a:	b29b      	uxth	r3, r3
 800424c:	3b01      	subs	r3, #1
 800424e:	b29a      	uxth	r2, r3
 8004250:	68fb      	ldr	r3, [r7, #12]
 8004252:	87da      	strh	r2, [r3, #62]	; 0x3e
 8004254:	e09e      	b.n	8004394 <HAL_SPI_TransmitReceive+0x3d0>
 8004256:	68fb      	ldr	r3, [r7, #12]
 8004258:	681b      	ldr	r3, [r3, #0]
 800425a:	689b      	ldr	r3, [r3, #8]
 800425c:	f003 0302 	and.w	r3, r3, #2
 8004260:	2b02      	cmp	r3, #2
 8004262:	d134      	bne.n	80042ce <HAL_SPI_TransmitReceive+0x30a>
 8004264:	68fb      	ldr	r3, [r7, #12]
 8004266:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8004268:	b29b      	uxth	r3, r3
 800426a:	2b00      	cmp	r3, #0
 800426c:	d02f      	beq.n	80042ce <HAL_SPI_TransmitReceive+0x30a>
 800426e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004270:	2b01      	cmp	r3, #1
 8004272:	d12c      	bne.n	80042ce <HAL_SPI_TransmitReceive+0x30a>
 8004274:	68fb      	ldr	r3, [r7, #12]
 8004276:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8004278:	b29b      	uxth	r3, r3
 800427a:	2b01      	cmp	r3, #1
 800427c:	d912      	bls.n	80042a4 <HAL_SPI_TransmitReceive+0x2e0>
 800427e:	68fb      	ldr	r3, [r7, #12]
 8004280:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004282:	881a      	ldrh	r2, [r3, #0]
 8004284:	68fb      	ldr	r3, [r7, #12]
 8004286:	681b      	ldr	r3, [r3, #0]
 8004288:	60da      	str	r2, [r3, #12]
 800428a:	68fb      	ldr	r3, [r7, #12]
 800428c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800428e:	1c9a      	adds	r2, r3, #2
 8004290:	68fb      	ldr	r3, [r7, #12]
 8004292:	639a      	str	r2, [r3, #56]	; 0x38
 8004294:	68fb      	ldr	r3, [r7, #12]
 8004296:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8004298:	b29b      	uxth	r3, r3
 800429a:	3b02      	subs	r3, #2
 800429c:	b29a      	uxth	r2, r3
 800429e:	68fb      	ldr	r3, [r7, #12]
 80042a0:	87da      	strh	r2, [r3, #62]	; 0x3e
 80042a2:	e012      	b.n	80042ca <HAL_SPI_TransmitReceive+0x306>
 80042a4:	68fb      	ldr	r3, [r7, #12]
 80042a6:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 80042a8:	68fb      	ldr	r3, [r7, #12]
 80042aa:	681b      	ldr	r3, [r3, #0]
 80042ac:	330c      	adds	r3, #12
 80042ae:	7812      	ldrb	r2, [r2, #0]
 80042b0:	701a      	strb	r2, [r3, #0]
 80042b2:	68fb      	ldr	r3, [r7, #12]
 80042b4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80042b6:	1c5a      	adds	r2, r3, #1
 80042b8:	68fb      	ldr	r3, [r7, #12]
 80042ba:	639a      	str	r2, [r3, #56]	; 0x38
 80042bc:	68fb      	ldr	r3, [r7, #12]
 80042be:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 80042c0:	b29b      	uxth	r3, r3
 80042c2:	3b01      	subs	r3, #1
 80042c4:	b29a      	uxth	r2, r3
 80042c6:	68fb      	ldr	r3, [r7, #12]
 80042c8:	87da      	strh	r2, [r3, #62]	; 0x3e
 80042ca:	2300      	movs	r3, #0
 80042cc:	627b      	str	r3, [r7, #36]	; 0x24
 80042ce:	68fb      	ldr	r3, [r7, #12]
 80042d0:	681b      	ldr	r3, [r3, #0]
 80042d2:	689b      	ldr	r3, [r3, #8]
 80042d4:	f003 0301 	and.w	r3, r3, #1
 80042d8:	2b01      	cmp	r3, #1
 80042da:	d148      	bne.n	800436e <HAL_SPI_TransmitReceive+0x3aa>
 80042dc:	68fb      	ldr	r3, [r7, #12]
 80042de:	f8b3 3046 	ldrh.w	r3, [r3, #70]	; 0x46
 80042e2:	b29b      	uxth	r3, r3
 80042e4:	2b00      	cmp	r3, #0
 80042e6:	d042      	beq.n	800436e <HAL_SPI_TransmitReceive+0x3aa>
 80042e8:	68fb      	ldr	r3, [r7, #12]
 80042ea:	f8b3 3046 	ldrh.w	r3, [r3, #70]	; 0x46
 80042ee:	b29b      	uxth	r3, r3
 80042f0:	2b01      	cmp	r3, #1
 80042f2:	d923      	bls.n	800433c <HAL_SPI_TransmitReceive+0x378>
 80042f4:	68fb      	ldr	r3, [r7, #12]
 80042f6:	681b      	ldr	r3, [r3, #0]
 80042f8:	68da      	ldr	r2, [r3, #12]
 80042fa:	68fb      	ldr	r3, [r7, #12]
 80042fc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80042fe:	b292      	uxth	r2, r2
 8004300:	801a      	strh	r2, [r3, #0]
 8004302:	68fb      	ldr	r3, [r7, #12]
 8004304:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004306:	1c9a      	adds	r2, r3, #2
 8004308:	68fb      	ldr	r3, [r7, #12]
 800430a:	641a      	str	r2, [r3, #64]	; 0x40
 800430c:	68fb      	ldr	r3, [r7, #12]
 800430e:	f8b3 3046 	ldrh.w	r3, [r3, #70]	; 0x46
 8004312:	b29b      	uxth	r3, r3
 8004314:	3b02      	subs	r3, #2
 8004316:	b29a      	uxth	r2, r3
 8004318:	68fb      	ldr	r3, [r7, #12]
 800431a:	f8a3 2046 	strh.w	r2, [r3, #70]	; 0x46
 800431e:	68fb      	ldr	r3, [r7, #12]
 8004320:	f8b3 3046 	ldrh.w	r3, [r3, #70]	; 0x46
 8004324:	b29b      	uxth	r3, r3
 8004326:	2b01      	cmp	r3, #1
 8004328:	d81f      	bhi.n	800436a <HAL_SPI_TransmitReceive+0x3a6>
 800432a:	68fb      	ldr	r3, [r7, #12]
 800432c:	681b      	ldr	r3, [r3, #0]
 800432e:	685a      	ldr	r2, [r3, #4]
 8004330:	68fb      	ldr	r3, [r7, #12]
 8004332:	681b      	ldr	r3, [r3, #0]
 8004334:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8004338:	605a      	str	r2, [r3, #4]
 800433a:	e016      	b.n	800436a <HAL_SPI_TransmitReceive+0x3a6>
 800433c:	68fb      	ldr	r3, [r7, #12]
 800433e:	681b      	ldr	r3, [r3, #0]
 8004340:	f103 020c 	add.w	r2, r3, #12
 8004344:	68fb      	ldr	r3, [r7, #12]
 8004346:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004348:	7812      	ldrb	r2, [r2, #0]
 800434a:	b2d2      	uxtb	r2, r2
 800434c:	701a      	strb	r2, [r3, #0]
 800434e:	68fb      	ldr	r3, [r7, #12]
 8004350:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004352:	1c5a      	adds	r2, r3, #1
 8004354:	68fb      	ldr	r3, [r7, #12]
 8004356:	641a      	str	r2, [r3, #64]	; 0x40
 8004358:	68fb      	ldr	r3, [r7, #12]
 800435a:	f8b3 3046 	ldrh.w	r3, [r3, #70]	; 0x46
 800435e:	b29b      	uxth	r3, r3
 8004360:	3b01      	subs	r3, #1
 8004362:	b29a      	uxth	r2, r3
 8004364:	68fb      	ldr	r3, [r7, #12]
 8004366:	f8a3 2046 	strh.w	r2, [r3, #70]	; 0x46
 800436a:	2301      	movs	r3, #1
 800436c:	627b      	str	r3, [r7, #36]	; 0x24
 800436e:	f7fc ff4f 	bl	8001210 <HAL_GetTick>
 8004372:	4602      	mov	r2, r0
 8004374:	69fb      	ldr	r3, [r7, #28]
 8004376:	1ad3      	subs	r3, r2, r3
 8004378:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800437a:	429a      	cmp	r2, r3
 800437c:	d803      	bhi.n	8004386 <HAL_SPI_TransmitReceive+0x3c2>
 800437e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8004380:	f1b3 3fff 	cmp.w	r3, #4294967295
 8004384:	d102      	bne.n	800438c <HAL_SPI_TransmitReceive+0x3c8>
 8004386:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8004388:	2b00      	cmp	r3, #0
 800438a:	d103      	bne.n	8004394 <HAL_SPI_TransmitReceive+0x3d0>
 800438c:	2303      	movs	r3, #3
 800438e:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 8004392:	e01c      	b.n	80043ce <HAL_SPI_TransmitReceive+0x40a>
 8004394:	68fb      	ldr	r3, [r7, #12]
 8004396:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8004398:	b29b      	uxth	r3, r3
 800439a:	2b00      	cmp	r3, #0
 800439c:	f47f af5b 	bne.w	8004256 <HAL_SPI_TransmitReceive+0x292>
 80043a0:	68fb      	ldr	r3, [r7, #12]
 80043a2:	f8b3 3046 	ldrh.w	r3, [r3, #70]	; 0x46
 80043a6:	b29b      	uxth	r3, r3
 80043a8:	2b00      	cmp	r3, #0
 80043aa:	f47f af54 	bne.w	8004256 <HAL_SPI_TransmitReceive+0x292>
 80043ae:	69fa      	ldr	r2, [r7, #28]
 80043b0:	6b39      	ldr	r1, [r7, #48]	; 0x30
 80043b2:	68f8      	ldr	r0, [r7, #12]
 80043b4:	f000 f956 	bl	8004664 <SPI_EndRxTxTransaction>
 80043b8:	4603      	mov	r3, r0
 80043ba:	2b00      	cmp	r3, #0
 80043bc:	d006      	beq.n	80043cc <HAL_SPI_TransmitReceive+0x408>
 80043be:	2301      	movs	r3, #1
 80043c0:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 80043c4:	68fb      	ldr	r3, [r7, #12]
 80043c6:	2220      	movs	r2, #32
 80043c8:	661a      	str	r2, [r3, #96]	; 0x60
 80043ca:	e000      	b.n	80043ce <HAL_SPI_TransmitReceive+0x40a>
 80043cc:	bf00      	nop
 80043ce:	68fb      	ldr	r3, [r7, #12]
 80043d0:	2201      	movs	r2, #1
 80043d2:	f883 205d 	strb.w	r2, [r3, #93]	; 0x5d
 80043d6:	68fb      	ldr	r3, [r7, #12]
 80043d8:	2200      	movs	r2, #0
 80043da:	f883 205c 	strb.w	r2, [r3, #92]	; 0x5c
 80043de:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
 80043e2:	4618      	mov	r0, r3
 80043e4:	3728      	adds	r7, #40	; 0x28
 80043e6:	46bd      	mov	sp, r7
 80043e8:	bd80      	pop	{r7, pc}

080043ea <HAL_SPI_GetState>:
 80043ea:	b480      	push	{r7}
 80043ec:	b083      	sub	sp, #12
 80043ee:	af00      	add	r7, sp, #0
 80043f0:	6078      	str	r0, [r7, #4]
 80043f2:	687b      	ldr	r3, [r7, #4]
 80043f4:	f893 305d 	ldrb.w	r3, [r3, #93]	; 0x5d
 80043f8:	b2db      	uxtb	r3, r3
 80043fa:	4618      	mov	r0, r3
 80043fc:	370c      	adds	r7, #12
 80043fe:	46bd      	mov	sp, r7
 8004400:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004404:	4770      	bx	lr

08004406 <SPI_WaitFlagStateUntilTimeout>:
 8004406:	b580      	push	{r7, lr}
 8004408:	b084      	sub	sp, #16
 800440a:	af00      	add	r7, sp, #0
 800440c:	60f8      	str	r0, [r7, #12]
 800440e:	60b9      	str	r1, [r7, #8]
 8004410:	603b      	str	r3, [r7, #0]
 8004412:	4613      	mov	r3, r2
 8004414:	71fb      	strb	r3, [r7, #7]
 8004416:	e04c      	b.n	80044b2 <SPI_WaitFlagStateUntilTimeout+0xac>
 8004418:	683b      	ldr	r3, [r7, #0]
 800441a:	f1b3 3fff 	cmp.w	r3, #4294967295
 800441e:	d048      	beq.n	80044b2 <SPI_WaitFlagStateUntilTimeout+0xac>
 8004420:	f7fc fef6 	bl	8001210 <HAL_GetTick>
 8004424:	4602      	mov	r2, r0
 8004426:	69bb      	ldr	r3, [r7, #24]
 8004428:	1ad3      	subs	r3, r2, r3
 800442a:	683a      	ldr	r2, [r7, #0]
 800442c:	429a      	cmp	r2, r3
 800442e:	d902      	bls.n	8004436 <SPI_WaitFlagStateUntilTimeout+0x30>
 8004430:	683b      	ldr	r3, [r7, #0]
 8004432:	2b00      	cmp	r3, #0
 8004434:	d13d      	bne.n	80044b2 <SPI_WaitFlagStateUntilTimeout+0xac>
 8004436:	68fb      	ldr	r3, [r7, #12]
 8004438:	681b      	ldr	r3, [r3, #0]
 800443a:	685a      	ldr	r2, [r3, #4]
 800443c:	68fb      	ldr	r3, [r7, #12]
 800443e:	681b      	ldr	r3, [r3, #0]
 8004440:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 8004444:	605a      	str	r2, [r3, #4]
 8004446:	68fb      	ldr	r3, [r7, #12]
 8004448:	685b      	ldr	r3, [r3, #4]
 800444a:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800444e:	d111      	bne.n	8004474 <SPI_WaitFlagStateUntilTimeout+0x6e>
 8004450:	68fb      	ldr	r3, [r7, #12]
 8004452:	689b      	ldr	r3, [r3, #8]
 8004454:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8004458:	d004      	beq.n	8004464 <SPI_WaitFlagStateUntilTimeout+0x5e>
 800445a:	68fb      	ldr	r3, [r7, #12]
 800445c:	689b      	ldr	r3, [r3, #8]
 800445e:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8004462:	d107      	bne.n	8004474 <SPI_WaitFlagStateUntilTimeout+0x6e>
 8004464:	68fb      	ldr	r3, [r7, #12]
 8004466:	681b      	ldr	r3, [r3, #0]
 8004468:	681a      	ldr	r2, [r3, #0]
 800446a:	68fb      	ldr	r3, [r7, #12]
 800446c:	681b      	ldr	r3, [r3, #0]
 800446e:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8004472:	601a      	str	r2, [r3, #0]
 8004474:	68fb      	ldr	r3, [r7, #12]
 8004476:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8004478:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800447c:	d10f      	bne.n	800449e <SPI_WaitFlagStateUntilTimeout+0x98>
 800447e:	68fb      	ldr	r3, [r7, #12]
 8004480:	681b      	ldr	r3, [r3, #0]
 8004482:	681a      	ldr	r2, [r3, #0]
 8004484:	68fb      	ldr	r3, [r7, #12]
 8004486:	681b      	ldr	r3, [r3, #0]
 8004488:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 800448c:	601a      	str	r2, [r3, #0]
 800448e:	68fb      	ldr	r3, [r7, #12]
 8004490:	681b      	ldr	r3, [r3, #0]
 8004492:	681a      	ldr	r2, [r3, #0]
 8004494:	68fb      	ldr	r3, [r7, #12]
 8004496:	681b      	ldr	r3, [r3, #0]
 8004498:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 800449c:	601a      	str	r2, [r3, #0]
 800449e:	68fb      	ldr	r3, [r7, #12]
 80044a0:	2201      	movs	r2, #1
 80044a2:	f883 205d 	strb.w	r2, [r3, #93]	; 0x5d
 80044a6:	68fb      	ldr	r3, [r7, #12]
 80044a8:	2200      	movs	r2, #0
 80044aa:	f883 205c 	strb.w	r2, [r3, #92]	; 0x5c
 80044ae:	2303      	movs	r3, #3
 80044b0:	e00f      	b.n	80044d2 <SPI_WaitFlagStateUntilTimeout+0xcc>
 80044b2:	68fb      	ldr	r3, [r7, #12]
 80044b4:	681b      	ldr	r3, [r3, #0]
 80044b6:	689a      	ldr	r2, [r3, #8]
 80044b8:	68bb      	ldr	r3, [r7, #8]
 80044ba:	4013      	ands	r3, r2
 80044bc:	68ba      	ldr	r2, [r7, #8]
 80044be:	429a      	cmp	r2, r3
 80044c0:	bf0c      	ite	eq
 80044c2:	2301      	moveq	r3, #1
 80044c4:	2300      	movne	r3, #0
 80044c6:	b2db      	uxtb	r3, r3
 80044c8:	461a      	mov	r2, r3
 80044ca:	79fb      	ldrb	r3, [r7, #7]
 80044cc:	429a      	cmp	r2, r3
 80044ce:	d1a3      	bne.n	8004418 <SPI_WaitFlagStateUntilTimeout+0x12>
 80044d0:	2300      	movs	r3, #0
 80044d2:	4618      	mov	r0, r3
 80044d4:	3710      	adds	r7, #16
 80044d6:	46bd      	mov	sp, r7
 80044d8:	bd80      	pop	{r7, pc}

080044da <SPI_WaitFifoStateUntilTimeout>:
 80044da:	b580      	push	{r7, lr}
 80044dc:	b084      	sub	sp, #16
 80044de:	af00      	add	r7, sp, #0
 80044e0:	60f8      	str	r0, [r7, #12]
 80044e2:	60b9      	str	r1, [r7, #8]
 80044e4:	607a      	str	r2, [r7, #4]
 80044e6:	603b      	str	r3, [r7, #0]
 80044e8:	e057      	b.n	800459a <SPI_WaitFifoStateUntilTimeout+0xc0>
 80044ea:	68bb      	ldr	r3, [r7, #8]
 80044ec:	f5b3 6fc0 	cmp.w	r3, #1536	; 0x600
 80044f0:	d106      	bne.n	8004500 <SPI_WaitFifoStateUntilTimeout+0x26>
 80044f2:	687b      	ldr	r3, [r7, #4]
 80044f4:	2b00      	cmp	r3, #0
 80044f6:	d103      	bne.n	8004500 <SPI_WaitFifoStateUntilTimeout+0x26>
 80044f8:	68fb      	ldr	r3, [r7, #12]
 80044fa:	681b      	ldr	r3, [r3, #0]
 80044fc:	330c      	adds	r3, #12
 80044fe:	781b      	ldrb	r3, [r3, #0]
 8004500:	683b      	ldr	r3, [r7, #0]
 8004502:	f1b3 3fff 	cmp.w	r3, #4294967295
 8004506:	d048      	beq.n	800459a <SPI_WaitFifoStateUntilTimeout+0xc0>
 8004508:	f7fc fe82 	bl	8001210 <HAL_GetTick>
 800450c:	4602      	mov	r2, r0
 800450e:	69bb      	ldr	r3, [r7, #24]
 8004510:	1ad3      	subs	r3, r2, r3
 8004512:	683a      	ldr	r2, [r7, #0]
 8004514:	429a      	cmp	r2, r3
 8004516:	d902      	bls.n	800451e <SPI_WaitFifoStateUntilTimeout+0x44>
 8004518:	683b      	ldr	r3, [r7, #0]
 800451a:	2b00      	cmp	r3, #0
 800451c:	d13d      	bne.n	800459a <SPI_WaitFifoStateUntilTimeout+0xc0>
 800451e:	68fb      	ldr	r3, [r7, #12]
 8004520:	681b      	ldr	r3, [r3, #0]
 8004522:	685a      	ldr	r2, [r3, #4]
 8004524:	68fb      	ldr	r3, [r7, #12]
 8004526:	681b      	ldr	r3, [r3, #0]
 8004528:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 800452c:	605a      	str	r2, [r3, #4]
 800452e:	68fb      	ldr	r3, [r7, #12]
 8004530:	685b      	ldr	r3, [r3, #4]
 8004532:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8004536:	d111      	bne.n	800455c <SPI_WaitFifoStateUntilTimeout+0x82>
 8004538:	68fb      	ldr	r3, [r7, #12]
 800453a:	689b      	ldr	r3, [r3, #8]
 800453c:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8004540:	d004      	beq.n	800454c <SPI_WaitFifoStateUntilTimeout+0x72>
 8004542:	68fb      	ldr	r3, [r7, #12]
 8004544:	689b      	ldr	r3, [r3, #8]
 8004546:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800454a:	d107      	bne.n	800455c <SPI_WaitFifoStateUntilTimeout+0x82>
 800454c:	68fb      	ldr	r3, [r7, #12]
 800454e:	681b      	ldr	r3, [r3, #0]
 8004550:	681a      	ldr	r2, [r3, #0]
 8004552:	68fb      	ldr	r3, [r7, #12]
 8004554:	681b      	ldr	r3, [r3, #0]
 8004556:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800455a:	601a      	str	r2, [r3, #0]
 800455c:	68fb      	ldr	r3, [r7, #12]
 800455e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8004560:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8004564:	d10f      	bne.n	8004586 <SPI_WaitFifoStateUntilTimeout+0xac>
 8004566:	68fb      	ldr	r3, [r7, #12]
 8004568:	681b      	ldr	r3, [r3, #0]
 800456a:	681a      	ldr	r2, [r3, #0]
 800456c:	68fb      	ldr	r3, [r7, #12]
 800456e:	681b      	ldr	r3, [r3, #0]
 8004570:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8004574:	601a      	str	r2, [r3, #0]
 8004576:	68fb      	ldr	r3, [r7, #12]
 8004578:	681b      	ldr	r3, [r3, #0]
 800457a:	681a      	ldr	r2, [r3, #0]
 800457c:	68fb      	ldr	r3, [r7, #12]
 800457e:	681b      	ldr	r3, [r3, #0]
 8004580:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 8004584:	601a      	str	r2, [r3, #0]
 8004586:	68fb      	ldr	r3, [r7, #12]
 8004588:	2201      	movs	r2, #1
 800458a:	f883 205d 	strb.w	r2, [r3, #93]	; 0x5d
 800458e:	68fb      	ldr	r3, [r7, #12]
 8004590:	2200      	movs	r2, #0
 8004592:	f883 205c 	strb.w	r2, [r3, #92]	; 0x5c
 8004596:	2303      	movs	r3, #3
 8004598:	e008      	b.n	80045ac <SPI_WaitFifoStateUntilTimeout+0xd2>
 800459a:	68fb      	ldr	r3, [r7, #12]
 800459c:	681b      	ldr	r3, [r3, #0]
 800459e:	689a      	ldr	r2, [r3, #8]
 80045a0:	68bb      	ldr	r3, [r7, #8]
 80045a2:	4013      	ands	r3, r2
 80045a4:	687a      	ldr	r2, [r7, #4]
 80045a6:	429a      	cmp	r2, r3
 80045a8:	d19f      	bne.n	80044ea <SPI_WaitFifoStateUntilTimeout+0x10>
 80045aa:	2300      	movs	r3, #0
 80045ac:	4618      	mov	r0, r3
 80045ae:	3710      	adds	r7, #16
 80045b0:	46bd      	mov	sp, r7
 80045b2:	bd80      	pop	{r7, pc}

080045b4 <SPI_EndRxTransaction>:
 80045b4:	b580      	push	{r7, lr}
 80045b6:	b086      	sub	sp, #24
 80045b8:	af02      	add	r7, sp, #8
 80045ba:	60f8      	str	r0, [r7, #12]
 80045bc:	60b9      	str	r1, [r7, #8]
 80045be:	607a      	str	r2, [r7, #4]
 80045c0:	68fb      	ldr	r3, [r7, #12]
 80045c2:	685b      	ldr	r3, [r3, #4]
 80045c4:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 80045c8:	d111      	bne.n	80045ee <SPI_EndRxTransaction+0x3a>
 80045ca:	68fb      	ldr	r3, [r7, #12]
 80045cc:	689b      	ldr	r3, [r3, #8]
 80045ce:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 80045d2:	d004      	beq.n	80045de <SPI_EndRxTransaction+0x2a>
 80045d4:	68fb      	ldr	r3, [r7, #12]
 80045d6:	689b      	ldr	r3, [r3, #8]
 80045d8:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80045dc:	d107      	bne.n	80045ee <SPI_EndRxTransaction+0x3a>
 80045de:	68fb      	ldr	r3, [r7, #12]
 80045e0:	681b      	ldr	r3, [r3, #0]
 80045e2:	681a      	ldr	r2, [r3, #0]
 80045e4:	68fb      	ldr	r3, [r7, #12]
 80045e6:	681b      	ldr	r3, [r3, #0]
 80045e8:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 80045ec:	601a      	str	r2, [r3, #0]
 80045ee:	687b      	ldr	r3, [r7, #4]
 80045f0:	9300      	str	r3, [sp, #0]
 80045f2:	68bb      	ldr	r3, [r7, #8]
 80045f4:	2200      	movs	r2, #0
 80045f6:	2180      	movs	r1, #128	; 0x80
 80045f8:	68f8      	ldr	r0, [r7, #12]
 80045fa:	f7ff ff04 	bl	8004406 <SPI_WaitFlagStateUntilTimeout>
 80045fe:	4603      	mov	r3, r0
 8004600:	2b00      	cmp	r3, #0
 8004602:	d007      	beq.n	8004614 <SPI_EndRxTransaction+0x60>
 8004604:	68fb      	ldr	r3, [r7, #12]
 8004606:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8004608:	f043 0220 	orr.w	r2, r3, #32
 800460c:	68fb      	ldr	r3, [r7, #12]
 800460e:	661a      	str	r2, [r3, #96]	; 0x60
 8004610:	2303      	movs	r3, #3
 8004612:	e023      	b.n	800465c <SPI_EndRxTransaction+0xa8>
 8004614:	68fb      	ldr	r3, [r7, #12]
 8004616:	685b      	ldr	r3, [r3, #4]
 8004618:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800461c:	d11d      	bne.n	800465a <SPI_EndRxTransaction+0xa6>
 800461e:	68fb      	ldr	r3, [r7, #12]
 8004620:	689b      	ldr	r3, [r3, #8]
 8004622:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8004626:	d004      	beq.n	8004632 <SPI_EndRxTransaction+0x7e>
 8004628:	68fb      	ldr	r3, [r7, #12]
 800462a:	689b      	ldr	r3, [r3, #8]
 800462c:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8004630:	d113      	bne.n	800465a <SPI_EndRxTransaction+0xa6>
 8004632:	687b      	ldr	r3, [r7, #4]
 8004634:	9300      	str	r3, [sp, #0]
 8004636:	68bb      	ldr	r3, [r7, #8]
 8004638:	2200      	movs	r2, #0
 800463a:	f44f 61c0 	mov.w	r1, #1536	; 0x600
 800463e:	68f8      	ldr	r0, [r7, #12]
 8004640:	f7ff ff4b 	bl	80044da <SPI_WaitFifoStateUntilTimeout>
 8004644:	4603      	mov	r3, r0
 8004646:	2b00      	cmp	r3, #0
 8004648:	d007      	beq.n	800465a <SPI_EndRxTransaction+0xa6>
 800464a:	68fb      	ldr	r3, [r7, #12]
 800464c:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800464e:	f043 0220 	orr.w	r2, r3, #32
 8004652:	68fb      	ldr	r3, [r7, #12]
 8004654:	661a      	str	r2, [r3, #96]	; 0x60
 8004656:	2303      	movs	r3, #3
 8004658:	e000      	b.n	800465c <SPI_EndRxTransaction+0xa8>
 800465a:	2300      	movs	r3, #0
 800465c:	4618      	mov	r0, r3
 800465e:	3710      	adds	r7, #16
 8004660:	46bd      	mov	sp, r7
 8004662:	bd80      	pop	{r7, pc}

08004664 <SPI_EndRxTxTransaction>:
 8004664:	b580      	push	{r7, lr}
 8004666:	b086      	sub	sp, #24
 8004668:	af02      	add	r7, sp, #8
 800466a:	60f8      	str	r0, [r7, #12]
 800466c:	60b9      	str	r1, [r7, #8]
 800466e:	607a      	str	r2, [r7, #4]
 8004670:	687b      	ldr	r3, [r7, #4]
 8004672:	9300      	str	r3, [sp, #0]
 8004674:	68bb      	ldr	r3, [r7, #8]
 8004676:	2200      	movs	r2, #0
 8004678:	f44f 51c0 	mov.w	r1, #6144	; 0x1800
 800467c:	68f8      	ldr	r0, [r7, #12]
 800467e:	f7ff ff2c 	bl	80044da <SPI_WaitFifoStateUntilTimeout>
 8004682:	4603      	mov	r3, r0
 8004684:	2b00      	cmp	r3, #0
 8004686:	d007      	beq.n	8004698 <SPI_EndRxTxTransaction+0x34>
 8004688:	68fb      	ldr	r3, [r7, #12]
 800468a:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800468c:	f043 0220 	orr.w	r2, r3, #32
 8004690:	68fb      	ldr	r3, [r7, #12]
 8004692:	661a      	str	r2, [r3, #96]	; 0x60
 8004694:	2303      	movs	r3, #3
 8004696:	e027      	b.n	80046e8 <SPI_EndRxTxTransaction+0x84>
 8004698:	687b      	ldr	r3, [r7, #4]
 800469a:	9300      	str	r3, [sp, #0]
 800469c:	68bb      	ldr	r3, [r7, #8]
 800469e:	2200      	movs	r2, #0
 80046a0:	2180      	movs	r1, #128	; 0x80
 80046a2:	68f8      	ldr	r0, [r7, #12]
 80046a4:	f7ff feaf 	bl	8004406 <SPI_WaitFlagStateUntilTimeout>
 80046a8:	4603      	mov	r3, r0
 80046aa:	2b00      	cmp	r3, #0
 80046ac:	d007      	beq.n	80046be <SPI_EndRxTxTransaction+0x5a>
 80046ae:	68fb      	ldr	r3, [r7, #12]
 80046b0:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80046b2:	f043 0220 	orr.w	r2, r3, #32
 80046b6:	68fb      	ldr	r3, [r7, #12]
 80046b8:	661a      	str	r2, [r3, #96]	; 0x60
 80046ba:	2303      	movs	r3, #3
 80046bc:	e014      	b.n	80046e8 <SPI_EndRxTxTransaction+0x84>
 80046be:	687b      	ldr	r3, [r7, #4]
 80046c0:	9300      	str	r3, [sp, #0]
 80046c2:	68bb      	ldr	r3, [r7, #8]
 80046c4:	2200      	movs	r2, #0
 80046c6:	f44f 61c0 	mov.w	r1, #1536	; 0x600
 80046ca:	68f8      	ldr	r0, [r7, #12]
 80046cc:	f7ff ff05 	bl	80044da <SPI_WaitFifoStateUntilTimeout>
 80046d0:	4603      	mov	r3, r0
 80046d2:	2b00      	cmp	r3, #0
 80046d4:	d007      	beq.n	80046e6 <SPI_EndRxTxTransaction+0x82>
 80046d6:	68fb      	ldr	r3, [r7, #12]
 80046d8:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80046da:	f043 0220 	orr.w	r2, r3, #32
 80046de:	68fb      	ldr	r3, [r7, #12]
 80046e0:	661a      	str	r2, [r3, #96]	; 0x60
 80046e2:	2303      	movs	r3, #3
 80046e4:	e000      	b.n	80046e8 <SPI_EndRxTxTransaction+0x84>
 80046e6:	2300      	movs	r3, #0
 80046e8:	4618      	mov	r0, r3
 80046ea:	3710      	adds	r7, #16
 80046ec:	46bd      	mov	sp, r7
 80046ee:	bd80      	pop	{r7, pc}

080046f0 <HAL_TIM_Base_Init>:
 80046f0:	b580      	push	{r7, lr}
 80046f2:	b082      	sub	sp, #8
 80046f4:	af00      	add	r7, sp, #0
 80046f6:	6078      	str	r0, [r7, #4]
 80046f8:	687b      	ldr	r3, [r7, #4]
 80046fa:	2b00      	cmp	r3, #0
 80046fc:	d101      	bne.n	8004702 <HAL_TIM_Base_Init+0x12>
 80046fe:	2301      	movs	r3, #1
 8004700:	e049      	b.n	8004796 <HAL_TIM_Base_Init+0xa6>
 8004702:	687b      	ldr	r3, [r7, #4]
 8004704:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8004708:	b2db      	uxtb	r3, r3
 800470a:	2b00      	cmp	r3, #0
 800470c:	d106      	bne.n	800471c <HAL_TIM_Base_Init+0x2c>
 800470e:	687b      	ldr	r3, [r7, #4]
 8004710:	2200      	movs	r2, #0
 8004712:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8004716:	6878      	ldr	r0, [r7, #4]
 8004718:	f7fc fc6c 	bl	8000ff4 <HAL_TIM_Base_MspInit>
 800471c:	687b      	ldr	r3, [r7, #4]
 800471e:	2202      	movs	r2, #2
 8004720:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8004724:	687b      	ldr	r3, [r7, #4]
 8004726:	681a      	ldr	r2, [r3, #0]
 8004728:	687b      	ldr	r3, [r7, #4]
 800472a:	3304      	adds	r3, #4
 800472c:	4619      	mov	r1, r3
 800472e:	4610      	mov	r0, r2
 8004730:	f000 fa42 	bl	8004bb8 <TIM_Base_SetConfig>
 8004734:	687b      	ldr	r3, [r7, #4]
 8004736:	2201      	movs	r2, #1
 8004738:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
 800473c:	687b      	ldr	r3, [r7, #4]
 800473e:	2201      	movs	r2, #1
 8004740:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8004744:	687b      	ldr	r3, [r7, #4]
 8004746:	2201      	movs	r2, #1
 8004748:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 800474c:	687b      	ldr	r3, [r7, #4]
 800474e:	2201      	movs	r2, #1
 8004750:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8004754:	687b      	ldr	r3, [r7, #4]
 8004756:	2201      	movs	r2, #1
 8004758:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800475c:	687b      	ldr	r3, [r7, #4]
 800475e:	2201      	movs	r2, #1
 8004760:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8004764:	687b      	ldr	r3, [r7, #4]
 8004766:	2201      	movs	r2, #1
 8004768:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 800476c:	687b      	ldr	r3, [r7, #4]
 800476e:	2201      	movs	r2, #1
 8004770:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8004774:	687b      	ldr	r3, [r7, #4]
 8004776:	2201      	movs	r2, #1
 8004778:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 800477c:	687b      	ldr	r3, [r7, #4]
 800477e:	2201      	movs	r2, #1
 8004780:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 8004784:	687b      	ldr	r3, [r7, #4]
 8004786:	2201      	movs	r2, #1
 8004788:	f883 2047 	strb.w	r2, [r3, #71]	; 0x47
 800478c:	687b      	ldr	r3, [r7, #4]
 800478e:	2201      	movs	r2, #1
 8004790:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8004794:	2300      	movs	r3, #0
 8004796:	4618      	mov	r0, r3
 8004798:	3708      	adds	r7, #8
 800479a:	46bd      	mov	sp, r7
 800479c:	bd80      	pop	{r7, pc}
	...

080047a0 <HAL_TIM_Base_Start_IT>:
 80047a0:	b480      	push	{r7}
 80047a2:	b085      	sub	sp, #20
 80047a4:	af00      	add	r7, sp, #0
 80047a6:	6078      	str	r0, [r7, #4]
 80047a8:	687b      	ldr	r3, [r7, #4]
 80047aa:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80047ae:	b2db      	uxtb	r3, r3
 80047b0:	2b01      	cmp	r3, #1
 80047b2:	d001      	beq.n	80047b8 <HAL_TIM_Base_Start_IT+0x18>
 80047b4:	2301      	movs	r3, #1
 80047b6:	e021      	b.n	80047fc <HAL_TIM_Base_Start_IT+0x5c>
 80047b8:	687b      	ldr	r3, [r7, #4]
 80047ba:	2202      	movs	r2, #2
 80047bc:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80047c0:	687b      	ldr	r3, [r7, #4]
 80047c2:	681b      	ldr	r3, [r3, #0]
 80047c4:	68da      	ldr	r2, [r3, #12]
 80047c6:	687b      	ldr	r3, [r7, #4]
 80047c8:	681b      	ldr	r3, [r3, #0]
 80047ca:	f042 0201 	orr.w	r2, r2, #1
 80047ce:	60da      	str	r2, [r3, #12]
 80047d0:	687b      	ldr	r3, [r7, #4]
 80047d2:	681b      	ldr	r3, [r3, #0]
 80047d4:	689a      	ldr	r2, [r3, #8]
 80047d6:	4b0c      	ldr	r3, [pc, #48]	; (8004808 <HAL_TIM_Base_Start_IT+0x68>)
 80047d8:	4013      	ands	r3, r2
 80047da:	60fb      	str	r3, [r7, #12]
 80047dc:	68fb      	ldr	r3, [r7, #12]
 80047de:	2b06      	cmp	r3, #6
 80047e0:	d00b      	beq.n	80047fa <HAL_TIM_Base_Start_IT+0x5a>
 80047e2:	68fb      	ldr	r3, [r7, #12]
 80047e4:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80047e8:	d007      	beq.n	80047fa <HAL_TIM_Base_Start_IT+0x5a>
 80047ea:	687b      	ldr	r3, [r7, #4]
 80047ec:	681b      	ldr	r3, [r3, #0]
 80047ee:	681a      	ldr	r2, [r3, #0]
 80047f0:	687b      	ldr	r3, [r7, #4]
 80047f2:	681b      	ldr	r3, [r3, #0]
 80047f4:	f042 0201 	orr.w	r2, r2, #1
 80047f8:	601a      	str	r2, [r3, #0]
 80047fa:	2300      	movs	r3, #0
 80047fc:	4618      	mov	r0, r3
 80047fe:	3714      	adds	r7, #20
 8004800:	46bd      	mov	sp, r7
 8004802:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004806:	4770      	bx	lr
 8004808:	00010007 	.word	0x00010007

0800480c <HAL_TIM_Base_Stop_IT>:
 800480c:	b480      	push	{r7}
 800480e:	b083      	sub	sp, #12
 8004810:	af00      	add	r7, sp, #0
 8004812:	6078      	str	r0, [r7, #4]
 8004814:	687b      	ldr	r3, [r7, #4]
 8004816:	681b      	ldr	r3, [r3, #0]
 8004818:	68da      	ldr	r2, [r3, #12]
 800481a:	687b      	ldr	r3, [r7, #4]
 800481c:	681b      	ldr	r3, [r3, #0]
 800481e:	f022 0201 	bic.w	r2, r2, #1
 8004822:	60da      	str	r2, [r3, #12]
 8004824:	687b      	ldr	r3, [r7, #4]
 8004826:	681b      	ldr	r3, [r3, #0]
 8004828:	6a1a      	ldr	r2, [r3, #32]
 800482a:	f241 1311 	movw	r3, #4369	; 0x1111
 800482e:	4013      	ands	r3, r2
 8004830:	2b00      	cmp	r3, #0
 8004832:	d10f      	bne.n	8004854 <HAL_TIM_Base_Stop_IT+0x48>
 8004834:	687b      	ldr	r3, [r7, #4]
 8004836:	681b      	ldr	r3, [r3, #0]
 8004838:	6a1a      	ldr	r2, [r3, #32]
 800483a:	f244 4344 	movw	r3, #17476	; 0x4444
 800483e:	4013      	ands	r3, r2
 8004840:	2b00      	cmp	r3, #0
 8004842:	d107      	bne.n	8004854 <HAL_TIM_Base_Stop_IT+0x48>
 8004844:	687b      	ldr	r3, [r7, #4]
 8004846:	681b      	ldr	r3, [r3, #0]
 8004848:	681a      	ldr	r2, [r3, #0]
 800484a:	687b      	ldr	r3, [r7, #4]
 800484c:	681b      	ldr	r3, [r3, #0]
 800484e:	f022 0201 	bic.w	r2, r2, #1
 8004852:	601a      	str	r2, [r3, #0]
 8004854:	687b      	ldr	r3, [r7, #4]
 8004856:	2201      	movs	r2, #1
 8004858:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800485c:	2300      	movs	r3, #0
 800485e:	4618      	mov	r0, r3
 8004860:	370c      	adds	r7, #12
 8004862:	46bd      	mov	sp, r7
 8004864:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004868:	4770      	bx	lr

0800486a <HAL_TIM_IRQHandler>:
 800486a:	b580      	push	{r7, lr}
 800486c:	b082      	sub	sp, #8
 800486e:	af00      	add	r7, sp, #0
 8004870:	6078      	str	r0, [r7, #4]
 8004872:	687b      	ldr	r3, [r7, #4]
 8004874:	681b      	ldr	r3, [r3, #0]
 8004876:	691b      	ldr	r3, [r3, #16]
 8004878:	f003 0302 	and.w	r3, r3, #2
 800487c:	2b02      	cmp	r3, #2
 800487e:	d122      	bne.n	80048c6 <HAL_TIM_IRQHandler+0x5c>
 8004880:	687b      	ldr	r3, [r7, #4]
 8004882:	681b      	ldr	r3, [r3, #0]
 8004884:	68db      	ldr	r3, [r3, #12]
 8004886:	f003 0302 	and.w	r3, r3, #2
 800488a:	2b02      	cmp	r3, #2
 800488c:	d11b      	bne.n	80048c6 <HAL_TIM_IRQHandler+0x5c>
 800488e:	687b      	ldr	r3, [r7, #4]
 8004890:	681b      	ldr	r3, [r3, #0]
 8004892:	f06f 0202 	mvn.w	r2, #2
 8004896:	611a      	str	r2, [r3, #16]
 8004898:	687b      	ldr	r3, [r7, #4]
 800489a:	2201      	movs	r2, #1
 800489c:	771a      	strb	r2, [r3, #28]
 800489e:	687b      	ldr	r3, [r7, #4]
 80048a0:	681b      	ldr	r3, [r3, #0]
 80048a2:	699b      	ldr	r3, [r3, #24]
 80048a4:	f003 0303 	and.w	r3, r3, #3
 80048a8:	2b00      	cmp	r3, #0
 80048aa:	d003      	beq.n	80048b4 <HAL_TIM_IRQHandler+0x4a>
 80048ac:	6878      	ldr	r0, [r7, #4]
 80048ae:	f000 f965 	bl	8004b7c <HAL_TIM_IC_CaptureCallback>
 80048b2:	e005      	b.n	80048c0 <HAL_TIM_IRQHandler+0x56>
 80048b4:	6878      	ldr	r0, [r7, #4]
 80048b6:	f000 f957 	bl	8004b68 <HAL_TIM_OC_DelayElapsedCallback>
 80048ba:	6878      	ldr	r0, [r7, #4]
 80048bc:	f000 f968 	bl	8004b90 <HAL_TIM_PWM_PulseFinishedCallback>
 80048c0:	687b      	ldr	r3, [r7, #4]
 80048c2:	2200      	movs	r2, #0
 80048c4:	771a      	strb	r2, [r3, #28]
 80048c6:	687b      	ldr	r3, [r7, #4]
 80048c8:	681b      	ldr	r3, [r3, #0]
 80048ca:	691b      	ldr	r3, [r3, #16]
 80048cc:	f003 0304 	and.w	r3, r3, #4
 80048d0:	2b04      	cmp	r3, #4
 80048d2:	d122      	bne.n	800491a <HAL_TIM_IRQHandler+0xb0>
 80048d4:	687b      	ldr	r3, [r7, #4]
 80048d6:	681b      	ldr	r3, [r3, #0]
 80048d8:	68db      	ldr	r3, [r3, #12]
 80048da:	f003 0304 	and.w	r3, r3, #4
 80048de:	2b04      	cmp	r3, #4
 80048e0:	d11b      	bne.n	800491a <HAL_TIM_IRQHandler+0xb0>
 80048e2:	687b      	ldr	r3, [r7, #4]
 80048e4:	681b      	ldr	r3, [r3, #0]
 80048e6:	f06f 0204 	mvn.w	r2, #4
 80048ea:	611a      	str	r2, [r3, #16]
 80048ec:	687b      	ldr	r3, [r7, #4]
 80048ee:	2202      	movs	r2, #2
 80048f0:	771a      	strb	r2, [r3, #28]
 80048f2:	687b      	ldr	r3, [r7, #4]
 80048f4:	681b      	ldr	r3, [r3, #0]
 80048f6:	699b      	ldr	r3, [r3, #24]
 80048f8:	f403 7340 	and.w	r3, r3, #768	; 0x300
 80048fc:	2b00      	cmp	r3, #0
 80048fe:	d003      	beq.n	8004908 <HAL_TIM_IRQHandler+0x9e>
 8004900:	6878      	ldr	r0, [r7, #4]
 8004902:	f000 f93b 	bl	8004b7c <HAL_TIM_IC_CaptureCallback>
 8004906:	e005      	b.n	8004914 <HAL_TIM_IRQHandler+0xaa>
 8004908:	6878      	ldr	r0, [r7, #4]
 800490a:	f000 f92d 	bl	8004b68 <HAL_TIM_OC_DelayElapsedCallback>
 800490e:	6878      	ldr	r0, [r7, #4]
 8004910:	f000 f93e 	bl	8004b90 <HAL_TIM_PWM_PulseFinishedCallback>
 8004914:	687b      	ldr	r3, [r7, #4]
 8004916:	2200      	movs	r2, #0
 8004918:	771a      	strb	r2, [r3, #28]
 800491a:	687b      	ldr	r3, [r7, #4]
 800491c:	681b      	ldr	r3, [r3, #0]
 800491e:	691b      	ldr	r3, [r3, #16]
 8004920:	f003 0308 	and.w	r3, r3, #8
 8004924:	2b08      	cmp	r3, #8
 8004926:	d122      	bne.n	800496e <HAL_TIM_IRQHandler+0x104>
 8004928:	687b      	ldr	r3, [r7, #4]
 800492a:	681b      	ldr	r3, [r3, #0]
 800492c:	68db      	ldr	r3, [r3, #12]
 800492e:	f003 0308 	and.w	r3, r3, #8
 8004932:	2b08      	cmp	r3, #8
 8004934:	d11b      	bne.n	800496e <HAL_TIM_IRQHandler+0x104>
 8004936:	687b      	ldr	r3, [r7, #4]
 8004938:	681b      	ldr	r3, [r3, #0]
 800493a:	f06f 0208 	mvn.w	r2, #8
 800493e:	611a      	str	r2, [r3, #16]
 8004940:	687b      	ldr	r3, [r7, #4]
 8004942:	2204      	movs	r2, #4
 8004944:	771a      	strb	r2, [r3, #28]
 8004946:	687b      	ldr	r3, [r7, #4]
 8004948:	681b      	ldr	r3, [r3, #0]
 800494a:	69db      	ldr	r3, [r3, #28]
 800494c:	f003 0303 	and.w	r3, r3, #3
 8004950:	2b00      	cmp	r3, #0
 8004952:	d003      	beq.n	800495c <HAL_TIM_IRQHandler+0xf2>
 8004954:	6878      	ldr	r0, [r7, #4]
 8004956:	f000 f911 	bl	8004b7c <HAL_TIM_IC_CaptureCallback>
 800495a:	e005      	b.n	8004968 <HAL_TIM_IRQHandler+0xfe>
 800495c:	6878      	ldr	r0, [r7, #4]
 800495e:	f000 f903 	bl	8004b68 <HAL_TIM_OC_DelayElapsedCallback>
 8004962:	6878      	ldr	r0, [r7, #4]
 8004964:	f000 f914 	bl	8004b90 <HAL_TIM_PWM_PulseFinishedCallback>
 8004968:	687b      	ldr	r3, [r7, #4]
 800496a:	2200      	movs	r2, #0
 800496c:	771a      	strb	r2, [r3, #28]
 800496e:	687b      	ldr	r3, [r7, #4]
 8004970:	681b      	ldr	r3, [r3, #0]
 8004972:	691b      	ldr	r3, [r3, #16]
 8004974:	f003 0310 	and.w	r3, r3, #16
 8004978:	2b10      	cmp	r3, #16
 800497a:	d122      	bne.n	80049c2 <HAL_TIM_IRQHandler+0x158>
 800497c:	687b      	ldr	r3, [r7, #4]
 800497e:	681b      	ldr	r3, [r3, #0]
 8004980:	68db      	ldr	r3, [r3, #12]
 8004982:	f003 0310 	and.w	r3, r3, #16
 8004986:	2b10      	cmp	r3, #16
 8004988:	d11b      	bne.n	80049c2 <HAL_TIM_IRQHandler+0x158>
 800498a:	687b      	ldr	r3, [r7, #4]
 800498c:	681b      	ldr	r3, [r3, #0]
 800498e:	f06f 0210 	mvn.w	r2, #16
 8004992:	611a      	str	r2, [r3, #16]
 8004994:	687b      	ldr	r3, [r7, #4]
 8004996:	2208      	movs	r2, #8
 8004998:	771a      	strb	r2, [r3, #28]
 800499a:	687b      	ldr	r3, [r7, #4]
 800499c:	681b      	ldr	r3, [r3, #0]
 800499e:	69db      	ldr	r3, [r3, #28]
 80049a0:	f403 7340 	and.w	r3, r3, #768	; 0x300
 80049a4:	2b00      	cmp	r3, #0
 80049a6:	d003      	beq.n	80049b0 <HAL_TIM_IRQHandler+0x146>
 80049a8:	6878      	ldr	r0, [r7, #4]
 80049aa:	f000 f8e7 	bl	8004b7c <HAL_TIM_IC_CaptureCallback>
 80049ae:	e005      	b.n	80049bc <HAL_TIM_IRQHandler+0x152>
 80049b0:	6878      	ldr	r0, [r7, #4]
 80049b2:	f000 f8d9 	bl	8004b68 <HAL_TIM_OC_DelayElapsedCallback>
 80049b6:	6878      	ldr	r0, [r7, #4]
 80049b8:	f000 f8ea 	bl	8004b90 <HAL_TIM_PWM_PulseFinishedCallback>
 80049bc:	687b      	ldr	r3, [r7, #4]
 80049be:	2200      	movs	r2, #0
 80049c0:	771a      	strb	r2, [r3, #28]
 80049c2:	687b      	ldr	r3, [r7, #4]
 80049c4:	681b      	ldr	r3, [r3, #0]
 80049c6:	691b      	ldr	r3, [r3, #16]
 80049c8:	f003 0301 	and.w	r3, r3, #1
 80049cc:	2b01      	cmp	r3, #1
 80049ce:	d10e      	bne.n	80049ee <HAL_TIM_IRQHandler+0x184>
 80049d0:	687b      	ldr	r3, [r7, #4]
 80049d2:	681b      	ldr	r3, [r3, #0]
 80049d4:	68db      	ldr	r3, [r3, #12]
 80049d6:	f003 0301 	and.w	r3, r3, #1
 80049da:	2b01      	cmp	r3, #1
 80049dc:	d107      	bne.n	80049ee <HAL_TIM_IRQHandler+0x184>
 80049de:	687b      	ldr	r3, [r7, #4]
 80049e0:	681b      	ldr	r3, [r3, #0]
 80049e2:	f06f 0201 	mvn.w	r2, #1
 80049e6:	611a      	str	r2, [r3, #16]
 80049e8:	6878      	ldr	r0, [r7, #4]
 80049ea:	f7fc f987 	bl	8000cfc <HAL_TIM_PeriodElapsedCallback>
 80049ee:	687b      	ldr	r3, [r7, #4]
 80049f0:	681b      	ldr	r3, [r3, #0]
 80049f2:	691b      	ldr	r3, [r3, #16]
 80049f4:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80049f8:	2b80      	cmp	r3, #128	; 0x80
 80049fa:	d10e      	bne.n	8004a1a <HAL_TIM_IRQHandler+0x1b0>
 80049fc:	687b      	ldr	r3, [r7, #4]
 80049fe:	681b      	ldr	r3, [r3, #0]
 8004a00:	68db      	ldr	r3, [r3, #12]
 8004a02:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8004a06:	2b80      	cmp	r3, #128	; 0x80
 8004a08:	d107      	bne.n	8004a1a <HAL_TIM_IRQHandler+0x1b0>
 8004a0a:	687b      	ldr	r3, [r7, #4]
 8004a0c:	681b      	ldr	r3, [r3, #0]
 8004a0e:	f06f 0280 	mvn.w	r2, #128	; 0x80
 8004a12:	611a      	str	r2, [r3, #16]
 8004a14:	6878      	ldr	r0, [r7, #4]
 8004a16:	f000 f981 	bl	8004d1c <HAL_TIMEx_BreakCallback>
 8004a1a:	687b      	ldr	r3, [r7, #4]
 8004a1c:	681b      	ldr	r3, [r3, #0]
 8004a1e:	691b      	ldr	r3, [r3, #16]
 8004a20:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8004a24:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8004a28:	d10e      	bne.n	8004a48 <HAL_TIM_IRQHandler+0x1de>
 8004a2a:	687b      	ldr	r3, [r7, #4]
 8004a2c:	681b      	ldr	r3, [r3, #0]
 8004a2e:	68db      	ldr	r3, [r3, #12]
 8004a30:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8004a34:	2b80      	cmp	r3, #128	; 0x80
 8004a36:	d107      	bne.n	8004a48 <HAL_TIM_IRQHandler+0x1de>
 8004a38:	687b      	ldr	r3, [r7, #4]
 8004a3a:	681b      	ldr	r3, [r3, #0]
 8004a3c:	f46f 7280 	mvn.w	r2, #256	; 0x100
 8004a40:	611a      	str	r2, [r3, #16]
 8004a42:	6878      	ldr	r0, [r7, #4]
 8004a44:	f000 f974 	bl	8004d30 <HAL_TIMEx_Break2Callback>
 8004a48:	687b      	ldr	r3, [r7, #4]
 8004a4a:	681b      	ldr	r3, [r3, #0]
 8004a4c:	691b      	ldr	r3, [r3, #16]
 8004a4e:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8004a52:	2b40      	cmp	r3, #64	; 0x40
 8004a54:	d10e      	bne.n	8004a74 <HAL_TIM_IRQHandler+0x20a>
 8004a56:	687b      	ldr	r3, [r7, #4]
 8004a58:	681b      	ldr	r3, [r3, #0]
 8004a5a:	68db      	ldr	r3, [r3, #12]
 8004a5c:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8004a60:	2b40      	cmp	r3, #64	; 0x40
 8004a62:	d107      	bne.n	8004a74 <HAL_TIM_IRQHandler+0x20a>
 8004a64:	687b      	ldr	r3, [r7, #4]
 8004a66:	681b      	ldr	r3, [r3, #0]
 8004a68:	f06f 0240 	mvn.w	r2, #64	; 0x40
 8004a6c:	611a      	str	r2, [r3, #16]
 8004a6e:	6878      	ldr	r0, [r7, #4]
 8004a70:	f000 f898 	bl	8004ba4 <HAL_TIM_TriggerCallback>
 8004a74:	687b      	ldr	r3, [r7, #4]
 8004a76:	681b      	ldr	r3, [r3, #0]
 8004a78:	691b      	ldr	r3, [r3, #16]
 8004a7a:	f003 0320 	and.w	r3, r3, #32
 8004a7e:	2b20      	cmp	r3, #32
 8004a80:	d10e      	bne.n	8004aa0 <HAL_TIM_IRQHandler+0x236>
 8004a82:	687b      	ldr	r3, [r7, #4]
 8004a84:	681b      	ldr	r3, [r3, #0]
 8004a86:	68db      	ldr	r3, [r3, #12]
 8004a88:	f003 0320 	and.w	r3, r3, #32
 8004a8c:	2b20      	cmp	r3, #32
 8004a8e:	d107      	bne.n	8004aa0 <HAL_TIM_IRQHandler+0x236>
 8004a90:	687b      	ldr	r3, [r7, #4]
 8004a92:	681b      	ldr	r3, [r3, #0]
 8004a94:	f06f 0220 	mvn.w	r2, #32
 8004a98:	611a      	str	r2, [r3, #16]
 8004a9a:	6878      	ldr	r0, [r7, #4]
 8004a9c:	f000 f934 	bl	8004d08 <HAL_TIMEx_CommutCallback>
 8004aa0:	687b      	ldr	r3, [r7, #4]
 8004aa2:	681b      	ldr	r3, [r3, #0]
 8004aa4:	691b      	ldr	r3, [r3, #16]
 8004aa6:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8004aaa:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 8004aae:	d10f      	bne.n	8004ad0 <HAL_TIM_IRQHandler+0x266>
 8004ab0:	687b      	ldr	r3, [r7, #4]
 8004ab2:	681b      	ldr	r3, [r3, #0]
 8004ab4:	68db      	ldr	r3, [r3, #12]
 8004ab6:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8004aba:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 8004abe:	d107      	bne.n	8004ad0 <HAL_TIM_IRQHandler+0x266>
 8004ac0:	687b      	ldr	r3, [r7, #4]
 8004ac2:	681b      	ldr	r3, [r3, #0]
 8004ac4:	f46f 1280 	mvn.w	r2, #1048576	; 0x100000
 8004ac8:	611a      	str	r2, [r3, #16]
 8004aca:	6878      	ldr	r0, [r7, #4]
 8004acc:	f000 f93a 	bl	8004d44 <HAL_TIMEx_EncoderIndexCallback>
 8004ad0:	687b      	ldr	r3, [r7, #4]
 8004ad2:	681b      	ldr	r3, [r3, #0]
 8004ad4:	691b      	ldr	r3, [r3, #16]
 8004ad6:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8004ada:	f5b3 1f00 	cmp.w	r3, #2097152	; 0x200000
 8004ade:	d10f      	bne.n	8004b00 <HAL_TIM_IRQHandler+0x296>
 8004ae0:	687b      	ldr	r3, [r7, #4]
 8004ae2:	681b      	ldr	r3, [r3, #0]
 8004ae4:	68db      	ldr	r3, [r3, #12]
 8004ae6:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8004aea:	f5b3 1f00 	cmp.w	r3, #2097152	; 0x200000
 8004aee:	d107      	bne.n	8004b00 <HAL_TIM_IRQHandler+0x296>
 8004af0:	687b      	ldr	r3, [r7, #4]
 8004af2:	681b      	ldr	r3, [r3, #0]
 8004af4:	f46f 1200 	mvn.w	r2, #2097152	; 0x200000
 8004af8:	611a      	str	r2, [r3, #16]
 8004afa:	6878      	ldr	r0, [r7, #4]
 8004afc:	f000 f92c 	bl	8004d58 <HAL_TIMEx_DirectionChangeCallback>
 8004b00:	687b      	ldr	r3, [r7, #4]
 8004b02:	681b      	ldr	r3, [r3, #0]
 8004b04:	691b      	ldr	r3, [r3, #16]
 8004b06:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8004b0a:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 8004b0e:	d10f      	bne.n	8004b30 <HAL_TIM_IRQHandler+0x2c6>
 8004b10:	687b      	ldr	r3, [r7, #4]
 8004b12:	681b      	ldr	r3, [r3, #0]
 8004b14:	68db      	ldr	r3, [r3, #12]
 8004b16:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8004b1a:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 8004b1e:	d107      	bne.n	8004b30 <HAL_TIM_IRQHandler+0x2c6>
 8004b20:	687b      	ldr	r3, [r7, #4]
 8004b22:	681b      	ldr	r3, [r3, #0]
 8004b24:	f46f 0280 	mvn.w	r2, #4194304	; 0x400000
 8004b28:	611a      	str	r2, [r3, #16]
 8004b2a:	6878      	ldr	r0, [r7, #4]
 8004b2c:	f000 f91e 	bl	8004d6c <HAL_TIMEx_IndexErrorCallback>
 8004b30:	687b      	ldr	r3, [r7, #4]
 8004b32:	681b      	ldr	r3, [r3, #0]
 8004b34:	691b      	ldr	r3, [r3, #16]
 8004b36:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8004b3a:	f5b3 0f00 	cmp.w	r3, #8388608	; 0x800000
 8004b3e:	d10f      	bne.n	8004b60 <HAL_TIM_IRQHandler+0x2f6>
 8004b40:	687b      	ldr	r3, [r7, #4]
 8004b42:	681b      	ldr	r3, [r3, #0]
 8004b44:	68db      	ldr	r3, [r3, #12]
 8004b46:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8004b4a:	f5b3 0f00 	cmp.w	r3, #8388608	; 0x800000
 8004b4e:	d107      	bne.n	8004b60 <HAL_TIM_IRQHandler+0x2f6>
 8004b50:	687b      	ldr	r3, [r7, #4]
 8004b52:	681b      	ldr	r3, [r3, #0]
 8004b54:	f46f 0200 	mvn.w	r2, #8388608	; 0x800000
 8004b58:	611a      	str	r2, [r3, #16]
 8004b5a:	6878      	ldr	r0, [r7, #4]
 8004b5c:	f000 f910 	bl	8004d80 <HAL_TIMEx_TransitionErrorCallback>
 8004b60:	bf00      	nop
 8004b62:	3708      	adds	r7, #8
 8004b64:	46bd      	mov	sp, r7
 8004b66:	bd80      	pop	{r7, pc}

08004b68 <HAL_TIM_OC_DelayElapsedCallback>:
 8004b68:	b480      	push	{r7}
 8004b6a:	b083      	sub	sp, #12
 8004b6c:	af00      	add	r7, sp, #0
 8004b6e:	6078      	str	r0, [r7, #4]
 8004b70:	bf00      	nop
 8004b72:	370c      	adds	r7, #12
 8004b74:	46bd      	mov	sp, r7
 8004b76:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004b7a:	4770      	bx	lr

08004b7c <HAL_TIM_IC_CaptureCallback>:
 8004b7c:	b480      	push	{r7}
 8004b7e:	b083      	sub	sp, #12
 8004b80:	af00      	add	r7, sp, #0
 8004b82:	6078      	str	r0, [r7, #4]
 8004b84:	bf00      	nop
 8004b86:	370c      	adds	r7, #12
 8004b88:	46bd      	mov	sp, r7
 8004b8a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004b8e:	4770      	bx	lr

08004b90 <HAL_TIM_PWM_PulseFinishedCallback>:
 8004b90:	b480      	push	{r7}
 8004b92:	b083      	sub	sp, #12
 8004b94:	af00      	add	r7, sp, #0
 8004b96:	6078      	str	r0, [r7, #4]
 8004b98:	bf00      	nop
 8004b9a:	370c      	adds	r7, #12
 8004b9c:	46bd      	mov	sp, r7
 8004b9e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004ba2:	4770      	bx	lr

08004ba4 <HAL_TIM_TriggerCallback>:
 8004ba4:	b480      	push	{r7}
 8004ba6:	b083      	sub	sp, #12
 8004ba8:	af00      	add	r7, sp, #0
 8004baa:	6078      	str	r0, [r7, #4]
 8004bac:	bf00      	nop
 8004bae:	370c      	adds	r7, #12
 8004bb0:	46bd      	mov	sp, r7
 8004bb2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004bb6:	4770      	bx	lr

08004bb8 <TIM_Base_SetConfig>:
 8004bb8:	b480      	push	{r7}
 8004bba:	b085      	sub	sp, #20
 8004bbc:	af00      	add	r7, sp, #0
 8004bbe:	6078      	str	r0, [r7, #4]
 8004bc0:	6039      	str	r1, [r7, #0]
 8004bc2:	687b      	ldr	r3, [r7, #4]
 8004bc4:	681b      	ldr	r3, [r3, #0]
 8004bc6:	60fb      	str	r3, [r7, #12]
 8004bc8:	687b      	ldr	r3, [r7, #4]
 8004bca:	4a46      	ldr	r2, [pc, #280]	; (8004ce4 <TIM_Base_SetConfig+0x12c>)
 8004bcc:	4293      	cmp	r3, r2
 8004bce:	d017      	beq.n	8004c00 <TIM_Base_SetConfig+0x48>
 8004bd0:	687b      	ldr	r3, [r7, #4]
 8004bd2:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8004bd6:	d013      	beq.n	8004c00 <TIM_Base_SetConfig+0x48>
 8004bd8:	687b      	ldr	r3, [r7, #4]
 8004bda:	4a43      	ldr	r2, [pc, #268]	; (8004ce8 <TIM_Base_SetConfig+0x130>)
 8004bdc:	4293      	cmp	r3, r2
 8004bde:	d00f      	beq.n	8004c00 <TIM_Base_SetConfig+0x48>
 8004be0:	687b      	ldr	r3, [r7, #4]
 8004be2:	4a42      	ldr	r2, [pc, #264]	; (8004cec <TIM_Base_SetConfig+0x134>)
 8004be4:	4293      	cmp	r3, r2
 8004be6:	d00b      	beq.n	8004c00 <TIM_Base_SetConfig+0x48>
 8004be8:	687b      	ldr	r3, [r7, #4]
 8004bea:	4a41      	ldr	r2, [pc, #260]	; (8004cf0 <TIM_Base_SetConfig+0x138>)
 8004bec:	4293      	cmp	r3, r2
 8004bee:	d007      	beq.n	8004c00 <TIM_Base_SetConfig+0x48>
 8004bf0:	687b      	ldr	r3, [r7, #4]
 8004bf2:	4a40      	ldr	r2, [pc, #256]	; (8004cf4 <TIM_Base_SetConfig+0x13c>)
 8004bf4:	4293      	cmp	r3, r2
 8004bf6:	d003      	beq.n	8004c00 <TIM_Base_SetConfig+0x48>
 8004bf8:	687b      	ldr	r3, [r7, #4]
 8004bfa:	4a3f      	ldr	r2, [pc, #252]	; (8004cf8 <TIM_Base_SetConfig+0x140>)
 8004bfc:	4293      	cmp	r3, r2
 8004bfe:	d108      	bne.n	8004c12 <TIM_Base_SetConfig+0x5a>
 8004c00:	68fb      	ldr	r3, [r7, #12]
 8004c02:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8004c06:	60fb      	str	r3, [r7, #12]
 8004c08:	683b      	ldr	r3, [r7, #0]
 8004c0a:	685b      	ldr	r3, [r3, #4]
 8004c0c:	68fa      	ldr	r2, [r7, #12]
 8004c0e:	4313      	orrs	r3, r2
 8004c10:	60fb      	str	r3, [r7, #12]
 8004c12:	687b      	ldr	r3, [r7, #4]
 8004c14:	4a33      	ldr	r2, [pc, #204]	; (8004ce4 <TIM_Base_SetConfig+0x12c>)
 8004c16:	4293      	cmp	r3, r2
 8004c18:	d023      	beq.n	8004c62 <TIM_Base_SetConfig+0xaa>
 8004c1a:	687b      	ldr	r3, [r7, #4]
 8004c1c:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8004c20:	d01f      	beq.n	8004c62 <TIM_Base_SetConfig+0xaa>
 8004c22:	687b      	ldr	r3, [r7, #4]
 8004c24:	4a30      	ldr	r2, [pc, #192]	; (8004ce8 <TIM_Base_SetConfig+0x130>)
 8004c26:	4293      	cmp	r3, r2
 8004c28:	d01b      	beq.n	8004c62 <TIM_Base_SetConfig+0xaa>
 8004c2a:	687b      	ldr	r3, [r7, #4]
 8004c2c:	4a2f      	ldr	r2, [pc, #188]	; (8004cec <TIM_Base_SetConfig+0x134>)
 8004c2e:	4293      	cmp	r3, r2
 8004c30:	d017      	beq.n	8004c62 <TIM_Base_SetConfig+0xaa>
 8004c32:	687b      	ldr	r3, [r7, #4]
 8004c34:	4a2e      	ldr	r2, [pc, #184]	; (8004cf0 <TIM_Base_SetConfig+0x138>)
 8004c36:	4293      	cmp	r3, r2
 8004c38:	d013      	beq.n	8004c62 <TIM_Base_SetConfig+0xaa>
 8004c3a:	687b      	ldr	r3, [r7, #4]
 8004c3c:	4a2d      	ldr	r2, [pc, #180]	; (8004cf4 <TIM_Base_SetConfig+0x13c>)
 8004c3e:	4293      	cmp	r3, r2
 8004c40:	d00f      	beq.n	8004c62 <TIM_Base_SetConfig+0xaa>
 8004c42:	687b      	ldr	r3, [r7, #4]
 8004c44:	4a2d      	ldr	r2, [pc, #180]	; (8004cfc <TIM_Base_SetConfig+0x144>)
 8004c46:	4293      	cmp	r3, r2
 8004c48:	d00b      	beq.n	8004c62 <TIM_Base_SetConfig+0xaa>
 8004c4a:	687b      	ldr	r3, [r7, #4]
 8004c4c:	4a2c      	ldr	r2, [pc, #176]	; (8004d00 <TIM_Base_SetConfig+0x148>)
 8004c4e:	4293      	cmp	r3, r2
 8004c50:	d007      	beq.n	8004c62 <TIM_Base_SetConfig+0xaa>
 8004c52:	687b      	ldr	r3, [r7, #4]
 8004c54:	4a2b      	ldr	r2, [pc, #172]	; (8004d04 <TIM_Base_SetConfig+0x14c>)
 8004c56:	4293      	cmp	r3, r2
 8004c58:	d003      	beq.n	8004c62 <TIM_Base_SetConfig+0xaa>
 8004c5a:	687b      	ldr	r3, [r7, #4]
 8004c5c:	4a26      	ldr	r2, [pc, #152]	; (8004cf8 <TIM_Base_SetConfig+0x140>)
 8004c5e:	4293      	cmp	r3, r2
 8004c60:	d108      	bne.n	8004c74 <TIM_Base_SetConfig+0xbc>
 8004c62:	68fb      	ldr	r3, [r7, #12]
 8004c64:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8004c68:	60fb      	str	r3, [r7, #12]
 8004c6a:	683b      	ldr	r3, [r7, #0]
 8004c6c:	68db      	ldr	r3, [r3, #12]
 8004c6e:	68fa      	ldr	r2, [r7, #12]
 8004c70:	4313      	orrs	r3, r2
 8004c72:	60fb      	str	r3, [r7, #12]
 8004c74:	68fb      	ldr	r3, [r7, #12]
 8004c76:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 8004c7a:	683b      	ldr	r3, [r7, #0]
 8004c7c:	695b      	ldr	r3, [r3, #20]
 8004c7e:	4313      	orrs	r3, r2
 8004c80:	60fb      	str	r3, [r7, #12]
 8004c82:	687b      	ldr	r3, [r7, #4]
 8004c84:	68fa      	ldr	r2, [r7, #12]
 8004c86:	601a      	str	r2, [r3, #0]
 8004c88:	683b      	ldr	r3, [r7, #0]
 8004c8a:	689a      	ldr	r2, [r3, #8]
 8004c8c:	687b      	ldr	r3, [r7, #4]
 8004c8e:	62da      	str	r2, [r3, #44]	; 0x2c
 8004c90:	683b      	ldr	r3, [r7, #0]
 8004c92:	681a      	ldr	r2, [r3, #0]
 8004c94:	687b      	ldr	r3, [r7, #4]
 8004c96:	629a      	str	r2, [r3, #40]	; 0x28
 8004c98:	687b      	ldr	r3, [r7, #4]
 8004c9a:	4a12      	ldr	r2, [pc, #72]	; (8004ce4 <TIM_Base_SetConfig+0x12c>)
 8004c9c:	4293      	cmp	r3, r2
 8004c9e:	d013      	beq.n	8004cc8 <TIM_Base_SetConfig+0x110>
 8004ca0:	687b      	ldr	r3, [r7, #4]
 8004ca2:	4a14      	ldr	r2, [pc, #80]	; (8004cf4 <TIM_Base_SetConfig+0x13c>)
 8004ca4:	4293      	cmp	r3, r2
 8004ca6:	d00f      	beq.n	8004cc8 <TIM_Base_SetConfig+0x110>
 8004ca8:	687b      	ldr	r3, [r7, #4]
 8004caa:	4a14      	ldr	r2, [pc, #80]	; (8004cfc <TIM_Base_SetConfig+0x144>)
 8004cac:	4293      	cmp	r3, r2
 8004cae:	d00b      	beq.n	8004cc8 <TIM_Base_SetConfig+0x110>
 8004cb0:	687b      	ldr	r3, [r7, #4]
 8004cb2:	4a13      	ldr	r2, [pc, #76]	; (8004d00 <TIM_Base_SetConfig+0x148>)
 8004cb4:	4293      	cmp	r3, r2
 8004cb6:	d007      	beq.n	8004cc8 <TIM_Base_SetConfig+0x110>
 8004cb8:	687b      	ldr	r3, [r7, #4]
 8004cba:	4a12      	ldr	r2, [pc, #72]	; (8004d04 <TIM_Base_SetConfig+0x14c>)
 8004cbc:	4293      	cmp	r3, r2
 8004cbe:	d003      	beq.n	8004cc8 <TIM_Base_SetConfig+0x110>
 8004cc0:	687b      	ldr	r3, [r7, #4]
 8004cc2:	4a0d      	ldr	r2, [pc, #52]	; (8004cf8 <TIM_Base_SetConfig+0x140>)
 8004cc4:	4293      	cmp	r3, r2
 8004cc6:	d103      	bne.n	8004cd0 <TIM_Base_SetConfig+0x118>
 8004cc8:	683b      	ldr	r3, [r7, #0]
 8004cca:	691a      	ldr	r2, [r3, #16]
 8004ccc:	687b      	ldr	r3, [r7, #4]
 8004cce:	631a      	str	r2, [r3, #48]	; 0x30
 8004cd0:	687b      	ldr	r3, [r7, #4]
 8004cd2:	2201      	movs	r2, #1
 8004cd4:	615a      	str	r2, [r3, #20]
 8004cd6:	bf00      	nop
 8004cd8:	3714      	adds	r7, #20
 8004cda:	46bd      	mov	sp, r7
 8004cdc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004ce0:	4770      	bx	lr
 8004ce2:	bf00      	nop
 8004ce4:	40012c00 	.word	0x40012c00
 8004ce8:	40000400 	.word	0x40000400
 8004cec:	40000800 	.word	0x40000800
 8004cf0:	40000c00 	.word	0x40000c00
 8004cf4:	40013400 	.word	0x40013400
 8004cf8:	40015000 	.word	0x40015000
 8004cfc:	40014000 	.word	0x40014000
 8004d00:	40014400 	.word	0x40014400
 8004d04:	40014800 	.word	0x40014800

08004d08 <HAL_TIMEx_CommutCallback>:
 8004d08:	b480      	push	{r7}
 8004d0a:	b083      	sub	sp, #12
 8004d0c:	af00      	add	r7, sp, #0
 8004d0e:	6078      	str	r0, [r7, #4]
 8004d10:	bf00      	nop
 8004d12:	370c      	adds	r7, #12
 8004d14:	46bd      	mov	sp, r7
 8004d16:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004d1a:	4770      	bx	lr

08004d1c <HAL_TIMEx_BreakCallback>:
 8004d1c:	b480      	push	{r7}
 8004d1e:	b083      	sub	sp, #12
 8004d20:	af00      	add	r7, sp, #0
 8004d22:	6078      	str	r0, [r7, #4]
 8004d24:	bf00      	nop
 8004d26:	370c      	adds	r7, #12
 8004d28:	46bd      	mov	sp, r7
 8004d2a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004d2e:	4770      	bx	lr

08004d30 <HAL_TIMEx_Break2Callback>:
 8004d30:	b480      	push	{r7}
 8004d32:	b083      	sub	sp, #12
 8004d34:	af00      	add	r7, sp, #0
 8004d36:	6078      	str	r0, [r7, #4]
 8004d38:	bf00      	nop
 8004d3a:	370c      	adds	r7, #12
 8004d3c:	46bd      	mov	sp, r7
 8004d3e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004d42:	4770      	bx	lr

08004d44 <HAL_TIMEx_EncoderIndexCallback>:
 8004d44:	b480      	push	{r7}
 8004d46:	b083      	sub	sp, #12
 8004d48:	af00      	add	r7, sp, #0
 8004d4a:	6078      	str	r0, [r7, #4]
 8004d4c:	bf00      	nop
 8004d4e:	370c      	adds	r7, #12
 8004d50:	46bd      	mov	sp, r7
 8004d52:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004d56:	4770      	bx	lr

08004d58 <HAL_TIMEx_DirectionChangeCallback>:
 8004d58:	b480      	push	{r7}
 8004d5a:	b083      	sub	sp, #12
 8004d5c:	af00      	add	r7, sp, #0
 8004d5e:	6078      	str	r0, [r7, #4]
 8004d60:	bf00      	nop
 8004d62:	370c      	adds	r7, #12
 8004d64:	46bd      	mov	sp, r7
 8004d66:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004d6a:	4770      	bx	lr

08004d6c <HAL_TIMEx_IndexErrorCallback>:
 8004d6c:	b480      	push	{r7}
 8004d6e:	b083      	sub	sp, #12
 8004d70:	af00      	add	r7, sp, #0
 8004d72:	6078      	str	r0, [r7, #4]
 8004d74:	bf00      	nop
 8004d76:	370c      	adds	r7, #12
 8004d78:	46bd      	mov	sp, r7
 8004d7a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004d7e:	4770      	bx	lr

08004d80 <HAL_TIMEx_TransitionErrorCallback>:
 8004d80:	b480      	push	{r7}
 8004d82:	b083      	sub	sp, #12
 8004d84:	af00      	add	r7, sp, #0
 8004d86:	6078      	str	r0, [r7, #4]
 8004d88:	bf00      	nop
 8004d8a:	370c      	adds	r7, #12
 8004d8c:	46bd      	mov	sp, r7
 8004d8e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004d92:	4770      	bx	lr

08004d94 <HAL_UART_Init>:
 8004d94:	b580      	push	{r7, lr}
 8004d96:	b082      	sub	sp, #8
 8004d98:	af00      	add	r7, sp, #0
 8004d9a:	6078      	str	r0, [r7, #4]
 8004d9c:	687b      	ldr	r3, [r7, #4]
 8004d9e:	2b00      	cmp	r3, #0
 8004da0:	d101      	bne.n	8004da6 <HAL_UART_Init+0x12>
 8004da2:	2301      	movs	r3, #1
 8004da4:	e042      	b.n	8004e2c <HAL_UART_Init+0x98>
 8004da6:	687b      	ldr	r3, [r7, #4]
 8004da8:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8004dac:	2b00      	cmp	r3, #0
 8004dae:	d106      	bne.n	8004dbe <HAL_UART_Init+0x2a>
 8004db0:	687b      	ldr	r3, [r7, #4]
 8004db2:	2200      	movs	r2, #0
 8004db4:	f883 207c 	strb.w	r2, [r3, #124]	; 0x7c
 8004db8:	6878      	ldr	r0, [r7, #4]
 8004dba:	f7fc f879 	bl	8000eb0 <HAL_UART_MspInit>
 8004dbe:	687b      	ldr	r3, [r7, #4]
 8004dc0:	2224      	movs	r2, #36	; 0x24
 8004dc2:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
 8004dc6:	687b      	ldr	r3, [r7, #4]
 8004dc8:	681b      	ldr	r3, [r3, #0]
 8004dca:	681a      	ldr	r2, [r3, #0]
 8004dcc:	687b      	ldr	r3, [r7, #4]
 8004dce:	681b      	ldr	r3, [r3, #0]
 8004dd0:	f022 0201 	bic.w	r2, r2, #1
 8004dd4:	601a      	str	r2, [r3, #0]
 8004dd6:	6878      	ldr	r0, [r7, #4]
 8004dd8:	f000 f82e 	bl	8004e38 <UART_SetConfig>
 8004ddc:	4603      	mov	r3, r0
 8004dde:	2b01      	cmp	r3, #1
 8004de0:	d101      	bne.n	8004de6 <HAL_UART_Init+0x52>
 8004de2:	2301      	movs	r3, #1
 8004de4:	e022      	b.n	8004e2c <HAL_UART_Init+0x98>
 8004de6:	687b      	ldr	r3, [r7, #4]
 8004de8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8004dea:	2b00      	cmp	r3, #0
 8004dec:	d002      	beq.n	8004df4 <HAL_UART_Init+0x60>
 8004dee:	6878      	ldr	r0, [r7, #4]
 8004df0:	f001 fa10 	bl	8006214 <UART_AdvFeatureConfig>
 8004df4:	687b      	ldr	r3, [r7, #4]
 8004df6:	681b      	ldr	r3, [r3, #0]
 8004df8:	685a      	ldr	r2, [r3, #4]
 8004dfa:	687b      	ldr	r3, [r7, #4]
 8004dfc:	681b      	ldr	r3, [r3, #0]
 8004dfe:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 8004e02:	605a      	str	r2, [r3, #4]
 8004e04:	687b      	ldr	r3, [r7, #4]
 8004e06:	681b      	ldr	r3, [r3, #0]
 8004e08:	689a      	ldr	r2, [r3, #8]
 8004e0a:	687b      	ldr	r3, [r7, #4]
 8004e0c:	681b      	ldr	r3, [r3, #0]
 8004e0e:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 8004e12:	609a      	str	r2, [r3, #8]
 8004e14:	687b      	ldr	r3, [r7, #4]
 8004e16:	681b      	ldr	r3, [r3, #0]
 8004e18:	681a      	ldr	r2, [r3, #0]
 8004e1a:	687b      	ldr	r3, [r7, #4]
 8004e1c:	681b      	ldr	r3, [r3, #0]
 8004e1e:	f042 0201 	orr.w	r2, r2, #1
 8004e22:	601a      	str	r2, [r3, #0]
 8004e24:	6878      	ldr	r0, [r7, #4]
 8004e26:	f001 fa97 	bl	8006358 <UART_CheckIdleState>
 8004e2a:	4603      	mov	r3, r0
 8004e2c:	4618      	mov	r0, r3
 8004e2e:	3708      	adds	r7, #8
 8004e30:	46bd      	mov	sp, r7
 8004e32:	bd80      	pop	{r7, pc}
 8004e34:	0000      	movs	r0, r0
	...

08004e38 <UART_SetConfig>:
 8004e38:	e92d 4890 	stmdb	sp!, {r4, r7, fp, lr}
 8004e3c:	b08a      	sub	sp, #40	; 0x28
 8004e3e:	af00      	add	r7, sp, #0
 8004e40:	6078      	str	r0, [r7, #4]
 8004e42:	2300      	movs	r3, #0
 8004e44:	61fb      	str	r3, [r7, #28]
 8004e46:	2300      	movs	r3, #0
 8004e48:	76fb      	strb	r3, [r7, #27]
 8004e4a:	2300      	movs	r3, #0
 8004e4c:	617b      	str	r3, [r7, #20]
 8004e4e:	687b      	ldr	r3, [r7, #4]
 8004e50:	689a      	ldr	r2, [r3, #8]
 8004e52:	687b      	ldr	r3, [r7, #4]
 8004e54:	691b      	ldr	r3, [r3, #16]
 8004e56:	431a      	orrs	r2, r3
 8004e58:	687b      	ldr	r3, [r7, #4]
 8004e5a:	695b      	ldr	r3, [r3, #20]
 8004e5c:	431a      	orrs	r2, r3
 8004e5e:	687b      	ldr	r3, [r7, #4]
 8004e60:	69db      	ldr	r3, [r3, #28]
 8004e62:	4313      	orrs	r3, r2
 8004e64:	627b      	str	r3, [r7, #36]	; 0x24
 8004e66:	687b      	ldr	r3, [r7, #4]
 8004e68:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8004e6a:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8004e6c:	4313      	orrs	r3, r2
 8004e6e:	627b      	str	r3, [r7, #36]	; 0x24
 8004e70:	687b      	ldr	r3, [r7, #4]
 8004e72:	681b      	ldr	r3, [r3, #0]
 8004e74:	681a      	ldr	r2, [r3, #0]
 8004e76:	4baa      	ldr	r3, [pc, #680]	; (8005120 <UART_SetConfig+0x2e8>)
 8004e78:	4013      	ands	r3, r2
 8004e7a:	687a      	ldr	r2, [r7, #4]
 8004e7c:	6812      	ldr	r2, [r2, #0]
 8004e7e:	6a79      	ldr	r1, [r7, #36]	; 0x24
 8004e80:	430b      	orrs	r3, r1
 8004e82:	6013      	str	r3, [r2, #0]
 8004e84:	687b      	ldr	r3, [r7, #4]
 8004e86:	681b      	ldr	r3, [r3, #0]
 8004e88:	685b      	ldr	r3, [r3, #4]
 8004e8a:	f423 5140 	bic.w	r1, r3, #12288	; 0x3000
 8004e8e:	687b      	ldr	r3, [r7, #4]
 8004e90:	68da      	ldr	r2, [r3, #12]
 8004e92:	687b      	ldr	r3, [r7, #4]
 8004e94:	681b      	ldr	r3, [r3, #0]
 8004e96:	430a      	orrs	r2, r1
 8004e98:	605a      	str	r2, [r3, #4]
 8004e9a:	687b      	ldr	r3, [r7, #4]
 8004e9c:	699b      	ldr	r3, [r3, #24]
 8004e9e:	627b      	str	r3, [r7, #36]	; 0x24
 8004ea0:	687b      	ldr	r3, [r7, #4]
 8004ea2:	681b      	ldr	r3, [r3, #0]
 8004ea4:	4a9f      	ldr	r2, [pc, #636]	; (8005124 <UART_SetConfig+0x2ec>)
 8004ea6:	4293      	cmp	r3, r2
 8004ea8:	d004      	beq.n	8004eb4 <UART_SetConfig+0x7c>
 8004eaa:	687b      	ldr	r3, [r7, #4]
 8004eac:	6a1b      	ldr	r3, [r3, #32]
 8004eae:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8004eb0:	4313      	orrs	r3, r2
 8004eb2:	627b      	str	r3, [r7, #36]	; 0x24
 8004eb4:	687b      	ldr	r3, [r7, #4]
 8004eb6:	681b      	ldr	r3, [r3, #0]
 8004eb8:	689b      	ldr	r3, [r3, #8]
 8004eba:	f023 436e 	bic.w	r3, r3, #3992977408	; 0xee000000
 8004ebe:	f423 6330 	bic.w	r3, r3, #2816	; 0xb00
 8004ec2:	687a      	ldr	r2, [r7, #4]
 8004ec4:	6812      	ldr	r2, [r2, #0]
 8004ec6:	6a79      	ldr	r1, [r7, #36]	; 0x24
 8004ec8:	430b      	orrs	r3, r1
 8004eca:	6093      	str	r3, [r2, #8]
 8004ecc:	687b      	ldr	r3, [r7, #4]
 8004ece:	681b      	ldr	r3, [r3, #0]
 8004ed0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004ed2:	f023 010f 	bic.w	r1, r3, #15
 8004ed6:	687b      	ldr	r3, [r7, #4]
 8004ed8:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8004eda:	687b      	ldr	r3, [r7, #4]
 8004edc:	681b      	ldr	r3, [r3, #0]
 8004ede:	430a      	orrs	r2, r1
 8004ee0:	62da      	str	r2, [r3, #44]	; 0x2c
 8004ee2:	687b      	ldr	r3, [r7, #4]
 8004ee4:	681b      	ldr	r3, [r3, #0]
 8004ee6:	4a90      	ldr	r2, [pc, #576]	; (8005128 <UART_SetConfig+0x2f0>)
 8004ee8:	4293      	cmp	r3, r2
 8004eea:	d126      	bne.n	8004f3a <UART_SetConfig+0x102>
 8004eec:	4b8f      	ldr	r3, [pc, #572]	; (800512c <UART_SetConfig+0x2f4>)
 8004eee:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8004ef2:	f003 0303 	and.w	r3, r3, #3
 8004ef6:	2b03      	cmp	r3, #3
 8004ef8:	d81a      	bhi.n	8004f30 <UART_SetConfig+0xf8>
 8004efa:	a201      	add	r2, pc, #4	; (adr r2, 8004f00 <UART_SetConfig+0xc8>)
 8004efc:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8004f00:	08004f11 	.word	0x08004f11
 8004f04:	08004f21 	.word	0x08004f21
 8004f08:	08004f19 	.word	0x08004f19
 8004f0c:	08004f29 	.word	0x08004f29
 8004f10:	2301      	movs	r3, #1
 8004f12:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 8004f16:	e116      	b.n	8005146 <UART_SetConfig+0x30e>
 8004f18:	2302      	movs	r3, #2
 8004f1a:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 8004f1e:	e112      	b.n	8005146 <UART_SetConfig+0x30e>
 8004f20:	2304      	movs	r3, #4
 8004f22:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 8004f26:	e10e      	b.n	8005146 <UART_SetConfig+0x30e>
 8004f28:	2308      	movs	r3, #8
 8004f2a:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 8004f2e:	e10a      	b.n	8005146 <UART_SetConfig+0x30e>
 8004f30:	2310      	movs	r3, #16
 8004f32:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 8004f36:	bf00      	nop
 8004f38:	e105      	b.n	8005146 <UART_SetConfig+0x30e>
 8004f3a:	687b      	ldr	r3, [r7, #4]
 8004f3c:	681b      	ldr	r3, [r3, #0]
 8004f3e:	4a7c      	ldr	r2, [pc, #496]	; (8005130 <UART_SetConfig+0x2f8>)
 8004f40:	4293      	cmp	r3, r2
 8004f42:	d138      	bne.n	8004fb6 <UART_SetConfig+0x17e>
 8004f44:	4b79      	ldr	r3, [pc, #484]	; (800512c <UART_SetConfig+0x2f4>)
 8004f46:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8004f4a:	f003 030c 	and.w	r3, r3, #12
 8004f4e:	2b0c      	cmp	r3, #12
 8004f50:	d82c      	bhi.n	8004fac <UART_SetConfig+0x174>
 8004f52:	a201      	add	r2, pc, #4	; (adr r2, 8004f58 <UART_SetConfig+0x120>)
 8004f54:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8004f58:	08004f8d 	.word	0x08004f8d
 8004f5c:	08004fad 	.word	0x08004fad
 8004f60:	08004fad 	.word	0x08004fad
 8004f64:	08004fad 	.word	0x08004fad
 8004f68:	08004f9d 	.word	0x08004f9d
 8004f6c:	08004fad 	.word	0x08004fad
 8004f70:	08004fad 	.word	0x08004fad
 8004f74:	08004fad 	.word	0x08004fad
 8004f78:	08004f95 	.word	0x08004f95
 8004f7c:	08004fad 	.word	0x08004fad
 8004f80:	08004fad 	.word	0x08004fad
 8004f84:	08004fad 	.word	0x08004fad
 8004f88:	08004fa5 	.word	0x08004fa5
 8004f8c:	2300      	movs	r3, #0
 8004f8e:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 8004f92:	e0d8      	b.n	8005146 <UART_SetConfig+0x30e>
 8004f94:	2302      	movs	r3, #2
 8004f96:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 8004f9a:	e0d4      	b.n	8005146 <UART_SetConfig+0x30e>
 8004f9c:	2304      	movs	r3, #4
 8004f9e:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 8004fa2:	e0d0      	b.n	8005146 <UART_SetConfig+0x30e>
 8004fa4:	2308      	movs	r3, #8
 8004fa6:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 8004faa:	e0cc      	b.n	8005146 <UART_SetConfig+0x30e>
 8004fac:	2310      	movs	r3, #16
 8004fae:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 8004fb2:	bf00      	nop
 8004fb4:	e0c7      	b.n	8005146 <UART_SetConfig+0x30e>
 8004fb6:	687b      	ldr	r3, [r7, #4]
 8004fb8:	681b      	ldr	r3, [r3, #0]
 8004fba:	4a5e      	ldr	r2, [pc, #376]	; (8005134 <UART_SetConfig+0x2fc>)
 8004fbc:	4293      	cmp	r3, r2
 8004fbe:	d125      	bne.n	800500c <UART_SetConfig+0x1d4>
 8004fc0:	4b5a      	ldr	r3, [pc, #360]	; (800512c <UART_SetConfig+0x2f4>)
 8004fc2:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8004fc6:	f003 0330 	and.w	r3, r3, #48	; 0x30
 8004fca:	2b10      	cmp	r3, #16
 8004fcc:	d011      	beq.n	8004ff2 <UART_SetConfig+0x1ba>
 8004fce:	2b10      	cmp	r3, #16
 8004fd0:	d802      	bhi.n	8004fd8 <UART_SetConfig+0x1a0>
 8004fd2:	2b00      	cmp	r3, #0
 8004fd4:	d005      	beq.n	8004fe2 <UART_SetConfig+0x1aa>
 8004fd6:	e014      	b.n	8005002 <UART_SetConfig+0x1ca>
 8004fd8:	2b20      	cmp	r3, #32
 8004fda:	d006      	beq.n	8004fea <UART_SetConfig+0x1b2>
 8004fdc:	2b30      	cmp	r3, #48	; 0x30
 8004fde:	d00c      	beq.n	8004ffa <UART_SetConfig+0x1c2>
 8004fe0:	e00f      	b.n	8005002 <UART_SetConfig+0x1ca>
 8004fe2:	2300      	movs	r3, #0
 8004fe4:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 8004fe8:	e0ad      	b.n	8005146 <UART_SetConfig+0x30e>
 8004fea:	2302      	movs	r3, #2
 8004fec:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 8004ff0:	e0a9      	b.n	8005146 <UART_SetConfig+0x30e>
 8004ff2:	2304      	movs	r3, #4
 8004ff4:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 8004ff8:	e0a5      	b.n	8005146 <UART_SetConfig+0x30e>
 8004ffa:	2308      	movs	r3, #8
 8004ffc:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 8005000:	e0a1      	b.n	8005146 <UART_SetConfig+0x30e>
 8005002:	2310      	movs	r3, #16
 8005004:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 8005008:	bf00      	nop
 800500a:	e09c      	b.n	8005146 <UART_SetConfig+0x30e>
 800500c:	687b      	ldr	r3, [r7, #4]
 800500e:	681b      	ldr	r3, [r3, #0]
 8005010:	4a49      	ldr	r2, [pc, #292]	; (8005138 <UART_SetConfig+0x300>)
 8005012:	4293      	cmp	r3, r2
 8005014:	d125      	bne.n	8005062 <UART_SetConfig+0x22a>
 8005016:	4b45      	ldr	r3, [pc, #276]	; (800512c <UART_SetConfig+0x2f4>)
 8005018:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800501c:	f003 03c0 	and.w	r3, r3, #192	; 0xc0
 8005020:	2b40      	cmp	r3, #64	; 0x40
 8005022:	d011      	beq.n	8005048 <UART_SetConfig+0x210>
 8005024:	2b40      	cmp	r3, #64	; 0x40
 8005026:	d802      	bhi.n	800502e <UART_SetConfig+0x1f6>
 8005028:	2b00      	cmp	r3, #0
 800502a:	d005      	beq.n	8005038 <UART_SetConfig+0x200>
 800502c:	e014      	b.n	8005058 <UART_SetConfig+0x220>
 800502e:	2b80      	cmp	r3, #128	; 0x80
 8005030:	d006      	beq.n	8005040 <UART_SetConfig+0x208>
 8005032:	2bc0      	cmp	r3, #192	; 0xc0
 8005034:	d00c      	beq.n	8005050 <UART_SetConfig+0x218>
 8005036:	e00f      	b.n	8005058 <UART_SetConfig+0x220>
 8005038:	2300      	movs	r3, #0
 800503a:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 800503e:	e082      	b.n	8005146 <UART_SetConfig+0x30e>
 8005040:	2302      	movs	r3, #2
 8005042:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 8005046:	e07e      	b.n	8005146 <UART_SetConfig+0x30e>
 8005048:	2304      	movs	r3, #4
 800504a:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 800504e:	e07a      	b.n	8005146 <UART_SetConfig+0x30e>
 8005050:	2308      	movs	r3, #8
 8005052:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 8005056:	e076      	b.n	8005146 <UART_SetConfig+0x30e>
 8005058:	2310      	movs	r3, #16
 800505a:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 800505e:	bf00      	nop
 8005060:	e071      	b.n	8005146 <UART_SetConfig+0x30e>
 8005062:	687b      	ldr	r3, [r7, #4]
 8005064:	681b      	ldr	r3, [r3, #0]
 8005066:	4a35      	ldr	r2, [pc, #212]	; (800513c <UART_SetConfig+0x304>)
 8005068:	4293      	cmp	r3, r2
 800506a:	d129      	bne.n	80050c0 <UART_SetConfig+0x288>
 800506c:	4b2f      	ldr	r3, [pc, #188]	; (800512c <UART_SetConfig+0x2f4>)
 800506e:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8005072:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8005076:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800507a:	d014      	beq.n	80050a6 <UART_SetConfig+0x26e>
 800507c:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8005080:	d802      	bhi.n	8005088 <UART_SetConfig+0x250>
 8005082:	2b00      	cmp	r3, #0
 8005084:	d007      	beq.n	8005096 <UART_SetConfig+0x25e>
 8005086:	e016      	b.n	80050b6 <UART_SetConfig+0x27e>
 8005088:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800508c:	d007      	beq.n	800509e <UART_SetConfig+0x266>
 800508e:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8005092:	d00c      	beq.n	80050ae <UART_SetConfig+0x276>
 8005094:	e00f      	b.n	80050b6 <UART_SetConfig+0x27e>
 8005096:	2300      	movs	r3, #0
 8005098:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 800509c:	e053      	b.n	8005146 <UART_SetConfig+0x30e>
 800509e:	2302      	movs	r3, #2
 80050a0:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 80050a4:	e04f      	b.n	8005146 <UART_SetConfig+0x30e>
 80050a6:	2304      	movs	r3, #4
 80050a8:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 80050ac:	e04b      	b.n	8005146 <UART_SetConfig+0x30e>
 80050ae:	2308      	movs	r3, #8
 80050b0:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 80050b4:	e047      	b.n	8005146 <UART_SetConfig+0x30e>
 80050b6:	2310      	movs	r3, #16
 80050b8:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 80050bc:	bf00      	nop
 80050be:	e042      	b.n	8005146 <UART_SetConfig+0x30e>
 80050c0:	687b      	ldr	r3, [r7, #4]
 80050c2:	681b      	ldr	r3, [r3, #0]
 80050c4:	4a17      	ldr	r2, [pc, #92]	; (8005124 <UART_SetConfig+0x2ec>)
 80050c6:	4293      	cmp	r3, r2
 80050c8:	d13a      	bne.n	8005140 <UART_SetConfig+0x308>
 80050ca:	4b18      	ldr	r3, [pc, #96]	; (800512c <UART_SetConfig+0x2f4>)
 80050cc:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80050d0:	f403 6340 	and.w	r3, r3, #3072	; 0xc00
 80050d4:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80050d8:	d014      	beq.n	8005104 <UART_SetConfig+0x2cc>
 80050da:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80050de:	d802      	bhi.n	80050e6 <UART_SetConfig+0x2ae>
 80050e0:	2b00      	cmp	r3, #0
 80050e2:	d007      	beq.n	80050f4 <UART_SetConfig+0x2bc>
 80050e4:	e016      	b.n	8005114 <UART_SetConfig+0x2dc>
 80050e6:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 80050ea:	d007      	beq.n	80050fc <UART_SetConfig+0x2c4>
 80050ec:	f5b3 6f40 	cmp.w	r3, #3072	; 0xc00
 80050f0:	d00c      	beq.n	800510c <UART_SetConfig+0x2d4>
 80050f2:	e00f      	b.n	8005114 <UART_SetConfig+0x2dc>
 80050f4:	2300      	movs	r3, #0
 80050f6:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 80050fa:	e024      	b.n	8005146 <UART_SetConfig+0x30e>
 80050fc:	2302      	movs	r3, #2
 80050fe:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 8005102:	e020      	b.n	8005146 <UART_SetConfig+0x30e>
 8005104:	2304      	movs	r3, #4
 8005106:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 800510a:	e01c      	b.n	8005146 <UART_SetConfig+0x30e>
 800510c:	2308      	movs	r3, #8
 800510e:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 8005112:	e018      	b.n	8005146 <UART_SetConfig+0x30e>
 8005114:	2310      	movs	r3, #16
 8005116:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 800511a:	bf00      	nop
 800511c:	e013      	b.n	8005146 <UART_SetConfig+0x30e>
 800511e:	bf00      	nop
 8005120:	cfff69f3 	.word	0xcfff69f3
 8005124:	40008000 	.word	0x40008000
 8005128:	40013800 	.word	0x40013800
 800512c:	40021000 	.word	0x40021000
 8005130:	40004400 	.word	0x40004400
 8005134:	40004800 	.word	0x40004800
 8005138:	40004c00 	.word	0x40004c00
 800513c:	40005000 	.word	0x40005000
 8005140:	2310      	movs	r3, #16
 8005142:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 8005146:	687b      	ldr	r3, [r7, #4]
 8005148:	681b      	ldr	r3, [r3, #0]
 800514a:	4a86      	ldr	r2, [pc, #536]	; (8005364 <UART_SetConfig+0x52c>)
 800514c:	4293      	cmp	r3, r2
 800514e:	f040 8422 	bne.w	8005996 <UART_SetConfig+0xb5e>
 8005152:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
 8005156:	2b08      	cmp	r3, #8
 8005158:	f200 8173 	bhi.w	8005442 <UART_SetConfig+0x60a>
 800515c:	a201      	add	r2, pc, #4	; (adr r2, 8005164 <UART_SetConfig+0x32c>)
 800515e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8005162:	bf00      	nop
 8005164:	08005189 	.word	0x08005189
 8005168:	08005443 	.word	0x08005443
 800516c:	0800522b 	.word	0x0800522b
 8005170:	08005443 	.word	0x08005443
 8005174:	080052c3 	.word	0x080052c3
 8005178:	08005443 	.word	0x08005443
 800517c:	08005443 	.word	0x08005443
 8005180:	08005443 	.word	0x08005443
 8005184:	08005395 	.word	0x08005395
 8005188:	f7fd fefc 	bl	8002f84 <HAL_RCC_GetPCLK1Freq>
 800518c:	4602      	mov	r2, r0
 800518e:	687b      	ldr	r3, [r7, #4]
 8005190:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005192:	2b00      	cmp	r3, #0
 8005194:	d044      	beq.n	8005220 <UART_SetConfig+0x3e8>
 8005196:	687b      	ldr	r3, [r7, #4]
 8005198:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800519a:	2b01      	cmp	r3, #1
 800519c:	d03e      	beq.n	800521c <UART_SetConfig+0x3e4>
 800519e:	687b      	ldr	r3, [r7, #4]
 80051a0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80051a2:	2b02      	cmp	r3, #2
 80051a4:	d038      	beq.n	8005218 <UART_SetConfig+0x3e0>
 80051a6:	687b      	ldr	r3, [r7, #4]
 80051a8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80051aa:	2b03      	cmp	r3, #3
 80051ac:	d032      	beq.n	8005214 <UART_SetConfig+0x3dc>
 80051ae:	687b      	ldr	r3, [r7, #4]
 80051b0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80051b2:	2b04      	cmp	r3, #4
 80051b4:	d02c      	beq.n	8005210 <UART_SetConfig+0x3d8>
 80051b6:	687b      	ldr	r3, [r7, #4]
 80051b8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80051ba:	2b05      	cmp	r3, #5
 80051bc:	d026      	beq.n	800520c <UART_SetConfig+0x3d4>
 80051be:	687b      	ldr	r3, [r7, #4]
 80051c0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80051c2:	2b06      	cmp	r3, #6
 80051c4:	d020      	beq.n	8005208 <UART_SetConfig+0x3d0>
 80051c6:	687b      	ldr	r3, [r7, #4]
 80051c8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80051ca:	2b07      	cmp	r3, #7
 80051cc:	d01a      	beq.n	8005204 <UART_SetConfig+0x3cc>
 80051ce:	687b      	ldr	r3, [r7, #4]
 80051d0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80051d2:	2b08      	cmp	r3, #8
 80051d4:	d014      	beq.n	8005200 <UART_SetConfig+0x3c8>
 80051d6:	687b      	ldr	r3, [r7, #4]
 80051d8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80051da:	2b09      	cmp	r3, #9
 80051dc:	d00e      	beq.n	80051fc <UART_SetConfig+0x3c4>
 80051de:	687b      	ldr	r3, [r7, #4]
 80051e0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80051e2:	2b0a      	cmp	r3, #10
 80051e4:	d008      	beq.n	80051f8 <UART_SetConfig+0x3c0>
 80051e6:	687b      	ldr	r3, [r7, #4]
 80051e8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80051ea:	2b0b      	cmp	r3, #11
 80051ec:	d102      	bne.n	80051f4 <UART_SetConfig+0x3bc>
 80051ee:	f44f 7380 	mov.w	r3, #256	; 0x100
 80051f2:	e016      	b.n	8005222 <UART_SetConfig+0x3ea>
 80051f4:	2301      	movs	r3, #1
 80051f6:	e014      	b.n	8005222 <UART_SetConfig+0x3ea>
 80051f8:	2380      	movs	r3, #128	; 0x80
 80051fa:	e012      	b.n	8005222 <UART_SetConfig+0x3ea>
 80051fc:	2340      	movs	r3, #64	; 0x40
 80051fe:	e010      	b.n	8005222 <UART_SetConfig+0x3ea>
 8005200:	2320      	movs	r3, #32
 8005202:	e00e      	b.n	8005222 <UART_SetConfig+0x3ea>
 8005204:	2310      	movs	r3, #16
 8005206:	e00c      	b.n	8005222 <UART_SetConfig+0x3ea>
 8005208:	230c      	movs	r3, #12
 800520a:	e00a      	b.n	8005222 <UART_SetConfig+0x3ea>
 800520c:	230a      	movs	r3, #10
 800520e:	e008      	b.n	8005222 <UART_SetConfig+0x3ea>
 8005210:	2308      	movs	r3, #8
 8005212:	e006      	b.n	8005222 <UART_SetConfig+0x3ea>
 8005214:	2306      	movs	r3, #6
 8005216:	e004      	b.n	8005222 <UART_SetConfig+0x3ea>
 8005218:	2304      	movs	r3, #4
 800521a:	e002      	b.n	8005222 <UART_SetConfig+0x3ea>
 800521c:	2302      	movs	r3, #2
 800521e:	e000      	b.n	8005222 <UART_SetConfig+0x3ea>
 8005220:	2301      	movs	r3, #1
 8005222:	fbb2 f3f3 	udiv	r3, r2, r3
 8005226:	617b      	str	r3, [r7, #20]
 8005228:	e10e      	b.n	8005448 <UART_SetConfig+0x610>
 800522a:	687b      	ldr	r3, [r7, #4]
 800522c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800522e:	2b00      	cmp	r3, #0
 8005230:	d044      	beq.n	80052bc <UART_SetConfig+0x484>
 8005232:	687b      	ldr	r3, [r7, #4]
 8005234:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005236:	2b01      	cmp	r3, #1
 8005238:	d03e      	beq.n	80052b8 <UART_SetConfig+0x480>
 800523a:	687b      	ldr	r3, [r7, #4]
 800523c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800523e:	2b02      	cmp	r3, #2
 8005240:	d038      	beq.n	80052b4 <UART_SetConfig+0x47c>
 8005242:	687b      	ldr	r3, [r7, #4]
 8005244:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005246:	2b03      	cmp	r3, #3
 8005248:	d032      	beq.n	80052b0 <UART_SetConfig+0x478>
 800524a:	687b      	ldr	r3, [r7, #4]
 800524c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800524e:	2b04      	cmp	r3, #4
 8005250:	d02c      	beq.n	80052ac <UART_SetConfig+0x474>
 8005252:	687b      	ldr	r3, [r7, #4]
 8005254:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005256:	2b05      	cmp	r3, #5
 8005258:	d026      	beq.n	80052a8 <UART_SetConfig+0x470>
 800525a:	687b      	ldr	r3, [r7, #4]
 800525c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800525e:	2b06      	cmp	r3, #6
 8005260:	d020      	beq.n	80052a4 <UART_SetConfig+0x46c>
 8005262:	687b      	ldr	r3, [r7, #4]
 8005264:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005266:	2b07      	cmp	r3, #7
 8005268:	d01a      	beq.n	80052a0 <UART_SetConfig+0x468>
 800526a:	687b      	ldr	r3, [r7, #4]
 800526c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800526e:	2b08      	cmp	r3, #8
 8005270:	d014      	beq.n	800529c <UART_SetConfig+0x464>
 8005272:	687b      	ldr	r3, [r7, #4]
 8005274:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005276:	2b09      	cmp	r3, #9
 8005278:	d00e      	beq.n	8005298 <UART_SetConfig+0x460>
 800527a:	687b      	ldr	r3, [r7, #4]
 800527c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800527e:	2b0a      	cmp	r3, #10
 8005280:	d008      	beq.n	8005294 <UART_SetConfig+0x45c>
 8005282:	687b      	ldr	r3, [r7, #4]
 8005284:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005286:	2b0b      	cmp	r3, #11
 8005288:	d102      	bne.n	8005290 <UART_SetConfig+0x458>
 800528a:	f24f 4324 	movw	r3, #62500	; 0xf424
 800528e:	e016      	b.n	80052be <UART_SetConfig+0x486>
 8005290:	4b35      	ldr	r3, [pc, #212]	; (8005368 <UART_SetConfig+0x530>)
 8005292:	e014      	b.n	80052be <UART_SetConfig+0x486>
 8005294:	4b35      	ldr	r3, [pc, #212]	; (800536c <UART_SetConfig+0x534>)
 8005296:	e012      	b.n	80052be <UART_SetConfig+0x486>
 8005298:	4b35      	ldr	r3, [pc, #212]	; (8005370 <UART_SetConfig+0x538>)
 800529a:	e010      	b.n	80052be <UART_SetConfig+0x486>
 800529c:	4b35      	ldr	r3, [pc, #212]	; (8005374 <UART_SetConfig+0x53c>)
 800529e:	e00e      	b.n	80052be <UART_SetConfig+0x486>
 80052a0:	4b35      	ldr	r3, [pc, #212]	; (8005378 <UART_SetConfig+0x540>)
 80052a2:	e00c      	b.n	80052be <UART_SetConfig+0x486>
 80052a4:	4b35      	ldr	r3, [pc, #212]	; (800537c <UART_SetConfig+0x544>)
 80052a6:	e00a      	b.n	80052be <UART_SetConfig+0x486>
 80052a8:	4b35      	ldr	r3, [pc, #212]	; (8005380 <UART_SetConfig+0x548>)
 80052aa:	e008      	b.n	80052be <UART_SetConfig+0x486>
 80052ac:	4b35      	ldr	r3, [pc, #212]	; (8005384 <UART_SetConfig+0x54c>)
 80052ae:	e006      	b.n	80052be <UART_SetConfig+0x486>
 80052b0:	4b35      	ldr	r3, [pc, #212]	; (8005388 <UART_SetConfig+0x550>)
 80052b2:	e004      	b.n	80052be <UART_SetConfig+0x486>
 80052b4:	4b35      	ldr	r3, [pc, #212]	; (800538c <UART_SetConfig+0x554>)
 80052b6:	e002      	b.n	80052be <UART_SetConfig+0x486>
 80052b8:	4b35      	ldr	r3, [pc, #212]	; (8005390 <UART_SetConfig+0x558>)
 80052ba:	e000      	b.n	80052be <UART_SetConfig+0x486>
 80052bc:	4b2a      	ldr	r3, [pc, #168]	; (8005368 <UART_SetConfig+0x530>)
 80052be:	617b      	str	r3, [r7, #20]
 80052c0:	e0c2      	b.n	8005448 <UART_SetConfig+0x610>
 80052c2:	f7fd fdf1 	bl	8002ea8 <HAL_RCC_GetSysClockFreq>
 80052c6:	4602      	mov	r2, r0
 80052c8:	687b      	ldr	r3, [r7, #4]
 80052ca:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80052cc:	2b00      	cmp	r3, #0
 80052ce:	d044      	beq.n	800535a <UART_SetConfig+0x522>
 80052d0:	687b      	ldr	r3, [r7, #4]
 80052d2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80052d4:	2b01      	cmp	r3, #1
 80052d6:	d03e      	beq.n	8005356 <UART_SetConfig+0x51e>
 80052d8:	687b      	ldr	r3, [r7, #4]
 80052da:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80052dc:	2b02      	cmp	r3, #2
 80052de:	d038      	beq.n	8005352 <UART_SetConfig+0x51a>
 80052e0:	687b      	ldr	r3, [r7, #4]
 80052e2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80052e4:	2b03      	cmp	r3, #3
 80052e6:	d032      	beq.n	800534e <UART_SetConfig+0x516>
 80052e8:	687b      	ldr	r3, [r7, #4]
 80052ea:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80052ec:	2b04      	cmp	r3, #4
 80052ee:	d02c      	beq.n	800534a <UART_SetConfig+0x512>
 80052f0:	687b      	ldr	r3, [r7, #4]
 80052f2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80052f4:	2b05      	cmp	r3, #5
 80052f6:	d026      	beq.n	8005346 <UART_SetConfig+0x50e>
 80052f8:	687b      	ldr	r3, [r7, #4]
 80052fa:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80052fc:	2b06      	cmp	r3, #6
 80052fe:	d020      	beq.n	8005342 <UART_SetConfig+0x50a>
 8005300:	687b      	ldr	r3, [r7, #4]
 8005302:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005304:	2b07      	cmp	r3, #7
 8005306:	d01a      	beq.n	800533e <UART_SetConfig+0x506>
 8005308:	687b      	ldr	r3, [r7, #4]
 800530a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800530c:	2b08      	cmp	r3, #8
 800530e:	d014      	beq.n	800533a <UART_SetConfig+0x502>
 8005310:	687b      	ldr	r3, [r7, #4]
 8005312:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005314:	2b09      	cmp	r3, #9
 8005316:	d00e      	beq.n	8005336 <UART_SetConfig+0x4fe>
 8005318:	687b      	ldr	r3, [r7, #4]
 800531a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800531c:	2b0a      	cmp	r3, #10
 800531e:	d008      	beq.n	8005332 <UART_SetConfig+0x4fa>
 8005320:	687b      	ldr	r3, [r7, #4]
 8005322:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005324:	2b0b      	cmp	r3, #11
 8005326:	d102      	bne.n	800532e <UART_SetConfig+0x4f6>
 8005328:	f44f 7380 	mov.w	r3, #256	; 0x100
 800532c:	e016      	b.n	800535c <UART_SetConfig+0x524>
 800532e:	2301      	movs	r3, #1
 8005330:	e014      	b.n	800535c <UART_SetConfig+0x524>
 8005332:	2380      	movs	r3, #128	; 0x80
 8005334:	e012      	b.n	800535c <UART_SetConfig+0x524>
 8005336:	2340      	movs	r3, #64	; 0x40
 8005338:	e010      	b.n	800535c <UART_SetConfig+0x524>
 800533a:	2320      	movs	r3, #32
 800533c:	e00e      	b.n	800535c <UART_SetConfig+0x524>
 800533e:	2310      	movs	r3, #16
 8005340:	e00c      	b.n	800535c <UART_SetConfig+0x524>
 8005342:	230c      	movs	r3, #12
 8005344:	e00a      	b.n	800535c <UART_SetConfig+0x524>
 8005346:	230a      	movs	r3, #10
 8005348:	e008      	b.n	800535c <UART_SetConfig+0x524>
 800534a:	2308      	movs	r3, #8
 800534c:	e006      	b.n	800535c <UART_SetConfig+0x524>
 800534e:	2306      	movs	r3, #6
 8005350:	e004      	b.n	800535c <UART_SetConfig+0x524>
 8005352:	2304      	movs	r3, #4
 8005354:	e002      	b.n	800535c <UART_SetConfig+0x524>
 8005356:	2302      	movs	r3, #2
 8005358:	e000      	b.n	800535c <UART_SetConfig+0x524>
 800535a:	2301      	movs	r3, #1
 800535c:	fbb2 f3f3 	udiv	r3, r2, r3
 8005360:	617b      	str	r3, [r7, #20]
 8005362:	e071      	b.n	8005448 <UART_SetConfig+0x610>
 8005364:	40008000 	.word	0x40008000
 8005368:	00f42400 	.word	0x00f42400
 800536c:	0001e848 	.word	0x0001e848
 8005370:	0003d090 	.word	0x0003d090
 8005374:	0007a120 	.word	0x0007a120
 8005378:	000f4240 	.word	0x000f4240
 800537c:	00145855 	.word	0x00145855
 8005380:	00186a00 	.word	0x00186a00
 8005384:	001e8480 	.word	0x001e8480
 8005388:	0028b0aa 	.word	0x0028b0aa
 800538c:	003d0900 	.word	0x003d0900
 8005390:	007a1200 	.word	0x007a1200
 8005394:	687b      	ldr	r3, [r7, #4]
 8005396:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005398:	2b00      	cmp	r3, #0
 800539a:	d04e      	beq.n	800543a <UART_SetConfig+0x602>
 800539c:	687b      	ldr	r3, [r7, #4]
 800539e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80053a0:	2b01      	cmp	r3, #1
 80053a2:	d047      	beq.n	8005434 <UART_SetConfig+0x5fc>
 80053a4:	687b      	ldr	r3, [r7, #4]
 80053a6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80053a8:	2b02      	cmp	r3, #2
 80053aa:	d040      	beq.n	800542e <UART_SetConfig+0x5f6>
 80053ac:	687b      	ldr	r3, [r7, #4]
 80053ae:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80053b0:	2b03      	cmp	r3, #3
 80053b2:	d039      	beq.n	8005428 <UART_SetConfig+0x5f0>
 80053b4:	687b      	ldr	r3, [r7, #4]
 80053b6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80053b8:	2b04      	cmp	r3, #4
 80053ba:	d032      	beq.n	8005422 <UART_SetConfig+0x5ea>
 80053bc:	687b      	ldr	r3, [r7, #4]
 80053be:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80053c0:	2b05      	cmp	r3, #5
 80053c2:	d02b      	beq.n	800541c <UART_SetConfig+0x5e4>
 80053c4:	687b      	ldr	r3, [r7, #4]
 80053c6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80053c8:	2b06      	cmp	r3, #6
 80053ca:	d024      	beq.n	8005416 <UART_SetConfig+0x5de>
 80053cc:	687b      	ldr	r3, [r7, #4]
 80053ce:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80053d0:	2b07      	cmp	r3, #7
 80053d2:	d01d      	beq.n	8005410 <UART_SetConfig+0x5d8>
 80053d4:	687b      	ldr	r3, [r7, #4]
 80053d6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80053d8:	2b08      	cmp	r3, #8
 80053da:	d016      	beq.n	800540a <UART_SetConfig+0x5d2>
 80053dc:	687b      	ldr	r3, [r7, #4]
 80053de:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80053e0:	2b09      	cmp	r3, #9
 80053e2:	d00f      	beq.n	8005404 <UART_SetConfig+0x5cc>
 80053e4:	687b      	ldr	r3, [r7, #4]
 80053e6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80053e8:	2b0a      	cmp	r3, #10
 80053ea:	d008      	beq.n	80053fe <UART_SetConfig+0x5c6>
 80053ec:	687b      	ldr	r3, [r7, #4]
 80053ee:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80053f0:	2b0b      	cmp	r3, #11
 80053f2:	d101      	bne.n	80053f8 <UART_SetConfig+0x5c0>
 80053f4:	2380      	movs	r3, #128	; 0x80
 80053f6:	e022      	b.n	800543e <UART_SetConfig+0x606>
 80053f8:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 80053fc:	e01f      	b.n	800543e <UART_SetConfig+0x606>
 80053fe:	f44f 7380 	mov.w	r3, #256	; 0x100
 8005402:	e01c      	b.n	800543e <UART_SetConfig+0x606>
 8005404:	f44f 7300 	mov.w	r3, #512	; 0x200
 8005408:	e019      	b.n	800543e <UART_SetConfig+0x606>
 800540a:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800540e:	e016      	b.n	800543e <UART_SetConfig+0x606>
 8005410:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8005414:	e013      	b.n	800543e <UART_SetConfig+0x606>
 8005416:	f640 23aa 	movw	r3, #2730	; 0xaaa
 800541a:	e010      	b.n	800543e <UART_SetConfig+0x606>
 800541c:	f640 43cc 	movw	r3, #3276	; 0xccc
 8005420:	e00d      	b.n	800543e <UART_SetConfig+0x606>
 8005422:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8005426:	e00a      	b.n	800543e <UART_SetConfig+0x606>
 8005428:	f241 5355 	movw	r3, #5461	; 0x1555
 800542c:	e007      	b.n	800543e <UART_SetConfig+0x606>
 800542e:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8005432:	e004      	b.n	800543e <UART_SetConfig+0x606>
 8005434:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 8005438:	e001      	b.n	800543e <UART_SetConfig+0x606>
 800543a:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 800543e:	617b      	str	r3, [r7, #20]
 8005440:	e002      	b.n	8005448 <UART_SetConfig+0x610>
 8005442:	2301      	movs	r3, #1
 8005444:	76fb      	strb	r3, [r7, #27]
 8005446:	bf00      	nop
 8005448:	697b      	ldr	r3, [r7, #20]
 800544a:	2b00      	cmp	r3, #0
 800544c:	f000 86b7 	beq.w	80061be <UART_SetConfig+0x1386>
 8005450:	687b      	ldr	r3, [r7, #4]
 8005452:	685a      	ldr	r2, [r3, #4]
 8005454:	4613      	mov	r3, r2
 8005456:	005b      	lsls	r3, r3, #1
 8005458:	4413      	add	r3, r2
 800545a:	697a      	ldr	r2, [r7, #20]
 800545c:	429a      	cmp	r2, r3
 800545e:	d305      	bcc.n	800546c <UART_SetConfig+0x634>
 8005460:	687b      	ldr	r3, [r7, #4]
 8005462:	685b      	ldr	r3, [r3, #4]
 8005464:	031b      	lsls	r3, r3, #12
 8005466:	697a      	ldr	r2, [r7, #20]
 8005468:	429a      	cmp	r2, r3
 800546a:	d903      	bls.n	8005474 <UART_SetConfig+0x63c>
 800546c:	2301      	movs	r3, #1
 800546e:	76fb      	strb	r3, [r7, #27]
 8005470:	f000 bea5 	b.w	80061be <UART_SetConfig+0x1386>
 8005474:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
 8005478:	2b08      	cmp	r3, #8
 800547a:	f200 8277 	bhi.w	800596c <UART_SetConfig+0xb34>
 800547e:	a201      	add	r2, pc, #4	; (adr r2, 8005484 <UART_SetConfig+0x64c>)
 8005480:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8005484:	080054a9 	.word	0x080054a9
 8005488:	0800596d 	.word	0x0800596d
 800548c:	080055e7 	.word	0x080055e7
 8005490:	0800596d 	.word	0x0800596d
 8005494:	080056dd 	.word	0x080056dd
 8005498:	0800596d 	.word	0x0800596d
 800549c:	0800596d 	.word	0x0800596d
 80054a0:	0800596d 	.word	0x0800596d
 80054a4:	0800581b 	.word	0x0800581b
 80054a8:	f7fd fd6c 	bl	8002f84 <HAL_RCC_GetPCLK1Freq>
 80054ac:	6138      	str	r0, [r7, #16]
 80054ae:	693b      	ldr	r3, [r7, #16]
 80054b0:	4618      	mov	r0, r3
 80054b2:	f04f 0100 	mov.w	r1, #0
 80054b6:	687b      	ldr	r3, [r7, #4]
 80054b8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80054ba:	2b00      	cmp	r3, #0
 80054bc:	d067      	beq.n	800558e <UART_SetConfig+0x756>
 80054be:	687b      	ldr	r3, [r7, #4]
 80054c0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80054c2:	2b01      	cmp	r3, #1
 80054c4:	d05e      	beq.n	8005584 <UART_SetConfig+0x74c>
 80054c6:	687b      	ldr	r3, [r7, #4]
 80054c8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80054ca:	2b02      	cmp	r3, #2
 80054cc:	d055      	beq.n	800557a <UART_SetConfig+0x742>
 80054ce:	687b      	ldr	r3, [r7, #4]
 80054d0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80054d2:	2b03      	cmp	r3, #3
 80054d4:	d04c      	beq.n	8005570 <UART_SetConfig+0x738>
 80054d6:	687b      	ldr	r3, [r7, #4]
 80054d8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80054da:	2b04      	cmp	r3, #4
 80054dc:	d043      	beq.n	8005566 <UART_SetConfig+0x72e>
 80054de:	687b      	ldr	r3, [r7, #4]
 80054e0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80054e2:	2b05      	cmp	r3, #5
 80054e4:	d03a      	beq.n	800555c <UART_SetConfig+0x724>
 80054e6:	687b      	ldr	r3, [r7, #4]
 80054e8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80054ea:	2b06      	cmp	r3, #6
 80054ec:	d031      	beq.n	8005552 <UART_SetConfig+0x71a>
 80054ee:	687b      	ldr	r3, [r7, #4]
 80054f0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80054f2:	2b07      	cmp	r3, #7
 80054f4:	d028      	beq.n	8005548 <UART_SetConfig+0x710>
 80054f6:	687b      	ldr	r3, [r7, #4]
 80054f8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80054fa:	2b08      	cmp	r3, #8
 80054fc:	d01f      	beq.n	800553e <UART_SetConfig+0x706>
 80054fe:	687b      	ldr	r3, [r7, #4]
 8005500:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005502:	2b09      	cmp	r3, #9
 8005504:	d016      	beq.n	8005534 <UART_SetConfig+0x6fc>
 8005506:	687b      	ldr	r3, [r7, #4]
 8005508:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800550a:	2b0a      	cmp	r3, #10
 800550c:	d00d      	beq.n	800552a <UART_SetConfig+0x6f2>
 800550e:	687b      	ldr	r3, [r7, #4]
 8005510:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005512:	2b0b      	cmp	r3, #11
 8005514:	d104      	bne.n	8005520 <UART_SetConfig+0x6e8>
 8005516:	f44f 7380 	mov.w	r3, #256	; 0x100
 800551a:	f04f 0400 	mov.w	r4, #0
 800551e:	e03a      	b.n	8005596 <UART_SetConfig+0x75e>
 8005520:	f04f 0301 	mov.w	r3, #1
 8005524:	f04f 0400 	mov.w	r4, #0
 8005528:	e035      	b.n	8005596 <UART_SetConfig+0x75e>
 800552a:	f04f 0380 	mov.w	r3, #128	; 0x80
 800552e:	f04f 0400 	mov.w	r4, #0
 8005532:	e030      	b.n	8005596 <UART_SetConfig+0x75e>
 8005534:	f04f 0340 	mov.w	r3, #64	; 0x40
 8005538:	f04f 0400 	mov.w	r4, #0
 800553c:	e02b      	b.n	8005596 <UART_SetConfig+0x75e>
 800553e:	f04f 0320 	mov.w	r3, #32
 8005542:	f04f 0400 	mov.w	r4, #0
 8005546:	e026      	b.n	8005596 <UART_SetConfig+0x75e>
 8005548:	f04f 0310 	mov.w	r3, #16
 800554c:	f04f 0400 	mov.w	r4, #0
 8005550:	e021      	b.n	8005596 <UART_SetConfig+0x75e>
 8005552:	f04f 030c 	mov.w	r3, #12
 8005556:	f04f 0400 	mov.w	r4, #0
 800555a:	e01c      	b.n	8005596 <UART_SetConfig+0x75e>
 800555c:	f04f 030a 	mov.w	r3, #10
 8005560:	f04f 0400 	mov.w	r4, #0
 8005564:	e017      	b.n	8005596 <UART_SetConfig+0x75e>
 8005566:	f04f 0308 	mov.w	r3, #8
 800556a:	f04f 0400 	mov.w	r4, #0
 800556e:	e012      	b.n	8005596 <UART_SetConfig+0x75e>
 8005570:	f04f 0306 	mov.w	r3, #6
 8005574:	f04f 0400 	mov.w	r4, #0
 8005578:	e00d      	b.n	8005596 <UART_SetConfig+0x75e>
 800557a:	f04f 0304 	mov.w	r3, #4
 800557e:	f04f 0400 	mov.w	r4, #0
 8005582:	e008      	b.n	8005596 <UART_SetConfig+0x75e>
 8005584:	f04f 0302 	mov.w	r3, #2
 8005588:	f04f 0400 	mov.w	r4, #0
 800558c:	e003      	b.n	8005596 <UART_SetConfig+0x75e>
 800558e:	f04f 0301 	mov.w	r3, #1
 8005592:	f04f 0400 	mov.w	r4, #0
 8005596:	461a      	mov	r2, r3
 8005598:	4623      	mov	r3, r4
 800559a:	f7fa fe3d 	bl	8000218 <__aeabi_uldivmod>
 800559e:	4603      	mov	r3, r0
 80055a0:	460c      	mov	r4, r1
 80055a2:	4619      	mov	r1, r3
 80055a4:	4622      	mov	r2, r4
 80055a6:	f04f 0300 	mov.w	r3, #0
 80055aa:	f04f 0400 	mov.w	r4, #0
 80055ae:	0214      	lsls	r4, r2, #8
 80055b0:	ea44 6411 	orr.w	r4, r4, r1, lsr #24
 80055b4:	020b      	lsls	r3, r1, #8
 80055b6:	687a      	ldr	r2, [r7, #4]
 80055b8:	6852      	ldr	r2, [r2, #4]
 80055ba:	0852      	lsrs	r2, r2, #1
 80055bc:	4611      	mov	r1, r2
 80055be:	f04f 0200 	mov.w	r2, #0
 80055c2:	eb13 0b01 	adds.w	fp, r3, r1
 80055c6:	eb44 0c02 	adc.w	ip, r4, r2
 80055ca:	4658      	mov	r0, fp
 80055cc:	4661      	mov	r1, ip
 80055ce:	687b      	ldr	r3, [r7, #4]
 80055d0:	685b      	ldr	r3, [r3, #4]
 80055d2:	f04f 0400 	mov.w	r4, #0
 80055d6:	461a      	mov	r2, r3
 80055d8:	4623      	mov	r3, r4
 80055da:	f7fa fe1d 	bl	8000218 <__aeabi_uldivmod>
 80055de:	4603      	mov	r3, r0
 80055e0:	460c      	mov	r4, r1
 80055e2:	61fb      	str	r3, [r7, #28]
 80055e4:	e1c5      	b.n	8005972 <UART_SetConfig+0xb3a>
 80055e6:	687b      	ldr	r3, [r7, #4]
 80055e8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80055ea:	2b00      	cmp	r3, #0
 80055ec:	d05b      	beq.n	80056a6 <UART_SetConfig+0x86e>
 80055ee:	687b      	ldr	r3, [r7, #4]
 80055f0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80055f2:	2b01      	cmp	r3, #1
 80055f4:	d053      	beq.n	800569e <UART_SetConfig+0x866>
 80055f6:	687b      	ldr	r3, [r7, #4]
 80055f8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80055fa:	2b02      	cmp	r3, #2
 80055fc:	d04b      	beq.n	8005696 <UART_SetConfig+0x85e>
 80055fe:	687b      	ldr	r3, [r7, #4]
 8005600:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005602:	2b03      	cmp	r3, #3
 8005604:	d043      	beq.n	800568e <UART_SetConfig+0x856>
 8005606:	687b      	ldr	r3, [r7, #4]
 8005608:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800560a:	2b04      	cmp	r3, #4
 800560c:	d03b      	beq.n	8005686 <UART_SetConfig+0x84e>
 800560e:	687b      	ldr	r3, [r7, #4]
 8005610:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005612:	2b05      	cmp	r3, #5
 8005614:	d033      	beq.n	800567e <UART_SetConfig+0x846>
 8005616:	687b      	ldr	r3, [r7, #4]
 8005618:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800561a:	2b06      	cmp	r3, #6
 800561c:	d02b      	beq.n	8005676 <UART_SetConfig+0x83e>
 800561e:	687b      	ldr	r3, [r7, #4]
 8005620:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005622:	2b07      	cmp	r3, #7
 8005624:	d023      	beq.n	800566e <UART_SetConfig+0x836>
 8005626:	687b      	ldr	r3, [r7, #4]
 8005628:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800562a:	2b08      	cmp	r3, #8
 800562c:	d01b      	beq.n	8005666 <UART_SetConfig+0x82e>
 800562e:	687b      	ldr	r3, [r7, #4]
 8005630:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005632:	2b09      	cmp	r3, #9
 8005634:	d013      	beq.n	800565e <UART_SetConfig+0x826>
 8005636:	687b      	ldr	r3, [r7, #4]
 8005638:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800563a:	2b0a      	cmp	r3, #10
 800563c:	d00b      	beq.n	8005656 <UART_SetConfig+0x81e>
 800563e:	687b      	ldr	r3, [r7, #4]
 8005640:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005642:	2b0b      	cmp	r3, #11
 8005644:	d103      	bne.n	800564e <UART_SetConfig+0x816>
 8005646:	4bae      	ldr	r3, [pc, #696]	; (8005900 <UART_SetConfig+0xac8>)
 8005648:	f04f 0400 	mov.w	r4, #0
 800564c:	e02e      	b.n	80056ac <UART_SetConfig+0x874>
 800564e:	4bad      	ldr	r3, [pc, #692]	; (8005904 <UART_SetConfig+0xacc>)
 8005650:	f04f 0400 	mov.w	r4, #0
 8005654:	e02a      	b.n	80056ac <UART_SetConfig+0x874>
 8005656:	4bac      	ldr	r3, [pc, #688]	; (8005908 <UART_SetConfig+0xad0>)
 8005658:	f04f 0400 	mov.w	r4, #0
 800565c:	e026      	b.n	80056ac <UART_SetConfig+0x874>
 800565e:	4bab      	ldr	r3, [pc, #684]	; (800590c <UART_SetConfig+0xad4>)
 8005660:	f04f 0400 	mov.w	r4, #0
 8005664:	e022      	b.n	80056ac <UART_SetConfig+0x874>
 8005666:	4baa      	ldr	r3, [pc, #680]	; (8005910 <UART_SetConfig+0xad8>)
 8005668:	f04f 0400 	mov.w	r4, #0
 800566c:	e01e      	b.n	80056ac <UART_SetConfig+0x874>
 800566e:	4ba9      	ldr	r3, [pc, #676]	; (8005914 <UART_SetConfig+0xadc>)
 8005670:	f04f 0400 	mov.w	r4, #0
 8005674:	e01a      	b.n	80056ac <UART_SetConfig+0x874>
 8005676:	a49e      	add	r4, pc, #632	; (adr r4, 80058f0 <UART_SetConfig+0xab8>)
 8005678:	e9d4 3400 	ldrd	r3, r4, [r4]
 800567c:	e016      	b.n	80056ac <UART_SetConfig+0x874>
 800567e:	4ba6      	ldr	r3, [pc, #664]	; (8005918 <UART_SetConfig+0xae0>)
 8005680:	f04f 0400 	mov.w	r4, #0
 8005684:	e012      	b.n	80056ac <UART_SetConfig+0x874>
 8005686:	4ba5      	ldr	r3, [pc, #660]	; (800591c <UART_SetConfig+0xae4>)
 8005688:	f04f 0400 	mov.w	r4, #0
 800568c:	e00e      	b.n	80056ac <UART_SetConfig+0x874>
 800568e:	a49a      	add	r4, pc, #616	; (adr r4, 80058f8 <UART_SetConfig+0xac0>)
 8005690:	e9d4 3400 	ldrd	r3, r4, [r4]
 8005694:	e00a      	b.n	80056ac <UART_SetConfig+0x874>
 8005696:	4ba2      	ldr	r3, [pc, #648]	; (8005920 <UART_SetConfig+0xae8>)
 8005698:	f04f 0400 	mov.w	r4, #0
 800569c:	e006      	b.n	80056ac <UART_SetConfig+0x874>
 800569e:	4ba1      	ldr	r3, [pc, #644]	; (8005924 <UART_SetConfig+0xaec>)
 80056a0:	f04f 0400 	mov.w	r4, #0
 80056a4:	e002      	b.n	80056ac <UART_SetConfig+0x874>
 80056a6:	4b97      	ldr	r3, [pc, #604]	; (8005904 <UART_SetConfig+0xacc>)
 80056a8:	f04f 0400 	mov.w	r4, #0
 80056ac:	687a      	ldr	r2, [r7, #4]
 80056ae:	6852      	ldr	r2, [r2, #4]
 80056b0:	0852      	lsrs	r2, r2, #1
 80056b2:	4611      	mov	r1, r2
 80056b4:	f04f 0200 	mov.w	r2, #0
 80056b8:	eb13 0b01 	adds.w	fp, r3, r1
 80056bc:	eb44 0c02 	adc.w	ip, r4, r2
 80056c0:	4658      	mov	r0, fp
 80056c2:	4661      	mov	r1, ip
 80056c4:	687b      	ldr	r3, [r7, #4]
 80056c6:	685b      	ldr	r3, [r3, #4]
 80056c8:	f04f 0400 	mov.w	r4, #0
 80056cc:	461a      	mov	r2, r3
 80056ce:	4623      	mov	r3, r4
 80056d0:	f7fa fda2 	bl	8000218 <__aeabi_uldivmod>
 80056d4:	4603      	mov	r3, r0
 80056d6:	460c      	mov	r4, r1
 80056d8:	61fb      	str	r3, [r7, #28]
 80056da:	e14a      	b.n	8005972 <UART_SetConfig+0xb3a>
 80056dc:	f7fd fbe4 	bl	8002ea8 <HAL_RCC_GetSysClockFreq>
 80056e0:	6138      	str	r0, [r7, #16]
 80056e2:	693b      	ldr	r3, [r7, #16]
 80056e4:	4618      	mov	r0, r3
 80056e6:	f04f 0100 	mov.w	r1, #0
 80056ea:	687b      	ldr	r3, [r7, #4]
 80056ec:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80056ee:	2b00      	cmp	r3, #0
 80056f0:	d067      	beq.n	80057c2 <UART_SetConfig+0x98a>
 80056f2:	687b      	ldr	r3, [r7, #4]
 80056f4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80056f6:	2b01      	cmp	r3, #1
 80056f8:	d05e      	beq.n	80057b8 <UART_SetConfig+0x980>
 80056fa:	687b      	ldr	r3, [r7, #4]
 80056fc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80056fe:	2b02      	cmp	r3, #2
 8005700:	d055      	beq.n	80057ae <UART_SetConfig+0x976>
 8005702:	687b      	ldr	r3, [r7, #4]
 8005704:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005706:	2b03      	cmp	r3, #3
 8005708:	d04c      	beq.n	80057a4 <UART_SetConfig+0x96c>
 800570a:	687b      	ldr	r3, [r7, #4]
 800570c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800570e:	2b04      	cmp	r3, #4
 8005710:	d043      	beq.n	800579a <UART_SetConfig+0x962>
 8005712:	687b      	ldr	r3, [r7, #4]
 8005714:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005716:	2b05      	cmp	r3, #5
 8005718:	d03a      	beq.n	8005790 <UART_SetConfig+0x958>
 800571a:	687b      	ldr	r3, [r7, #4]
 800571c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800571e:	2b06      	cmp	r3, #6
 8005720:	d031      	beq.n	8005786 <UART_SetConfig+0x94e>
 8005722:	687b      	ldr	r3, [r7, #4]
 8005724:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005726:	2b07      	cmp	r3, #7
 8005728:	d028      	beq.n	800577c <UART_SetConfig+0x944>
 800572a:	687b      	ldr	r3, [r7, #4]
 800572c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800572e:	2b08      	cmp	r3, #8
 8005730:	d01f      	beq.n	8005772 <UART_SetConfig+0x93a>
 8005732:	687b      	ldr	r3, [r7, #4]
 8005734:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005736:	2b09      	cmp	r3, #9
 8005738:	d016      	beq.n	8005768 <UART_SetConfig+0x930>
 800573a:	687b      	ldr	r3, [r7, #4]
 800573c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800573e:	2b0a      	cmp	r3, #10
 8005740:	d00d      	beq.n	800575e <UART_SetConfig+0x926>
 8005742:	687b      	ldr	r3, [r7, #4]
 8005744:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005746:	2b0b      	cmp	r3, #11
 8005748:	d104      	bne.n	8005754 <UART_SetConfig+0x91c>
 800574a:	f44f 7380 	mov.w	r3, #256	; 0x100
 800574e:	f04f 0400 	mov.w	r4, #0
 8005752:	e03a      	b.n	80057ca <UART_SetConfig+0x992>
 8005754:	f04f 0301 	mov.w	r3, #1
 8005758:	f04f 0400 	mov.w	r4, #0
 800575c:	e035      	b.n	80057ca <UART_SetConfig+0x992>
 800575e:	f04f 0380 	mov.w	r3, #128	; 0x80
 8005762:	f04f 0400 	mov.w	r4, #0
 8005766:	e030      	b.n	80057ca <UART_SetConfig+0x992>
 8005768:	f04f 0340 	mov.w	r3, #64	; 0x40
 800576c:	f04f 0400 	mov.w	r4, #0
 8005770:	e02b      	b.n	80057ca <UART_SetConfig+0x992>
 8005772:	f04f 0320 	mov.w	r3, #32
 8005776:	f04f 0400 	mov.w	r4, #0
 800577a:	e026      	b.n	80057ca <UART_SetConfig+0x992>
 800577c:	f04f 0310 	mov.w	r3, #16
 8005780:	f04f 0400 	mov.w	r4, #0
 8005784:	e021      	b.n	80057ca <UART_SetConfig+0x992>
 8005786:	f04f 030c 	mov.w	r3, #12
 800578a:	f04f 0400 	mov.w	r4, #0
 800578e:	e01c      	b.n	80057ca <UART_SetConfig+0x992>
 8005790:	f04f 030a 	mov.w	r3, #10
 8005794:	f04f 0400 	mov.w	r4, #0
 8005798:	e017      	b.n	80057ca <UART_SetConfig+0x992>
 800579a:	f04f 0308 	mov.w	r3, #8
 800579e:	f04f 0400 	mov.w	r4, #0
 80057a2:	e012      	b.n	80057ca <UART_SetConfig+0x992>
 80057a4:	f04f 0306 	mov.w	r3, #6
 80057a8:	f04f 0400 	mov.w	r4, #0
 80057ac:	e00d      	b.n	80057ca <UART_SetConfig+0x992>
 80057ae:	f04f 0304 	mov.w	r3, #4
 80057b2:	f04f 0400 	mov.w	r4, #0
 80057b6:	e008      	b.n	80057ca <UART_SetConfig+0x992>
 80057b8:	f04f 0302 	mov.w	r3, #2
 80057bc:	f04f 0400 	mov.w	r4, #0
 80057c0:	e003      	b.n	80057ca <UART_SetConfig+0x992>
 80057c2:	f04f 0301 	mov.w	r3, #1
 80057c6:	f04f 0400 	mov.w	r4, #0
 80057ca:	461a      	mov	r2, r3
 80057cc:	4623      	mov	r3, r4
 80057ce:	f7fa fd23 	bl	8000218 <__aeabi_uldivmod>
 80057d2:	4603      	mov	r3, r0
 80057d4:	460c      	mov	r4, r1
 80057d6:	4619      	mov	r1, r3
 80057d8:	4622      	mov	r2, r4
 80057da:	f04f 0300 	mov.w	r3, #0
 80057de:	f04f 0400 	mov.w	r4, #0
 80057e2:	0214      	lsls	r4, r2, #8
 80057e4:	ea44 6411 	orr.w	r4, r4, r1, lsr #24
 80057e8:	020b      	lsls	r3, r1, #8
 80057ea:	687a      	ldr	r2, [r7, #4]
 80057ec:	6852      	ldr	r2, [r2, #4]
 80057ee:	0852      	lsrs	r2, r2, #1
 80057f0:	4611      	mov	r1, r2
 80057f2:	f04f 0200 	mov.w	r2, #0
 80057f6:	eb13 0b01 	adds.w	fp, r3, r1
 80057fa:	eb44 0c02 	adc.w	ip, r4, r2
 80057fe:	4658      	mov	r0, fp
 8005800:	4661      	mov	r1, ip
 8005802:	687b      	ldr	r3, [r7, #4]
 8005804:	685b      	ldr	r3, [r3, #4]
 8005806:	f04f 0400 	mov.w	r4, #0
 800580a:	461a      	mov	r2, r3
 800580c:	4623      	mov	r3, r4
 800580e:	f7fa fd03 	bl	8000218 <__aeabi_uldivmod>
 8005812:	4603      	mov	r3, r0
 8005814:	460c      	mov	r4, r1
 8005816:	61fb      	str	r3, [r7, #28]
 8005818:	e0ab      	b.n	8005972 <UART_SetConfig+0xb3a>
 800581a:	687b      	ldr	r3, [r7, #4]
 800581c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800581e:	2b00      	cmp	r3, #0
 8005820:	f000 8088 	beq.w	8005934 <UART_SetConfig+0xafc>
 8005824:	687b      	ldr	r3, [r7, #4]
 8005826:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005828:	2b01      	cmp	r3, #1
 800582a:	d05b      	beq.n	80058e4 <UART_SetConfig+0xaac>
 800582c:	687b      	ldr	r3, [r7, #4]
 800582e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005830:	2b02      	cmp	r3, #2
 8005832:	d052      	beq.n	80058da <UART_SetConfig+0xaa2>
 8005834:	687b      	ldr	r3, [r7, #4]
 8005836:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005838:	2b03      	cmp	r3, #3
 800583a:	d04a      	beq.n	80058d2 <UART_SetConfig+0xa9a>
 800583c:	687b      	ldr	r3, [r7, #4]
 800583e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005840:	2b04      	cmp	r3, #4
 8005842:	d041      	beq.n	80058c8 <UART_SetConfig+0xa90>
 8005844:	687b      	ldr	r3, [r7, #4]
 8005846:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005848:	2b05      	cmp	r3, #5
 800584a:	d039      	beq.n	80058c0 <UART_SetConfig+0xa88>
 800584c:	687b      	ldr	r3, [r7, #4]
 800584e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005850:	2b06      	cmp	r3, #6
 8005852:	d031      	beq.n	80058b8 <UART_SetConfig+0xa80>
 8005854:	687b      	ldr	r3, [r7, #4]
 8005856:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005858:	2b07      	cmp	r3, #7
 800585a:	d028      	beq.n	80058ae <UART_SetConfig+0xa76>
 800585c:	687b      	ldr	r3, [r7, #4]
 800585e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005860:	2b08      	cmp	r3, #8
 8005862:	d01f      	beq.n	80058a4 <UART_SetConfig+0xa6c>
 8005864:	687b      	ldr	r3, [r7, #4]
 8005866:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005868:	2b09      	cmp	r3, #9
 800586a:	d016      	beq.n	800589a <UART_SetConfig+0xa62>
 800586c:	687b      	ldr	r3, [r7, #4]
 800586e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005870:	2b0a      	cmp	r3, #10
 8005872:	d00d      	beq.n	8005890 <UART_SetConfig+0xa58>
 8005874:	687b      	ldr	r3, [r7, #4]
 8005876:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005878:	2b0b      	cmp	r3, #11
 800587a:	d104      	bne.n	8005886 <UART_SetConfig+0xa4e>
 800587c:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8005880:	f04f 0400 	mov.w	r4, #0
 8005884:	e05a      	b.n	800593c <UART_SetConfig+0xb04>
 8005886:	f44f 0300 	mov.w	r3, #8388608	; 0x800000
 800588a:	f04f 0400 	mov.w	r4, #0
 800588e:	e055      	b.n	800593c <UART_SetConfig+0xb04>
 8005890:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8005894:	f04f 0400 	mov.w	r4, #0
 8005898:	e050      	b.n	800593c <UART_SetConfig+0xb04>
 800589a:	f44f 3300 	mov.w	r3, #131072	; 0x20000
 800589e:	f04f 0400 	mov.w	r4, #0
 80058a2:	e04b      	b.n	800593c <UART_SetConfig+0xb04>
 80058a4:	f44f 2380 	mov.w	r3, #262144	; 0x40000
 80058a8:	f04f 0400 	mov.w	r4, #0
 80058ac:	e046      	b.n	800593c <UART_SetConfig+0xb04>
 80058ae:	f44f 2300 	mov.w	r3, #524288	; 0x80000
 80058b2:	f04f 0400 	mov.w	r4, #0
 80058b6:	e041      	b.n	800593c <UART_SetConfig+0xb04>
 80058b8:	4b1b      	ldr	r3, [pc, #108]	; (8005928 <UART_SetConfig+0xaf0>)
 80058ba:	f04f 0400 	mov.w	r4, #0
 80058be:	e03d      	b.n	800593c <UART_SetConfig+0xb04>
 80058c0:	4b1a      	ldr	r3, [pc, #104]	; (800592c <UART_SetConfig+0xaf4>)
 80058c2:	f04f 0400 	mov.w	r4, #0
 80058c6:	e039      	b.n	800593c <UART_SetConfig+0xb04>
 80058c8:	f44f 1380 	mov.w	r3, #1048576	; 0x100000
 80058cc:	f04f 0400 	mov.w	r4, #0
 80058d0:	e034      	b.n	800593c <UART_SetConfig+0xb04>
 80058d2:	4b17      	ldr	r3, [pc, #92]	; (8005930 <UART_SetConfig+0xaf8>)
 80058d4:	f04f 0400 	mov.w	r4, #0
 80058d8:	e030      	b.n	800593c <UART_SetConfig+0xb04>
 80058da:	f44f 1300 	mov.w	r3, #2097152	; 0x200000
 80058de:	f04f 0400 	mov.w	r4, #0
 80058e2:	e02b      	b.n	800593c <UART_SetConfig+0xb04>
 80058e4:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
 80058e8:	f04f 0400 	mov.w	r4, #0
 80058ec:	e026      	b.n	800593c <UART_SetConfig+0xb04>
 80058ee:	bf00      	nop
 80058f0:	14585500 	.word	0x14585500
 80058f4:	00000000 	.word	0x00000000
 80058f8:	28b0aa00 	.word	0x28b0aa00
 80058fc:	00000000 	.word	0x00000000
 8005900:	00f42400 	.word	0x00f42400
 8005904:	f4240000 	.word	0xf4240000
 8005908:	01e84800 	.word	0x01e84800
 800590c:	03d09000 	.word	0x03d09000
 8005910:	07a12000 	.word	0x07a12000
 8005914:	0f424000 	.word	0x0f424000
 8005918:	186a0000 	.word	0x186a0000
 800591c:	1e848000 	.word	0x1e848000
 8005920:	3d090000 	.word	0x3d090000
 8005924:	7a120000 	.word	0x7a120000
 8005928:	000aaa00 	.word	0x000aaa00
 800592c:	000ccc00 	.word	0x000ccc00
 8005930:	00155500 	.word	0x00155500
 8005934:	f44f 0300 	mov.w	r3, #8388608	; 0x800000
 8005938:	f04f 0400 	mov.w	r4, #0
 800593c:	687a      	ldr	r2, [r7, #4]
 800593e:	6852      	ldr	r2, [r2, #4]
 8005940:	0852      	lsrs	r2, r2, #1
 8005942:	4611      	mov	r1, r2
 8005944:	f04f 0200 	mov.w	r2, #0
 8005948:	eb13 0b01 	adds.w	fp, r3, r1
 800594c:	eb44 0c02 	adc.w	ip, r4, r2
 8005950:	4658      	mov	r0, fp
 8005952:	4661      	mov	r1, ip
 8005954:	687b      	ldr	r3, [r7, #4]
 8005956:	685b      	ldr	r3, [r3, #4]
 8005958:	f04f 0400 	mov.w	r4, #0
 800595c:	461a      	mov	r2, r3
 800595e:	4623      	mov	r3, r4
 8005960:	f7fa fc5a 	bl	8000218 <__aeabi_uldivmod>
 8005964:	4603      	mov	r3, r0
 8005966:	460c      	mov	r4, r1
 8005968:	61fb      	str	r3, [r7, #28]
 800596a:	e002      	b.n	8005972 <UART_SetConfig+0xb3a>
 800596c:	2301      	movs	r3, #1
 800596e:	76fb      	strb	r3, [r7, #27]
 8005970:	bf00      	nop
 8005972:	69fb      	ldr	r3, [r7, #28]
 8005974:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8005978:	d309      	bcc.n	800598e <UART_SetConfig+0xb56>
 800597a:	69fb      	ldr	r3, [r7, #28]
 800597c:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 8005980:	d205      	bcs.n	800598e <UART_SetConfig+0xb56>
 8005982:	687b      	ldr	r3, [r7, #4]
 8005984:	681b      	ldr	r3, [r3, #0]
 8005986:	69fa      	ldr	r2, [r7, #28]
 8005988:	60da      	str	r2, [r3, #12]
 800598a:	f000 bc18 	b.w	80061be <UART_SetConfig+0x1386>
 800598e:	2301      	movs	r3, #1
 8005990:	76fb      	strb	r3, [r7, #27]
 8005992:	f000 bc14 	b.w	80061be <UART_SetConfig+0x1386>
 8005996:	687b      	ldr	r3, [r7, #4]
 8005998:	69db      	ldr	r3, [r3, #28]
 800599a:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 800599e:	f040 8204 	bne.w	8005daa <UART_SetConfig+0xf72>
 80059a2:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
 80059a6:	2b08      	cmp	r3, #8
 80059a8:	f200 81df 	bhi.w	8005d6a <UART_SetConfig+0xf32>
 80059ac:	a201      	add	r2, pc, #4	; (adr r2, 80059b4 <UART_SetConfig+0xb7c>)
 80059ae:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80059b2:	bf00      	nop
 80059b4:	080059d9 	.word	0x080059d9
 80059b8:	08005a91 	.word	0x08005a91
 80059bc:	08005b49 	.word	0x08005b49
 80059c0:	08005d6b 	.word	0x08005d6b
 80059c4:	08005bf1 	.word	0x08005bf1
 80059c8:	08005d6b 	.word	0x08005d6b
 80059cc:	08005d6b 	.word	0x08005d6b
 80059d0:	08005d6b 	.word	0x08005d6b
 80059d4:	08005ca9 	.word	0x08005ca9
 80059d8:	f7fd fad4 	bl	8002f84 <HAL_RCC_GetPCLK1Freq>
 80059dc:	6138      	str	r0, [r7, #16]
 80059de:	687b      	ldr	r3, [r7, #4]
 80059e0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80059e2:	2b00      	cmp	r3, #0
 80059e4:	d044      	beq.n	8005a70 <UART_SetConfig+0xc38>
 80059e6:	687b      	ldr	r3, [r7, #4]
 80059e8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80059ea:	2b01      	cmp	r3, #1
 80059ec:	d03e      	beq.n	8005a6c <UART_SetConfig+0xc34>
 80059ee:	687b      	ldr	r3, [r7, #4]
 80059f0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80059f2:	2b02      	cmp	r3, #2
 80059f4:	d038      	beq.n	8005a68 <UART_SetConfig+0xc30>
 80059f6:	687b      	ldr	r3, [r7, #4]
 80059f8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80059fa:	2b03      	cmp	r3, #3
 80059fc:	d032      	beq.n	8005a64 <UART_SetConfig+0xc2c>
 80059fe:	687b      	ldr	r3, [r7, #4]
 8005a00:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005a02:	2b04      	cmp	r3, #4
 8005a04:	d02c      	beq.n	8005a60 <UART_SetConfig+0xc28>
 8005a06:	687b      	ldr	r3, [r7, #4]
 8005a08:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005a0a:	2b05      	cmp	r3, #5
 8005a0c:	d026      	beq.n	8005a5c <UART_SetConfig+0xc24>
 8005a0e:	687b      	ldr	r3, [r7, #4]
 8005a10:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005a12:	2b06      	cmp	r3, #6
 8005a14:	d020      	beq.n	8005a58 <UART_SetConfig+0xc20>
 8005a16:	687b      	ldr	r3, [r7, #4]
 8005a18:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005a1a:	2b07      	cmp	r3, #7
 8005a1c:	d01a      	beq.n	8005a54 <UART_SetConfig+0xc1c>
 8005a1e:	687b      	ldr	r3, [r7, #4]
 8005a20:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005a22:	2b08      	cmp	r3, #8
 8005a24:	d014      	beq.n	8005a50 <UART_SetConfig+0xc18>
 8005a26:	687b      	ldr	r3, [r7, #4]
 8005a28:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005a2a:	2b09      	cmp	r3, #9
 8005a2c:	d00e      	beq.n	8005a4c <UART_SetConfig+0xc14>
 8005a2e:	687b      	ldr	r3, [r7, #4]
 8005a30:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005a32:	2b0a      	cmp	r3, #10
 8005a34:	d008      	beq.n	8005a48 <UART_SetConfig+0xc10>
 8005a36:	687b      	ldr	r3, [r7, #4]
 8005a38:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005a3a:	2b0b      	cmp	r3, #11
 8005a3c:	d102      	bne.n	8005a44 <UART_SetConfig+0xc0c>
 8005a3e:	f44f 7380 	mov.w	r3, #256	; 0x100
 8005a42:	e016      	b.n	8005a72 <UART_SetConfig+0xc3a>
 8005a44:	2301      	movs	r3, #1
 8005a46:	e014      	b.n	8005a72 <UART_SetConfig+0xc3a>
 8005a48:	2380      	movs	r3, #128	; 0x80
 8005a4a:	e012      	b.n	8005a72 <UART_SetConfig+0xc3a>
 8005a4c:	2340      	movs	r3, #64	; 0x40
 8005a4e:	e010      	b.n	8005a72 <UART_SetConfig+0xc3a>
 8005a50:	2320      	movs	r3, #32
 8005a52:	e00e      	b.n	8005a72 <UART_SetConfig+0xc3a>
 8005a54:	2310      	movs	r3, #16
 8005a56:	e00c      	b.n	8005a72 <UART_SetConfig+0xc3a>
 8005a58:	230c      	movs	r3, #12
 8005a5a:	e00a      	b.n	8005a72 <UART_SetConfig+0xc3a>
 8005a5c:	230a      	movs	r3, #10
 8005a5e:	e008      	b.n	8005a72 <UART_SetConfig+0xc3a>
 8005a60:	2308      	movs	r3, #8
 8005a62:	e006      	b.n	8005a72 <UART_SetConfig+0xc3a>
 8005a64:	2306      	movs	r3, #6
 8005a66:	e004      	b.n	8005a72 <UART_SetConfig+0xc3a>
 8005a68:	2304      	movs	r3, #4
 8005a6a:	e002      	b.n	8005a72 <UART_SetConfig+0xc3a>
 8005a6c:	2302      	movs	r3, #2
 8005a6e:	e000      	b.n	8005a72 <UART_SetConfig+0xc3a>
 8005a70:	2301      	movs	r3, #1
 8005a72:	693a      	ldr	r2, [r7, #16]
 8005a74:	fbb2 f3f3 	udiv	r3, r2, r3
 8005a78:	005a      	lsls	r2, r3, #1
 8005a7a:	687b      	ldr	r3, [r7, #4]
 8005a7c:	685b      	ldr	r3, [r3, #4]
 8005a7e:	085b      	lsrs	r3, r3, #1
 8005a80:	441a      	add	r2, r3
 8005a82:	687b      	ldr	r3, [r7, #4]
 8005a84:	685b      	ldr	r3, [r3, #4]
 8005a86:	fbb2 f3f3 	udiv	r3, r2, r3
 8005a8a:	b29b      	uxth	r3, r3
 8005a8c:	61fb      	str	r3, [r7, #28]
 8005a8e:	e16f      	b.n	8005d70 <UART_SetConfig+0xf38>
 8005a90:	f7fd fa8e 	bl	8002fb0 <HAL_RCC_GetPCLK2Freq>
 8005a94:	6138      	str	r0, [r7, #16]
 8005a96:	687b      	ldr	r3, [r7, #4]
 8005a98:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005a9a:	2b00      	cmp	r3, #0
 8005a9c:	d044      	beq.n	8005b28 <UART_SetConfig+0xcf0>
 8005a9e:	687b      	ldr	r3, [r7, #4]
 8005aa0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005aa2:	2b01      	cmp	r3, #1
 8005aa4:	d03e      	beq.n	8005b24 <UART_SetConfig+0xcec>
 8005aa6:	687b      	ldr	r3, [r7, #4]
 8005aa8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005aaa:	2b02      	cmp	r3, #2
 8005aac:	d038      	beq.n	8005b20 <UART_SetConfig+0xce8>
 8005aae:	687b      	ldr	r3, [r7, #4]
 8005ab0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005ab2:	2b03      	cmp	r3, #3
 8005ab4:	d032      	beq.n	8005b1c <UART_SetConfig+0xce4>
 8005ab6:	687b      	ldr	r3, [r7, #4]
 8005ab8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005aba:	2b04      	cmp	r3, #4
 8005abc:	d02c      	beq.n	8005b18 <UART_SetConfig+0xce0>
 8005abe:	687b      	ldr	r3, [r7, #4]
 8005ac0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005ac2:	2b05      	cmp	r3, #5
 8005ac4:	d026      	beq.n	8005b14 <UART_SetConfig+0xcdc>
 8005ac6:	687b      	ldr	r3, [r7, #4]
 8005ac8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005aca:	2b06      	cmp	r3, #6
 8005acc:	d020      	beq.n	8005b10 <UART_SetConfig+0xcd8>
 8005ace:	687b      	ldr	r3, [r7, #4]
 8005ad0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005ad2:	2b07      	cmp	r3, #7
 8005ad4:	d01a      	beq.n	8005b0c <UART_SetConfig+0xcd4>
 8005ad6:	687b      	ldr	r3, [r7, #4]
 8005ad8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005ada:	2b08      	cmp	r3, #8
 8005adc:	d014      	beq.n	8005b08 <UART_SetConfig+0xcd0>
 8005ade:	687b      	ldr	r3, [r7, #4]
 8005ae0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005ae2:	2b09      	cmp	r3, #9
 8005ae4:	d00e      	beq.n	8005b04 <UART_SetConfig+0xccc>
 8005ae6:	687b      	ldr	r3, [r7, #4]
 8005ae8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005aea:	2b0a      	cmp	r3, #10
 8005aec:	d008      	beq.n	8005b00 <UART_SetConfig+0xcc8>
 8005aee:	687b      	ldr	r3, [r7, #4]
 8005af0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005af2:	2b0b      	cmp	r3, #11
 8005af4:	d102      	bne.n	8005afc <UART_SetConfig+0xcc4>
 8005af6:	f44f 7380 	mov.w	r3, #256	; 0x100
 8005afa:	e016      	b.n	8005b2a <UART_SetConfig+0xcf2>
 8005afc:	2301      	movs	r3, #1
 8005afe:	e014      	b.n	8005b2a <UART_SetConfig+0xcf2>
 8005b00:	2380      	movs	r3, #128	; 0x80
 8005b02:	e012      	b.n	8005b2a <UART_SetConfig+0xcf2>
 8005b04:	2340      	movs	r3, #64	; 0x40
 8005b06:	e010      	b.n	8005b2a <UART_SetConfig+0xcf2>
 8005b08:	2320      	movs	r3, #32
 8005b0a:	e00e      	b.n	8005b2a <UART_SetConfig+0xcf2>
 8005b0c:	2310      	movs	r3, #16
 8005b0e:	e00c      	b.n	8005b2a <UART_SetConfig+0xcf2>
 8005b10:	230c      	movs	r3, #12
 8005b12:	e00a      	b.n	8005b2a <UART_SetConfig+0xcf2>
 8005b14:	230a      	movs	r3, #10
 8005b16:	e008      	b.n	8005b2a <UART_SetConfig+0xcf2>
 8005b18:	2308      	movs	r3, #8
 8005b1a:	e006      	b.n	8005b2a <UART_SetConfig+0xcf2>
 8005b1c:	2306      	movs	r3, #6
 8005b1e:	e004      	b.n	8005b2a <UART_SetConfig+0xcf2>
 8005b20:	2304      	movs	r3, #4
 8005b22:	e002      	b.n	8005b2a <UART_SetConfig+0xcf2>
 8005b24:	2302      	movs	r3, #2
 8005b26:	e000      	b.n	8005b2a <UART_SetConfig+0xcf2>
 8005b28:	2301      	movs	r3, #1
 8005b2a:	693a      	ldr	r2, [r7, #16]
 8005b2c:	fbb2 f3f3 	udiv	r3, r2, r3
 8005b30:	005a      	lsls	r2, r3, #1
 8005b32:	687b      	ldr	r3, [r7, #4]
 8005b34:	685b      	ldr	r3, [r3, #4]
 8005b36:	085b      	lsrs	r3, r3, #1
 8005b38:	441a      	add	r2, r3
 8005b3a:	687b      	ldr	r3, [r7, #4]
 8005b3c:	685b      	ldr	r3, [r3, #4]
 8005b3e:	fbb2 f3f3 	udiv	r3, r2, r3
 8005b42:	b29b      	uxth	r3, r3
 8005b44:	61fb      	str	r3, [r7, #28]
 8005b46:	e113      	b.n	8005d70 <UART_SetConfig+0xf38>
 8005b48:	687b      	ldr	r3, [r7, #4]
 8005b4a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005b4c:	2b00      	cmp	r3, #0
 8005b4e:	d043      	beq.n	8005bd8 <UART_SetConfig+0xda0>
 8005b50:	687b      	ldr	r3, [r7, #4]
 8005b52:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005b54:	2b01      	cmp	r3, #1
 8005b56:	d03d      	beq.n	8005bd4 <UART_SetConfig+0xd9c>
 8005b58:	687b      	ldr	r3, [r7, #4]
 8005b5a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005b5c:	2b02      	cmp	r3, #2
 8005b5e:	d037      	beq.n	8005bd0 <UART_SetConfig+0xd98>
 8005b60:	687b      	ldr	r3, [r7, #4]
 8005b62:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005b64:	2b03      	cmp	r3, #3
 8005b66:	d031      	beq.n	8005bcc <UART_SetConfig+0xd94>
 8005b68:	687b      	ldr	r3, [r7, #4]
 8005b6a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005b6c:	2b04      	cmp	r3, #4
 8005b6e:	d02b      	beq.n	8005bc8 <UART_SetConfig+0xd90>
 8005b70:	687b      	ldr	r3, [r7, #4]
 8005b72:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005b74:	2b05      	cmp	r3, #5
 8005b76:	d025      	beq.n	8005bc4 <UART_SetConfig+0xd8c>
 8005b78:	687b      	ldr	r3, [r7, #4]
 8005b7a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005b7c:	2b06      	cmp	r3, #6
 8005b7e:	d01f      	beq.n	8005bc0 <UART_SetConfig+0xd88>
 8005b80:	687b      	ldr	r3, [r7, #4]
 8005b82:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005b84:	2b07      	cmp	r3, #7
 8005b86:	d019      	beq.n	8005bbc <UART_SetConfig+0xd84>
 8005b88:	687b      	ldr	r3, [r7, #4]
 8005b8a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005b8c:	2b08      	cmp	r3, #8
 8005b8e:	d013      	beq.n	8005bb8 <UART_SetConfig+0xd80>
 8005b90:	687b      	ldr	r3, [r7, #4]
 8005b92:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005b94:	2b09      	cmp	r3, #9
 8005b96:	d00d      	beq.n	8005bb4 <UART_SetConfig+0xd7c>
 8005b98:	687b      	ldr	r3, [r7, #4]
 8005b9a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005b9c:	2b0a      	cmp	r3, #10
 8005b9e:	d007      	beq.n	8005bb0 <UART_SetConfig+0xd78>
 8005ba0:	687b      	ldr	r3, [r7, #4]
 8005ba2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005ba4:	2b0b      	cmp	r3, #11
 8005ba6:	d101      	bne.n	8005bac <UART_SetConfig+0xd74>
 8005ba8:	4b8d      	ldr	r3, [pc, #564]	; (8005de0 <UART_SetConfig+0xfa8>)
 8005baa:	e016      	b.n	8005bda <UART_SetConfig+0xda2>
 8005bac:	4b8d      	ldr	r3, [pc, #564]	; (8005de4 <UART_SetConfig+0xfac>)
 8005bae:	e014      	b.n	8005bda <UART_SetConfig+0xda2>
 8005bb0:	4b8d      	ldr	r3, [pc, #564]	; (8005de8 <UART_SetConfig+0xfb0>)
 8005bb2:	e012      	b.n	8005bda <UART_SetConfig+0xda2>
 8005bb4:	4b8d      	ldr	r3, [pc, #564]	; (8005dec <UART_SetConfig+0xfb4>)
 8005bb6:	e010      	b.n	8005bda <UART_SetConfig+0xda2>
 8005bb8:	4b8d      	ldr	r3, [pc, #564]	; (8005df0 <UART_SetConfig+0xfb8>)
 8005bba:	e00e      	b.n	8005bda <UART_SetConfig+0xda2>
 8005bbc:	4b8d      	ldr	r3, [pc, #564]	; (8005df4 <UART_SetConfig+0xfbc>)
 8005bbe:	e00c      	b.n	8005bda <UART_SetConfig+0xda2>
 8005bc0:	4b8d      	ldr	r3, [pc, #564]	; (8005df8 <UART_SetConfig+0xfc0>)
 8005bc2:	e00a      	b.n	8005bda <UART_SetConfig+0xda2>
 8005bc4:	4b8d      	ldr	r3, [pc, #564]	; (8005dfc <UART_SetConfig+0xfc4>)
 8005bc6:	e008      	b.n	8005bda <UART_SetConfig+0xda2>
 8005bc8:	4b8d      	ldr	r3, [pc, #564]	; (8005e00 <UART_SetConfig+0xfc8>)
 8005bca:	e006      	b.n	8005bda <UART_SetConfig+0xda2>
 8005bcc:	4b8d      	ldr	r3, [pc, #564]	; (8005e04 <UART_SetConfig+0xfcc>)
 8005bce:	e004      	b.n	8005bda <UART_SetConfig+0xda2>
 8005bd0:	4b8d      	ldr	r3, [pc, #564]	; (8005e08 <UART_SetConfig+0xfd0>)
 8005bd2:	e002      	b.n	8005bda <UART_SetConfig+0xda2>
 8005bd4:	4b8d      	ldr	r3, [pc, #564]	; (8005e0c <UART_SetConfig+0xfd4>)
 8005bd6:	e000      	b.n	8005bda <UART_SetConfig+0xda2>
 8005bd8:	4b82      	ldr	r3, [pc, #520]	; (8005de4 <UART_SetConfig+0xfac>)
 8005bda:	687a      	ldr	r2, [r7, #4]
 8005bdc:	6852      	ldr	r2, [r2, #4]
 8005bde:	0852      	lsrs	r2, r2, #1
 8005be0:	441a      	add	r2, r3
 8005be2:	687b      	ldr	r3, [r7, #4]
 8005be4:	685b      	ldr	r3, [r3, #4]
 8005be6:	fbb2 f3f3 	udiv	r3, r2, r3
 8005bea:	b29b      	uxth	r3, r3
 8005bec:	61fb      	str	r3, [r7, #28]
 8005bee:	e0bf      	b.n	8005d70 <UART_SetConfig+0xf38>
 8005bf0:	f7fd f95a 	bl	8002ea8 <HAL_RCC_GetSysClockFreq>
 8005bf4:	6138      	str	r0, [r7, #16]
 8005bf6:	687b      	ldr	r3, [r7, #4]
 8005bf8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005bfa:	2b00      	cmp	r3, #0
 8005bfc:	d044      	beq.n	8005c88 <UART_SetConfig+0xe50>
 8005bfe:	687b      	ldr	r3, [r7, #4]
 8005c00:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005c02:	2b01      	cmp	r3, #1
 8005c04:	d03e      	beq.n	8005c84 <UART_SetConfig+0xe4c>
 8005c06:	687b      	ldr	r3, [r7, #4]
 8005c08:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005c0a:	2b02      	cmp	r3, #2
 8005c0c:	d038      	beq.n	8005c80 <UART_SetConfig+0xe48>
 8005c0e:	687b      	ldr	r3, [r7, #4]
 8005c10:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005c12:	2b03      	cmp	r3, #3
 8005c14:	d032      	beq.n	8005c7c <UART_SetConfig+0xe44>
 8005c16:	687b      	ldr	r3, [r7, #4]
 8005c18:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005c1a:	2b04      	cmp	r3, #4
 8005c1c:	d02c      	beq.n	8005c78 <UART_SetConfig+0xe40>
 8005c1e:	687b      	ldr	r3, [r7, #4]
 8005c20:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005c22:	2b05      	cmp	r3, #5
 8005c24:	d026      	beq.n	8005c74 <UART_SetConfig+0xe3c>
 8005c26:	687b      	ldr	r3, [r7, #4]
 8005c28:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005c2a:	2b06      	cmp	r3, #6
 8005c2c:	d020      	beq.n	8005c70 <UART_SetConfig+0xe38>
 8005c2e:	687b      	ldr	r3, [r7, #4]
 8005c30:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005c32:	2b07      	cmp	r3, #7
 8005c34:	d01a      	beq.n	8005c6c <UART_SetConfig+0xe34>
 8005c36:	687b      	ldr	r3, [r7, #4]
 8005c38:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005c3a:	2b08      	cmp	r3, #8
 8005c3c:	d014      	beq.n	8005c68 <UART_SetConfig+0xe30>
 8005c3e:	687b      	ldr	r3, [r7, #4]
 8005c40:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005c42:	2b09      	cmp	r3, #9
 8005c44:	d00e      	beq.n	8005c64 <UART_SetConfig+0xe2c>
 8005c46:	687b      	ldr	r3, [r7, #4]
 8005c48:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005c4a:	2b0a      	cmp	r3, #10
 8005c4c:	d008      	beq.n	8005c60 <UART_SetConfig+0xe28>
 8005c4e:	687b      	ldr	r3, [r7, #4]
 8005c50:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005c52:	2b0b      	cmp	r3, #11
 8005c54:	d102      	bne.n	8005c5c <UART_SetConfig+0xe24>
 8005c56:	f44f 7380 	mov.w	r3, #256	; 0x100
 8005c5a:	e016      	b.n	8005c8a <UART_SetConfig+0xe52>
 8005c5c:	2301      	movs	r3, #1
 8005c5e:	e014      	b.n	8005c8a <UART_SetConfig+0xe52>
 8005c60:	2380      	movs	r3, #128	; 0x80
 8005c62:	e012      	b.n	8005c8a <UART_SetConfig+0xe52>
 8005c64:	2340      	movs	r3, #64	; 0x40
 8005c66:	e010      	b.n	8005c8a <UART_SetConfig+0xe52>
 8005c68:	2320      	movs	r3, #32
 8005c6a:	e00e      	b.n	8005c8a <UART_SetConfig+0xe52>
 8005c6c:	2310      	movs	r3, #16
 8005c6e:	e00c      	b.n	8005c8a <UART_SetConfig+0xe52>
 8005c70:	230c      	movs	r3, #12
 8005c72:	e00a      	b.n	8005c8a <UART_SetConfig+0xe52>
 8005c74:	230a      	movs	r3, #10
 8005c76:	e008      	b.n	8005c8a <UART_SetConfig+0xe52>
 8005c78:	2308      	movs	r3, #8
 8005c7a:	e006      	b.n	8005c8a <UART_SetConfig+0xe52>
 8005c7c:	2306      	movs	r3, #6
 8005c7e:	e004      	b.n	8005c8a <UART_SetConfig+0xe52>
 8005c80:	2304      	movs	r3, #4
 8005c82:	e002      	b.n	8005c8a <UART_SetConfig+0xe52>
 8005c84:	2302      	movs	r3, #2
 8005c86:	e000      	b.n	8005c8a <UART_SetConfig+0xe52>
 8005c88:	2301      	movs	r3, #1
 8005c8a:	693a      	ldr	r2, [r7, #16]
 8005c8c:	fbb2 f3f3 	udiv	r3, r2, r3
 8005c90:	005a      	lsls	r2, r3, #1
 8005c92:	687b      	ldr	r3, [r7, #4]
 8005c94:	685b      	ldr	r3, [r3, #4]
 8005c96:	085b      	lsrs	r3, r3, #1
 8005c98:	441a      	add	r2, r3
 8005c9a:	687b      	ldr	r3, [r7, #4]
 8005c9c:	685b      	ldr	r3, [r3, #4]
 8005c9e:	fbb2 f3f3 	udiv	r3, r2, r3
 8005ca2:	b29b      	uxth	r3, r3
 8005ca4:	61fb      	str	r3, [r7, #28]
 8005ca6:	e063      	b.n	8005d70 <UART_SetConfig+0xf38>
 8005ca8:	687b      	ldr	r3, [r7, #4]
 8005caa:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005cac:	2b00      	cmp	r3, #0
 8005cae:	d04f      	beq.n	8005d50 <UART_SetConfig+0xf18>
 8005cb0:	687b      	ldr	r3, [r7, #4]
 8005cb2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005cb4:	2b01      	cmp	r3, #1
 8005cb6:	d048      	beq.n	8005d4a <UART_SetConfig+0xf12>
 8005cb8:	687b      	ldr	r3, [r7, #4]
 8005cba:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005cbc:	2b02      	cmp	r3, #2
 8005cbe:	d041      	beq.n	8005d44 <UART_SetConfig+0xf0c>
 8005cc0:	687b      	ldr	r3, [r7, #4]
 8005cc2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005cc4:	2b03      	cmp	r3, #3
 8005cc6:	d03a      	beq.n	8005d3e <UART_SetConfig+0xf06>
 8005cc8:	687b      	ldr	r3, [r7, #4]
 8005cca:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005ccc:	2b04      	cmp	r3, #4
 8005cce:	d033      	beq.n	8005d38 <UART_SetConfig+0xf00>
 8005cd0:	687b      	ldr	r3, [r7, #4]
 8005cd2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005cd4:	2b05      	cmp	r3, #5
 8005cd6:	d02c      	beq.n	8005d32 <UART_SetConfig+0xefa>
 8005cd8:	687b      	ldr	r3, [r7, #4]
 8005cda:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005cdc:	2b06      	cmp	r3, #6
 8005cde:	d025      	beq.n	8005d2c <UART_SetConfig+0xef4>
 8005ce0:	687b      	ldr	r3, [r7, #4]
 8005ce2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005ce4:	2b07      	cmp	r3, #7
 8005ce6:	d01e      	beq.n	8005d26 <UART_SetConfig+0xeee>
 8005ce8:	687b      	ldr	r3, [r7, #4]
 8005cea:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005cec:	2b08      	cmp	r3, #8
 8005cee:	d017      	beq.n	8005d20 <UART_SetConfig+0xee8>
 8005cf0:	687b      	ldr	r3, [r7, #4]
 8005cf2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005cf4:	2b09      	cmp	r3, #9
 8005cf6:	d010      	beq.n	8005d1a <UART_SetConfig+0xee2>
 8005cf8:	687b      	ldr	r3, [r7, #4]
 8005cfa:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005cfc:	2b0a      	cmp	r3, #10
 8005cfe:	d009      	beq.n	8005d14 <UART_SetConfig+0xedc>
 8005d00:	687b      	ldr	r3, [r7, #4]
 8005d02:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005d04:	2b0b      	cmp	r3, #11
 8005d06:	d102      	bne.n	8005d0e <UART_SetConfig+0xed6>
 8005d08:	f44f 7380 	mov.w	r3, #256	; 0x100
 8005d0c:	e022      	b.n	8005d54 <UART_SetConfig+0xf1c>
 8005d0e:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8005d12:	e01f      	b.n	8005d54 <UART_SetConfig+0xf1c>
 8005d14:	f44f 7300 	mov.w	r3, #512	; 0x200
 8005d18:	e01c      	b.n	8005d54 <UART_SetConfig+0xf1c>
 8005d1a:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8005d1e:	e019      	b.n	8005d54 <UART_SetConfig+0xf1c>
 8005d20:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8005d24:	e016      	b.n	8005d54 <UART_SetConfig+0xf1c>
 8005d26:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8005d2a:	e013      	b.n	8005d54 <UART_SetConfig+0xf1c>
 8005d2c:	f241 5354 	movw	r3, #5460	; 0x1554
 8005d30:	e010      	b.n	8005d54 <UART_SetConfig+0xf1c>
 8005d32:	f641 1398 	movw	r3, #6552	; 0x1998
 8005d36:	e00d      	b.n	8005d54 <UART_SetConfig+0xf1c>
 8005d38:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8005d3c:	e00a      	b.n	8005d54 <UART_SetConfig+0xf1c>
 8005d3e:	f642 23aa 	movw	r3, #10922	; 0x2aaa
 8005d42:	e007      	b.n	8005d54 <UART_SetConfig+0xf1c>
 8005d44:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 8005d48:	e004      	b.n	8005d54 <UART_SetConfig+0xf1c>
 8005d4a:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8005d4e:	e001      	b.n	8005d54 <UART_SetConfig+0xf1c>
 8005d50:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8005d54:	687a      	ldr	r2, [r7, #4]
 8005d56:	6852      	ldr	r2, [r2, #4]
 8005d58:	0852      	lsrs	r2, r2, #1
 8005d5a:	441a      	add	r2, r3
 8005d5c:	687b      	ldr	r3, [r7, #4]
 8005d5e:	685b      	ldr	r3, [r3, #4]
 8005d60:	fbb2 f3f3 	udiv	r3, r2, r3
 8005d64:	b29b      	uxth	r3, r3
 8005d66:	61fb      	str	r3, [r7, #28]
 8005d68:	e002      	b.n	8005d70 <UART_SetConfig+0xf38>
 8005d6a:	2301      	movs	r3, #1
 8005d6c:	76fb      	strb	r3, [r7, #27]
 8005d6e:	bf00      	nop
 8005d70:	69fb      	ldr	r3, [r7, #28]
 8005d72:	2b0f      	cmp	r3, #15
 8005d74:	d916      	bls.n	8005da4 <UART_SetConfig+0xf6c>
 8005d76:	69fb      	ldr	r3, [r7, #28]
 8005d78:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8005d7c:	d212      	bcs.n	8005da4 <UART_SetConfig+0xf6c>
 8005d7e:	69fb      	ldr	r3, [r7, #28]
 8005d80:	b29b      	uxth	r3, r3
 8005d82:	f023 030f 	bic.w	r3, r3, #15
 8005d86:	81fb      	strh	r3, [r7, #14]
 8005d88:	69fb      	ldr	r3, [r7, #28]
 8005d8a:	085b      	lsrs	r3, r3, #1
 8005d8c:	b29b      	uxth	r3, r3
 8005d8e:	f003 0307 	and.w	r3, r3, #7
 8005d92:	b29a      	uxth	r2, r3
 8005d94:	89fb      	ldrh	r3, [r7, #14]
 8005d96:	4313      	orrs	r3, r2
 8005d98:	81fb      	strh	r3, [r7, #14]
 8005d9a:	687b      	ldr	r3, [r7, #4]
 8005d9c:	681b      	ldr	r3, [r3, #0]
 8005d9e:	89fa      	ldrh	r2, [r7, #14]
 8005da0:	60da      	str	r2, [r3, #12]
 8005da2:	e20c      	b.n	80061be <UART_SetConfig+0x1386>
 8005da4:	2301      	movs	r3, #1
 8005da6:	76fb      	strb	r3, [r7, #27]
 8005da8:	e209      	b.n	80061be <UART_SetConfig+0x1386>
 8005daa:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
 8005dae:	2b08      	cmp	r3, #8
 8005db0:	f200 81f4 	bhi.w	800619c <UART_SetConfig+0x1364>
 8005db4:	a201      	add	r2, pc, #4	; (adr r2, 8005dbc <UART_SetConfig+0xf84>)
 8005db6:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8005dba:	bf00      	nop
 8005dbc:	08005e11 	.word	0x08005e11
 8005dc0:	08005ec7 	.word	0x08005ec7
 8005dc4:	08005f7d 	.word	0x08005f7d
 8005dc8:	0800619d 	.word	0x0800619d
 8005dcc:	08006027 	.word	0x08006027
 8005dd0:	0800619d 	.word	0x0800619d
 8005dd4:	0800619d 	.word	0x0800619d
 8005dd8:	0800619d 	.word	0x0800619d
 8005ddc:	080060dd 	.word	0x080060dd
 8005de0:	0001e848 	.word	0x0001e848
 8005de4:	01e84800 	.word	0x01e84800
 8005de8:	0003d090 	.word	0x0003d090
 8005dec:	0007a120 	.word	0x0007a120
 8005df0:	000f4240 	.word	0x000f4240
 8005df4:	001e8480 	.word	0x001e8480
 8005df8:	0028b0aa 	.word	0x0028b0aa
 8005dfc:	0030d400 	.word	0x0030d400
 8005e00:	003d0900 	.word	0x003d0900
 8005e04:	00516154 	.word	0x00516154
 8005e08:	007a1200 	.word	0x007a1200
 8005e0c:	00f42400 	.word	0x00f42400
 8005e10:	f7fd f8b8 	bl	8002f84 <HAL_RCC_GetPCLK1Freq>
 8005e14:	6138      	str	r0, [r7, #16]
 8005e16:	687b      	ldr	r3, [r7, #4]
 8005e18:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005e1a:	2b00      	cmp	r3, #0
 8005e1c:	d044      	beq.n	8005ea8 <UART_SetConfig+0x1070>
 8005e1e:	687b      	ldr	r3, [r7, #4]
 8005e20:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005e22:	2b01      	cmp	r3, #1
 8005e24:	d03e      	beq.n	8005ea4 <UART_SetConfig+0x106c>
 8005e26:	687b      	ldr	r3, [r7, #4]
 8005e28:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005e2a:	2b02      	cmp	r3, #2
 8005e2c:	d038      	beq.n	8005ea0 <UART_SetConfig+0x1068>
 8005e2e:	687b      	ldr	r3, [r7, #4]
 8005e30:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005e32:	2b03      	cmp	r3, #3
 8005e34:	d032      	beq.n	8005e9c <UART_SetConfig+0x1064>
 8005e36:	687b      	ldr	r3, [r7, #4]
 8005e38:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005e3a:	2b04      	cmp	r3, #4
 8005e3c:	d02c      	beq.n	8005e98 <UART_SetConfig+0x1060>
 8005e3e:	687b      	ldr	r3, [r7, #4]
 8005e40:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005e42:	2b05      	cmp	r3, #5
 8005e44:	d026      	beq.n	8005e94 <UART_SetConfig+0x105c>
 8005e46:	687b      	ldr	r3, [r7, #4]
 8005e48:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005e4a:	2b06      	cmp	r3, #6
 8005e4c:	d020      	beq.n	8005e90 <UART_SetConfig+0x1058>
 8005e4e:	687b      	ldr	r3, [r7, #4]
 8005e50:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005e52:	2b07      	cmp	r3, #7
 8005e54:	d01a      	beq.n	8005e8c <UART_SetConfig+0x1054>
 8005e56:	687b      	ldr	r3, [r7, #4]
 8005e58:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005e5a:	2b08      	cmp	r3, #8
 8005e5c:	d014      	beq.n	8005e88 <UART_SetConfig+0x1050>
 8005e5e:	687b      	ldr	r3, [r7, #4]
 8005e60:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005e62:	2b09      	cmp	r3, #9
 8005e64:	d00e      	beq.n	8005e84 <UART_SetConfig+0x104c>
 8005e66:	687b      	ldr	r3, [r7, #4]
 8005e68:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005e6a:	2b0a      	cmp	r3, #10
 8005e6c:	d008      	beq.n	8005e80 <UART_SetConfig+0x1048>
 8005e6e:	687b      	ldr	r3, [r7, #4]
 8005e70:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005e72:	2b0b      	cmp	r3, #11
 8005e74:	d102      	bne.n	8005e7c <UART_SetConfig+0x1044>
 8005e76:	f44f 7380 	mov.w	r3, #256	; 0x100
 8005e7a:	e016      	b.n	8005eaa <UART_SetConfig+0x1072>
 8005e7c:	2301      	movs	r3, #1
 8005e7e:	e014      	b.n	8005eaa <UART_SetConfig+0x1072>
 8005e80:	2380      	movs	r3, #128	; 0x80
 8005e82:	e012      	b.n	8005eaa <UART_SetConfig+0x1072>
 8005e84:	2340      	movs	r3, #64	; 0x40
 8005e86:	e010      	b.n	8005eaa <UART_SetConfig+0x1072>
 8005e88:	2320      	movs	r3, #32
 8005e8a:	e00e      	b.n	8005eaa <UART_SetConfig+0x1072>
 8005e8c:	2310      	movs	r3, #16
 8005e8e:	e00c      	b.n	8005eaa <UART_SetConfig+0x1072>
 8005e90:	230c      	movs	r3, #12
 8005e92:	e00a      	b.n	8005eaa <UART_SetConfig+0x1072>
 8005e94:	230a      	movs	r3, #10
 8005e96:	e008      	b.n	8005eaa <UART_SetConfig+0x1072>
 8005e98:	2308      	movs	r3, #8
 8005e9a:	e006      	b.n	8005eaa <UART_SetConfig+0x1072>
 8005e9c:	2306      	movs	r3, #6
 8005e9e:	e004      	b.n	8005eaa <UART_SetConfig+0x1072>
 8005ea0:	2304      	movs	r3, #4
 8005ea2:	e002      	b.n	8005eaa <UART_SetConfig+0x1072>
 8005ea4:	2302      	movs	r3, #2
 8005ea6:	e000      	b.n	8005eaa <UART_SetConfig+0x1072>
 8005ea8:	2301      	movs	r3, #1
 8005eaa:	693a      	ldr	r2, [r7, #16]
 8005eac:	fbb2 f2f3 	udiv	r2, r2, r3
 8005eb0:	687b      	ldr	r3, [r7, #4]
 8005eb2:	685b      	ldr	r3, [r3, #4]
 8005eb4:	085b      	lsrs	r3, r3, #1
 8005eb6:	441a      	add	r2, r3
 8005eb8:	687b      	ldr	r3, [r7, #4]
 8005eba:	685b      	ldr	r3, [r3, #4]
 8005ebc:	fbb2 f3f3 	udiv	r3, r2, r3
 8005ec0:	b29b      	uxth	r3, r3
 8005ec2:	61fb      	str	r3, [r7, #28]
 8005ec4:	e16d      	b.n	80061a2 <UART_SetConfig+0x136a>
 8005ec6:	f7fd f873 	bl	8002fb0 <HAL_RCC_GetPCLK2Freq>
 8005eca:	6138      	str	r0, [r7, #16]
 8005ecc:	687b      	ldr	r3, [r7, #4]
 8005ece:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005ed0:	2b00      	cmp	r3, #0
 8005ed2:	d044      	beq.n	8005f5e <UART_SetConfig+0x1126>
 8005ed4:	687b      	ldr	r3, [r7, #4]
 8005ed6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005ed8:	2b01      	cmp	r3, #1
 8005eda:	d03e      	beq.n	8005f5a <UART_SetConfig+0x1122>
 8005edc:	687b      	ldr	r3, [r7, #4]
 8005ede:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005ee0:	2b02      	cmp	r3, #2
 8005ee2:	d038      	beq.n	8005f56 <UART_SetConfig+0x111e>
 8005ee4:	687b      	ldr	r3, [r7, #4]
 8005ee6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005ee8:	2b03      	cmp	r3, #3
 8005eea:	d032      	beq.n	8005f52 <UART_SetConfig+0x111a>
 8005eec:	687b      	ldr	r3, [r7, #4]
 8005eee:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005ef0:	2b04      	cmp	r3, #4
 8005ef2:	d02c      	beq.n	8005f4e <UART_SetConfig+0x1116>
 8005ef4:	687b      	ldr	r3, [r7, #4]
 8005ef6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005ef8:	2b05      	cmp	r3, #5
 8005efa:	d026      	beq.n	8005f4a <UART_SetConfig+0x1112>
 8005efc:	687b      	ldr	r3, [r7, #4]
 8005efe:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005f00:	2b06      	cmp	r3, #6
 8005f02:	d020      	beq.n	8005f46 <UART_SetConfig+0x110e>
 8005f04:	687b      	ldr	r3, [r7, #4]
 8005f06:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005f08:	2b07      	cmp	r3, #7
 8005f0a:	d01a      	beq.n	8005f42 <UART_SetConfig+0x110a>
 8005f0c:	687b      	ldr	r3, [r7, #4]
 8005f0e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005f10:	2b08      	cmp	r3, #8
 8005f12:	d014      	beq.n	8005f3e <UART_SetConfig+0x1106>
 8005f14:	687b      	ldr	r3, [r7, #4]
 8005f16:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005f18:	2b09      	cmp	r3, #9
 8005f1a:	d00e      	beq.n	8005f3a <UART_SetConfig+0x1102>
 8005f1c:	687b      	ldr	r3, [r7, #4]
 8005f1e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005f20:	2b0a      	cmp	r3, #10
 8005f22:	d008      	beq.n	8005f36 <UART_SetConfig+0x10fe>
 8005f24:	687b      	ldr	r3, [r7, #4]
 8005f26:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005f28:	2b0b      	cmp	r3, #11
 8005f2a:	d102      	bne.n	8005f32 <UART_SetConfig+0x10fa>
 8005f2c:	f44f 7380 	mov.w	r3, #256	; 0x100
 8005f30:	e016      	b.n	8005f60 <UART_SetConfig+0x1128>
 8005f32:	2301      	movs	r3, #1
 8005f34:	e014      	b.n	8005f60 <UART_SetConfig+0x1128>
 8005f36:	2380      	movs	r3, #128	; 0x80
 8005f38:	e012      	b.n	8005f60 <UART_SetConfig+0x1128>
 8005f3a:	2340      	movs	r3, #64	; 0x40
 8005f3c:	e010      	b.n	8005f60 <UART_SetConfig+0x1128>
 8005f3e:	2320      	movs	r3, #32
 8005f40:	e00e      	b.n	8005f60 <UART_SetConfig+0x1128>
 8005f42:	2310      	movs	r3, #16
 8005f44:	e00c      	b.n	8005f60 <UART_SetConfig+0x1128>
 8005f46:	230c      	movs	r3, #12
 8005f48:	e00a      	b.n	8005f60 <UART_SetConfig+0x1128>
 8005f4a:	230a      	movs	r3, #10
 8005f4c:	e008      	b.n	8005f60 <UART_SetConfig+0x1128>
 8005f4e:	2308      	movs	r3, #8
 8005f50:	e006      	b.n	8005f60 <UART_SetConfig+0x1128>
 8005f52:	2306      	movs	r3, #6
 8005f54:	e004      	b.n	8005f60 <UART_SetConfig+0x1128>
 8005f56:	2304      	movs	r3, #4
 8005f58:	e002      	b.n	8005f60 <UART_SetConfig+0x1128>
 8005f5a:	2302      	movs	r3, #2
 8005f5c:	e000      	b.n	8005f60 <UART_SetConfig+0x1128>
 8005f5e:	2301      	movs	r3, #1
 8005f60:	693a      	ldr	r2, [r7, #16]
 8005f62:	fbb2 f2f3 	udiv	r2, r2, r3
 8005f66:	687b      	ldr	r3, [r7, #4]
 8005f68:	685b      	ldr	r3, [r3, #4]
 8005f6a:	085b      	lsrs	r3, r3, #1
 8005f6c:	441a      	add	r2, r3
 8005f6e:	687b      	ldr	r3, [r7, #4]
 8005f70:	685b      	ldr	r3, [r3, #4]
 8005f72:	fbb2 f3f3 	udiv	r3, r2, r3
 8005f76:	b29b      	uxth	r3, r3
 8005f78:	61fb      	str	r3, [r7, #28]
 8005f7a:	e112      	b.n	80061a2 <UART_SetConfig+0x136a>
 8005f7c:	687b      	ldr	r3, [r7, #4]
 8005f7e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005f80:	2b00      	cmp	r3, #0
 8005f82:	d044      	beq.n	800600e <UART_SetConfig+0x11d6>
 8005f84:	687b      	ldr	r3, [r7, #4]
 8005f86:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005f88:	2b01      	cmp	r3, #1
 8005f8a:	d03e      	beq.n	800600a <UART_SetConfig+0x11d2>
 8005f8c:	687b      	ldr	r3, [r7, #4]
 8005f8e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005f90:	2b02      	cmp	r3, #2
 8005f92:	d038      	beq.n	8006006 <UART_SetConfig+0x11ce>
 8005f94:	687b      	ldr	r3, [r7, #4]
 8005f96:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005f98:	2b03      	cmp	r3, #3
 8005f9a:	d032      	beq.n	8006002 <UART_SetConfig+0x11ca>
 8005f9c:	687b      	ldr	r3, [r7, #4]
 8005f9e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005fa0:	2b04      	cmp	r3, #4
 8005fa2:	d02c      	beq.n	8005ffe <UART_SetConfig+0x11c6>
 8005fa4:	687b      	ldr	r3, [r7, #4]
 8005fa6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005fa8:	2b05      	cmp	r3, #5
 8005faa:	d026      	beq.n	8005ffa <UART_SetConfig+0x11c2>
 8005fac:	687b      	ldr	r3, [r7, #4]
 8005fae:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005fb0:	2b06      	cmp	r3, #6
 8005fb2:	d020      	beq.n	8005ff6 <UART_SetConfig+0x11be>
 8005fb4:	687b      	ldr	r3, [r7, #4]
 8005fb6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005fb8:	2b07      	cmp	r3, #7
 8005fba:	d01a      	beq.n	8005ff2 <UART_SetConfig+0x11ba>
 8005fbc:	687b      	ldr	r3, [r7, #4]
 8005fbe:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005fc0:	2b08      	cmp	r3, #8
 8005fc2:	d014      	beq.n	8005fee <UART_SetConfig+0x11b6>
 8005fc4:	687b      	ldr	r3, [r7, #4]
 8005fc6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005fc8:	2b09      	cmp	r3, #9
 8005fca:	d00e      	beq.n	8005fea <UART_SetConfig+0x11b2>
 8005fcc:	687b      	ldr	r3, [r7, #4]
 8005fce:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005fd0:	2b0a      	cmp	r3, #10
 8005fd2:	d008      	beq.n	8005fe6 <UART_SetConfig+0x11ae>
 8005fd4:	687b      	ldr	r3, [r7, #4]
 8005fd6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005fd8:	2b0b      	cmp	r3, #11
 8005fda:	d102      	bne.n	8005fe2 <UART_SetConfig+0x11aa>
 8005fdc:	f24f 4324 	movw	r3, #62500	; 0xf424
 8005fe0:	e016      	b.n	8006010 <UART_SetConfig+0x11d8>
 8005fe2:	4b81      	ldr	r3, [pc, #516]	; (80061e8 <UART_SetConfig+0x13b0>)
 8005fe4:	e014      	b.n	8006010 <UART_SetConfig+0x11d8>
 8005fe6:	4b81      	ldr	r3, [pc, #516]	; (80061ec <UART_SetConfig+0x13b4>)
 8005fe8:	e012      	b.n	8006010 <UART_SetConfig+0x11d8>
 8005fea:	4b81      	ldr	r3, [pc, #516]	; (80061f0 <UART_SetConfig+0x13b8>)
 8005fec:	e010      	b.n	8006010 <UART_SetConfig+0x11d8>
 8005fee:	4b81      	ldr	r3, [pc, #516]	; (80061f4 <UART_SetConfig+0x13bc>)
 8005ff0:	e00e      	b.n	8006010 <UART_SetConfig+0x11d8>
 8005ff2:	4b81      	ldr	r3, [pc, #516]	; (80061f8 <UART_SetConfig+0x13c0>)
 8005ff4:	e00c      	b.n	8006010 <UART_SetConfig+0x11d8>
 8005ff6:	4b81      	ldr	r3, [pc, #516]	; (80061fc <UART_SetConfig+0x13c4>)
 8005ff8:	e00a      	b.n	8006010 <UART_SetConfig+0x11d8>
 8005ffa:	4b81      	ldr	r3, [pc, #516]	; (8006200 <UART_SetConfig+0x13c8>)
 8005ffc:	e008      	b.n	8006010 <UART_SetConfig+0x11d8>
 8005ffe:	4b81      	ldr	r3, [pc, #516]	; (8006204 <UART_SetConfig+0x13cc>)
 8006000:	e006      	b.n	8006010 <UART_SetConfig+0x11d8>
 8006002:	4b81      	ldr	r3, [pc, #516]	; (8006208 <UART_SetConfig+0x13d0>)
 8006004:	e004      	b.n	8006010 <UART_SetConfig+0x11d8>
 8006006:	4b81      	ldr	r3, [pc, #516]	; (800620c <UART_SetConfig+0x13d4>)
 8006008:	e002      	b.n	8006010 <UART_SetConfig+0x11d8>
 800600a:	4b81      	ldr	r3, [pc, #516]	; (8006210 <UART_SetConfig+0x13d8>)
 800600c:	e000      	b.n	8006010 <UART_SetConfig+0x11d8>
 800600e:	4b76      	ldr	r3, [pc, #472]	; (80061e8 <UART_SetConfig+0x13b0>)
 8006010:	687a      	ldr	r2, [r7, #4]
 8006012:	6852      	ldr	r2, [r2, #4]
 8006014:	0852      	lsrs	r2, r2, #1
 8006016:	441a      	add	r2, r3
 8006018:	687b      	ldr	r3, [r7, #4]
 800601a:	685b      	ldr	r3, [r3, #4]
 800601c:	fbb2 f3f3 	udiv	r3, r2, r3
 8006020:	b29b      	uxth	r3, r3
 8006022:	61fb      	str	r3, [r7, #28]
 8006024:	e0bd      	b.n	80061a2 <UART_SetConfig+0x136a>
 8006026:	f7fc ff3f 	bl	8002ea8 <HAL_RCC_GetSysClockFreq>
 800602a:	6138      	str	r0, [r7, #16]
 800602c:	687b      	ldr	r3, [r7, #4]
 800602e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006030:	2b00      	cmp	r3, #0
 8006032:	d044      	beq.n	80060be <UART_SetConfig+0x1286>
 8006034:	687b      	ldr	r3, [r7, #4]
 8006036:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006038:	2b01      	cmp	r3, #1
 800603a:	d03e      	beq.n	80060ba <UART_SetConfig+0x1282>
 800603c:	687b      	ldr	r3, [r7, #4]
 800603e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006040:	2b02      	cmp	r3, #2
 8006042:	d038      	beq.n	80060b6 <UART_SetConfig+0x127e>
 8006044:	687b      	ldr	r3, [r7, #4]
 8006046:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006048:	2b03      	cmp	r3, #3
 800604a:	d032      	beq.n	80060b2 <UART_SetConfig+0x127a>
 800604c:	687b      	ldr	r3, [r7, #4]
 800604e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006050:	2b04      	cmp	r3, #4
 8006052:	d02c      	beq.n	80060ae <UART_SetConfig+0x1276>
 8006054:	687b      	ldr	r3, [r7, #4]
 8006056:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006058:	2b05      	cmp	r3, #5
 800605a:	d026      	beq.n	80060aa <UART_SetConfig+0x1272>
 800605c:	687b      	ldr	r3, [r7, #4]
 800605e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006060:	2b06      	cmp	r3, #6
 8006062:	d020      	beq.n	80060a6 <UART_SetConfig+0x126e>
 8006064:	687b      	ldr	r3, [r7, #4]
 8006066:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006068:	2b07      	cmp	r3, #7
 800606a:	d01a      	beq.n	80060a2 <UART_SetConfig+0x126a>
 800606c:	687b      	ldr	r3, [r7, #4]
 800606e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006070:	2b08      	cmp	r3, #8
 8006072:	d014      	beq.n	800609e <UART_SetConfig+0x1266>
 8006074:	687b      	ldr	r3, [r7, #4]
 8006076:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006078:	2b09      	cmp	r3, #9
 800607a:	d00e      	beq.n	800609a <UART_SetConfig+0x1262>
 800607c:	687b      	ldr	r3, [r7, #4]
 800607e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006080:	2b0a      	cmp	r3, #10
 8006082:	d008      	beq.n	8006096 <UART_SetConfig+0x125e>
 8006084:	687b      	ldr	r3, [r7, #4]
 8006086:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006088:	2b0b      	cmp	r3, #11
 800608a:	d102      	bne.n	8006092 <UART_SetConfig+0x125a>
 800608c:	f44f 7380 	mov.w	r3, #256	; 0x100
 8006090:	e016      	b.n	80060c0 <UART_SetConfig+0x1288>
 8006092:	2301      	movs	r3, #1
 8006094:	e014      	b.n	80060c0 <UART_SetConfig+0x1288>
 8006096:	2380      	movs	r3, #128	; 0x80
 8006098:	e012      	b.n	80060c0 <UART_SetConfig+0x1288>
 800609a:	2340      	movs	r3, #64	; 0x40
 800609c:	e010      	b.n	80060c0 <UART_SetConfig+0x1288>
 800609e:	2320      	movs	r3, #32
 80060a0:	e00e      	b.n	80060c0 <UART_SetConfig+0x1288>
 80060a2:	2310      	movs	r3, #16
 80060a4:	e00c      	b.n	80060c0 <UART_SetConfig+0x1288>
 80060a6:	230c      	movs	r3, #12
 80060a8:	e00a      	b.n	80060c0 <UART_SetConfig+0x1288>
 80060aa:	230a      	movs	r3, #10
 80060ac:	e008      	b.n	80060c0 <UART_SetConfig+0x1288>
 80060ae:	2308      	movs	r3, #8
 80060b0:	e006      	b.n	80060c0 <UART_SetConfig+0x1288>
 80060b2:	2306      	movs	r3, #6
 80060b4:	e004      	b.n	80060c0 <UART_SetConfig+0x1288>
 80060b6:	2304      	movs	r3, #4
 80060b8:	e002      	b.n	80060c0 <UART_SetConfig+0x1288>
 80060ba:	2302      	movs	r3, #2
 80060bc:	e000      	b.n	80060c0 <UART_SetConfig+0x1288>
 80060be:	2301      	movs	r3, #1
 80060c0:	693a      	ldr	r2, [r7, #16]
 80060c2:	fbb2 f2f3 	udiv	r2, r2, r3
 80060c6:	687b      	ldr	r3, [r7, #4]
 80060c8:	685b      	ldr	r3, [r3, #4]
 80060ca:	085b      	lsrs	r3, r3, #1
 80060cc:	441a      	add	r2, r3
 80060ce:	687b      	ldr	r3, [r7, #4]
 80060d0:	685b      	ldr	r3, [r3, #4]
 80060d2:	fbb2 f3f3 	udiv	r3, r2, r3
 80060d6:	b29b      	uxth	r3, r3
 80060d8:	61fb      	str	r3, [r7, #28]
 80060da:	e062      	b.n	80061a2 <UART_SetConfig+0x136a>
 80060dc:	687b      	ldr	r3, [r7, #4]
 80060de:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80060e0:	2b00      	cmp	r3, #0
 80060e2:	d04e      	beq.n	8006182 <UART_SetConfig+0x134a>
 80060e4:	687b      	ldr	r3, [r7, #4]
 80060e6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80060e8:	2b01      	cmp	r3, #1
 80060ea:	d047      	beq.n	800617c <UART_SetConfig+0x1344>
 80060ec:	687b      	ldr	r3, [r7, #4]
 80060ee:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80060f0:	2b02      	cmp	r3, #2
 80060f2:	d040      	beq.n	8006176 <UART_SetConfig+0x133e>
 80060f4:	687b      	ldr	r3, [r7, #4]
 80060f6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80060f8:	2b03      	cmp	r3, #3
 80060fa:	d039      	beq.n	8006170 <UART_SetConfig+0x1338>
 80060fc:	687b      	ldr	r3, [r7, #4]
 80060fe:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006100:	2b04      	cmp	r3, #4
 8006102:	d032      	beq.n	800616a <UART_SetConfig+0x1332>
 8006104:	687b      	ldr	r3, [r7, #4]
 8006106:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006108:	2b05      	cmp	r3, #5
 800610a:	d02b      	beq.n	8006164 <UART_SetConfig+0x132c>
 800610c:	687b      	ldr	r3, [r7, #4]
 800610e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006110:	2b06      	cmp	r3, #6
 8006112:	d024      	beq.n	800615e <UART_SetConfig+0x1326>
 8006114:	687b      	ldr	r3, [r7, #4]
 8006116:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006118:	2b07      	cmp	r3, #7
 800611a:	d01d      	beq.n	8006158 <UART_SetConfig+0x1320>
 800611c:	687b      	ldr	r3, [r7, #4]
 800611e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006120:	2b08      	cmp	r3, #8
 8006122:	d016      	beq.n	8006152 <UART_SetConfig+0x131a>
 8006124:	687b      	ldr	r3, [r7, #4]
 8006126:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006128:	2b09      	cmp	r3, #9
 800612a:	d00f      	beq.n	800614c <UART_SetConfig+0x1314>
 800612c:	687b      	ldr	r3, [r7, #4]
 800612e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006130:	2b0a      	cmp	r3, #10
 8006132:	d008      	beq.n	8006146 <UART_SetConfig+0x130e>
 8006134:	687b      	ldr	r3, [r7, #4]
 8006136:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006138:	2b0b      	cmp	r3, #11
 800613a:	d101      	bne.n	8006140 <UART_SetConfig+0x1308>
 800613c:	2380      	movs	r3, #128	; 0x80
 800613e:	e022      	b.n	8006186 <UART_SetConfig+0x134e>
 8006140:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8006144:	e01f      	b.n	8006186 <UART_SetConfig+0x134e>
 8006146:	f44f 7380 	mov.w	r3, #256	; 0x100
 800614a:	e01c      	b.n	8006186 <UART_SetConfig+0x134e>
 800614c:	f44f 7300 	mov.w	r3, #512	; 0x200
 8006150:	e019      	b.n	8006186 <UART_SetConfig+0x134e>
 8006152:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8006156:	e016      	b.n	8006186 <UART_SetConfig+0x134e>
 8006158:	f44f 6300 	mov.w	r3, #2048	; 0x800
 800615c:	e013      	b.n	8006186 <UART_SetConfig+0x134e>
 800615e:	f640 23aa 	movw	r3, #2730	; 0xaaa
 8006162:	e010      	b.n	8006186 <UART_SetConfig+0x134e>
 8006164:	f640 43cc 	movw	r3, #3276	; 0xccc
 8006168:	e00d      	b.n	8006186 <UART_SetConfig+0x134e>
 800616a:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 800616e:	e00a      	b.n	8006186 <UART_SetConfig+0x134e>
 8006170:	f241 5355 	movw	r3, #5461	; 0x1555
 8006174:	e007      	b.n	8006186 <UART_SetConfig+0x134e>
 8006176:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 800617a:	e004      	b.n	8006186 <UART_SetConfig+0x134e>
 800617c:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 8006180:	e001      	b.n	8006186 <UART_SetConfig+0x134e>
 8006182:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8006186:	687a      	ldr	r2, [r7, #4]
 8006188:	6852      	ldr	r2, [r2, #4]
 800618a:	0852      	lsrs	r2, r2, #1
 800618c:	441a      	add	r2, r3
 800618e:	687b      	ldr	r3, [r7, #4]
 8006190:	685b      	ldr	r3, [r3, #4]
 8006192:	fbb2 f3f3 	udiv	r3, r2, r3
 8006196:	b29b      	uxth	r3, r3
 8006198:	61fb      	str	r3, [r7, #28]
 800619a:	e002      	b.n	80061a2 <UART_SetConfig+0x136a>
 800619c:	2301      	movs	r3, #1
 800619e:	76fb      	strb	r3, [r7, #27]
 80061a0:	bf00      	nop
 80061a2:	69fb      	ldr	r3, [r7, #28]
 80061a4:	2b0f      	cmp	r3, #15
 80061a6:	d908      	bls.n	80061ba <UART_SetConfig+0x1382>
 80061a8:	69fb      	ldr	r3, [r7, #28]
 80061aa:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80061ae:	d204      	bcs.n	80061ba <UART_SetConfig+0x1382>
 80061b0:	687b      	ldr	r3, [r7, #4]
 80061b2:	681b      	ldr	r3, [r3, #0]
 80061b4:	69fa      	ldr	r2, [r7, #28]
 80061b6:	60da      	str	r2, [r3, #12]
 80061b8:	e001      	b.n	80061be <UART_SetConfig+0x1386>
 80061ba:	2301      	movs	r3, #1
 80061bc:	76fb      	strb	r3, [r7, #27]
 80061be:	687b      	ldr	r3, [r7, #4]
 80061c0:	2201      	movs	r2, #1
 80061c2:	f8a3 206a 	strh.w	r2, [r3, #106]	; 0x6a
 80061c6:	687b      	ldr	r3, [r7, #4]
 80061c8:	2201      	movs	r2, #1
 80061ca:	f8a3 2068 	strh.w	r2, [r3, #104]	; 0x68
 80061ce:	687b      	ldr	r3, [r7, #4]
 80061d0:	2200      	movs	r2, #0
 80061d2:	66da      	str	r2, [r3, #108]	; 0x6c
 80061d4:	687b      	ldr	r3, [r7, #4]
 80061d6:	2200      	movs	r2, #0
 80061d8:	671a      	str	r2, [r3, #112]	; 0x70
 80061da:	7efb      	ldrb	r3, [r7, #27]
 80061dc:	4618      	mov	r0, r3
 80061de:	3728      	adds	r7, #40	; 0x28
 80061e0:	46bd      	mov	sp, r7
 80061e2:	e8bd 8890 	ldmia.w	sp!, {r4, r7, fp, pc}
 80061e6:	bf00      	nop
 80061e8:	00f42400 	.word	0x00f42400
 80061ec:	0001e848 	.word	0x0001e848
 80061f0:	0003d090 	.word	0x0003d090
 80061f4:	0007a120 	.word	0x0007a120
 80061f8:	000f4240 	.word	0x000f4240
 80061fc:	00145855 	.word	0x00145855
 8006200:	00186a00 	.word	0x00186a00
 8006204:	001e8480 	.word	0x001e8480
 8006208:	0028b0aa 	.word	0x0028b0aa
 800620c:	003d0900 	.word	0x003d0900
 8006210:	007a1200 	.word	0x007a1200

08006214 <UART_AdvFeatureConfig>:
 8006214:	b480      	push	{r7}
 8006216:	b083      	sub	sp, #12
 8006218:	af00      	add	r7, sp, #0
 800621a:	6078      	str	r0, [r7, #4]
 800621c:	687b      	ldr	r3, [r7, #4]
 800621e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8006220:	f003 0301 	and.w	r3, r3, #1
 8006224:	2b00      	cmp	r3, #0
 8006226:	d00a      	beq.n	800623e <UART_AdvFeatureConfig+0x2a>
 8006228:	687b      	ldr	r3, [r7, #4]
 800622a:	681b      	ldr	r3, [r3, #0]
 800622c:	685b      	ldr	r3, [r3, #4]
 800622e:	f423 3100 	bic.w	r1, r3, #131072	; 0x20000
 8006232:	687b      	ldr	r3, [r7, #4]
 8006234:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8006236:	687b      	ldr	r3, [r7, #4]
 8006238:	681b      	ldr	r3, [r3, #0]
 800623a:	430a      	orrs	r2, r1
 800623c:	605a      	str	r2, [r3, #4]
 800623e:	687b      	ldr	r3, [r7, #4]
 8006240:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8006242:	f003 0302 	and.w	r3, r3, #2
 8006246:	2b00      	cmp	r3, #0
 8006248:	d00a      	beq.n	8006260 <UART_AdvFeatureConfig+0x4c>
 800624a:	687b      	ldr	r3, [r7, #4]
 800624c:	681b      	ldr	r3, [r3, #0]
 800624e:	685b      	ldr	r3, [r3, #4]
 8006250:	f423 3180 	bic.w	r1, r3, #65536	; 0x10000
 8006254:	687b      	ldr	r3, [r7, #4]
 8006256:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8006258:	687b      	ldr	r3, [r7, #4]
 800625a:	681b      	ldr	r3, [r3, #0]
 800625c:	430a      	orrs	r2, r1
 800625e:	605a      	str	r2, [r3, #4]
 8006260:	687b      	ldr	r3, [r7, #4]
 8006262:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8006264:	f003 0304 	and.w	r3, r3, #4
 8006268:	2b00      	cmp	r3, #0
 800626a:	d00a      	beq.n	8006282 <UART_AdvFeatureConfig+0x6e>
 800626c:	687b      	ldr	r3, [r7, #4]
 800626e:	681b      	ldr	r3, [r3, #0]
 8006270:	685b      	ldr	r3, [r3, #4]
 8006272:	f423 2180 	bic.w	r1, r3, #262144	; 0x40000
 8006276:	687b      	ldr	r3, [r7, #4]
 8006278:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800627a:	687b      	ldr	r3, [r7, #4]
 800627c:	681b      	ldr	r3, [r3, #0]
 800627e:	430a      	orrs	r2, r1
 8006280:	605a      	str	r2, [r3, #4]
 8006282:	687b      	ldr	r3, [r7, #4]
 8006284:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8006286:	f003 0308 	and.w	r3, r3, #8
 800628a:	2b00      	cmp	r3, #0
 800628c:	d00a      	beq.n	80062a4 <UART_AdvFeatureConfig+0x90>
 800628e:	687b      	ldr	r3, [r7, #4]
 8006290:	681b      	ldr	r3, [r3, #0]
 8006292:	685b      	ldr	r3, [r3, #4]
 8006294:	f423 4100 	bic.w	r1, r3, #32768	; 0x8000
 8006298:	687b      	ldr	r3, [r7, #4]
 800629a:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800629c:	687b      	ldr	r3, [r7, #4]
 800629e:	681b      	ldr	r3, [r3, #0]
 80062a0:	430a      	orrs	r2, r1
 80062a2:	605a      	str	r2, [r3, #4]
 80062a4:	687b      	ldr	r3, [r7, #4]
 80062a6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80062a8:	f003 0310 	and.w	r3, r3, #16
 80062ac:	2b00      	cmp	r3, #0
 80062ae:	d00a      	beq.n	80062c6 <UART_AdvFeatureConfig+0xb2>
 80062b0:	687b      	ldr	r3, [r7, #4]
 80062b2:	681b      	ldr	r3, [r3, #0]
 80062b4:	689b      	ldr	r3, [r3, #8]
 80062b6:	f423 5180 	bic.w	r1, r3, #4096	; 0x1000
 80062ba:	687b      	ldr	r3, [r7, #4]
 80062bc:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 80062be:	687b      	ldr	r3, [r7, #4]
 80062c0:	681b      	ldr	r3, [r3, #0]
 80062c2:	430a      	orrs	r2, r1
 80062c4:	609a      	str	r2, [r3, #8]
 80062c6:	687b      	ldr	r3, [r7, #4]
 80062c8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80062ca:	f003 0320 	and.w	r3, r3, #32
 80062ce:	2b00      	cmp	r3, #0
 80062d0:	d00a      	beq.n	80062e8 <UART_AdvFeatureConfig+0xd4>
 80062d2:	687b      	ldr	r3, [r7, #4]
 80062d4:	681b      	ldr	r3, [r3, #0]
 80062d6:	689b      	ldr	r3, [r3, #8]
 80062d8:	f423 5100 	bic.w	r1, r3, #8192	; 0x2000
 80062dc:	687b      	ldr	r3, [r7, #4]
 80062de:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80062e0:	687b      	ldr	r3, [r7, #4]
 80062e2:	681b      	ldr	r3, [r3, #0]
 80062e4:	430a      	orrs	r2, r1
 80062e6:	609a      	str	r2, [r3, #8]
 80062e8:	687b      	ldr	r3, [r7, #4]
 80062ea:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80062ec:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80062f0:	2b00      	cmp	r3, #0
 80062f2:	d01a      	beq.n	800632a <UART_AdvFeatureConfig+0x116>
 80062f4:	687b      	ldr	r3, [r7, #4]
 80062f6:	681b      	ldr	r3, [r3, #0]
 80062f8:	685b      	ldr	r3, [r3, #4]
 80062fa:	f423 1180 	bic.w	r1, r3, #1048576	; 0x100000
 80062fe:	687b      	ldr	r3, [r7, #4]
 8006300:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8006302:	687b      	ldr	r3, [r7, #4]
 8006304:	681b      	ldr	r3, [r3, #0]
 8006306:	430a      	orrs	r2, r1
 8006308:	605a      	str	r2, [r3, #4]
 800630a:	687b      	ldr	r3, [r7, #4]
 800630c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800630e:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 8006312:	d10a      	bne.n	800632a <UART_AdvFeatureConfig+0x116>
 8006314:	687b      	ldr	r3, [r7, #4]
 8006316:	681b      	ldr	r3, [r3, #0]
 8006318:	685b      	ldr	r3, [r3, #4]
 800631a:	f423 01c0 	bic.w	r1, r3, #6291456	; 0x600000
 800631e:	687b      	ldr	r3, [r7, #4]
 8006320:	6c9a      	ldr	r2, [r3, #72]	; 0x48
 8006322:	687b      	ldr	r3, [r7, #4]
 8006324:	681b      	ldr	r3, [r3, #0]
 8006326:	430a      	orrs	r2, r1
 8006328:	605a      	str	r2, [r3, #4]
 800632a:	687b      	ldr	r3, [r7, #4]
 800632c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800632e:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8006332:	2b00      	cmp	r3, #0
 8006334:	d00a      	beq.n	800634c <UART_AdvFeatureConfig+0x138>
 8006336:	687b      	ldr	r3, [r7, #4]
 8006338:	681b      	ldr	r3, [r3, #0]
 800633a:	685b      	ldr	r3, [r3, #4]
 800633c:	f423 2100 	bic.w	r1, r3, #524288	; 0x80000
 8006340:	687b      	ldr	r3, [r7, #4]
 8006342:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 8006344:	687b      	ldr	r3, [r7, #4]
 8006346:	681b      	ldr	r3, [r3, #0]
 8006348:	430a      	orrs	r2, r1
 800634a:	605a      	str	r2, [r3, #4]
 800634c:	bf00      	nop
 800634e:	370c      	adds	r7, #12
 8006350:	46bd      	mov	sp, r7
 8006352:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006356:	4770      	bx	lr

08006358 <UART_CheckIdleState>:
 8006358:	b580      	push	{r7, lr}
 800635a:	b086      	sub	sp, #24
 800635c:	af02      	add	r7, sp, #8
 800635e:	6078      	str	r0, [r7, #4]
 8006360:	687b      	ldr	r3, [r7, #4]
 8006362:	2200      	movs	r2, #0
 8006364:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
 8006368:	f7fa ff52 	bl	8001210 <HAL_GetTick>
 800636c:	60f8      	str	r0, [r7, #12]
 800636e:	687b      	ldr	r3, [r7, #4]
 8006370:	681b      	ldr	r3, [r3, #0]
 8006372:	681b      	ldr	r3, [r3, #0]
 8006374:	f003 0308 	and.w	r3, r3, #8
 8006378:	2b08      	cmp	r3, #8
 800637a:	d10e      	bne.n	800639a <UART_CheckIdleState+0x42>
 800637c:	f06f 437e 	mvn.w	r3, #4261412864	; 0xfe000000
 8006380:	9300      	str	r3, [sp, #0]
 8006382:	68fb      	ldr	r3, [r7, #12]
 8006384:	2200      	movs	r2, #0
 8006386:	f44f 1100 	mov.w	r1, #2097152	; 0x200000
 800638a:	6878      	ldr	r0, [r7, #4]
 800638c:	f000 f82c 	bl	80063e8 <UART_WaitOnFlagUntilTimeout>
 8006390:	4603      	mov	r3, r0
 8006392:	2b00      	cmp	r3, #0
 8006394:	d001      	beq.n	800639a <UART_CheckIdleState+0x42>
 8006396:	2303      	movs	r3, #3
 8006398:	e022      	b.n	80063e0 <UART_CheckIdleState+0x88>
 800639a:	687b      	ldr	r3, [r7, #4]
 800639c:	681b      	ldr	r3, [r3, #0]
 800639e:	681b      	ldr	r3, [r3, #0]
 80063a0:	f003 0304 	and.w	r3, r3, #4
 80063a4:	2b04      	cmp	r3, #4
 80063a6:	d10e      	bne.n	80063c6 <UART_CheckIdleState+0x6e>
 80063a8:	f06f 437e 	mvn.w	r3, #4261412864	; 0xfe000000
 80063ac:	9300      	str	r3, [sp, #0]
 80063ae:	68fb      	ldr	r3, [r7, #12]
 80063b0:	2200      	movs	r2, #0
 80063b2:	f44f 0180 	mov.w	r1, #4194304	; 0x400000
 80063b6:	6878      	ldr	r0, [r7, #4]
 80063b8:	f000 f816 	bl	80063e8 <UART_WaitOnFlagUntilTimeout>
 80063bc:	4603      	mov	r3, r0
 80063be:	2b00      	cmp	r3, #0
 80063c0:	d001      	beq.n	80063c6 <UART_CheckIdleState+0x6e>
 80063c2:	2303      	movs	r3, #3
 80063c4:	e00c      	b.n	80063e0 <UART_CheckIdleState+0x88>
 80063c6:	687b      	ldr	r3, [r7, #4]
 80063c8:	2220      	movs	r2, #32
 80063ca:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
 80063ce:	687b      	ldr	r3, [r7, #4]
 80063d0:	2220      	movs	r2, #32
 80063d2:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
 80063d6:	687b      	ldr	r3, [r7, #4]
 80063d8:	2200      	movs	r2, #0
 80063da:	f883 207c 	strb.w	r2, [r3, #124]	; 0x7c
 80063de:	2300      	movs	r3, #0
 80063e0:	4618      	mov	r0, r3
 80063e2:	3710      	adds	r7, #16
 80063e4:	46bd      	mov	sp, r7
 80063e6:	bd80      	pop	{r7, pc}

080063e8 <UART_WaitOnFlagUntilTimeout>:
 80063e8:	b580      	push	{r7, lr}
 80063ea:	b084      	sub	sp, #16
 80063ec:	af00      	add	r7, sp, #0
 80063ee:	60f8      	str	r0, [r7, #12]
 80063f0:	60b9      	str	r1, [r7, #8]
 80063f2:	603b      	str	r3, [r7, #0]
 80063f4:	4613      	mov	r3, r2
 80063f6:	71fb      	strb	r3, [r7, #7]
 80063f8:	e02c      	b.n	8006454 <UART_WaitOnFlagUntilTimeout+0x6c>
 80063fa:	69bb      	ldr	r3, [r7, #24]
 80063fc:	f1b3 3fff 	cmp.w	r3, #4294967295
 8006400:	d028      	beq.n	8006454 <UART_WaitOnFlagUntilTimeout+0x6c>
 8006402:	f7fa ff05 	bl	8001210 <HAL_GetTick>
 8006406:	4602      	mov	r2, r0
 8006408:	683b      	ldr	r3, [r7, #0]
 800640a:	1ad3      	subs	r3, r2, r3
 800640c:	69ba      	ldr	r2, [r7, #24]
 800640e:	429a      	cmp	r2, r3
 8006410:	d302      	bcc.n	8006418 <UART_WaitOnFlagUntilTimeout+0x30>
 8006412:	69bb      	ldr	r3, [r7, #24]
 8006414:	2b00      	cmp	r3, #0
 8006416:	d11d      	bne.n	8006454 <UART_WaitOnFlagUntilTimeout+0x6c>
 8006418:	68fb      	ldr	r3, [r7, #12]
 800641a:	681b      	ldr	r3, [r3, #0]
 800641c:	681a      	ldr	r2, [r3, #0]
 800641e:	68fb      	ldr	r3, [r7, #12]
 8006420:	681b      	ldr	r3, [r3, #0]
 8006422:	f422 72d0 	bic.w	r2, r2, #416	; 0x1a0
 8006426:	601a      	str	r2, [r3, #0]
 8006428:	68fb      	ldr	r3, [r7, #12]
 800642a:	681b      	ldr	r3, [r3, #0]
 800642c:	689a      	ldr	r2, [r3, #8]
 800642e:	68fb      	ldr	r3, [r7, #12]
 8006430:	681b      	ldr	r3, [r3, #0]
 8006432:	f022 0201 	bic.w	r2, r2, #1
 8006436:	609a      	str	r2, [r3, #8]
 8006438:	68fb      	ldr	r3, [r7, #12]
 800643a:	2220      	movs	r2, #32
 800643c:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
 8006440:	68fb      	ldr	r3, [r7, #12]
 8006442:	2220      	movs	r2, #32
 8006444:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
 8006448:	68fb      	ldr	r3, [r7, #12]
 800644a:	2200      	movs	r2, #0
 800644c:	f883 207c 	strb.w	r2, [r3, #124]	; 0x7c
 8006450:	2303      	movs	r3, #3
 8006452:	e00f      	b.n	8006474 <UART_WaitOnFlagUntilTimeout+0x8c>
 8006454:	68fb      	ldr	r3, [r7, #12]
 8006456:	681b      	ldr	r3, [r3, #0]
 8006458:	69da      	ldr	r2, [r3, #28]
 800645a:	68bb      	ldr	r3, [r7, #8]
 800645c:	4013      	ands	r3, r2
 800645e:	68ba      	ldr	r2, [r7, #8]
 8006460:	429a      	cmp	r2, r3
 8006462:	bf0c      	ite	eq
 8006464:	2301      	moveq	r3, #1
 8006466:	2300      	movne	r3, #0
 8006468:	b2db      	uxtb	r3, r3
 800646a:	461a      	mov	r2, r3
 800646c:	79fb      	ldrb	r3, [r7, #7]
 800646e:	429a      	cmp	r2, r3
 8006470:	d0c3      	beq.n	80063fa <UART_WaitOnFlagUntilTimeout+0x12>
 8006472:	2300      	movs	r3, #0
 8006474:	4618      	mov	r0, r3
 8006476:	3710      	adds	r7, #16
 8006478:	46bd      	mov	sp, r7
 800647a:	bd80      	pop	{r7, pc}

0800647c <HAL_UARTEx_DisableFifoMode>:
 800647c:	b480      	push	{r7}
 800647e:	b085      	sub	sp, #20
 8006480:	af00      	add	r7, sp, #0
 8006482:	6078      	str	r0, [r7, #4]
 8006484:	687b      	ldr	r3, [r7, #4]
 8006486:	f893 307c 	ldrb.w	r3, [r3, #124]	; 0x7c
 800648a:	2b01      	cmp	r3, #1
 800648c:	d101      	bne.n	8006492 <HAL_UARTEx_DisableFifoMode+0x16>
 800648e:	2302      	movs	r3, #2
 8006490:	e027      	b.n	80064e2 <HAL_UARTEx_DisableFifoMode+0x66>
 8006492:	687b      	ldr	r3, [r7, #4]
 8006494:	2201      	movs	r2, #1
 8006496:	f883 207c 	strb.w	r2, [r3, #124]	; 0x7c
 800649a:	687b      	ldr	r3, [r7, #4]
 800649c:	2224      	movs	r2, #36	; 0x24
 800649e:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
 80064a2:	687b      	ldr	r3, [r7, #4]
 80064a4:	681b      	ldr	r3, [r3, #0]
 80064a6:	681b      	ldr	r3, [r3, #0]
 80064a8:	60fb      	str	r3, [r7, #12]
 80064aa:	687b      	ldr	r3, [r7, #4]
 80064ac:	681b      	ldr	r3, [r3, #0]
 80064ae:	681a      	ldr	r2, [r3, #0]
 80064b0:	687b      	ldr	r3, [r7, #4]
 80064b2:	681b      	ldr	r3, [r3, #0]
 80064b4:	f022 0201 	bic.w	r2, r2, #1
 80064b8:	601a      	str	r2, [r3, #0]
 80064ba:	68fb      	ldr	r3, [r7, #12]
 80064bc:	f023 5300 	bic.w	r3, r3, #536870912	; 0x20000000
 80064c0:	60fb      	str	r3, [r7, #12]
 80064c2:	687b      	ldr	r3, [r7, #4]
 80064c4:	2200      	movs	r2, #0
 80064c6:	665a      	str	r2, [r3, #100]	; 0x64
 80064c8:	687b      	ldr	r3, [r7, #4]
 80064ca:	681b      	ldr	r3, [r3, #0]
 80064cc:	68fa      	ldr	r2, [r7, #12]
 80064ce:	601a      	str	r2, [r3, #0]
 80064d0:	687b      	ldr	r3, [r7, #4]
 80064d2:	2220      	movs	r2, #32
 80064d4:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
 80064d8:	687b      	ldr	r3, [r7, #4]
 80064da:	2200      	movs	r2, #0
 80064dc:	f883 207c 	strb.w	r2, [r3, #124]	; 0x7c
 80064e0:	2300      	movs	r3, #0
 80064e2:	4618      	mov	r0, r3
 80064e4:	3714      	adds	r7, #20
 80064e6:	46bd      	mov	sp, r7
 80064e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80064ec:	4770      	bx	lr

080064ee <HAL_UARTEx_SetTxFifoThreshold>:
 80064ee:	b580      	push	{r7, lr}
 80064f0:	b084      	sub	sp, #16
 80064f2:	af00      	add	r7, sp, #0
 80064f4:	6078      	str	r0, [r7, #4]
 80064f6:	6039      	str	r1, [r7, #0]
 80064f8:	687b      	ldr	r3, [r7, #4]
 80064fa:	f893 307c 	ldrb.w	r3, [r3, #124]	; 0x7c
 80064fe:	2b01      	cmp	r3, #1
 8006500:	d101      	bne.n	8006506 <HAL_UARTEx_SetTxFifoThreshold+0x18>
 8006502:	2302      	movs	r3, #2
 8006504:	e02d      	b.n	8006562 <HAL_UARTEx_SetTxFifoThreshold+0x74>
 8006506:	687b      	ldr	r3, [r7, #4]
 8006508:	2201      	movs	r2, #1
 800650a:	f883 207c 	strb.w	r2, [r3, #124]	; 0x7c
 800650e:	687b      	ldr	r3, [r7, #4]
 8006510:	2224      	movs	r2, #36	; 0x24
 8006512:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
 8006516:	687b      	ldr	r3, [r7, #4]
 8006518:	681b      	ldr	r3, [r3, #0]
 800651a:	681b      	ldr	r3, [r3, #0]
 800651c:	60fb      	str	r3, [r7, #12]
 800651e:	687b      	ldr	r3, [r7, #4]
 8006520:	681b      	ldr	r3, [r3, #0]
 8006522:	681a      	ldr	r2, [r3, #0]
 8006524:	687b      	ldr	r3, [r7, #4]
 8006526:	681b      	ldr	r3, [r3, #0]
 8006528:	f022 0201 	bic.w	r2, r2, #1
 800652c:	601a      	str	r2, [r3, #0]
 800652e:	687b      	ldr	r3, [r7, #4]
 8006530:	681b      	ldr	r3, [r3, #0]
 8006532:	689b      	ldr	r3, [r3, #8]
 8006534:	f023 4160 	bic.w	r1, r3, #3758096384	; 0xe0000000
 8006538:	687b      	ldr	r3, [r7, #4]
 800653a:	681b      	ldr	r3, [r3, #0]
 800653c:	683a      	ldr	r2, [r7, #0]
 800653e:	430a      	orrs	r2, r1
 8006540:	609a      	str	r2, [r3, #8]
 8006542:	6878      	ldr	r0, [r7, #4]
 8006544:	f000 f850 	bl	80065e8 <UARTEx_SetNbDataToProcess>
 8006548:	687b      	ldr	r3, [r7, #4]
 800654a:	681b      	ldr	r3, [r3, #0]
 800654c:	68fa      	ldr	r2, [r7, #12]
 800654e:	601a      	str	r2, [r3, #0]
 8006550:	687b      	ldr	r3, [r7, #4]
 8006552:	2220      	movs	r2, #32
 8006554:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
 8006558:	687b      	ldr	r3, [r7, #4]
 800655a:	2200      	movs	r2, #0
 800655c:	f883 207c 	strb.w	r2, [r3, #124]	; 0x7c
 8006560:	2300      	movs	r3, #0
 8006562:	4618      	mov	r0, r3
 8006564:	3710      	adds	r7, #16
 8006566:	46bd      	mov	sp, r7
 8006568:	bd80      	pop	{r7, pc}

0800656a <HAL_UARTEx_SetRxFifoThreshold>:
 800656a:	b580      	push	{r7, lr}
 800656c:	b084      	sub	sp, #16
 800656e:	af00      	add	r7, sp, #0
 8006570:	6078      	str	r0, [r7, #4]
 8006572:	6039      	str	r1, [r7, #0]
 8006574:	687b      	ldr	r3, [r7, #4]
 8006576:	f893 307c 	ldrb.w	r3, [r3, #124]	; 0x7c
 800657a:	2b01      	cmp	r3, #1
 800657c:	d101      	bne.n	8006582 <HAL_UARTEx_SetRxFifoThreshold+0x18>
 800657e:	2302      	movs	r3, #2
 8006580:	e02d      	b.n	80065de <HAL_UARTEx_SetRxFifoThreshold+0x74>
 8006582:	687b      	ldr	r3, [r7, #4]
 8006584:	2201      	movs	r2, #1
 8006586:	f883 207c 	strb.w	r2, [r3, #124]	; 0x7c
 800658a:	687b      	ldr	r3, [r7, #4]
 800658c:	2224      	movs	r2, #36	; 0x24
 800658e:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
 8006592:	687b      	ldr	r3, [r7, #4]
 8006594:	681b      	ldr	r3, [r3, #0]
 8006596:	681b      	ldr	r3, [r3, #0]
 8006598:	60fb      	str	r3, [r7, #12]
 800659a:	687b      	ldr	r3, [r7, #4]
 800659c:	681b      	ldr	r3, [r3, #0]
 800659e:	681a      	ldr	r2, [r3, #0]
 80065a0:	687b      	ldr	r3, [r7, #4]
 80065a2:	681b      	ldr	r3, [r3, #0]
 80065a4:	f022 0201 	bic.w	r2, r2, #1
 80065a8:	601a      	str	r2, [r3, #0]
 80065aa:	687b      	ldr	r3, [r7, #4]
 80065ac:	681b      	ldr	r3, [r3, #0]
 80065ae:	689b      	ldr	r3, [r3, #8]
 80065b0:	f023 6160 	bic.w	r1, r3, #234881024	; 0xe000000
 80065b4:	687b      	ldr	r3, [r7, #4]
 80065b6:	681b      	ldr	r3, [r3, #0]
 80065b8:	683a      	ldr	r2, [r7, #0]
 80065ba:	430a      	orrs	r2, r1
 80065bc:	609a      	str	r2, [r3, #8]
 80065be:	6878      	ldr	r0, [r7, #4]
 80065c0:	f000 f812 	bl	80065e8 <UARTEx_SetNbDataToProcess>
 80065c4:	687b      	ldr	r3, [r7, #4]
 80065c6:	681b      	ldr	r3, [r3, #0]
 80065c8:	68fa      	ldr	r2, [r7, #12]
 80065ca:	601a      	str	r2, [r3, #0]
 80065cc:	687b      	ldr	r3, [r7, #4]
 80065ce:	2220      	movs	r2, #32
 80065d0:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
 80065d4:	687b      	ldr	r3, [r7, #4]
 80065d6:	2200      	movs	r2, #0
 80065d8:	f883 207c 	strb.w	r2, [r3, #124]	; 0x7c
 80065dc:	2300      	movs	r3, #0
 80065de:	4618      	mov	r0, r3
 80065e0:	3710      	adds	r7, #16
 80065e2:	46bd      	mov	sp, r7
 80065e4:	bd80      	pop	{r7, pc}
	...

080065e8 <UARTEx_SetNbDataToProcess>:
 80065e8:	b480      	push	{r7}
 80065ea:	b089      	sub	sp, #36	; 0x24
 80065ec:	af00      	add	r7, sp, #0
 80065ee:	6078      	str	r0, [r7, #4]
 80065f0:	4a2f      	ldr	r2, [pc, #188]	; (80066b0 <UARTEx_SetNbDataToProcess+0xc8>)
 80065f2:	f107 0314 	add.w	r3, r7, #20
 80065f6:	e892 0003 	ldmia.w	r2, {r0, r1}
 80065fa:	e883 0003 	stmia.w	r3, {r0, r1}
 80065fe:	4a2d      	ldr	r2, [pc, #180]	; (80066b4 <UARTEx_SetNbDataToProcess+0xcc>)
 8006600:	f107 030c 	add.w	r3, r7, #12
 8006604:	e892 0003 	ldmia.w	r2, {r0, r1}
 8006608:	e883 0003 	stmia.w	r3, {r0, r1}
 800660c:	687b      	ldr	r3, [r7, #4]
 800660e:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8006610:	2b00      	cmp	r3, #0
 8006612:	d108      	bne.n	8006626 <UARTEx_SetNbDataToProcess+0x3e>
 8006614:	687b      	ldr	r3, [r7, #4]
 8006616:	2201      	movs	r2, #1
 8006618:	f8a3 206a 	strh.w	r2, [r3, #106]	; 0x6a
 800661c:	687b      	ldr	r3, [r7, #4]
 800661e:	2201      	movs	r2, #1
 8006620:	f8a3 2068 	strh.w	r2, [r3, #104]	; 0x68
 8006624:	e03d      	b.n	80066a2 <UARTEx_SetNbDataToProcess+0xba>
 8006626:	2308      	movs	r3, #8
 8006628:	77fb      	strb	r3, [r7, #31]
 800662a:	2308      	movs	r3, #8
 800662c:	77bb      	strb	r3, [r7, #30]
 800662e:	687b      	ldr	r3, [r7, #4]
 8006630:	681b      	ldr	r3, [r3, #0]
 8006632:	689b      	ldr	r3, [r3, #8]
 8006634:	0e5b      	lsrs	r3, r3, #25
 8006636:	b2db      	uxtb	r3, r3
 8006638:	f003 0307 	and.w	r3, r3, #7
 800663c:	777b      	strb	r3, [r7, #29]
 800663e:	687b      	ldr	r3, [r7, #4]
 8006640:	681b      	ldr	r3, [r3, #0]
 8006642:	689b      	ldr	r3, [r3, #8]
 8006644:	0f5b      	lsrs	r3, r3, #29
 8006646:	b2db      	uxtb	r3, r3
 8006648:	f003 0307 	and.w	r3, r3, #7
 800664c:	773b      	strb	r3, [r7, #28]
 800664e:	7fbb      	ldrb	r3, [r7, #30]
 8006650:	7f3a      	ldrb	r2, [r7, #28]
 8006652:	f107 0120 	add.w	r1, r7, #32
 8006656:	440a      	add	r2, r1
 8006658:	f812 2c0c 	ldrb.w	r2, [r2, #-12]
 800665c:	fb02 f303 	mul.w	r3, r2, r3
 8006660:	7f3a      	ldrb	r2, [r7, #28]
 8006662:	f107 0120 	add.w	r1, r7, #32
 8006666:	440a      	add	r2, r1
 8006668:	f812 2c14 	ldrb.w	r2, [r2, #-20]
 800666c:	fb93 f3f2 	sdiv	r3, r3, r2
 8006670:	b29a      	uxth	r2, r3
 8006672:	687b      	ldr	r3, [r7, #4]
 8006674:	f8a3 206a 	strh.w	r2, [r3, #106]	; 0x6a
 8006678:	7ffb      	ldrb	r3, [r7, #31]
 800667a:	7f7a      	ldrb	r2, [r7, #29]
 800667c:	f107 0120 	add.w	r1, r7, #32
 8006680:	440a      	add	r2, r1
 8006682:	f812 2c0c 	ldrb.w	r2, [r2, #-12]
 8006686:	fb02 f303 	mul.w	r3, r2, r3
 800668a:	7f7a      	ldrb	r2, [r7, #29]
 800668c:	f107 0120 	add.w	r1, r7, #32
 8006690:	440a      	add	r2, r1
 8006692:	f812 2c14 	ldrb.w	r2, [r2, #-20]
 8006696:	fb93 f3f2 	sdiv	r3, r3, r2
 800669a:	b29a      	uxth	r2, r3
 800669c:	687b      	ldr	r3, [r7, #4]
 800669e:	f8a3 2068 	strh.w	r2, [r3, #104]	; 0x68
 80066a2:	bf00      	nop
 80066a4:	3724      	adds	r7, #36	; 0x24
 80066a6:	46bd      	mov	sp, r7
 80066a8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80066ac:	4770      	bx	lr
 80066ae:	bf00      	nop
 80066b0:	0800b140 	.word	0x0800b140
 80066b4:	0800b148 	.word	0x0800b148

080066b8 <MX_FATFS_Init>:
  * @brief  FatFs initialization
  * @param  None
  * @retval Initialization result 
  */
int32_t MX_FATFS_Init(void) 
{
 80066b8:	b580      	push	{r7, lr}
 80066ba:	af00      	add	r7, sp, #0
  /*## FatFS: Link the disk I/O driver(s)  ###########################*/
 
if (FATFS_LinkDriver(&USER_Driver, USERPath) != 0)
 80066bc:	4907      	ldr	r1, [pc, #28]	; (80066dc <MX_FATFS_Init+0x24>)
 80066be:	4808      	ldr	r0, [pc, #32]	; (80066e0 <MX_FATFS_Init+0x28>)
 80066c0:	f004 fce0 	bl	800b084 <FATFS_LinkDriver>
 80066c4:	4603      	mov	r3, r0
 80066c6:	2b00      	cmp	r3, #0
 80066c8:	d002      	beq.n	80066d0 <MX_FATFS_Init+0x18>
  /* USER CODE BEGIN FATFS_Init */
  {
    return APP_ERROR;
 80066ca:	f04f 33ff 	mov.w	r3, #4294967295
 80066ce:	e003      	b.n	80066d8 <MX_FATFS_Init+0x20>
  }
  else
  {
    Appli_state = APPLICATION_INIT;
 80066d0:	4b04      	ldr	r3, [pc, #16]	; (80066e4 <MX_FATFS_Init+0x2c>)
 80066d2:	2201      	movs	r2, #1
 80066d4:	701a      	strb	r2, [r3, #0]
    return APP_OK;
 80066d6:	2300      	movs	r3, #0
  }
  /* USER CODE END FATFS_Init */
}
 80066d8:	4618      	mov	r0, r3
 80066da:	bd80      	pop	{r7, pc}
 80066dc:	20002478 	.word	0x20002478
 80066e0:	20000010 	.word	0x20000010
 80066e4:	20000045 	.word	0x20000045

080066e8 <get_fattime>:
  * @brief  Gets Time from RTC (generated when FS_NORTC==0; see ff.c)
  * @param  None
  * @retval Time in DWORD
  */
DWORD get_fattime(void)
{
 80066e8:	b480      	push	{r7}
 80066ea:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN get_fattime */
  return 0;
 80066ec:	2300      	movs	r3, #0
  /* USER CODE END get_fattime */  
}
 80066ee:	4618      	mov	r0, r3
 80066f0:	46bd      	mov	sp, r7
 80066f2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80066f6:	4770      	bx	lr

080066f8 <MY_SD_Init>:
  * @brief  Initializes the SD card device.
  * @param  Instance      SD Instance
  * @retval BSP status
  */
int32_t MY_SD_Init(uint32_t Instance)
{
 80066f8:	b580      	push	{r7, lr}
 80066fa:	b084      	sub	sp, #16
 80066fc:	af00      	add	r7, sp, #0
 80066fe:	6078      	str	r0, [r7, #4]
  int32_t ret = BSP_ERROR_NONE;
 8006700:	2300      	movs	r3, #0
 8006702:	60fb      	str	r3, [r7, #12]

  if(Instance >= SD_INSTANCES_NBR)
 8006704:	687b      	ldr	r3, [r7, #4]
 8006706:	2b00      	cmp	r3, #0
 8006708:	d003      	beq.n	8006712 <MY_SD_Init+0x1a>
  {
    ret = BSP_ERROR_WRONG_PARAM;
 800670a:	f06f 0301 	mvn.w	r3, #1
 800670e:	60fb      	str	r3, [r7, #12]
 8006710:	e010      	b.n	8006734 <MY_SD_Init+0x3c>
  } /* Configure IO functionalities for SD pin */
  else if(SD_IO_Init() != BSP_ERROR_NONE)
 8006712:	f000 fadb 	bl	8006ccc <SD_IO_Init>
 8006716:	4603      	mov	r3, r0
 8006718:	2b00      	cmp	r3, #0
 800671a:	d003      	beq.n	8006724 <MY_SD_Init+0x2c>
  {
    ret = BSP_ERROR_NO_INIT;
 800671c:	f04f 33ff 	mov.w	r3, #4294967295
 8006720:	60fb      	str	r3, [r7, #12]
 8006722:	e007      	b.n	8006734 <MY_SD_Init+0x3c>
  }
  else
  {
    /* SD initialized and set to SPI mode properly */
    if(SD_GoIdleState() != BSP_ERROR_NONE)
 8006724:	f000 ffb6 	bl	8007694 <SD_GoIdleState>
 8006728:	4603      	mov	r3, r0
 800672a:	2b00      	cmp	r3, #0
 800672c:	d002      	beq.n	8006734 <MY_SD_Init+0x3c>
    {
      ret = BSP_ERROR_UNKNOWN_FAILURE;
 800672e:	f06f 0305 	mvn.w	r3, #5
 8006732:	60fb      	str	r3, [r7, #12]
    }
  }

  return ret;
 8006734:	68fb      	ldr	r3, [r7, #12]
}
 8006736:	4618      	mov	r0, r3
 8006738:	3710      	adds	r7, #16
 800673a:	46bd      	mov	sp, r7
 800673c:	bd80      	pop	{r7, pc}
	...

08006740 <MY_SD_ReadBlocks>:
  * @param  BlockIdx   Block index from where data is to be read
  * @param  BlocksNbr  Number of SD blocks to read
  * @retval BSP status
  */
int32_t MY_SD_ReadBlocks(uint32_t Instance, uint32_t *pData, uint32_t BlockIdx, uint32_t BlocksNbr)
{
 8006740:	b580      	push	{r7, lr}
 8006742:	b088      	sub	sp, #32
 8006744:	af00      	add	r7, sp, #0
 8006746:	60f8      	str	r0, [r7, #12]
 8006748:	60b9      	str	r1, [r7, #8]
 800674a:	607a      	str	r2, [r7, #4]
 800674c:	603b      	str	r3, [r7, #0]
  int32_t ret = BSP_ERROR_NONE;
 800674e:	2300      	movs	r3, #0
 8006750:	61fb      	str	r3, [r7, #28]
  uint32_t response, offset = 0;
 8006752:	2300      	movs	r3, #0
 8006754:	61bb      	str	r3, [r7, #24]
  uint8_t tmp;

  if(Instance >= SD_INSTANCES_NBR)
 8006756:	68fb      	ldr	r3, [r7, #12]
 8006758:	2b00      	cmp	r3, #0
 800675a:	d003      	beq.n	8006764 <MY_SD_ReadBlocks+0x24>
  {
    ret = BSP_ERROR_WRONG_PARAM;
 800675c:	f06f 0301 	mvn.w	r3, #1
 8006760:	61fb      	str	r3, [r7, #28]
 8006762:	e0b2      	b.n	80068ca <MY_SD_ReadBlocks+0x18a>
  }
  else
  {
    /* Send CMD16 (SD_CMD_SET_BLOCKLEN) to set the size of the block and
    Check if the SD acknowledged the set block length command: R1 response (0x00: no errors) */
    response = SD_SendCmd(SD_CMD_SET_BLOCKLEN, MY_SD_BLOCK_SIZE, 0xFF, (uint8_t)SD_ANSWER_R1_EXPECTED);
 8006764:	2300      	movs	r3, #0
 8006766:	22ff      	movs	r2, #255	; 0xff
 8006768:	f44f 7100 	mov.w	r1, #512	; 0x200
 800676c:	2010      	movs	r0, #16
 800676e:	f000 fe11 	bl	8007394 <SD_SendCmd>
 8006772:	6178      	str	r0, [r7, #20]
    SD_IO_CSState(1);
 8006774:	2001      	movs	r0, #1
 8006776:	f000 faf5 	bl	8006d64 <SD_IO_CSState>
    if(BUS_SPIx_Send(&tmp, 1U) != BSP_ERROR_NONE)
 800677a:	f107 0313 	add.w	r3, r7, #19
 800677e:	2101      	movs	r1, #1
 8006780:	4618      	mov	r0, r3
 8006782:	f001 f957 	bl	8007a34 <BSP_SPI2_Send>
 8006786:	4603      	mov	r3, r0
 8006788:	2b00      	cmp	r3, #0
 800678a:	d003      	beq.n	8006794 <MY_SD_ReadBlocks+0x54>
    {
      ret = BSP_ERROR_PERIPH_FAILURE;
 800678c:	f06f 0303 	mvn.w	r3, #3
 8006790:	61fb      	str	r3, [r7, #28]
 8006792:	e09a      	b.n	80068ca <MY_SD_ReadBlocks+0x18a>
    }
    else
    {
      if ((uint8_t)(response & 0xFFU) != (uint8_t)SD_R1_NO_ERROR)
 8006794:	697b      	ldr	r3, [r7, #20]
 8006796:	b2db      	uxtb	r3, r3
 8006798:	2b00      	cmp	r3, #0
 800679a:	d00e      	beq.n	80067ba <MY_SD_ReadBlocks+0x7a>
      {
        /* Send dummy byte: 8 Clock pulses of delay */
        SD_IO_CSState(1);
 800679c:	2001      	movs	r0, #1
 800679e:	f000 fae1 	bl	8006d64 <SD_IO_CSState>
        if(BUS_SPIx_Send(&tmp, 1U) != BSP_ERROR_NONE)
 80067a2:	f107 0313 	add.w	r3, r7, #19
 80067a6:	2101      	movs	r1, #1
 80067a8:	4618      	mov	r0, r3
 80067aa:	f001 f943 	bl	8007a34 <BSP_SPI2_Send>
 80067ae:	4603      	mov	r3, r0
 80067b0:	2b00      	cmp	r3, #0
 80067b2:	d002      	beq.n	80067ba <MY_SD_ReadBlocks+0x7a>
        {
          ret = BSP_ERROR_PERIPH_FAILURE;
 80067b4:	f06f 0303 	mvn.w	r3, #3
 80067b8:	61fb      	str	r3, [r7, #28]
        }
      }

      if(ret == BSP_ERROR_NONE)
 80067ba:	69fb      	ldr	r3, [r7, #28]
 80067bc:	2b00      	cmp	r3, #0
 80067be:	f040 8084 	bne.w	80068ca <MY_SD_ReadBlocks+0x18a>
        /* Data transfer */
        do
        {
          /* Send CMD17 (SD_CMD_READ_SINGLE_BLOCK) to read one block */
          /* Check if the SD acknowledged the read block command: R1 response (0x00: no errors) */
          response = SD_SendCmd(SD_CMD_READ_SINGLE_BLOCK, (BlockIdx + offset) * (CardType == MY_CARD_SDHC ? 1U: MY_SD_BLOCK_SIZE), 0xFFU, (uint8_t)SD_ANSWER_R1_EXPECTED);
 80067c2:	687a      	ldr	r2, [r7, #4]
 80067c4:	69bb      	ldr	r3, [r7, #24]
 80067c6:	441a      	add	r2, r3
 80067c8:	4b42      	ldr	r3, [pc, #264]	; (80068d4 <MY_SD_ReadBlocks+0x194>)
 80067ca:	681b      	ldr	r3, [r3, #0]
 80067cc:	2b01      	cmp	r3, #1
 80067ce:	d101      	bne.n	80067d4 <MY_SD_ReadBlocks+0x94>
 80067d0:	2301      	movs	r3, #1
 80067d2:	e001      	b.n	80067d8 <MY_SD_ReadBlocks+0x98>
 80067d4:	f44f 7300 	mov.w	r3, #512	; 0x200
 80067d8:	fb02 f103 	mul.w	r1, r2, r3
 80067dc:	2300      	movs	r3, #0
 80067de:	22ff      	movs	r2, #255	; 0xff
 80067e0:	2011      	movs	r0, #17
 80067e2:	f000 fdd7 	bl	8007394 <SD_SendCmd>
 80067e6:	6178      	str	r0, [r7, #20]
          if ((uint8_t)(response & 0xFFU) != (uint8_t)SD_R1_NO_ERROR)
 80067e8:	697b      	ldr	r3, [r7, #20]
 80067ea:	b2db      	uxtb	r3, r3
 80067ec:	2b00      	cmp	r3, #0
 80067ee:	d00f      	beq.n	8006810 <MY_SD_ReadBlocks+0xd0>
          {
            /* Send dummy byte: 8 Clock pulses of delay */
            SD_IO_CSState(1);
 80067f0:	2001      	movs	r0, #1
 80067f2:	f000 fab7 	bl	8006d64 <SD_IO_CSState>
            if(BUS_SPIx_Send(&tmp, 1U) != BSP_ERROR_NONE)
 80067f6:	f107 0313 	add.w	r3, r7, #19
 80067fa:	2101      	movs	r1, #1
 80067fc:	4618      	mov	r0, r3
 80067fe:	f001 f919 	bl	8007a34 <BSP_SPI2_Send>
 8006802:	4603      	mov	r3, r0
 8006804:	2b00      	cmp	r3, #0
 8006806:	d003      	beq.n	8006810 <MY_SD_ReadBlocks+0xd0>
            {
              ret = BSP_ERROR_PERIPH_FAILURE;
 8006808:	f06f 0303 	mvn.w	r3, #3
 800680c:	61fb      	str	r3, [r7, #28]
              break;
 800680e:	e05c      	b.n	80068ca <MY_SD_ReadBlocks+0x18a>
            }
          }

          /* Now look for the data token to signify the start of the data */
          if (SD_WaitData(SD_TOKEN_START_DATA_SINGLE_BLOCK_READ) == BSP_ERROR_NONE)
 8006810:	20fe      	movs	r0, #254	; 0xfe
 8006812:	f001 f87d 	bl	8007910 <SD_WaitData>
 8006816:	4603      	mov	r3, r0
 8006818:	2b00      	cmp	r3, #0
 800681a:	d12f      	bne.n	800687c <MY_SD_ReadBlocks+0x13c>
          {
            /* Read the SD block data : read NumByteToRead data */
            if(BUS_SPIx_Recv((uint8_t*)pData + offset, MY_SD_BLOCK_SIZE) != BSP_ERROR_NONE)
 800681c:	68ba      	ldr	r2, [r7, #8]
 800681e:	69bb      	ldr	r3, [r7, #24]
 8006820:	4413      	add	r3, r2
 8006822:	f44f 7100 	mov.w	r1, #512	; 0x200
 8006826:	4618      	mov	r0, r3
 8006828:	f001 f920 	bl	8007a6c <BSP_SPI2_Recv>
 800682c:	4603      	mov	r3, r0
 800682e:	2b00      	cmp	r3, #0
 8006830:	d003      	beq.n	800683a <MY_SD_ReadBlocks+0xfa>
            {
              ret = BSP_ERROR_PERIPH_FAILURE;
 8006832:	f06f 0303 	mvn.w	r3, #3
 8006836:	61fb      	str	r3, [r7, #28]
              break;
 8006838:	e047      	b.n	80068ca <MY_SD_ReadBlocks+0x18a>
            }

            /* Set next read address*/
            offset += MY_SD_BLOCK_SIZE;
 800683a:	69bb      	ldr	r3, [r7, #24]
 800683c:	f503 7300 	add.w	r3, r3, #512	; 0x200
 8006840:	61bb      	str	r3, [r7, #24]
            BlocksNbr--;
 8006842:	683b      	ldr	r3, [r7, #0]
 8006844:	3b01      	subs	r3, #1
 8006846:	603b      	str	r3, [r7, #0]

            /* get CRC bytes (not really needed by us, but required by SD) */
            if(BUS_SPIx_Send(&tmp, 1U) != BSP_ERROR_NONE)
 8006848:	f107 0313 	add.w	r3, r7, #19
 800684c:	2101      	movs	r1, #1
 800684e:	4618      	mov	r0, r3
 8006850:	f001 f8f0 	bl	8007a34 <BSP_SPI2_Send>
 8006854:	4603      	mov	r3, r0
 8006856:	2b00      	cmp	r3, #0
 8006858:	d003      	beq.n	8006862 <MY_SD_ReadBlocks+0x122>
            {
              ret = BSP_ERROR_PERIPH_FAILURE;
 800685a:	f06f 0303 	mvn.w	r3, #3
 800685e:	61fb      	str	r3, [r7, #28]
              break;
 8006860:	e033      	b.n	80068ca <MY_SD_ReadBlocks+0x18a>
            }
            if(BUS_SPIx_Send(&tmp, 1U) != BSP_ERROR_NONE)
 8006862:	f107 0313 	add.w	r3, r7, #19
 8006866:	2101      	movs	r1, #1
 8006868:	4618      	mov	r0, r3
 800686a:	f001 f8e3 	bl	8007a34 <BSP_SPI2_Send>
 800686e:	4603      	mov	r3, r0
 8006870:	2b00      	cmp	r3, #0
 8006872:	d013      	beq.n	800689c <MY_SD_ReadBlocks+0x15c>
            {
              ret = BSP_ERROR_PERIPH_FAILURE;
 8006874:	f06f 0303 	mvn.w	r3, #3
 8006878:	61fb      	str	r3, [r7, #28]
              break;
 800687a:	e026      	b.n	80068ca <MY_SD_ReadBlocks+0x18a>
            }
          }
          else
          {
            /* Send dummy byte: 8 Clock pulses of delay */
            SD_IO_CSState(1);
 800687c:	2001      	movs	r0, #1
 800687e:	f000 fa71 	bl	8006d64 <SD_IO_CSState>
            if(BUS_SPIx_Send(&tmp, 1U) != BSP_ERROR_NONE)
 8006882:	f107 0313 	add.w	r3, r7, #19
 8006886:	2101      	movs	r1, #1
 8006888:	4618      	mov	r0, r3
 800688a:	f001 f8d3 	bl	8007a34 <BSP_SPI2_Send>
 800688e:	4603      	mov	r3, r0
 8006890:	2b00      	cmp	r3, #0
 8006892:	d003      	beq.n	800689c <MY_SD_ReadBlocks+0x15c>
            {
              ret = BSP_ERROR_PERIPH_FAILURE;
 8006894:	f06f 0303 	mvn.w	r3, #3
 8006898:	61fb      	str	r3, [r7, #28]
              break;
 800689a:	e016      	b.n	80068ca <MY_SD_ReadBlocks+0x18a>
            }
          }

          /* End the command data read cycle */
          SD_IO_CSState(1);
 800689c:	2001      	movs	r0, #1
 800689e:	f000 fa61 	bl	8006d64 <SD_IO_CSState>
          if(BUS_SPIx_Send(&tmp, 1U) != BSP_ERROR_NONE)
 80068a2:	f107 0313 	add.w	r3, r7, #19
 80068a6:	2101      	movs	r1, #1
 80068a8:	4618      	mov	r0, r3
 80068aa:	f001 f8c3 	bl	8007a34 <BSP_SPI2_Send>
 80068ae:	4603      	mov	r3, r0
 80068b0:	2b00      	cmp	r3, #0
 80068b2:	d003      	beq.n	80068bc <MY_SD_ReadBlocks+0x17c>
          {
            ret = BSP_ERROR_PERIPH_FAILURE;
 80068b4:	f06f 0303 	mvn.w	r3, #3
 80068b8:	61fb      	str	r3, [r7, #28]
            break;
 80068ba:	e006      	b.n	80068ca <MY_SD_ReadBlocks+0x18a>
          }
        }while ((BlocksNbr != 0U) && (ret == BSP_ERROR_NONE));
 80068bc:	683b      	ldr	r3, [r7, #0]
 80068be:	2b00      	cmp	r3, #0
 80068c0:	d003      	beq.n	80068ca <MY_SD_ReadBlocks+0x18a>
 80068c2:	69fb      	ldr	r3, [r7, #28]
 80068c4:	2b00      	cmp	r3, #0
 80068c6:	f43f af7c 	beq.w	80067c2 <MY_SD_ReadBlocks+0x82>
      }
    }
  }

  /* Return BSP status */
  return ret;
 80068ca:	69fb      	ldr	r3, [r7, #28]
}
 80068cc:	4618      	mov	r0, r3
 80068ce:	3720      	adds	r7, #32
 80068d0:	46bd      	mov	sp, r7
 80068d2:	bd80      	pop	{r7, pc}
 80068d4:	20000048 	.word	0x20000048

080068d8 <MY_SD_WriteBlocks>:
  * @param  BlockIdx   Block index from where data is to be written
  * @param  BlocksNbr  Number of SD blocks to write
  * @retval BSP status
  */
int32_t MY_SD_WriteBlocks(uint32_t Instance, uint32_t *pData, uint32_t BlockIdx, uint32_t BlocksNbr)
{
 80068d8:	b580      	push	{r7, lr}
 80068da:	b088      	sub	sp, #32
 80068dc:	af00      	add	r7, sp, #0
 80068de:	60f8      	str	r0, [r7, #12]
 80068e0:	60b9      	str	r1, [r7, #8]
 80068e2:	607a      	str	r2, [r7, #4]
 80068e4:	603b      	str	r3, [r7, #0]
  int32_t ret = BSP_ERROR_NONE;
 80068e6:	2300      	movs	r3, #0
 80068e8:	61fb      	str	r3, [r7, #28]
  uint32_t response, offset = 0;
 80068ea:	2300      	movs	r3, #0
 80068ec:	61bb      	str	r3, [r7, #24]
  uint8_t tmp, data_response;

  if(Instance >= SD_INSTANCES_NBR)
 80068ee:	68fb      	ldr	r3, [r7, #12]
 80068f0:	2b00      	cmp	r3, #0
 80068f2:	d003      	beq.n	80068fc <MY_SD_WriteBlocks+0x24>
  {
    ret = BSP_ERROR_WRONG_PARAM;
 80068f4:	f06f 0301 	mvn.w	r3, #1
 80068f8:	61fb      	str	r3, [r7, #28]
 80068fa:	e0e8      	b.n	8006ace <MY_SD_WriteBlocks+0x1f6>
  }
  else
  {
    /* Send CMD16 (SD_CMD_SET_BLOCKLEN) to set the size of the block and
    Check if the SD acknowledged the set block length command: R1 response (0x00: no errors) */
    response = SD_SendCmd(SD_CMD_SET_BLOCKLEN, MY_SD_BLOCK_SIZE, 0xFF, (uint8_t)SD_ANSWER_R1_EXPECTED);
 80068fc:	2300      	movs	r3, #0
 80068fe:	22ff      	movs	r2, #255	; 0xff
 8006900:	f44f 7100 	mov.w	r1, #512	; 0x200
 8006904:	2010      	movs	r0, #16
 8006906:	f000 fd45 	bl	8007394 <SD_SendCmd>
 800690a:	6178      	str	r0, [r7, #20]
    SD_IO_CSState(1);
 800690c:	2001      	movs	r0, #1
 800690e:	f000 fa29 	bl	8006d64 <SD_IO_CSState>
    tmp = SD_DUMMY_BYTE;
 8006912:	23ff      	movs	r3, #255	; 0xff
 8006914:	74fb      	strb	r3, [r7, #19]
    if(BUS_SPIx_Send(&tmp, 1U) != BSP_ERROR_NONE)
 8006916:	f107 0313 	add.w	r3, r7, #19
 800691a:	2101      	movs	r1, #1
 800691c:	4618      	mov	r0, r3
 800691e:	f001 f889 	bl	8007a34 <BSP_SPI2_Send>
 8006922:	4603      	mov	r3, r0
 8006924:	2b00      	cmp	r3, #0
 8006926:	d003      	beq.n	8006930 <MY_SD_WriteBlocks+0x58>
    {
      ret = BSP_ERROR_PERIPH_FAILURE;
 8006928:	f06f 0303 	mvn.w	r3, #3
 800692c:	61fb      	str	r3, [r7, #28]
 800692e:	e0ce      	b.n	8006ace <MY_SD_WriteBlocks+0x1f6>
    }
    else
    {
      if ((uint8_t)(response & 0xFFU) != (uint8_t)SD_R1_NO_ERROR)
 8006930:	697b      	ldr	r3, [r7, #20]
 8006932:	b2db      	uxtb	r3, r3
 8006934:	2b00      	cmp	r3, #0
 8006936:	d00e      	beq.n	8006956 <MY_SD_WriteBlocks+0x7e>
      {
        /* Send dummy byte: 8 Clock pulses of delay */
        SD_IO_CSState(1);
 8006938:	2001      	movs	r0, #1
 800693a:	f000 fa13 	bl	8006d64 <SD_IO_CSState>
        if(BUS_SPIx_Send(&tmp, 1U) != BSP_ERROR_NONE)
 800693e:	f107 0313 	add.w	r3, r7, #19
 8006942:	2101      	movs	r1, #1
 8006944:	4618      	mov	r0, r3
 8006946:	f001 f875 	bl	8007a34 <BSP_SPI2_Send>
 800694a:	4603      	mov	r3, r0
 800694c:	2b00      	cmp	r3, #0
 800694e:	d002      	beq.n	8006956 <MY_SD_WriteBlocks+0x7e>
        {
          ret = BSP_ERROR_PERIPH_FAILURE;
 8006950:	f06f 0303 	mvn.w	r3, #3
 8006954:	61fb      	str	r3, [r7, #28]
        }
      }

      if(ret == BSP_ERROR_NONE)
 8006956:	69fb      	ldr	r3, [r7, #28]
 8006958:	2b00      	cmp	r3, #0
 800695a:	f040 80b8 	bne.w	8006ace <MY_SD_WriteBlocks+0x1f6>
        /* Data transfer */
        do
        {
          /* Send CMD24 (SD_CMD_WRITE_SINGLE_BLOCK) to write blocks  and
          Check if the SD acknowledged the write block command: R1 response (0x00: no errors) */
          response = SD_SendCmd(SD_CMD_WRITE_SINGLE_BLOCK, (BlockIdx + offset) * (CardType == MY_CARD_SDHC ? 1U : MY_SD_BLOCK_SIZE), 0xFFU, (uint8_t)SD_ANSWER_R1_EXPECTED);
 800695e:	687a      	ldr	r2, [r7, #4]
 8006960:	69bb      	ldr	r3, [r7, #24]
 8006962:	441a      	add	r2, r3
 8006964:	4b5c      	ldr	r3, [pc, #368]	; (8006ad8 <MY_SD_WriteBlocks+0x200>)
 8006966:	681b      	ldr	r3, [r3, #0]
 8006968:	2b01      	cmp	r3, #1
 800696a:	d101      	bne.n	8006970 <MY_SD_WriteBlocks+0x98>
 800696c:	2301      	movs	r3, #1
 800696e:	e001      	b.n	8006974 <MY_SD_WriteBlocks+0x9c>
 8006970:	f44f 7300 	mov.w	r3, #512	; 0x200
 8006974:	fb02 f103 	mul.w	r1, r2, r3
 8006978:	2300      	movs	r3, #0
 800697a:	22ff      	movs	r2, #255	; 0xff
 800697c:	2018      	movs	r0, #24
 800697e:	f000 fd09 	bl	8007394 <SD_SendCmd>
 8006982:	6178      	str	r0, [r7, #20]
          if ((uint8_t)(response & 0xFFU) != (uint8_t)SD_R1_NO_ERROR)
 8006984:	697b      	ldr	r3, [r7, #20]
 8006986:	b2db      	uxtb	r3, r3
 8006988:	2b00      	cmp	r3, #0
 800698a:	d00f      	beq.n	80069ac <MY_SD_WriteBlocks+0xd4>
          {
            /* Send dummy byte: 8 Clock pulses of delay */
            SD_IO_CSState(1);
 800698c:	2001      	movs	r0, #1
 800698e:	f000 f9e9 	bl	8006d64 <SD_IO_CSState>
            if(BUS_SPIx_Send(&tmp, 1U) != BSP_ERROR_NONE)
 8006992:	f107 0313 	add.w	r3, r7, #19
 8006996:	2101      	movs	r1, #1
 8006998:	4618      	mov	r0, r3
 800699a:	f001 f84b 	bl	8007a34 <BSP_SPI2_Send>
 800699e:	4603      	mov	r3, r0
 80069a0:	2b00      	cmp	r3, #0
 80069a2:	d003      	beq.n	80069ac <MY_SD_WriteBlocks+0xd4>
            {
              ret = BSP_ERROR_PERIPH_FAILURE;
 80069a4:	f06f 0303 	mvn.w	r3, #3
 80069a8:	61fb      	str	r3, [r7, #28]
              break;
 80069aa:	e090      	b.n	8006ace <MY_SD_WriteBlocks+0x1f6>
            }
          }

          /* Send dummy byte for NWR timing : one byte between CMDWRITE and TOKEN */
          if(BUS_SPIx_Send(&tmp, 1U) != BSP_ERROR_NONE)
 80069ac:	f107 0313 	add.w	r3, r7, #19
 80069b0:	2101      	movs	r1, #1
 80069b2:	4618      	mov	r0, r3
 80069b4:	f001 f83e 	bl	8007a34 <BSP_SPI2_Send>
 80069b8:	4603      	mov	r3, r0
 80069ba:	2b00      	cmp	r3, #0
 80069bc:	d003      	beq.n	80069c6 <MY_SD_WriteBlocks+0xee>
          {
            ret = BSP_ERROR_PERIPH_FAILURE;
 80069be:	f06f 0303 	mvn.w	r3, #3
 80069c2:	61fb      	str	r3, [r7, #28]
            break;
 80069c4:	e083      	b.n	8006ace <MY_SD_WriteBlocks+0x1f6>
          }
          if(BUS_SPIx_Send(&tmp, 1U) != BSP_ERROR_NONE)
 80069c6:	f107 0313 	add.w	r3, r7, #19
 80069ca:	2101      	movs	r1, #1
 80069cc:	4618      	mov	r0, r3
 80069ce:	f001 f831 	bl	8007a34 <BSP_SPI2_Send>
 80069d2:	4603      	mov	r3, r0
 80069d4:	2b00      	cmp	r3, #0
 80069d6:	d003      	beq.n	80069e0 <MY_SD_WriteBlocks+0x108>
          {
            ret = BSP_ERROR_PERIPH_FAILURE;
 80069d8:	f06f 0303 	mvn.w	r3, #3
 80069dc:	61fb      	str	r3, [r7, #28]
            break;
 80069de:	e076      	b.n	8006ace <MY_SD_WriteBlocks+0x1f6>
          }

          /* Send the data token to signify the start of the data */
          tmp = SD_TOKEN_START_DATA_SINGLE_BLOCK_WRITE;
 80069e0:	23fe      	movs	r3, #254	; 0xfe
 80069e2:	74fb      	strb	r3, [r7, #19]
          if(BUS_SPIx_Send(&tmp, 1U) != BSP_ERROR_NONE)
 80069e4:	f107 0313 	add.w	r3, r7, #19
 80069e8:	2101      	movs	r1, #1
 80069ea:	4618      	mov	r0, r3
 80069ec:	f001 f822 	bl	8007a34 <BSP_SPI2_Send>
 80069f0:	4603      	mov	r3, r0
 80069f2:	2b00      	cmp	r3, #0
 80069f4:	d003      	beq.n	80069fe <MY_SD_WriteBlocks+0x126>
          {
            ret = BSP_ERROR_PERIPH_FAILURE;
 80069f6:	f06f 0303 	mvn.w	r3, #3
 80069fa:	61fb      	str	r3, [r7, #28]
            break;
 80069fc:	e067      	b.n	8006ace <MY_SD_WriteBlocks+0x1f6>
          }

          /* Write the block data to SD */
          if(BUS_SPIx_Send((uint8_t*)pData + offset, MY_SD_BLOCK_SIZE) != BSP_ERROR_NONE)
 80069fe:	68ba      	ldr	r2, [r7, #8]
 8006a00:	69bb      	ldr	r3, [r7, #24]
 8006a02:	4413      	add	r3, r2
 8006a04:	f44f 7100 	mov.w	r1, #512	; 0x200
 8006a08:	4618      	mov	r0, r3
 8006a0a:	f001 f813 	bl	8007a34 <BSP_SPI2_Send>
 8006a0e:	4603      	mov	r3, r0
 8006a10:	2b00      	cmp	r3, #0
 8006a12:	d003      	beq.n	8006a1c <MY_SD_WriteBlocks+0x144>
          {
            ret = BSP_ERROR_PERIPH_FAILURE;
 8006a14:	f06f 0303 	mvn.w	r3, #3
 8006a18:	61fb      	str	r3, [r7, #28]
            break;
 8006a1a:	e058      	b.n	8006ace <MY_SD_WriteBlocks+0x1f6>
          }

          /* Set next write address */
          offset += MY_SD_BLOCK_SIZE;
 8006a1c:	69bb      	ldr	r3, [r7, #24]
 8006a1e:	f503 7300 	add.w	r3, r3, #512	; 0x200
 8006a22:	61bb      	str	r3, [r7, #24]
          BlocksNbr--;
 8006a24:	683b      	ldr	r3, [r7, #0]
 8006a26:	3b01      	subs	r3, #1
 8006a28:	603b      	str	r3, [r7, #0]

          /* get CRC bytes (not really needed by us, but required by SD) */
          tmp = SD_DUMMY_BYTE;
 8006a2a:	23ff      	movs	r3, #255	; 0xff
 8006a2c:	74fb      	strb	r3, [r7, #19]
          if(BUS_SPIx_Send(&tmp, 1U) != BSP_ERROR_NONE)
 8006a2e:	f107 0313 	add.w	r3, r7, #19
 8006a32:	2101      	movs	r1, #1
 8006a34:	4618      	mov	r0, r3
 8006a36:	f000 fffd 	bl	8007a34 <BSP_SPI2_Send>
 8006a3a:	4603      	mov	r3, r0
 8006a3c:	2b00      	cmp	r3, #0
 8006a3e:	d003      	beq.n	8006a48 <MY_SD_WriteBlocks+0x170>
          {
            ret = BSP_ERROR_PERIPH_FAILURE;
 8006a40:	f06f 0303 	mvn.w	r3, #3
 8006a44:	61fb      	str	r3, [r7, #28]
            break;
 8006a46:	e042      	b.n	8006ace <MY_SD_WriteBlocks+0x1f6>
          }
          if(BUS_SPIx_Send(&tmp, 1U) != BSP_ERROR_NONE)
 8006a48:	f107 0313 	add.w	r3, r7, #19
 8006a4c:	2101      	movs	r1, #1
 8006a4e:	4618      	mov	r0, r3
 8006a50:	f000 fff0 	bl	8007a34 <BSP_SPI2_Send>
 8006a54:	4603      	mov	r3, r0
 8006a56:	2b00      	cmp	r3, #0
 8006a58:	d003      	beq.n	8006a62 <MY_SD_WriteBlocks+0x18a>
          {
            ret = BSP_ERROR_PERIPH_FAILURE;
 8006a5a:	f06f 0303 	mvn.w	r3, #3
 8006a5e:	61fb      	str	r3, [r7, #28]
            break;
 8006a60:	e035      	b.n	8006ace <MY_SD_WriteBlocks+0x1f6>
          }

          /* Read data response */
          if(SD_GetDataResponse(&data_response) != BSP_ERROR_NONE)
 8006a62:	f107 0312 	add.w	r3, r7, #18
 8006a66:	4618      	mov	r0, r3
 8006a68:	f000 fdae 	bl	80075c8 <SD_GetDataResponse>
 8006a6c:	4603      	mov	r3, r0
 8006a6e:	2b00      	cmp	r3, #0
 8006a70:	d003      	beq.n	8006a7a <MY_SD_WriteBlocks+0x1a2>
          {
            ret = BSP_ERROR_UNKNOWN_FAILURE;
 8006a72:	f06f 0305 	mvn.w	r3, #5
 8006a76:	61fb      	str	r3, [r7, #28]
            break;
 8006a78:	e029      	b.n	8006ace <MY_SD_WriteBlocks+0x1f6>
          }

          if (data_response != (uint8_t)SD_DATA_OK)
 8006a7a:	7cbb      	ldrb	r3, [r7, #18]
 8006a7c:	2b05      	cmp	r3, #5
 8006a7e:	d00f      	beq.n	8006aa0 <MY_SD_WriteBlocks+0x1c8>
          {
            /* Set response value to failure */
            /* Send dummy byte: 8 Clock pulses of delay */
            SD_IO_CSState(1);
 8006a80:	2001      	movs	r0, #1
 8006a82:	f000 f96f 	bl	8006d64 <SD_IO_CSState>
            if(BUS_SPIx_Send(&tmp, 1U) != BSP_ERROR_NONE)
 8006a86:	f107 0313 	add.w	r3, r7, #19
 8006a8a:	2101      	movs	r1, #1
 8006a8c:	4618      	mov	r0, r3
 8006a8e:	f000 ffd1 	bl	8007a34 <BSP_SPI2_Send>
 8006a92:	4603      	mov	r3, r0
 8006a94:	2b00      	cmp	r3, #0
 8006a96:	d003      	beq.n	8006aa0 <MY_SD_WriteBlocks+0x1c8>
            {
              ret = BSP_ERROR_PERIPH_FAILURE;
 8006a98:	f06f 0303 	mvn.w	r3, #3
 8006a9c:	61fb      	str	r3, [r7, #28]
              break;
 8006a9e:	e016      	b.n	8006ace <MY_SD_WriteBlocks+0x1f6>
            }
          }

          SD_IO_CSState(1);
 8006aa0:	2001      	movs	r0, #1
 8006aa2:	f000 f95f 	bl	8006d64 <SD_IO_CSState>
          if(BUS_SPIx_Send(&tmp, 1U) != BSP_ERROR_NONE)
 8006aa6:	f107 0313 	add.w	r3, r7, #19
 8006aaa:	2101      	movs	r1, #1
 8006aac:	4618      	mov	r0, r3
 8006aae:	f000 ffc1 	bl	8007a34 <BSP_SPI2_Send>
 8006ab2:	4603      	mov	r3, r0
 8006ab4:	2b00      	cmp	r3, #0
 8006ab6:	d003      	beq.n	8006ac0 <MY_SD_WriteBlocks+0x1e8>
          {
            ret = BSP_ERROR_PERIPH_FAILURE;
 8006ab8:	f06f 0303 	mvn.w	r3, #3
 8006abc:	61fb      	str	r3, [r7, #28]
            break;
 8006abe:	e006      	b.n	8006ace <MY_SD_WriteBlocks+0x1f6>
          }
        }while ((BlocksNbr != 0U) && (ret == BSP_ERROR_NONE));
 8006ac0:	683b      	ldr	r3, [r7, #0]
 8006ac2:	2b00      	cmp	r3, #0
 8006ac4:	d003      	beq.n	8006ace <MY_SD_WriteBlocks+0x1f6>
 8006ac6:	69fb      	ldr	r3, [r7, #28]
 8006ac8:	2b00      	cmp	r3, #0
 8006aca:	f43f af48 	beq.w	800695e <MY_SD_WriteBlocks+0x86>
      }
    }
  }

  /* Return BSP status */
  return ret;
 8006ace:	69fb      	ldr	r3, [r7, #28]
}
 8006ad0:	4618      	mov	r0, r3
 8006ad2:	3720      	adds	r7, #32
 8006ad4:	46bd      	mov	sp, r7
 8006ad6:	bd80      	pop	{r7, pc}
 8006ad8:	20000048 	.word	0x20000048

08006adc <MY_SD_GetCardState>:
  *          This value can be one of the following values:
  *            @arg  SD_TRANSFER_OK: No data transfer is acting
  *            @arg  SD_TRANSFER_BUSY: Data transfer is acting
  */
int32_t MY_SD_GetCardState(uint32_t Instance)
{
 8006adc:	b580      	push	{r7, lr}
 8006ade:	b086      	sub	sp, #24
 8006ae0:	af00      	add	r7, sp, #0
 8006ae2:	6078      	str	r0, [r7, #4]
  int32_t ret;
  uint32_t response;
  uint8_t tmp;

  if(Instance >= SD_INSTANCES_NBR)
 8006ae4:	687b      	ldr	r3, [r7, #4]
 8006ae6:	2b00      	cmp	r3, #0
 8006ae8:	d003      	beq.n	8006af2 <MY_SD_GetCardState+0x16>
  {
    ret = BSP_ERROR_WRONG_PARAM;
 8006aea:	f06f 0301 	mvn.w	r3, #1
 8006aee:	617b      	str	r3, [r7, #20]
 8006af0:	e026      	b.n	8006b40 <MY_SD_GetCardState+0x64>
  }
  else
  {
    /* Send CMD13 (SD_SEND_STATUS) to get SD status */
    response = SD_SendCmd(SD_CMD_SEND_STATUS, 0, 0xFF, (uint8_t)SD_ANSWER_R2_EXPECTED);
 8006af2:	2302      	movs	r3, #2
 8006af4:	22ff      	movs	r2, #255	; 0xff
 8006af6:	2100      	movs	r1, #0
 8006af8:	200d      	movs	r0, #13
 8006afa:	f000 fc4b 	bl	8007394 <SD_SendCmd>
 8006afe:	6138      	str	r0, [r7, #16]
    SD_IO_CSState(1);
 8006b00:	2001      	movs	r0, #1
 8006b02:	f000 f92f 	bl	8006d64 <SD_IO_CSState>
    tmp = SD_DUMMY_BYTE;
 8006b06:	23ff      	movs	r3, #255	; 0xff
 8006b08:	73fb      	strb	r3, [r7, #15]
    if(BUS_SPIx_Send(&tmp, 1U) != BSP_ERROR_NONE)
 8006b0a:	f107 030f 	add.w	r3, r7, #15
 8006b0e:	2101      	movs	r1, #1
 8006b10:	4618      	mov	r0, r3
 8006b12:	f000 ff8f 	bl	8007a34 <BSP_SPI2_Send>
 8006b16:	4603      	mov	r3, r0
 8006b18:	2b00      	cmp	r3, #0
 8006b1a:	d003      	beq.n	8006b24 <MY_SD_GetCardState+0x48>
    {
      ret = BSP_ERROR_PERIPH_FAILURE;
 8006b1c:	f06f 0303 	mvn.w	r3, #3
 8006b20:	617b      	str	r3, [r7, #20]
 8006b22:	e00d      	b.n	8006b40 <MY_SD_GetCardState+0x64>
    }/* Find SD status according to card state */
    else if(((uint8_t)(response & 0xFFU) == (uint8_t)SD_R1_NO_ERROR) && ((uint8_t)((response & 0xFF00UL) >> 8) == (uint8_t)SD_R2_NO_ERROR))
 8006b24:	693b      	ldr	r3, [r7, #16]
 8006b26:	b2db      	uxtb	r3, r3
 8006b28:	2b00      	cmp	r3, #0
 8006b2a:	d107      	bne.n	8006b3c <MY_SD_GetCardState+0x60>
 8006b2c:	693b      	ldr	r3, [r7, #16]
 8006b2e:	0a1b      	lsrs	r3, r3, #8
 8006b30:	b2db      	uxtb	r3, r3
 8006b32:	2b00      	cmp	r3, #0
 8006b34:	d102      	bne.n	8006b3c <MY_SD_GetCardState+0x60>
    {
      ret = (int32_t)SD_TRANSFER_OK;
 8006b36:	2300      	movs	r3, #0
 8006b38:	617b      	str	r3, [r7, #20]
 8006b3a:	e001      	b.n	8006b40 <MY_SD_GetCardState+0x64>
    }
    else
    {
      //ret = (int32_t)SD_TRANSFER_BUSY;
      ret = (int32_t)SD_TRANSFER_OK;
 8006b3c:	2300      	movs	r3, #0
 8006b3e:	617b      	str	r3, [r7, #20]
    }
  }

  /* Return Status */
  return ret;
 8006b40:	697b      	ldr	r3, [r7, #20]
}
 8006b42:	4618      	mov	r0, r3
 8006b44:	3718      	adds	r7, #24
 8006b46:	46bd      	mov	sp, r7
 8006b48:	bd80      	pop	{r7, pc}
	...

08006b4c <MY_SD_GetCardInfo>:
  * @retval The SD Response:
  *         - MSD_ERROR: Sequence failed
  *         - MSD_OK: Sequence succeed
  */
int32_t MY_SD_GetCardInfo(uint32_t Instance, MY_SD_CardInfo_t *CardInfo)
{
 8006b4c:	b5b0      	push	{r4, r5, r7, lr}
 8006b4e:	b084      	sub	sp, #16
 8006b50:	af00      	add	r7, sp, #0
 8006b52:	6078      	str	r0, [r7, #4]
 8006b54:	6039      	str	r1, [r7, #0]
  int32_t ret = BSP_ERROR_NONE;
 8006b56:	2300      	movs	r3, #0
 8006b58:	60fb      	str	r3, [r7, #12]

  if(Instance >= SD_INSTANCES_NBR)
 8006b5a:	687b      	ldr	r3, [r7, #4]
 8006b5c:	2b00      	cmp	r3, #0
 8006b5e:	d003      	beq.n	8006b68 <MY_SD_GetCardInfo+0x1c>
  {
    ret = BSP_ERROR_WRONG_PARAM;
 8006b60:	f06f 0301 	mvn.w	r3, #1
 8006b64:	60fb      	str	r3, [r7, #12]
 8006b66:	e0aa      	b.n	8006cbe <MY_SD_GetCardInfo+0x172>
  }
  else if(SD_GetCSDRegister(&(CardInfo->Csd)) != BSP_ERROR_NONE)
 8006b68:	683b      	ldr	r3, [r7, #0]
 8006b6a:	4618      	mov	r0, r3
 8006b6c:	f000 f912 	bl	8006d94 <SD_GetCSDRegister>
 8006b70:	4603      	mov	r3, r0
 8006b72:	2b00      	cmp	r3, #0
 8006b74:	d003      	beq.n	8006b7e <MY_SD_GetCardInfo+0x32>
  {
    ret = BSP_ERROR_UNKNOWN_FAILURE;
 8006b76:	f06f 0305 	mvn.w	r3, #5
 8006b7a:	60fb      	str	r3, [r7, #12]
 8006b7c:	e09f      	b.n	8006cbe <MY_SD_GetCardInfo+0x172>
  }
  else if(SD_GetCIDRegister(&(CardInfo->Cid)) != BSP_ERROR_NONE)
 8006b7e:	683b      	ldr	r3, [r7, #0]
 8006b80:	3318      	adds	r3, #24
 8006b82:	4618      	mov	r0, r3
 8006b84:	f000 fb34 	bl	80071f0 <SD_GetCIDRegister>
 8006b88:	4603      	mov	r3, r0
 8006b8a:	2b00      	cmp	r3, #0
 8006b8c:	d003      	beq.n	8006b96 <MY_SD_GetCardInfo+0x4a>
  {
    ret = BSP_ERROR_UNKNOWN_FAILURE;
 8006b8e:	f06f 0305 	mvn.w	r3, #5
 8006b92:	60fb      	str	r3, [r7, #12]
 8006b94:	e093      	b.n	8006cbe <MY_SD_GetCardInfo+0x172>
  }
  else if(CardType == MY_CARD_SDHC)
 8006b96:	4b4c      	ldr	r3, [pc, #304]	; (8006cc8 <MY_SD_GetCardInfo+0x17c>)
 8006b98:	681b      	ldr	r3, [r3, #0]
 8006b9a:	2b01      	cmp	r3, #1
 8006b9c:	d135      	bne.n	8006c0a <MY_SD_GetCardInfo+0xbe>
  {
    CardInfo->LogBlockSize = 512U;
 8006b9e:	683a      	ldr	r2, [r7, #0]
 8006ba0:	f44f 7300 	mov.w	r3, #512	; 0x200
 8006ba4:	f04f 0400 	mov.w	r4, #0
 8006ba8:	e9c2 3416 	strd	r3, r4, [r2, #88]	; 0x58
    CardInfo->CardBlockSize = 512U;
 8006bac:	683a      	ldr	r2, [r7, #0]
 8006bae:	f44f 7300 	mov.w	r3, #512	; 0x200
 8006bb2:	f04f 0400 	mov.w	r4, #0
 8006bb6:	e9c2 3412 	strd	r3, r4, [r2, #72]	; 0x48
    CardInfo->CardCapacity = (CardInfo->Csd.version.v2.DeviceSize + 1U) * 1024U * CardInfo->LogBlockSize;
 8006bba:	683b      	ldr	r3, [r7, #0]
 8006bbc:	689b      	ldr	r3, [r3, #8]
 8006bbe:	f3c3 1395 	ubfx	r3, r3, #6, #22
 8006bc2:	3301      	adds	r3, #1
 8006bc4:	029b      	lsls	r3, r3, #10
 8006bc6:	4619      	mov	r1, r3
 8006bc8:	f04f 0200 	mov.w	r2, #0
 8006bcc:	683b      	ldr	r3, [r7, #0]
 8006bce:	e9d3 3416 	ldrd	r3, r4, [r3, #88]	; 0x58
 8006bd2:	fb03 f502 	mul.w	r5, r3, r2
 8006bd6:	fb01 f004 	mul.w	r0, r1, r4
 8006bda:	4428      	add	r0, r5
 8006bdc:	fba1 3403 	umull	r3, r4, r1, r3
 8006be0:	1902      	adds	r2, r0, r4
 8006be2:	4614      	mov	r4, r2
 8006be4:	683a      	ldr	r2, [r7, #0]
 8006be6:	e9c2 3410 	strd	r3, r4, [r2, #64]	; 0x40
    CardInfo->LogBlockNbr = (CardInfo->CardCapacity) / (CardInfo->LogBlockSize);
 8006bea:	683b      	ldr	r3, [r7, #0]
 8006bec:	e9d3 0110 	ldrd	r0, r1, [r3, #64]	; 0x40
 8006bf0:	683b      	ldr	r3, [r7, #0]
 8006bf2:	e9d3 3416 	ldrd	r3, r4, [r3, #88]	; 0x58
 8006bf6:	461a      	mov	r2, r3
 8006bf8:	4623      	mov	r3, r4
 8006bfa:	f7f9 fb0d 	bl	8000218 <__aeabi_uldivmod>
 8006bfe:	4603      	mov	r3, r0
 8006c00:	460c      	mov	r4, r1
 8006c02:	683a      	ldr	r2, [r7, #0]
 8006c04:	e9c2 3414 	strd	r3, r4, [r2, #80]	; 0x50
 8006c08:	e059      	b.n	8006cbe <MY_SD_GetCardInfo+0x172>
  }
  else
  {
    CardInfo->CardCapacity = ((uint32_t)CardInfo->Csd.version.v1.DeviceSize + 1U) ;
 8006c0a:	683b      	ldr	r3, [r7, #0]
 8006c0c:	891b      	ldrh	r3, [r3, #8]
 8006c0e:	f3c3 038b 	ubfx	r3, r3, #2, #12
 8006c12:	b29b      	uxth	r3, r3
 8006c14:	3301      	adds	r3, #1
 8006c16:	f04f 0400 	mov.w	r4, #0
 8006c1a:	683a      	ldr	r2, [r7, #0]
 8006c1c:	e9c2 3410 	strd	r3, r4, [r2, #64]	; 0x40
    CardInfo->CardCapacity *= (1UL << (CardInfo->Csd.version.v1.DeviceSizeMul + 2U));
 8006c20:	683b      	ldr	r3, [r7, #0]
 8006c22:	e9d3 1210 	ldrd	r1, r2, [r3, #64]	; 0x40
 8006c26:	683b      	ldr	r3, [r7, #0]
 8006c28:	7adb      	ldrb	r3, [r3, #11]
 8006c2a:	f3c3 0382 	ubfx	r3, r3, #2, #3
 8006c2e:	b2db      	uxtb	r3, r3
 8006c30:	3302      	adds	r3, #2
 8006c32:	2001      	movs	r0, #1
 8006c34:	fa00 f303 	lsl.w	r3, r0, r3
 8006c38:	f04f 0400 	mov.w	r4, #0
 8006c3c:	fb03 f502 	mul.w	r5, r3, r2
 8006c40:	fb01 f004 	mul.w	r0, r1, r4
 8006c44:	4428      	add	r0, r5
 8006c46:	fba1 3403 	umull	r3, r4, r1, r3
 8006c4a:	1902      	adds	r2, r0, r4
 8006c4c:	4614      	mov	r4, r2
 8006c4e:	683a      	ldr	r2, [r7, #0]
 8006c50:	e9c2 3410 	strd	r3, r4, [r2, #64]	; 0x40
    CardInfo->LogBlockSize = 512U;
 8006c54:	683a      	ldr	r2, [r7, #0]
 8006c56:	f44f 7300 	mov.w	r3, #512	; 0x200
 8006c5a:	f04f 0400 	mov.w	r4, #0
 8006c5e:	e9c2 3416 	strd	r3, r4, [r2, #88]	; 0x58
    CardInfo->CardBlockSize = (1UL << (uint32_t)CardInfo->Csd.RdBlockLen);
 8006c62:	683b      	ldr	r3, [r7, #0]
 8006c64:	795b      	ldrb	r3, [r3, #5]
 8006c66:	f3c3 1303 	ubfx	r3, r3, #4, #4
 8006c6a:	b2db      	uxtb	r3, r3
 8006c6c:	461a      	mov	r2, r3
 8006c6e:	2301      	movs	r3, #1
 8006c70:	4093      	lsls	r3, r2
 8006c72:	f04f 0400 	mov.w	r4, #0
 8006c76:	683a      	ldr	r2, [r7, #0]
 8006c78:	e9c2 3412 	strd	r3, r4, [r2, #72]	; 0x48
    CardInfo->CardCapacity *= CardInfo->CardBlockSize;
 8006c7c:	683b      	ldr	r3, [r7, #0]
 8006c7e:	e9d3 1210 	ldrd	r1, r2, [r3, #64]	; 0x40
 8006c82:	683b      	ldr	r3, [r7, #0]
 8006c84:	e9d3 3412 	ldrd	r3, r4, [r3, #72]	; 0x48
 8006c88:	fb03 f502 	mul.w	r5, r3, r2
 8006c8c:	fb01 f004 	mul.w	r0, r1, r4
 8006c90:	4428      	add	r0, r5
 8006c92:	fba1 3403 	umull	r3, r4, r1, r3
 8006c96:	1902      	adds	r2, r0, r4
 8006c98:	4614      	mov	r4, r2
 8006c9a:	683a      	ldr	r2, [r7, #0]
 8006c9c:	e9c2 3410 	strd	r3, r4, [r2, #64]	; 0x40
    CardInfo->LogBlockNbr = (CardInfo->CardCapacity) / (CardInfo->LogBlockSize);
 8006ca0:	683b      	ldr	r3, [r7, #0]
 8006ca2:	e9d3 0110 	ldrd	r0, r1, [r3, #64]	; 0x40
 8006ca6:	683b      	ldr	r3, [r7, #0]
 8006ca8:	e9d3 3416 	ldrd	r3, r4, [r3, #88]	; 0x58
 8006cac:	461a      	mov	r2, r3
 8006cae:	4623      	mov	r3, r4
 8006cb0:	f7f9 fab2 	bl	8000218 <__aeabi_uldivmod>
 8006cb4:	4603      	mov	r3, r0
 8006cb6:	460c      	mov	r4, r1
 8006cb8:	683a      	ldr	r2, [r7, #0]
 8006cba:	e9c2 3414 	strd	r3, r4, [r2, #80]	; 0x50
  }

  return ret;
 8006cbe:	68fb      	ldr	r3, [r7, #12]
}
 8006cc0:	4618      	mov	r0, r3
 8006cc2:	3710      	adds	r7, #16
 8006cc4:	46bd      	mov	sp, r7
 8006cc6:	bdb0      	pop	{r4, r5, r7, pc}
 8006cc8:	20000048 	.word	0x20000048

08006ccc <SD_IO_Init>:
  * @brief  Initializes the SD Card and put it into StandBy State (Ready for
  *         data transfer).
  * @retval BSP status
  */
static int32_t SD_IO_Init(void)
{
 8006ccc:	b580      	push	{r7, lr}
 8006cce:	b088      	sub	sp, #32
 8006cd0:	af00      	add	r7, sp, #0
  int32_t ret = BSP_ERROR_NONE;
 8006cd2:	2300      	movs	r3, #0
 8006cd4:	61fb      	str	r3, [r7, #28]
  uint8_t counter = 0, tmp;
 8006cd6:	2300      	movs	r3, #0
 8006cd8:	76fb      	strb	r3, [r7, #27]
  GPIO_InitTypeDef  GPIO_InitStruct;

  /* SD_CS_GPIO Periph clock enable */
  MY_SD_CS_GPIO_CLK_ENABLE();
 8006cda:	4b20      	ldr	r3, [pc, #128]	; (8006d5c <SD_IO_Init+0x90>)
 8006cdc:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8006cde:	4a1f      	ldr	r2, [pc, #124]	; (8006d5c <SD_IO_Init+0x90>)
 8006ce0:	f043 0302 	orr.w	r3, r3, #2
 8006ce4:	64d3      	str	r3, [r2, #76]	; 0x4c
 8006ce6:	4b1d      	ldr	r3, [pc, #116]	; (8006d5c <SD_IO_Init+0x90>)
 8006ce8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8006cea:	f003 0302 	and.w	r3, r3, #2
 8006cee:	603b      	str	r3, [r7, #0]
 8006cf0:	683b      	ldr	r3, [r7, #0]

  /* Configure SD_CS_PIN pin: SD Card CS pin */
  GPIO_InitStruct.Pin   = MY_SD_CS_PIN;
 8006cf2:	2304      	movs	r3, #4
 8006cf4:	607b      	str	r3, [r7, #4]
  GPIO_InitStruct.Mode  = GPIO_MODE_OUTPUT_PP;
 8006cf6:	2301      	movs	r3, #1
 8006cf8:	60bb      	str	r3, [r7, #8]
  GPIO_InitStruct.Pull  = GPIO_PULLUP;
 8006cfa:	2301      	movs	r3, #1
 8006cfc:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8006cfe:	2302      	movs	r3, #2
 8006d00:	613b      	str	r3, [r7, #16]
  HAL_GPIO_Init(MY_SD_CS_GPIO_PORT, &GPIO_InitStruct);
 8006d02:	1d3b      	adds	r3, r7, #4
 8006d04:	4619      	mov	r1, r3
 8006d06:	4816      	ldr	r0, [pc, #88]	; (8006d60 <SD_IO_Init+0x94>)
 8006d08:	f7fb f9f0 	bl	80020ec <HAL_GPIO_Init>

  /*------------Put SD in SPI mode--------------*/
  /* SD SPI Config */
  if(BUS_SPIx_Init() != BSP_ERROR_NONE)
 8006d0c:	f000 fe42 	bl	8007994 <BSP_SPI2_Init>
 8006d10:	4603      	mov	r3, r0
 8006d12:	2b00      	cmp	r3, #0
 8006d14:	d003      	beq.n	8006d1e <SD_IO_Init+0x52>
  {
    ret = BSP_ERROR_NO_INIT;
 8006d16:	f04f 33ff 	mov.w	r3, #4294967295
 8006d1a:	61fb      	str	r3, [r7, #28]
 8006d1c:	e019      	b.n	8006d52 <SD_IO_Init+0x86>
  }
  else
  {
    /* SD chip select high */
    MY_SD_CS_HIGH();
 8006d1e:	2201      	movs	r2, #1
 8006d20:	2104      	movs	r1, #4
 8006d22:	480f      	ldr	r0, [pc, #60]	; (8006d60 <SD_IO_Init+0x94>)
 8006d24:	f7fb fb7c 	bl	8002420 <HAL_GPIO_WritePin>

    /* Send dummy byte 0xFF, 10 times with CS high */
    /* Rise CS and MOSI for 80 clocks cycles */
    tmp = SD_DUMMY_BYTE;
 8006d28:	23ff      	movs	r3, #255	; 0xff
 8006d2a:	76bb      	strb	r3, [r7, #26]

    do
    {
      /* Send dummy byte 0xFF */
      if(BUS_SPIx_Send(&tmp, 1U) != BSP_ERROR_NONE)
 8006d2c:	f107 031a 	add.w	r3, r7, #26
 8006d30:	2101      	movs	r1, #1
 8006d32:	4618      	mov	r0, r3
 8006d34:	f000 fe7e 	bl	8007a34 <BSP_SPI2_Send>
 8006d38:	4603      	mov	r3, r0
 8006d3a:	2b00      	cmp	r3, #0
 8006d3c:	d003      	beq.n	8006d46 <SD_IO_Init+0x7a>
      {
        ret = BSP_ERROR_PERIPH_FAILURE;
 8006d3e:	f06f 0303 	mvn.w	r3, #3
 8006d42:	61fb      	str	r3, [r7, #28]
        break;
 8006d44:	e005      	b.n	8006d52 <SD_IO_Init+0x86>
      }
      counter++;
 8006d46:	7efb      	ldrb	r3, [r7, #27]
 8006d48:	3301      	adds	r3, #1
 8006d4a:	76fb      	strb	r3, [r7, #27]
    }while(counter <= 9U);
 8006d4c:	7efb      	ldrb	r3, [r7, #27]
 8006d4e:	2b09      	cmp	r3, #9
 8006d50:	d9ec      	bls.n	8006d2c <SD_IO_Init+0x60>
  }

  return ret;
 8006d52:	69fb      	ldr	r3, [r7, #28]
}
 8006d54:	4618      	mov	r0, r3
 8006d56:	3720      	adds	r7, #32
 8006d58:	46bd      	mov	sp, r7
 8006d5a:	bd80      	pop	{r7, pc}
 8006d5c:	40021000 	.word	0x40021000
 8006d60:	48000400 	.word	0x48000400

08006d64 <SD_IO_CSState>:
  * @brief  Set the SD_CS pin.
  * @param  Value pin's value.
  * @retval None
  */
static void SD_IO_CSState(uint32_t Value)
{
 8006d64:	b580      	push	{r7, lr}
 8006d66:	b082      	sub	sp, #8
 8006d68:	af00      	add	r7, sp, #0
 8006d6a:	6078      	str	r0, [r7, #4]
  if(Value == 1U)
 8006d6c:	687b      	ldr	r3, [r7, #4]
 8006d6e:	2b01      	cmp	r3, #1
 8006d70:	d105      	bne.n	8006d7e <SD_IO_CSState+0x1a>
  {
    MY_SD_CS_HIGH();
 8006d72:	2201      	movs	r2, #1
 8006d74:	2104      	movs	r1, #4
 8006d76:	4806      	ldr	r0, [pc, #24]	; (8006d90 <SD_IO_CSState+0x2c>)
 8006d78:	f7fb fb52 	bl	8002420 <HAL_GPIO_WritePin>
  }
  else
  {
    MY_SD_CS_LOW();
  }
}
 8006d7c:	e004      	b.n	8006d88 <SD_IO_CSState+0x24>
    MY_SD_CS_LOW();
 8006d7e:	2200      	movs	r2, #0
 8006d80:	2104      	movs	r1, #4
 8006d82:	4803      	ldr	r0, [pc, #12]	; (8006d90 <SD_IO_CSState+0x2c>)
 8006d84:	f7fb fb4c 	bl	8002420 <HAL_GPIO_WritePin>
}
 8006d88:	bf00      	nop
 8006d8a:	3708      	adds	r7, #8
 8006d8c:	46bd      	mov	sp, r7
 8006d8e:	bd80      	pop	{r7, pc}
 8006d90:	48000400 	.word	0x48000400

08006d94 <SD_GetCSDRegister>:
  *         read-block transaction.
  * @param  Csd pointer on an SCD register structure
  * @retval SD status
  */
static int32_t SD_GetCSDRegister(SD_CardSpecificData_t* Csd)
{
 8006d94:	b580      	push	{r7, lr}
 8006d96:	b096      	sub	sp, #88	; 0x58
 8006d98:	af00      	add	r7, sp, #0
 8006d9a:	6078      	str	r0, [r7, #4]
  int32_t ret = BSP_ERROR_NONE;
 8006d9c:	2300      	movs	r3, #0
 8006d9e:	657b      	str	r3, [r7, #84]	; 0x54
  uint32_t CSD_Tab[16];
  uint32_t response;
  uint8_t tmp;

  /* Send CMD9 (CSD register) or CMD10(CSD register) and Wait for response in the R1 format (0x00 is no errors) */
  response = SD_SendCmd(SD_CMD_SEND_CSD, 0U, 0xFFU, (uint8_t)SD_ANSWER_R1_EXPECTED);
 8006da0:	2300      	movs	r3, #0
 8006da2:	22ff      	movs	r2, #255	; 0xff
 8006da4:	2100      	movs	r1, #0
 8006da6:	2009      	movs	r0, #9
 8006da8:	f000 faf4 	bl	8007394 <SD_SendCmd>
 8006dac:	64f8      	str	r0, [r7, #76]	; 0x4c
  if((uint8_t)(response & 0xFFU) == (uint8_t)SD_R1_NO_ERROR)
 8006dae:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8006db0:	b2db      	uxtb	r3, r3
 8006db2:	2b00      	cmp	r3, #0
 8006db4:	f040 8202 	bne.w	80071bc <SD_GetCSDRegister+0x428>
  {
    if(SD_WaitData(SD_TOKEN_START_DATA_SINGLE_BLOCK_READ) == BSP_ERROR_NONE)
 8006db8:	20fe      	movs	r0, #254	; 0xfe
 8006dba:	f000 fda9 	bl	8007910 <SD_WaitData>
 8006dbe:	4603      	mov	r3, r0
 8006dc0:	2b00      	cmp	r3, #0
 8006dc2:	f040 81fe 	bne.w	80071c2 <SD_GetCSDRegister+0x42e>
    {
      tmp = SD_DUMMY_BYTE;
 8006dc6:	23ff      	movs	r3, #255	; 0xff
 8006dc8:	72fb      	strb	r3, [r7, #11]
      for (counter = 0U; counter < 16U; counter++)
 8006dca:	2300      	movs	r3, #0
 8006dcc:	653b      	str	r3, [r7, #80]	; 0x50
 8006dce:	e014      	b.n	8006dfa <SD_GetCSDRegister+0x66>
      {
        /* Store CSD register value on CSD_Tab */
        if(BUS_SPIx_SendRecv(&tmp, (uint8_t*)&CSD_Tab[counter], 1U) != BSP_ERROR_NONE)
 8006dd0:	f107 020c 	add.w	r2, r7, #12
 8006dd4:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8006dd6:	009b      	lsls	r3, r3, #2
 8006dd8:	18d1      	adds	r1, r2, r3
 8006dda:	f107 030b 	add.w	r3, r7, #11
 8006dde:	2201      	movs	r2, #1
 8006de0:	4618      	mov	r0, r3
 8006de2:	f000 fe5f 	bl	8007aa4 <BSP_SPI2_SendRecv>
 8006de6:	4603      	mov	r3, r0
 8006de8:	2b00      	cmp	r3, #0
 8006dea:	d003      	beq.n	8006df4 <SD_GetCSDRegister+0x60>
        {
          ret = BSP_ERROR_PERIPH_FAILURE;
 8006dec:	f06f 0303 	mvn.w	r3, #3
 8006df0:	657b      	str	r3, [r7, #84]	; 0x54
          break;
 8006df2:	e005      	b.n	8006e00 <SD_GetCSDRegister+0x6c>
      for (counter = 0U; counter < 16U; counter++)
 8006df4:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8006df6:	3301      	adds	r3, #1
 8006df8:	653b      	str	r3, [r7, #80]	; 0x50
 8006dfa:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8006dfc:	2b0f      	cmp	r3, #15
 8006dfe:	d9e7      	bls.n	8006dd0 <SD_GetCSDRegister+0x3c>
        }
      }

      if(ret == BSP_ERROR_NONE)
 8006e00:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8006e02:	2b00      	cmp	r3, #0
 8006e04:	f040 81dd 	bne.w	80071c2 <SD_GetCSDRegister+0x42e>
      {
        /* Get CRC bytes (not really needed by us, but required by SD) */
        if(BUS_SPIx_Send(&tmp, 1U) != BSP_ERROR_NONE)
 8006e08:	f107 030b 	add.w	r3, r7, #11
 8006e0c:	2101      	movs	r1, #1
 8006e0e:	4618      	mov	r0, r3
 8006e10:	f000 fe10 	bl	8007a34 <BSP_SPI2_Send>
 8006e14:	4603      	mov	r3, r0
 8006e16:	2b00      	cmp	r3, #0
 8006e18:	d003      	beq.n	8006e22 <SD_GetCSDRegister+0x8e>
        {
          ret = BSP_ERROR_PERIPH_FAILURE;
 8006e1a:	f06f 0303 	mvn.w	r3, #3
 8006e1e:	657b      	str	r3, [r7, #84]	; 0x54
 8006e20:	e1cf      	b.n	80071c2 <SD_GetCSDRegister+0x42e>
        }
        else if(BUS_SPIx_Send(&tmp, 1U) != BSP_ERROR_NONE)
 8006e22:	f107 030b 	add.w	r3, r7, #11
 8006e26:	2101      	movs	r1, #1
 8006e28:	4618      	mov	r0, r3
 8006e2a:	f000 fe03 	bl	8007a34 <BSP_SPI2_Send>
 8006e2e:	4603      	mov	r3, r0
 8006e30:	2b00      	cmp	r3, #0
 8006e32:	d003      	beq.n	8006e3c <SD_GetCSDRegister+0xa8>
        {
          ret = BSP_ERROR_PERIPH_FAILURE;
 8006e34:	f06f 0303 	mvn.w	r3, #3
 8006e38:	657b      	str	r3, [r7, #84]	; 0x54
 8006e3a:	e1c2      	b.n	80071c2 <SD_GetCSDRegister+0x42e>
          /*************************************************************************
          CSD header decoding
          *************************************************************************/

          /* Byte 0 */
          Csd->CSDStruct = (CSD_Tab[0] & 0xC0U) >> 6U;
 8006e3c:	68fb      	ldr	r3, [r7, #12]
 8006e3e:	099b      	lsrs	r3, r3, #6
 8006e40:	f003 0303 	and.w	r3, r3, #3
 8006e44:	b2d9      	uxtb	r1, r3
 8006e46:	687a      	ldr	r2, [r7, #4]
 8006e48:	7813      	ldrb	r3, [r2, #0]
 8006e4a:	f361 0301 	bfi	r3, r1, #0, #2
 8006e4e:	7013      	strb	r3, [r2, #0]
          Csd->Reserved1 =  CSD_Tab[0] & 0x3FU;
 8006e50:	68fb      	ldr	r3, [r7, #12]
 8006e52:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8006e56:	b2d9      	uxtb	r1, r3
 8006e58:	687a      	ldr	r2, [r7, #4]
 8006e5a:	7813      	ldrb	r3, [r2, #0]
 8006e5c:	f361 0387 	bfi	r3, r1, #2, #6
 8006e60:	7013      	strb	r3, [r2, #0]

          /* Byte 1 */
          Csd->TAAC = CSD_Tab[1];
 8006e62:	693b      	ldr	r3, [r7, #16]
 8006e64:	b2da      	uxtb	r2, r3
 8006e66:	687b      	ldr	r3, [r7, #4]
 8006e68:	705a      	strb	r2, [r3, #1]

          /* Byte 2 */
          Csd->NSAC = CSD_Tab[2];
 8006e6a:	697b      	ldr	r3, [r7, #20]
 8006e6c:	b2da      	uxtb	r2, r3
 8006e6e:	687b      	ldr	r3, [r7, #4]
 8006e70:	709a      	strb	r2, [r3, #2]

          /* Byte 3 */
          Csd->MaxBusClkFrec = CSD_Tab[3];
 8006e72:	69bb      	ldr	r3, [r7, #24]
 8006e74:	b2da      	uxtb	r2, r3
 8006e76:	687b      	ldr	r3, [r7, #4]
 8006e78:	70da      	strb	r2, [r3, #3]

          /* Byte 4/5 */
          Csd->CardComdClasses = (uint16_t)(((uint16_t)CSD_Tab[4] << 4U) | ((uint16_t)(CSD_Tab[5] & 0xF0U) >> 4U));
 8006e7a:	69fb      	ldr	r3, [r7, #28]
 8006e7c:	b29b      	uxth	r3, r3
 8006e7e:	011b      	lsls	r3, r3, #4
 8006e80:	b21a      	sxth	r2, r3
 8006e82:	6a3b      	ldr	r3, [r7, #32]
 8006e84:	b29b      	uxth	r3, r3
 8006e86:	111b      	asrs	r3, r3, #4
 8006e88:	b21b      	sxth	r3, r3
 8006e8a:	f003 030f 	and.w	r3, r3, #15
 8006e8e:	b21b      	sxth	r3, r3
 8006e90:	4313      	orrs	r3, r2
 8006e92:	b21b      	sxth	r3, r3
 8006e94:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8006e98:	b299      	uxth	r1, r3
 8006e9a:	687a      	ldr	r2, [r7, #4]
 8006e9c:	8893      	ldrh	r3, [r2, #4]
 8006e9e:	f361 030b 	bfi	r3, r1, #0, #12
 8006ea2:	8093      	strh	r3, [r2, #4]
          Csd->RdBlockLen = CSD_Tab[5] & 0x0FU;
 8006ea4:	6a3b      	ldr	r3, [r7, #32]
 8006ea6:	f003 030f 	and.w	r3, r3, #15
 8006eaa:	b2d9      	uxtb	r1, r3
 8006eac:	687a      	ldr	r2, [r7, #4]
 8006eae:	7953      	ldrb	r3, [r2, #5]
 8006eb0:	f361 1307 	bfi	r3, r1, #4, #4
 8006eb4:	7153      	strb	r3, [r2, #5]

          /* Byte 6 */
          Csd->PartBlockRead   = (CSD_Tab[6] & 0x80U) >> 7U;
 8006eb6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006eb8:	09db      	lsrs	r3, r3, #7
 8006eba:	f003 0301 	and.w	r3, r3, #1
 8006ebe:	b2d9      	uxtb	r1, r3
 8006ec0:	687a      	ldr	r2, [r7, #4]
 8006ec2:	7993      	ldrb	r3, [r2, #6]
 8006ec4:	f361 0300 	bfi	r3, r1, #0, #1
 8006ec8:	7193      	strb	r3, [r2, #6]
          Csd->WrBlockMisalign = (CSD_Tab[6] & 0x40U) >> 6U;
 8006eca:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006ecc:	099b      	lsrs	r3, r3, #6
 8006ece:	f003 0301 	and.w	r3, r3, #1
 8006ed2:	b2d9      	uxtb	r1, r3
 8006ed4:	687a      	ldr	r2, [r7, #4]
 8006ed6:	7993      	ldrb	r3, [r2, #6]
 8006ed8:	f361 0341 	bfi	r3, r1, #1, #1
 8006edc:	7193      	strb	r3, [r2, #6]
          Csd->RdBlockMisalign = (CSD_Tab[6] & 0x20U) >> 5U;
 8006ede:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006ee0:	095b      	lsrs	r3, r3, #5
 8006ee2:	f003 0301 	and.w	r3, r3, #1
 8006ee6:	b2d9      	uxtb	r1, r3
 8006ee8:	687a      	ldr	r2, [r7, #4]
 8006eea:	7993      	ldrb	r3, [r2, #6]
 8006eec:	f361 0382 	bfi	r3, r1, #2, #1
 8006ef0:	7193      	strb	r3, [r2, #6]
          Csd->DSRImpl         = (CSD_Tab[6] & 0x10U) >> 4U;
 8006ef2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006ef4:	091b      	lsrs	r3, r3, #4
 8006ef6:	f003 0301 	and.w	r3, r3, #1
 8006efa:	b2d9      	uxtb	r1, r3
 8006efc:	687a      	ldr	r2, [r7, #4]
 8006efe:	7993      	ldrb	r3, [r2, #6]
 8006f00:	f361 03c3 	bfi	r3, r1, #3, #1
 8006f04:	7193      	strb	r3, [r2, #6]

          /*************************************************************************
          CSD v1/v2 decoding
          *************************************************************************/

          if(CardType == MY_CARD_SDSC)
 8006f06:	4bac      	ldr	r3, [pc, #688]	; (80071b8 <SD_GetCSDRegister+0x424>)
 8006f08:	681b      	ldr	r3, [r3, #0]
 8006f0a:	2b00      	cmp	r3, #0
 8006f0c:	d165      	bne.n	8006fda <SD_GetCSDRegister+0x246>
          {
            Csd->version.v1.Reserved1 = ((CSD_Tab[6] & 0x0CU) >> 2U);
 8006f0e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006f10:	089b      	lsrs	r3, r3, #2
 8006f12:	f003 0303 	and.w	r3, r3, #3
 8006f16:	b2d9      	uxtb	r1, r3
 8006f18:	687a      	ldr	r2, [r7, #4]
 8006f1a:	7a13      	ldrb	r3, [r2, #8]
 8006f1c:	f361 0301 	bfi	r3, r1, #0, #2
 8006f20:	7213      	strb	r3, [r2, #8]

            Csd->version.v1.DeviceSize =  ((CSD_Tab[6] & 0x03U) << 10U) | (CSD_Tab[7] << 2U) | ((CSD_Tab[8] & 0xC0U) >> 6U);
 8006f22:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006f24:	b29b      	uxth	r3, r3
 8006f26:	029b      	lsls	r3, r3, #10
 8006f28:	b29b      	uxth	r3, r3
 8006f2a:	f403 6340 	and.w	r3, r3, #3072	; 0xc00
 8006f2e:	b29a      	uxth	r2, r3
 8006f30:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8006f32:	b29b      	uxth	r3, r3
 8006f34:	009b      	lsls	r3, r3, #2
 8006f36:	b29b      	uxth	r3, r3
 8006f38:	4313      	orrs	r3, r2
 8006f3a:	b29a      	uxth	r2, r3
 8006f3c:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8006f3e:	099b      	lsrs	r3, r3, #6
 8006f40:	b29b      	uxth	r3, r3
 8006f42:	f003 0303 	and.w	r3, r3, #3
 8006f46:	b29b      	uxth	r3, r3
 8006f48:	4313      	orrs	r3, r2
 8006f4a:	b29b      	uxth	r3, r3
 8006f4c:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8006f50:	b299      	uxth	r1, r3
 8006f52:	687a      	ldr	r2, [r7, #4]
 8006f54:	8913      	ldrh	r3, [r2, #8]
 8006f56:	f361 038d 	bfi	r3, r1, #2, #12
 8006f5a:	8113      	strh	r3, [r2, #8]
            Csd->version.v1.MaxRdCurrentVDDMin = (CSD_Tab[8] & 0x38U) >> 3U;
 8006f5c:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8006f5e:	08db      	lsrs	r3, r3, #3
 8006f60:	f003 0307 	and.w	r3, r3, #7
 8006f64:	b2d9      	uxtb	r1, r3
 8006f66:	687a      	ldr	r2, [r7, #4]
 8006f68:	6893      	ldr	r3, [r2, #8]
 8006f6a:	f361 3390 	bfi	r3, r1, #14, #3
 8006f6e:	6093      	str	r3, [r2, #8]
            Csd->version.v1.MaxRdCurrentVDDMax = (CSD_Tab[8] & 0x07U);
 8006f70:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8006f72:	f003 0307 	and.w	r3, r3, #7
 8006f76:	b2d9      	uxtb	r1, r3
 8006f78:	687a      	ldr	r2, [r7, #4]
 8006f7a:	7a93      	ldrb	r3, [r2, #10]
 8006f7c:	f361 0343 	bfi	r3, r1, #1, #3
 8006f80:	7293      	strb	r3, [r2, #10]
            Csd->version.v1.MaxWrCurrentVDDMin = (CSD_Tab[9] & 0xE0U) >> 5U;
 8006f82:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8006f84:	095b      	lsrs	r3, r3, #5
 8006f86:	f003 0307 	and.w	r3, r3, #7
 8006f8a:	b2d9      	uxtb	r1, r3
 8006f8c:	687a      	ldr	r2, [r7, #4]
 8006f8e:	7a93      	ldrb	r3, [r2, #10]
 8006f90:	f361 1306 	bfi	r3, r1, #4, #3
 8006f94:	7293      	strb	r3, [r2, #10]
            Csd->version.v1.MaxWrCurrentVDDMax = (CSD_Tab[9] & 0x1CU) >> 2U;
 8006f96:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8006f98:	089b      	lsrs	r3, r3, #2
 8006f9a:	f003 0307 	and.w	r3, r3, #7
 8006f9e:	b2d9      	uxtb	r1, r3
 8006fa0:	687a      	ldr	r2, [r7, #4]
 8006fa2:	8953      	ldrh	r3, [r2, #10]
 8006fa4:	f361 13c9 	bfi	r3, r1, #7, #3
 8006fa8:	8153      	strh	r3, [r2, #10]
            Csd->version.v1.DeviceSizeMul = ((CSD_Tab[9] & 0x03U) << 1U) | ((CSD_Tab[10] & 0x80U) >> 7U);
 8006faa:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8006fac:	b2db      	uxtb	r3, r3
 8006fae:	005b      	lsls	r3, r3, #1
 8006fb0:	b2db      	uxtb	r3, r3
 8006fb2:	f003 0306 	and.w	r3, r3, #6
 8006fb6:	b2da      	uxtb	r2, r3
 8006fb8:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8006fba:	09db      	lsrs	r3, r3, #7
 8006fbc:	b2db      	uxtb	r3, r3
 8006fbe:	f003 0301 	and.w	r3, r3, #1
 8006fc2:	b2db      	uxtb	r3, r3
 8006fc4:	4313      	orrs	r3, r2
 8006fc6:	b2db      	uxtb	r3, r3
 8006fc8:	f003 0307 	and.w	r3, r3, #7
 8006fcc:	b2d9      	uxtb	r1, r3
 8006fce:	687a      	ldr	r2, [r7, #4]
 8006fd0:	7ad3      	ldrb	r3, [r2, #11]
 8006fd2:	f361 0384 	bfi	r3, r1, #2, #3
 8006fd6:	72d3      	strb	r3, [r2, #11]
 8006fd8:	e02b      	b.n	8007032 <SD_GetCSDRegister+0x29e>
          }
          else
          {
            Csd->version.v2.Reserved1 = ((CSD_Tab[6] & 0x0FU) << 2U) | ((CSD_Tab[7] & 0xC0U) >> 6U);
 8006fda:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006fdc:	b2db      	uxtb	r3, r3
 8006fde:	009b      	lsls	r3, r3, #2
 8006fe0:	b2db      	uxtb	r3, r3
 8006fe2:	f003 033c 	and.w	r3, r3, #60	; 0x3c
 8006fe6:	b2da      	uxtb	r2, r3
 8006fe8:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8006fea:	099b      	lsrs	r3, r3, #6
 8006fec:	b2db      	uxtb	r3, r3
 8006fee:	f003 0303 	and.w	r3, r3, #3
 8006ff2:	b2db      	uxtb	r3, r3
 8006ff4:	4313      	orrs	r3, r2
 8006ff6:	b2db      	uxtb	r3, r3
 8006ff8:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8006ffc:	b2d9      	uxtb	r1, r3
 8006ffe:	687a      	ldr	r2, [r7, #4]
 8007000:	7a13      	ldrb	r3, [r2, #8]
 8007002:	f361 0305 	bfi	r3, r1, #0, #6
 8007006:	7213      	strb	r3, [r2, #8]
            Csd->version.v2.DeviceSize= ((CSD_Tab[7] & 0x3FU) << 16U) | (CSD_Tab[8] << 8U) | CSD_Tab[9];
 8007008:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800700a:	041b      	lsls	r3, r3, #16
 800700c:	f403 127c 	and.w	r2, r3, #4128768	; 0x3f0000
 8007010:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8007012:	021b      	lsls	r3, r3, #8
 8007014:	431a      	orrs	r2, r3
 8007016:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8007018:	4313      	orrs	r3, r2
 800701a:	f3c3 0115 	ubfx	r1, r3, #0, #22
 800701e:	687a      	ldr	r2, [r7, #4]
 8007020:	6893      	ldr	r3, [r2, #8]
 8007022:	f361 139b 	bfi	r3, r1, #6, #22
 8007026:	6093      	str	r3, [r2, #8]
            Csd->version.v2.Reserved2 = ((CSD_Tab[10] & 0x80U) >> 8U);
 8007028:	687a      	ldr	r2, [r7, #4]
 800702a:	7ad3      	ldrb	r3, [r2, #11]
 800702c:	f36f 1304 	bfc	r3, #4, #1
 8007030:	72d3      	strb	r3, [r2, #11]
          }

          Csd->EraseSingleBlockEnable = (CSD_Tab[10] & 0x40U) >> 6U;
 8007032:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8007034:	099b      	lsrs	r3, r3, #6
 8007036:	f003 0301 	and.w	r3, r3, #1
 800703a:	b2d9      	uxtb	r1, r3
 800703c:	687a      	ldr	r2, [r7, #4]
 800703e:	7c13      	ldrb	r3, [r2, #16]
 8007040:	f361 0300 	bfi	r3, r1, #0, #1
 8007044:	7413      	strb	r3, [r2, #16]
          Csd->EraseSectorSize   = ((CSD_Tab[10] & 0x3FU) << 1U) | ((CSD_Tab[11] & 0x80U) >> 7U);
 8007046:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8007048:	b2db      	uxtb	r3, r3
 800704a:	005b      	lsls	r3, r3, #1
 800704c:	b2db      	uxtb	r3, r3
 800704e:	f003 037e 	and.w	r3, r3, #126	; 0x7e
 8007052:	b2da      	uxtb	r2, r3
 8007054:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8007056:	09db      	lsrs	r3, r3, #7
 8007058:	b2db      	uxtb	r3, r3
 800705a:	f003 0301 	and.w	r3, r3, #1
 800705e:	b2db      	uxtb	r3, r3
 8007060:	4313      	orrs	r3, r2
 8007062:	b2db      	uxtb	r3, r3
 8007064:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8007068:	b2d9      	uxtb	r1, r3
 800706a:	687a      	ldr	r2, [r7, #4]
 800706c:	7c13      	ldrb	r3, [r2, #16]
 800706e:	f361 0347 	bfi	r3, r1, #1, #7
 8007072:	7413      	strb	r3, [r2, #16]
          Csd->WrProtectGrSize   = (CSD_Tab[11] & 0x7FU);
 8007074:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8007076:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 800707a:	b2d9      	uxtb	r1, r3
 800707c:	687a      	ldr	r2, [r7, #4]
 800707e:	7c53      	ldrb	r3, [r2, #17]
 8007080:	f361 0306 	bfi	r3, r1, #0, #7
 8007084:	7453      	strb	r3, [r2, #17]
          Csd->WrProtectGrEnable = (CSD_Tab[12] & 0x80U) >> 7U;
 8007086:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8007088:	09db      	lsrs	r3, r3, #7
 800708a:	f003 0301 	and.w	r3, r3, #1
 800708e:	b2d9      	uxtb	r1, r3
 8007090:	687a      	ldr	r2, [r7, #4]
 8007092:	7c53      	ldrb	r3, [r2, #17]
 8007094:	f361 13c7 	bfi	r3, r1, #7, #1
 8007098:	7453      	strb	r3, [r2, #17]
          Csd->Reserved2         = (CSD_Tab[12] & 0x60U) >> 5U;
 800709a:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800709c:	095b      	lsrs	r3, r3, #5
 800709e:	f003 0303 	and.w	r3, r3, #3
 80070a2:	b2d9      	uxtb	r1, r3
 80070a4:	687a      	ldr	r2, [r7, #4]
 80070a6:	7c93      	ldrb	r3, [r2, #18]
 80070a8:	f361 0301 	bfi	r3, r1, #0, #2
 80070ac:	7493      	strb	r3, [r2, #18]
          Csd->WrSpeedFact       = (CSD_Tab[12] & 0x1CU) >> 2U;
 80070ae:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 80070b0:	089b      	lsrs	r3, r3, #2
 80070b2:	f003 0307 	and.w	r3, r3, #7
 80070b6:	b2d9      	uxtb	r1, r3
 80070b8:	687a      	ldr	r2, [r7, #4]
 80070ba:	7c93      	ldrb	r3, [r2, #18]
 80070bc:	f361 0384 	bfi	r3, r1, #2, #3
 80070c0:	7493      	strb	r3, [r2, #18]
          Csd->MaxWrBlockLen     = ((CSD_Tab[12] & 0x03U) << 2U) | ((CSD_Tab[13] & 0xC0U) >> 6U);
 80070c2:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 80070c4:	b2db      	uxtb	r3, r3
 80070c6:	009b      	lsls	r3, r3, #2
 80070c8:	b2db      	uxtb	r3, r3
 80070ca:	f003 030c 	and.w	r3, r3, #12
 80070ce:	b2da      	uxtb	r2, r3
 80070d0:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 80070d2:	099b      	lsrs	r3, r3, #6
 80070d4:	b2db      	uxtb	r3, r3
 80070d6:	f003 0303 	and.w	r3, r3, #3
 80070da:	b2db      	uxtb	r3, r3
 80070dc:	4313      	orrs	r3, r2
 80070de:	b2db      	uxtb	r3, r3
 80070e0:	f003 030f 	and.w	r3, r3, #15
 80070e4:	b2d9      	uxtb	r1, r3
 80070e6:	687a      	ldr	r2, [r7, #4]
 80070e8:	8a53      	ldrh	r3, [r2, #18]
 80070ea:	f361 1348 	bfi	r3, r1, #5, #4
 80070ee:	8253      	strh	r3, [r2, #18]
          Csd->WriteBlockPartial = (CSD_Tab[13] & 0x20U) >> 5U;
 80070f0:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 80070f2:	095b      	lsrs	r3, r3, #5
 80070f4:	f003 0301 	and.w	r3, r3, #1
 80070f8:	b2d9      	uxtb	r1, r3
 80070fa:	687a      	ldr	r2, [r7, #4]
 80070fc:	7cd3      	ldrb	r3, [r2, #19]
 80070fe:	f361 0341 	bfi	r3, r1, #1, #1
 8007102:	74d3      	strb	r3, [r2, #19]
          Csd->Reserved3         = (CSD_Tab[13] & 0x1FU);
 8007104:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8007106:	f003 031f 	and.w	r3, r3, #31
 800710a:	b2d9      	uxtb	r1, r3
 800710c:	687a      	ldr	r2, [r7, #4]
 800710e:	7cd3      	ldrb	r3, [r2, #19]
 8007110:	f361 0386 	bfi	r3, r1, #2, #5
 8007114:	74d3      	strb	r3, [r2, #19]
          Csd->FileFormatGrouop  = (CSD_Tab[14] & 0x80U) >> 7U;
 8007116:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8007118:	09db      	lsrs	r3, r3, #7
 800711a:	f003 0301 	and.w	r3, r3, #1
 800711e:	b2d9      	uxtb	r1, r3
 8007120:	687a      	ldr	r2, [r7, #4]
 8007122:	7cd3      	ldrb	r3, [r2, #19]
 8007124:	f361 13c7 	bfi	r3, r1, #7, #1
 8007128:	74d3      	strb	r3, [r2, #19]
          Csd->CopyFlag          = (CSD_Tab[14] & 0x40U) >> 6U;
 800712a:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 800712c:	099b      	lsrs	r3, r3, #6
 800712e:	f003 0301 	and.w	r3, r3, #1
 8007132:	b2d9      	uxtb	r1, r3
 8007134:	687a      	ldr	r2, [r7, #4]
 8007136:	7d13      	ldrb	r3, [r2, #20]
 8007138:	f361 0300 	bfi	r3, r1, #0, #1
 800713c:	7513      	strb	r3, [r2, #20]
          Csd->PermWrProtect     = (CSD_Tab[14] & 0x20U) >> 5U;
 800713e:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8007140:	095b      	lsrs	r3, r3, #5
 8007142:	f003 0301 	and.w	r3, r3, #1
 8007146:	b2d9      	uxtb	r1, r3
 8007148:	687a      	ldr	r2, [r7, #4]
 800714a:	7d13      	ldrb	r3, [r2, #20]
 800714c:	f361 0341 	bfi	r3, r1, #1, #1
 8007150:	7513      	strb	r3, [r2, #20]
          Csd->TempWrProtect     = (CSD_Tab[14] & 0x10U) >> 4U;
 8007152:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8007154:	091b      	lsrs	r3, r3, #4
 8007156:	f003 0301 	and.w	r3, r3, #1
 800715a:	b2d9      	uxtb	r1, r3
 800715c:	687a      	ldr	r2, [r7, #4]
 800715e:	7d13      	ldrb	r3, [r2, #20]
 8007160:	f361 0382 	bfi	r3, r1, #2, #1
 8007164:	7513      	strb	r3, [r2, #20]
          Csd->FileFormat        = (CSD_Tab[14] & 0x0CU) >> 2U;
 8007166:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8007168:	089b      	lsrs	r3, r3, #2
 800716a:	f003 0303 	and.w	r3, r3, #3
 800716e:	b2d9      	uxtb	r1, r3
 8007170:	687a      	ldr	r2, [r7, #4]
 8007172:	7d13      	ldrb	r3, [r2, #20]
 8007174:	f361 03c4 	bfi	r3, r1, #3, #2
 8007178:	7513      	strb	r3, [r2, #20]
          Csd->Reserved4         = (CSD_Tab[14] & 0x03U);
 800717a:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 800717c:	f003 0303 	and.w	r3, r3, #3
 8007180:	b2d9      	uxtb	r1, r3
 8007182:	687a      	ldr	r2, [r7, #4]
 8007184:	7d13      	ldrb	r3, [r2, #20]
 8007186:	f361 1346 	bfi	r3, r1, #5, #2
 800718a:	7513      	strb	r3, [r2, #20]
          Csd->crc               = (CSD_Tab[15] & 0xFEU) >> 1U;
 800718c:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 800718e:	085b      	lsrs	r3, r3, #1
 8007190:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8007194:	b2d9      	uxtb	r1, r3
 8007196:	687a      	ldr	r2, [r7, #4]
 8007198:	8a93      	ldrh	r3, [r2, #20]
 800719a:	f361 13cd 	bfi	r3, r1, #7, #7
 800719e:	8293      	strh	r3, [r2, #20]
          Csd->Reserved5         = (CSD_Tab[15] & 0x01U);
 80071a0:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 80071a2:	f003 0301 	and.w	r3, r3, #1
 80071a6:	b2d9      	uxtb	r1, r3
 80071a8:	687a      	ldr	r2, [r7, #4]
 80071aa:	7d53      	ldrb	r3, [r2, #21]
 80071ac:	f361 1386 	bfi	r3, r1, #6, #1
 80071b0:	7553      	strb	r3, [r2, #21]

          ret = BSP_ERROR_NONE;
 80071b2:	2300      	movs	r3, #0
 80071b4:	657b      	str	r3, [r7, #84]	; 0x54
 80071b6:	e004      	b.n	80071c2 <SD_GetCSDRegister+0x42e>
 80071b8:	20000048 	.word	0x20000048
      }
    }
  }
  else
  {
    ret = BSP_ERROR_UNKNOWN_FAILURE;
 80071bc:	f06f 0305 	mvn.w	r3, #5
 80071c0:	657b      	str	r3, [r7, #84]	; 0x54
  }

  if(ret == BSP_ERROR_NONE)
 80071c2:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 80071c4:	2b00      	cmp	r3, #0
 80071c6:	d10e      	bne.n	80071e6 <SD_GetCSDRegister+0x452>
  {
    /* Send dummy byte: 8 Clock pulses of delay */
    SD_IO_CSState(1);
 80071c8:	2001      	movs	r0, #1
 80071ca:	f7ff fdcb 	bl	8006d64 <SD_IO_CSState>

    if(BUS_SPIx_Send(&tmp, 1U) != BSP_ERROR_NONE)
 80071ce:	f107 030b 	add.w	r3, r7, #11
 80071d2:	2101      	movs	r1, #1
 80071d4:	4618      	mov	r0, r3
 80071d6:	f000 fc2d 	bl	8007a34 <BSP_SPI2_Send>
 80071da:	4603      	mov	r3, r0
 80071dc:	2b00      	cmp	r3, #0
 80071de:	d002      	beq.n	80071e6 <SD_GetCSDRegister+0x452>
    {
      ret = BSP_ERROR_PERIPH_FAILURE;
 80071e0:	f06f 0303 	mvn.w	r3, #3
 80071e4:	657b      	str	r3, [r7, #84]	; 0x54
    }
  }

  /* Return the reponse */
  return ret;
 80071e6:	6d7b      	ldr	r3, [r7, #84]	; 0x54
}
 80071e8:	4618      	mov	r0, r3
 80071ea:	3758      	adds	r7, #88	; 0x58
 80071ec:	46bd      	mov	sp, r7
 80071ee:	bd80      	pop	{r7, pc}

080071f0 <SD_GetCIDRegister>:
  *         read-block transaction.
  * @param  Cid: pointer on an CID register structure
  * @retval SD status
  */
static int32_t SD_GetCIDRegister(SD_CardIdData_t* Cid)
{
 80071f0:	b580      	push	{r7, lr}
 80071f2:	b096      	sub	sp, #88	; 0x58
 80071f4:	af00      	add	r7, sp, #0
 80071f6:	6078      	str	r0, [r7, #4]
  int32_t ret = BSP_ERROR_NONE;
 80071f8:	2300      	movs	r3, #0
 80071fa:	657b      	str	r3, [r7, #84]	; 0x54
  uint32_t response;
  uint32_t counter;
  uint8_t tmp;

  /* Send CMD10 (CID register) and Wait for response in the R1 format (0x00 is no errors) */
  response = SD_SendCmd(SD_CMD_SEND_CID, 0U, 0xFFU, (uint8_t)SD_ANSWER_R1_EXPECTED);
 80071fc:	2300      	movs	r3, #0
 80071fe:	22ff      	movs	r2, #255	; 0xff
 8007200:	2100      	movs	r1, #0
 8007202:	200a      	movs	r0, #10
 8007204:	f000 f8c6 	bl	8007394 <SD_SendCmd>
 8007208:	64f8      	str	r0, [r7, #76]	; 0x4c
  if((uint8_t)(response & 0xFFU) == (uint8_t)SD_R1_NO_ERROR)
 800720a:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 800720c:	b2db      	uxtb	r3, r3
 800720e:	2b00      	cmp	r3, #0
 8007210:	f040 80a6 	bne.w	8007360 <SD_GetCIDRegister+0x170>
  {
    if(SD_WaitData(SD_TOKEN_START_DATA_SINGLE_BLOCK_READ) == BSP_ERROR_NONE)
 8007214:	20fe      	movs	r0, #254	; 0xfe
 8007216:	f000 fb7b 	bl	8007910 <SD_WaitData>
 800721a:	4603      	mov	r3, r0
 800721c:	2b00      	cmp	r3, #0
 800721e:	f040 80a2 	bne.w	8007366 <SD_GetCIDRegister+0x176>
    {
      tmp = SD_DUMMY_BYTE;
 8007222:	23ff      	movs	r3, #255	; 0xff
 8007224:	72fb      	strb	r3, [r7, #11]

      /* Store CID register value on CID_Tab */
      for (counter = 0U; counter < 16U; counter++)
 8007226:	2300      	movs	r3, #0
 8007228:	653b      	str	r3, [r7, #80]	; 0x50
 800722a:	e014      	b.n	8007256 <SD_GetCIDRegister+0x66>
      {
        if(BUS_SPIx_SendRecv(&tmp, (uint8_t*)&CID_Tab[counter], 1U) != BSP_ERROR_NONE)
 800722c:	f107 020c 	add.w	r2, r7, #12
 8007230:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8007232:	009b      	lsls	r3, r3, #2
 8007234:	18d1      	adds	r1, r2, r3
 8007236:	f107 030b 	add.w	r3, r7, #11
 800723a:	2201      	movs	r2, #1
 800723c:	4618      	mov	r0, r3
 800723e:	f000 fc31 	bl	8007aa4 <BSP_SPI2_SendRecv>
 8007242:	4603      	mov	r3, r0
 8007244:	2b00      	cmp	r3, #0
 8007246:	d003      	beq.n	8007250 <SD_GetCIDRegister+0x60>
        {
          ret = BSP_ERROR_PERIPH_FAILURE;
 8007248:	f06f 0303 	mvn.w	r3, #3
 800724c:	657b      	str	r3, [r7, #84]	; 0x54
          break;
 800724e:	e005      	b.n	800725c <SD_GetCIDRegister+0x6c>
      for (counter = 0U; counter < 16U; counter++)
 8007250:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8007252:	3301      	adds	r3, #1
 8007254:	653b      	str	r3, [r7, #80]	; 0x50
 8007256:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8007258:	2b0f      	cmp	r3, #15
 800725a:	d9e7      	bls.n	800722c <SD_GetCIDRegister+0x3c>
        }
      }

      if(ret == BSP_ERROR_NONE)
 800725c:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 800725e:	2b00      	cmp	r3, #0
 8007260:	f040 8081 	bne.w	8007366 <SD_GetCIDRegister+0x176>
      {
        /* Get CRC bytes (not really needed by us, but required by SD) */
        if(BUS_SPIx_Send(&tmp, 1U) != BSP_ERROR_NONE)
 8007264:	f107 030b 	add.w	r3, r7, #11
 8007268:	2101      	movs	r1, #1
 800726a:	4618      	mov	r0, r3
 800726c:	f000 fbe2 	bl	8007a34 <BSP_SPI2_Send>
 8007270:	4603      	mov	r3, r0
 8007272:	2b00      	cmp	r3, #0
 8007274:	d003      	beq.n	800727e <SD_GetCIDRegister+0x8e>
        {
          ret = BSP_ERROR_PERIPH_FAILURE;
 8007276:	f06f 0303 	mvn.w	r3, #3
 800727a:	657b      	str	r3, [r7, #84]	; 0x54
 800727c:	e073      	b.n	8007366 <SD_GetCIDRegister+0x176>
        }
        else if(BUS_SPIx_Send(&tmp, 1U) != BSP_ERROR_NONE)
 800727e:	f107 030b 	add.w	r3, r7, #11
 8007282:	2101      	movs	r1, #1
 8007284:	4618      	mov	r0, r3
 8007286:	f000 fbd5 	bl	8007a34 <BSP_SPI2_Send>
 800728a:	4603      	mov	r3, r0
 800728c:	2b00      	cmp	r3, #0
 800728e:	d003      	beq.n	8007298 <SD_GetCIDRegister+0xa8>
        {
          ret = BSP_ERROR_PERIPH_FAILURE;
 8007290:	f06f 0303 	mvn.w	r3, #3
 8007294:	657b      	str	r3, [r7, #84]	; 0x54
 8007296:	e066      	b.n	8007366 <SD_GetCIDRegister+0x176>
        }
        else
        {
          /* Byte 0 */
          Cid->ManufacturerID = CID_Tab[0];
 8007298:	68fa      	ldr	r2, [r7, #12]
 800729a:	687b      	ldr	r3, [r7, #4]
 800729c:	601a      	str	r2, [r3, #0]

          /* Byte 1 */
          Cid->OEM_AppliID = CID_Tab[1] << 8U;
 800729e:	693b      	ldr	r3, [r7, #16]
 80072a0:	021a      	lsls	r2, r3, #8
 80072a2:	687b      	ldr	r3, [r7, #4]
 80072a4:	605a      	str	r2, [r3, #4]

          /* Byte 2 */
          Cid->OEM_AppliID |= CID_Tab[2];
 80072a6:	687b      	ldr	r3, [r7, #4]
 80072a8:	685a      	ldr	r2, [r3, #4]
 80072aa:	697b      	ldr	r3, [r7, #20]
 80072ac:	431a      	orrs	r2, r3
 80072ae:	687b      	ldr	r3, [r7, #4]
 80072b0:	605a      	str	r2, [r3, #4]

          /* Byte 3 */
          Cid->ProdName1 = CID_Tab[3] << 24U;
 80072b2:	69bb      	ldr	r3, [r7, #24]
 80072b4:	061a      	lsls	r2, r3, #24
 80072b6:	687b      	ldr	r3, [r7, #4]
 80072b8:	609a      	str	r2, [r3, #8]

          /* Byte 4 */
          Cid->ProdName1 |= CID_Tab[4] << 16U;
 80072ba:	687b      	ldr	r3, [r7, #4]
 80072bc:	689a      	ldr	r2, [r3, #8]
 80072be:	69fb      	ldr	r3, [r7, #28]
 80072c0:	041b      	lsls	r3, r3, #16
 80072c2:	431a      	orrs	r2, r3
 80072c4:	687b      	ldr	r3, [r7, #4]
 80072c6:	609a      	str	r2, [r3, #8]

          /* Byte 5 */
          Cid->ProdName1 |= CID_Tab[5] << 8U;
 80072c8:	687b      	ldr	r3, [r7, #4]
 80072ca:	689a      	ldr	r2, [r3, #8]
 80072cc:	6a3b      	ldr	r3, [r7, #32]
 80072ce:	021b      	lsls	r3, r3, #8
 80072d0:	431a      	orrs	r2, r3
 80072d2:	687b      	ldr	r3, [r7, #4]
 80072d4:	609a      	str	r2, [r3, #8]

          /* Byte 6 */
          Cid->ProdName1 |= CID_Tab[6];
 80072d6:	687b      	ldr	r3, [r7, #4]
 80072d8:	689a      	ldr	r2, [r3, #8]
 80072da:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80072dc:	431a      	orrs	r2, r3
 80072de:	687b      	ldr	r3, [r7, #4]
 80072e0:	609a      	str	r2, [r3, #8]

          /* Byte 7 */
          Cid->ProdName2 = CID_Tab[7];
 80072e2:	6aba      	ldr	r2, [r7, #40]	; 0x28
 80072e4:	687b      	ldr	r3, [r7, #4]
 80072e6:	60da      	str	r2, [r3, #12]

          /* Byte 8 */
          Cid->ProdRev = CID_Tab[8];
 80072e8:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 80072ea:	687b      	ldr	r3, [r7, #4]
 80072ec:	611a      	str	r2, [r3, #16]

          /* Byte 9 */
          Cid->ProdSN = CID_Tab[9] << 24U;
 80072ee:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80072f0:	061a      	lsls	r2, r3, #24
 80072f2:	687b      	ldr	r3, [r7, #4]
 80072f4:	615a      	str	r2, [r3, #20]

          /* Byte 10 */
          Cid->ProdSN |= CID_Tab[10] << 16U;
 80072f6:	687b      	ldr	r3, [r7, #4]
 80072f8:	695a      	ldr	r2, [r3, #20]
 80072fa:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80072fc:	041b      	lsls	r3, r3, #16
 80072fe:	431a      	orrs	r2, r3
 8007300:	687b      	ldr	r3, [r7, #4]
 8007302:	615a      	str	r2, [r3, #20]

          /* Byte 11 */
          Cid->ProdSN |= CID_Tab[11] << 8U;
 8007304:	687b      	ldr	r3, [r7, #4]
 8007306:	695a      	ldr	r2, [r3, #20]
 8007308:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800730a:	021b      	lsls	r3, r3, #8
 800730c:	431a      	orrs	r2, r3
 800730e:	687b      	ldr	r3, [r7, #4]
 8007310:	615a      	str	r2, [r3, #20]

          /* Byte 12 */
          Cid->ProdSN |= CID_Tab[12];
 8007312:	687b      	ldr	r3, [r7, #4]
 8007314:	695a      	ldr	r2, [r3, #20]
 8007316:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8007318:	431a      	orrs	r2, r3
 800731a:	687b      	ldr	r3, [r7, #4]
 800731c:	615a      	str	r2, [r3, #20]

          /* Byte 13 */
          Cid->Reserved1 |= (CID_Tab[13] & 0xF0U) >> 4U;
 800731e:	687b      	ldr	r3, [r7, #4]
 8007320:	699a      	ldr	r2, [r3, #24]
 8007322:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8007324:	091b      	lsrs	r3, r3, #4
 8007326:	f003 030f 	and.w	r3, r3, #15
 800732a:	431a      	orrs	r2, r3
 800732c:	687b      	ldr	r3, [r7, #4]
 800732e:	619a      	str	r2, [r3, #24]
          Cid->ManufactDate = (CID_Tab[13] & 0x0FU) << 8U;
 8007330:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8007332:	021b      	lsls	r3, r3, #8
 8007334:	f403 6270 	and.w	r2, r3, #3840	; 0xf00
 8007338:	687b      	ldr	r3, [r7, #4]
 800733a:	61da      	str	r2, [r3, #28]

          /* Byte 14 */
          Cid->ManufactDate |= CID_Tab[14];
 800733c:	687b      	ldr	r3, [r7, #4]
 800733e:	69da      	ldr	r2, [r3, #28]
 8007340:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8007342:	431a      	orrs	r2, r3
 8007344:	687b      	ldr	r3, [r7, #4]
 8007346:	61da      	str	r2, [r3, #28]

          /* Byte 15 */
          Cid->CID_CRC = (CID_Tab[15] & 0xFEU) >> 1U;
 8007348:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 800734a:	085b      	lsrs	r3, r3, #1
 800734c:	f003 027f 	and.w	r2, r3, #127	; 0x7f
 8007350:	687b      	ldr	r3, [r7, #4]
 8007352:	621a      	str	r2, [r3, #32]
          Cid->Reserved2 = 1U;
 8007354:	687b      	ldr	r3, [r7, #4]
 8007356:	2201      	movs	r2, #1
 8007358:	625a      	str	r2, [r3, #36]	; 0x24

          ret = BSP_ERROR_NONE;
 800735a:	2300      	movs	r3, #0
 800735c:	657b      	str	r3, [r7, #84]	; 0x54
 800735e:	e002      	b.n	8007366 <SD_GetCIDRegister+0x176>
      }
    }
  }
  else
  {
    ret = BSP_ERROR_UNKNOWN_FAILURE;
 8007360:	f06f 0305 	mvn.w	r3, #5
 8007364:	657b      	str	r3, [r7, #84]	; 0x54
  }

  if(ret == BSP_ERROR_NONE)
 8007366:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8007368:	2b00      	cmp	r3, #0
 800736a:	d10e      	bne.n	800738a <SD_GetCIDRegister+0x19a>
  {
    /* Send dummy byte: 8 Clock pulses of delay */
    SD_IO_CSState(1);
 800736c:	2001      	movs	r0, #1
 800736e:	f7ff fcf9 	bl	8006d64 <SD_IO_CSState>

    if(BUS_SPIx_Send(&tmp, 1U) != BSP_ERROR_NONE)
 8007372:	f107 030b 	add.w	r3, r7, #11
 8007376:	2101      	movs	r1, #1
 8007378:	4618      	mov	r0, r3
 800737a:	f000 fb5b 	bl	8007a34 <BSP_SPI2_Send>
 800737e:	4603      	mov	r3, r0
 8007380:	2b00      	cmp	r3, #0
 8007382:	d002      	beq.n	800738a <SD_GetCIDRegister+0x19a>
    {
      ret = BSP_ERROR_PERIPH_FAILURE;
 8007384:	f06f 0303 	mvn.w	r3, #3
 8007388:	657b      	str	r3, [r7, #84]	; 0x54
    }
  }

  /* Return the reponse */
  return ret;
 800738a:	6d7b      	ldr	r3, [r7, #84]	; 0x54
}
 800738c:	4618      	mov	r0, r3
 800738e:	3758      	adds	r7, #88	; 0x58
 8007390:	46bd      	mov	sp, r7
 8007392:	bd80      	pop	{r7, pc}

08007394 <SD_SendCmd>:
  * @param  Crc The CRC.
  * @param  Answer SD_ANSWER_NOT_EXPECTED or SD_ANSWER_EXPECTED
  * @retval SD response or 0xFFFF in case of error
  */
static uint32_t SD_SendCmd(uint8_t Cmd, uint32_t Arg, uint8_t Crc, uint8_t Answer)
{
 8007394:	b580      	push	{r7, lr}
 8007396:	b08a      	sub	sp, #40	; 0x28
 8007398:	af00      	add	r7, sp, #0
 800739a:	6039      	str	r1, [r7, #0]
 800739c:	4611      	mov	r1, r2
 800739e:	461a      	mov	r2, r3
 80073a0:	4603      	mov	r3, r0
 80073a2:	71fb      	strb	r3, [r7, #7]
 80073a4:	460b      	mov	r3, r1
 80073a6:	71bb      	strb	r3, [r7, #6]
 80073a8:	4613      	mov	r3, r2
 80073aa:	717b      	strb	r3, [r7, #5]
  uint8_t frame[SD_CMD_LENGTH], frameout[SD_CMD_LENGTH];
  uint32_t response = 0xFFFF;
 80073ac:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80073b0:	627b      	str	r3, [r7, #36]	; 0x24
  /* R1 Lenght = NCS(0)+ 6 Bytes command + NCR(min1 max8) + 1 Bytes answer + NEC(0) = 15bytes */
  /* R1b identical to R1 + Busy information                                                   */
  /* R2 Lenght = NCS(0)+ 6 Bytes command + NCR(min1 max8) + 2 Bytes answer + NEC(0) = 16bytes */

  /* Prepare Frame to send */
  frame[0] = (Cmd | 0x40U);         /* Construct byte 1 */
 80073b2:	79fb      	ldrb	r3, [r7, #7]
 80073b4:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80073b8:	b2db      	uxtb	r3, r3
 80073ba:	773b      	strb	r3, [r7, #28]
  frame[1] = (uint8_t)(Arg >> 24U); /* Construct byte 2 */
 80073bc:	683b      	ldr	r3, [r7, #0]
 80073be:	0e1b      	lsrs	r3, r3, #24
 80073c0:	b2db      	uxtb	r3, r3
 80073c2:	777b      	strb	r3, [r7, #29]
  frame[2] = (uint8_t)(Arg >> 16U); /* Construct byte 3 */
 80073c4:	683b      	ldr	r3, [r7, #0]
 80073c6:	0c1b      	lsrs	r3, r3, #16
 80073c8:	b2db      	uxtb	r3, r3
 80073ca:	77bb      	strb	r3, [r7, #30]
  frame[3] = (uint8_t)(Arg >> 8U);  /* Construct byte 4 */
 80073cc:	683b      	ldr	r3, [r7, #0]
 80073ce:	0a1b      	lsrs	r3, r3, #8
 80073d0:	b2db      	uxtb	r3, r3
 80073d2:	77fb      	strb	r3, [r7, #31]
  frame[4] = (uint8_t)(Arg);        /* Construct byte 5 */
 80073d4:	683b      	ldr	r3, [r7, #0]
 80073d6:	b2db      	uxtb	r3, r3
 80073d8:	f887 3020 	strb.w	r3, [r7, #32]
  frame[5] = (Crc | 0x01U);         /* Construct byte 6 */
 80073dc:	79bb      	ldrb	r3, [r7, #6]
 80073de:	f043 0301 	orr.w	r3, r3, #1
 80073e2:	b2db      	uxtb	r3, r3
 80073e4:	f887 3021 	strb.w	r3, [r7, #33]	; 0x21

  /* Send the command */
  SD_IO_CSState(0);
 80073e8:	2000      	movs	r0, #0
 80073ea:	f7ff fcbb 	bl	8006d64 <SD_IO_CSState>
  /* Send the Cmd bytes */
  if(BUS_SPIx_SendRecv(frame, frameout, SD_CMD_LENGTH) != BSP_ERROR_NONE)
 80073ee:	f107 0114 	add.w	r1, r7, #20
 80073f2:	f107 031c 	add.w	r3, r7, #28
 80073f6:	2206      	movs	r2, #6
 80073f8:	4618      	mov	r0, r3
 80073fa:	f000 fb53 	bl	8007aa4 <BSP_SPI2_SendRecv>
 80073fe:	4603      	mov	r3, r0
 8007400:	2b00      	cmp	r3, #0
 8007402:	d002      	beq.n	800740a <SD_SendCmd+0x76>
  {
    return 0xFFFF;
 8007404:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8007408:	e0d9      	b.n	80075be <SD_SendCmd+0x22a>
  }
  tmp = SD_DUMMY_BYTE;
 800740a:	23ff      	movs	r3, #255	; 0xff
 800740c:	613b      	str	r3, [r7, #16]
  switch(Answer)
 800740e:	797b      	ldrb	r3, [r7, #5]
 8007410:	2b05      	cmp	r3, #5
 8007412:	f200 80d0 	bhi.w	80075b6 <SD_SendCmd+0x222>
 8007416:	a201      	add	r2, pc, #4	; (adr r2, 800741c <SD_SendCmd+0x88>)
 8007418:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800741c:	08007435 	.word	0x08007435
 8007420:	08007451 	.word	0x08007451
 8007424:	080074e1 	.word	0x080074e1
 8007428:	08007523 	.word	0x08007523
 800742c:	080075b7 	.word	0x080075b7
 8007430:	08007523 	.word	0x08007523
  {
  case SD_ANSWER_R1_EXPECTED :
    /* Sends one byte command to the SD card and get response */
    if(SD_ReadData(&response_tmp) != BSP_ERROR_NONE)
 8007434:	f107 030c 	add.w	r3, r7, #12
 8007438:	4618      	mov	r0, r3
 800743a:	f000 fa3f 	bl	80078bc <SD_ReadData>
 800743e:	4603      	mov	r3, r0
 8007440:	2b00      	cmp	r3, #0
 8007442:	d002      	beq.n	800744a <SD_SendCmd+0xb6>
    {
      return 0xFFFF;
 8007444:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8007448:	e0b9      	b.n	80075be <SD_SendCmd+0x22a>
    }
    response = response_tmp;
 800744a:	68fb      	ldr	r3, [r7, #12]
 800744c:	627b      	str	r3, [r7, #36]	; 0x24
    break;
 800744e:	e0b5      	b.n	80075bc <SD_SendCmd+0x228>
  case SD_ANSWER_R1B_EXPECTED :
    /* Sends first byte command to the SD card and get response */
    if(SD_ReadData(&response_tmp) != BSP_ERROR_NONE)
 8007450:	f107 030c 	add.w	r3, r7, #12
 8007454:	4618      	mov	r0, r3
 8007456:	f000 fa31 	bl	80078bc <SD_ReadData>
 800745a:	4603      	mov	r3, r0
 800745c:	2b00      	cmp	r3, #0
 800745e:	d002      	beq.n	8007466 <SD_SendCmd+0xd2>
    {
      return 0xFFFF;
 8007460:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8007464:	e0ab      	b.n	80075be <SD_SendCmd+0x22a>
    }
    response = response_tmp;
 8007466:	68fb      	ldr	r3, [r7, #12]
 8007468:	627b      	str	r3, [r7, #36]	; 0x24
    /* Sends second byte command to the SD card and get response */
    if(BUS_SPIx_SendRecv(&tmp, &response_tmp, 1U) != BSP_ERROR_NONE)
 800746a:	f107 010c 	add.w	r1, r7, #12
 800746e:	f107 0310 	add.w	r3, r7, #16
 8007472:	2201      	movs	r2, #1
 8007474:	4618      	mov	r0, r3
 8007476:	f000 fb15 	bl	8007aa4 <BSP_SPI2_SendRecv>
 800747a:	4603      	mov	r3, r0
 800747c:	2b00      	cmp	r3, #0
 800747e:	d002      	beq.n	8007486 <SD_SendCmd+0xf2>
    {
      return 0xFFFF;
 8007480:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8007484:	e09b      	b.n	80075be <SD_SendCmd+0x22a>
    }
    response |= response_tmp;
 8007486:	68fb      	ldr	r3, [r7, #12]
 8007488:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 800748a:	4313      	orrs	r3, r2
 800748c:	627b      	str	r3, [r7, #36]	; 0x24
    /* Set CS High */
    SD_IO_CSState(1);
 800748e:	2001      	movs	r0, #1
 8007490:	f7ff fc68 	bl	8006d64 <SD_IO_CSState>
    SPI_IO_Delay(1);
 8007494:	2001      	movs	r0, #1
 8007496:	f000 fa68 	bl	800796a <SPI_IO_Delay>
    /* Set CS Low */
    SD_IO_CSState(0);
 800749a:	2000      	movs	r0, #0
 800749c:	f7ff fc62 	bl	8006d64 <SD_IO_CSState>

    /* Wait IO line return 0xFF */
    if(BUS_SPIx_SendRecv(&tmp, &response_tmp, 1U) != BSP_ERROR_NONE)
 80074a0:	f107 010c 	add.w	r1, r7, #12
 80074a4:	f107 0310 	add.w	r3, r7, #16
 80074a8:	2201      	movs	r2, #1
 80074aa:	4618      	mov	r0, r3
 80074ac:	f000 fafa 	bl	8007aa4 <BSP_SPI2_SendRecv>
 80074b0:	4603      	mov	r3, r0
 80074b2:	2b00      	cmp	r3, #0
 80074b4:	d010      	beq.n	80074d8 <SD_SendCmd+0x144>
    {
      return 0xFFFF;
 80074b6:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80074ba:	e080      	b.n	80075be <SD_SendCmd+0x22a>
    }
    while(response_tmp != 0xFFU)
    {
      if(BUS_SPIx_SendRecv(&tmp, &response_tmp, 1U) != BSP_ERROR_NONE)
 80074bc:	f107 010c 	add.w	r1, r7, #12
 80074c0:	f107 0310 	add.w	r3, r7, #16
 80074c4:	2201      	movs	r2, #1
 80074c6:	4618      	mov	r0, r3
 80074c8:	f000 faec 	bl	8007aa4 <BSP_SPI2_SendRecv>
 80074cc:	4603      	mov	r3, r0
 80074ce:	2b00      	cmp	r3, #0
 80074d0:	d002      	beq.n	80074d8 <SD_SendCmd+0x144>
      {
        return 0xFFFF;
 80074d2:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80074d6:	e072      	b.n	80075be <SD_SendCmd+0x22a>
    while(response_tmp != 0xFFU)
 80074d8:	68fb      	ldr	r3, [r7, #12]
 80074da:	2bff      	cmp	r3, #255	; 0xff
 80074dc:	d1ee      	bne.n	80074bc <SD_SendCmd+0x128>
      }
    }
    break;
 80074de:	e06d      	b.n	80075bc <SD_SendCmd+0x228>
  case SD_ANSWER_R2_EXPECTED :
    /* Sends first byte command to the SD card and get response */
    if(SD_ReadData(&response_tmp) != BSP_ERROR_NONE)
 80074e0:	f107 030c 	add.w	r3, r7, #12
 80074e4:	4618      	mov	r0, r3
 80074e6:	f000 f9e9 	bl	80078bc <SD_ReadData>
 80074ea:	4603      	mov	r3, r0
 80074ec:	2b00      	cmp	r3, #0
 80074ee:	d002      	beq.n	80074f6 <SD_SendCmd+0x162>
    {
      return 0xFFFF;
 80074f0:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80074f4:	e063      	b.n	80075be <SD_SendCmd+0x22a>
    }
    response = response_tmp;
 80074f6:	68fb      	ldr	r3, [r7, #12]
 80074f8:	627b      	str	r3, [r7, #36]	; 0x24
    /* Sends second byte command to the SD card and get response */
    if(BUS_SPIx_SendRecv(&tmp, &response_tmp, 1U) != BSP_ERROR_NONE)
 80074fa:	f107 010c 	add.w	r1, r7, #12
 80074fe:	f107 0310 	add.w	r3, r7, #16
 8007502:	2201      	movs	r2, #1
 8007504:	4618      	mov	r0, r3
 8007506:	f000 facd 	bl	8007aa4 <BSP_SPI2_SendRecv>
 800750a:	4603      	mov	r3, r0
 800750c:	2b00      	cmp	r3, #0
 800750e:	d002      	beq.n	8007516 <SD_SendCmd+0x182>
    {
      return 0xFFFF;
 8007510:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8007514:	e053      	b.n	80075be <SD_SendCmd+0x22a>
    }
    response |= ((uint32_t)response_tmp << 8);
 8007516:	68fb      	ldr	r3, [r7, #12]
 8007518:	021b      	lsls	r3, r3, #8
 800751a:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 800751c:	4313      	orrs	r3, r2
 800751e:	627b      	str	r3, [r7, #36]	; 0x24
    break;
 8007520:	e04c      	b.n	80075bc <SD_SendCmd+0x228>
  case SD_ANSWER_R3_EXPECTED :
  case SD_ANSWER_R7_EXPECTED :
    /* Sends first byte command to the SD card and get response */
    if(SD_ReadData(&response_tmp) != BSP_ERROR_NONE)
 8007522:	f107 030c 	add.w	r3, r7, #12
 8007526:	4618      	mov	r0, r3
 8007528:	f000 f9c8 	bl	80078bc <SD_ReadData>
 800752c:	4603      	mov	r3, r0
 800752e:	2b00      	cmp	r3, #0
 8007530:	d002      	beq.n	8007538 <SD_SendCmd+0x1a4>
    {
      return 0xFFFF;
 8007532:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8007536:	e042      	b.n	80075be <SD_SendCmd+0x22a>
    }
    response = response_tmp;
 8007538:	68fb      	ldr	r3, [r7, #12]
 800753a:	627b      	str	r3, [r7, #36]	; 0x24
    /* Sends second byte command to the SD card and get response */
    if(BUS_SPIx_SendRecv(&tmp, &response_tmp, 1U) != BSP_ERROR_NONE)
 800753c:	f107 010c 	add.w	r1, r7, #12
 8007540:	f107 0310 	add.w	r3, r7, #16
 8007544:	2201      	movs	r2, #1
 8007546:	4618      	mov	r0, r3
 8007548:	f000 faac 	bl	8007aa4 <BSP_SPI2_SendRecv>
 800754c:	4603      	mov	r3, r0
 800754e:	2b00      	cmp	r3, #0
 8007550:	d002      	beq.n	8007558 <SD_SendCmd+0x1c4>
    {
      return 0xFFFF;
 8007552:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8007556:	e032      	b.n	80075be <SD_SendCmd+0x22a>
    }
    /* Only first and second responses are required */
    response |= ((uint32_t)response_tmp << 8U);
 8007558:	68fb      	ldr	r3, [r7, #12]
 800755a:	021b      	lsls	r3, r3, #8
 800755c:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 800755e:	4313      	orrs	r3, r2
 8007560:	627b      	str	r3, [r7, #36]	; 0x24
    /* Sends third byte command to the SD card and get response */
    if(BUS_SPIx_SendRecv(&tmp, &response_tmp, 1U) != BSP_ERROR_NONE)
 8007562:	f107 010c 	add.w	r1, r7, #12
 8007566:	f107 0310 	add.w	r3, r7, #16
 800756a:	2201      	movs	r2, #1
 800756c:	4618      	mov	r0, r3
 800756e:	f000 fa99 	bl	8007aa4 <BSP_SPI2_SendRecv>
 8007572:	4603      	mov	r3, r0
 8007574:	2b00      	cmp	r3, #0
 8007576:	d002      	beq.n	800757e <SD_SendCmd+0x1ea>
    {
      return 0xFFFF;
 8007578:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800757c:	e01f      	b.n	80075be <SD_SendCmd+0x22a>
    }
    /* Sends fourth byte command to the SD card and get response */
    if(BUS_SPIx_SendRecv(&tmp, &response_tmp, 1U) != BSP_ERROR_NONE)
 800757e:	f107 010c 	add.w	r1, r7, #12
 8007582:	f107 0310 	add.w	r3, r7, #16
 8007586:	2201      	movs	r2, #1
 8007588:	4618      	mov	r0, r3
 800758a:	f000 fa8b 	bl	8007aa4 <BSP_SPI2_SendRecv>
 800758e:	4603      	mov	r3, r0
 8007590:	2b00      	cmp	r3, #0
 8007592:	d002      	beq.n	800759a <SD_SendCmd+0x206>
    {
      return 0xFFFF;
 8007594:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8007598:	e011      	b.n	80075be <SD_SendCmd+0x22a>
    }
    /* Sends fifth byte command to the SD card and get response */
    if(BUS_SPIx_SendRecv(&tmp, &response_tmp, 1U) != BSP_ERROR_NONE)
 800759a:	f107 010c 	add.w	r1, r7, #12
 800759e:	f107 0310 	add.w	r3, r7, #16
 80075a2:	2201      	movs	r2, #1
 80075a4:	4618      	mov	r0, r3
 80075a6:	f000 fa7d 	bl	8007aa4 <BSP_SPI2_SendRecv>
 80075aa:	4603      	mov	r3, r0
 80075ac:	2b00      	cmp	r3, #0
 80075ae:	d004      	beq.n	80075ba <SD_SendCmd+0x226>
    {
      return 0xFFFF;
 80075b0:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80075b4:	e003      	b.n	80075be <SD_SendCmd+0x22a>
    }

    break;
  default :
    break;
 80075b6:	bf00      	nop
 80075b8:	e000      	b.n	80075bc <SD_SendCmd+0x228>
    break;
 80075ba:	bf00      	nop
  }
  return response;
 80075bc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
}
 80075be:	4618      	mov	r0, r3
 80075c0:	3728      	adds	r7, #40	; 0x28
 80075c2:	46bd      	mov	sp, r7
 80075c4:	bd80      	pop	{r7, pc}
 80075c6:	bf00      	nop

080075c8 <SD_GetDataResponse>:
  *         - status 101: Data rejected due to a crc error
  *         - status 110: Data rejected due to a Write error.
  *         - status 111: Data rejected due to other error.
  */
static int32_t SD_GetDataResponse(uint8_t *DataResponse)
{
 80075c8:	b580      	push	{r7, lr}
 80075ca:	b084      	sub	sp, #16
 80075cc:	af00      	add	r7, sp, #0
 80075ce:	6078      	str	r0, [r7, #4]
  uint8_t dataresponse, tmp, tmp1;
  *DataResponse = (uint8_t)SD_DATA_OTHER_ERROR;
 80075d0:	687b      	ldr	r3, [r7, #4]
 80075d2:	22ff      	movs	r2, #255	; 0xff
 80075d4:	701a      	strb	r2, [r3, #0]

  tmp = SD_DUMMY_BYTE;
 80075d6:	23ff      	movs	r3, #255	; 0xff
 80075d8:	73bb      	strb	r3, [r7, #14]
  if(BUS_SPIx_SendRecv(&tmp, &dataresponse, 1U) != BSP_ERROR_NONE)
 80075da:	f107 010f 	add.w	r1, r7, #15
 80075de:	f107 030e 	add.w	r3, r7, #14
 80075e2:	2201      	movs	r2, #1
 80075e4:	4618      	mov	r0, r3
 80075e6:	f000 fa5d 	bl	8007aa4 <BSP_SPI2_SendRecv>
 80075ea:	4603      	mov	r3, r0
 80075ec:	2b00      	cmp	r3, #0
 80075ee:	d002      	beq.n	80075f6 <SD_GetDataResponse+0x2e>
  {
    return BSP_ERROR_PERIPH_FAILURE;
 80075f0:	f06f 0303 	mvn.w	r3, #3
 80075f4:	e049      	b.n	800768a <SD_GetDataResponse+0xc2>
  }
  /* read the busy response byte*/
  if(BUS_SPIx_Send(&tmp, 1U) != BSP_ERROR_NONE)
 80075f6:	f107 030e 	add.w	r3, r7, #14
 80075fa:	2101      	movs	r1, #1
 80075fc:	4618      	mov	r0, r3
 80075fe:	f000 fa19 	bl	8007a34 <BSP_SPI2_Send>
 8007602:	4603      	mov	r3, r0
 8007604:	2b00      	cmp	r3, #0
 8007606:	d002      	beq.n	800760e <SD_GetDataResponse+0x46>
  {
    return BSP_ERROR_PERIPH_FAILURE;
 8007608:	f06f 0303 	mvn.w	r3, #3
 800760c:	e03d      	b.n	800768a <SD_GetDataResponse+0xc2>
  }
  else
  {
    /* Mask unused bits */
    switch (dataresponse & 0x1FU)
 800760e:	7bfb      	ldrb	r3, [r7, #15]
 8007610:	f003 031f 	and.w	r3, r3, #31
 8007614:	2b0b      	cmp	r3, #11
 8007616:	d02f      	beq.n	8007678 <SD_GetDataResponse+0xb0>
 8007618:	2b0d      	cmp	r3, #13
 800761a:	d031      	beq.n	8007680 <SD_GetDataResponse+0xb8>
 800761c:	2b05      	cmp	r3, #5
 800761e:	d000      	beq.n	8007622 <SD_GetDataResponse+0x5a>
      break;
    case SD_DATA_WRITE_ERROR:
      *DataResponse = (uint8_t)SD_DATA_WRITE_ERROR;
      break;
    default:
      break;
 8007620:	e032      	b.n	8007688 <SD_GetDataResponse+0xc0>
      *DataResponse = (uint8_t)SD_DATA_OK;
 8007622:	687b      	ldr	r3, [r7, #4]
 8007624:	2205      	movs	r2, #5
 8007626:	701a      	strb	r2, [r3, #0]
      SD_IO_CSState(1);
 8007628:	2001      	movs	r0, #1
 800762a:	f7ff fb9b 	bl	8006d64 <SD_IO_CSState>
      SD_IO_CSState(0);
 800762e:	2000      	movs	r0, #0
 8007630:	f7ff fb98 	bl	8006d64 <SD_IO_CSState>
      tmp = SD_DUMMY_BYTE;
 8007634:	23ff      	movs	r3, #255	; 0xff
 8007636:	73bb      	strb	r3, [r7, #14]
        if(BUS_SPIx_SendRecv(&tmp, &tmp1, 1U) != BSP_ERROR_NONE)
 8007638:	f107 010d 	add.w	r1, r7, #13
 800763c:	f107 030e 	add.w	r3, r7, #14
 8007640:	2201      	movs	r2, #1
 8007642:	4618      	mov	r0, r3
 8007644:	f000 fa2e 	bl	8007aa4 <BSP_SPI2_SendRecv>
 8007648:	4603      	mov	r3, r0
 800764a:	2b00      	cmp	r3, #0
 800764c:	d010      	beq.n	8007670 <SD_GetDataResponse+0xa8>
          return BSP_ERROR_PERIPH_FAILURE;
 800764e:	f06f 0303 	mvn.w	r3, #3
 8007652:	e01a      	b.n	800768a <SD_GetDataResponse+0xc2>
        if(BUS_SPIx_SendRecv(&tmp, &tmp1, 1U) != BSP_ERROR_NONE)
 8007654:	f107 010d 	add.w	r1, r7, #13
 8007658:	f107 030e 	add.w	r3, r7, #14
 800765c:	2201      	movs	r2, #1
 800765e:	4618      	mov	r0, r3
 8007660:	f000 fa20 	bl	8007aa4 <BSP_SPI2_SendRecv>
 8007664:	4603      	mov	r3, r0
 8007666:	2b00      	cmp	r3, #0
 8007668:	d002      	beq.n	8007670 <SD_GetDataResponse+0xa8>
          return BSP_ERROR_PERIPH_FAILURE;
 800766a:	f06f 0303 	mvn.w	r3, #3
 800766e:	e00c      	b.n	800768a <SD_GetDataResponse+0xc2>
      while(tmp1 != 0xFFU)
 8007670:	7b7b      	ldrb	r3, [r7, #13]
 8007672:	2bff      	cmp	r3, #255	; 0xff
 8007674:	d1ee      	bne.n	8007654 <SD_GetDataResponse+0x8c>
      break;
 8007676:	e007      	b.n	8007688 <SD_GetDataResponse+0xc0>
      *DataResponse =  (uint8_t)SD_DATA_CRC_ERROR;
 8007678:	687b      	ldr	r3, [r7, #4]
 800767a:	220b      	movs	r2, #11
 800767c:	701a      	strb	r2, [r3, #0]
      break;
 800767e:	e003      	b.n	8007688 <SD_GetDataResponse+0xc0>
      *DataResponse = (uint8_t)SD_DATA_WRITE_ERROR;
 8007680:	687b      	ldr	r3, [r7, #4]
 8007682:	220d      	movs	r2, #13
 8007684:	701a      	strb	r2, [r3, #0]
      break;
 8007686:	bf00      	nop
    }
  }

  /* Return response */
  return BSP_ERROR_NONE;
 8007688:	2300      	movs	r3, #0
}
 800768a:	4618      	mov	r0, r3
 800768c:	3710      	adds	r7, #16
 800768e:	46bd      	mov	sp, r7
 8007690:	bd80      	pop	{r7, pc}
	...

08007694 <SD_GoIdleState>:
  * @brief  Put the SD in Idle state.
  * @param  None
  * @retval SD status
  */
static int32_t SD_GoIdleState(void)
{
 8007694:	b580      	push	{r7, lr}
 8007696:	b082      	sub	sp, #8
 8007698:	af00      	add	r7, sp, #0
  uint32_t response;
  __IO uint8_t counter = 0;
 800769a:	2300      	movs	r3, #0
 800769c:	70fb      	strb	r3, [r7, #3]
  uint8_t tmp = SD_DUMMY_BYTE;
 800769e:	23ff      	movs	r3, #255	; 0xff
 80076a0:	70bb      	strb	r3, [r7, #2]

  /* Send CMD0 (SD_CMD_GO_IDLE_STATE) to put SD in SPI mode and
  wait for In Idle State Response (R1 Format) equal to 0x01 */
  do
  {
    counter++;
 80076a2:	78fb      	ldrb	r3, [r7, #3]
 80076a4:	b2db      	uxtb	r3, r3
 80076a6:	3301      	adds	r3, #1
 80076a8:	b2db      	uxtb	r3, r3
 80076aa:	70fb      	strb	r3, [r7, #3]
    response = SD_SendCmd(SD_CMD_GO_IDLE_STATE, 0U, 0x95U, (uint8_t)SD_ANSWER_R1_EXPECTED);
 80076ac:	2300      	movs	r3, #0
 80076ae:	2295      	movs	r2, #149	; 0x95
 80076b0:	2100      	movs	r1, #0
 80076b2:	2000      	movs	r0, #0
 80076b4:	f7ff fe6e 	bl	8007394 <SD_SendCmd>
 80076b8:	6078      	str	r0, [r7, #4]
    SD_IO_CSState(1);
 80076ba:	2001      	movs	r0, #1
 80076bc:	f7ff fb52 	bl	8006d64 <SD_IO_CSState>
    if(BUS_SPIx_Send(&tmp, 1U) != BSP_ERROR_NONE)
 80076c0:	1cbb      	adds	r3, r7, #2
 80076c2:	2101      	movs	r1, #1
 80076c4:	4618      	mov	r0, r3
 80076c6:	f000 f9b5 	bl	8007a34 <BSP_SPI2_Send>
 80076ca:	4603      	mov	r3, r0
 80076cc:	2b00      	cmp	r3, #0
 80076ce:	d002      	beq.n	80076d6 <SD_GoIdleState+0x42>
    {
      return BSP_ERROR_PERIPH_FAILURE;
 80076d0:	f06f 0303 	mvn.w	r3, #3
 80076d4:	e0ec      	b.n	80078b0 <SD_GoIdleState+0x21c>
    }
    else
    {
      if(counter >= SD_MAX_TRY)
 80076d6:	78fb      	ldrb	r3, [r7, #3]
 80076d8:	b2db      	uxtb	r3, r3
 80076da:	2b63      	cmp	r3, #99	; 0x63
 80076dc:	d902      	bls.n	80076e4 <SD_GoIdleState+0x50>
      {
        return BSP_ERROR_UNKNOWN_FAILURE;
 80076de:	f06f 0305 	mvn.w	r3, #5
 80076e2:	e0e5      	b.n	80078b0 <SD_GoIdleState+0x21c>
      }
    }
  }while((uint8_t)(response & 0xFFU) != (uint8_t)SD_R1_IN_IDLE_STATE);
 80076e4:	687b      	ldr	r3, [r7, #4]
 80076e6:	b2db      	uxtb	r3, r3
 80076e8:	2b01      	cmp	r3, #1
 80076ea:	d1da      	bne.n	80076a2 <SD_GoIdleState+0xe>

  /* Send CMD8 (SD_CMD_SEND_IF_COND) to check the power supply status
  and wait until response (R7 Format) equal to 0xAA and */
  response = SD_SendCmd(SD_CMD_SEND_IF_COND, 0x1AAU, 0x87U, (uint8_t)SD_ANSWER_R7_EXPECTED);
 80076ec:	2305      	movs	r3, #5
 80076ee:	2287      	movs	r2, #135	; 0x87
 80076f0:	f44f 71d5 	mov.w	r1, #426	; 0x1aa
 80076f4:	2008      	movs	r0, #8
 80076f6:	f7ff fe4d 	bl	8007394 <SD_SendCmd>
 80076fa:	6078      	str	r0, [r7, #4]
  SD_IO_CSState(1);
 80076fc:	2001      	movs	r0, #1
 80076fe:	f7ff fb31 	bl	8006d64 <SD_IO_CSState>
  if(BUS_SPIx_Send(&tmp, 1U) != BSP_ERROR_NONE)
 8007702:	1cbb      	adds	r3, r7, #2
 8007704:	2101      	movs	r1, #1
 8007706:	4618      	mov	r0, r3
 8007708:	f000 f994 	bl	8007a34 <BSP_SPI2_Send>
 800770c:	4603      	mov	r3, r0
 800770e:	2b00      	cmp	r3, #0
 8007710:	d002      	beq.n	8007718 <SD_GoIdleState+0x84>
  {
    return BSP_ERROR_PERIPH_FAILURE;
 8007712:	f06f 0303 	mvn.w	r3, #3
 8007716:	e0cb      	b.n	80078b0 <SD_GoIdleState+0x21c>
  }
  else if(((uint8_t)(response & 0xFFU)  & (uint8_t)SD_R1_ILLEGAL_COMMAND) == (uint8_t)SD_R1_ILLEGAL_COMMAND)
 8007718:	687b      	ldr	r3, [r7, #4]
 800771a:	b2db      	uxtb	r3, r3
 800771c:	f003 0304 	and.w	r3, r3, #4
 8007720:	2b00      	cmp	r3, #0
 8007722:	d030      	beq.n	8007786 <SD_GoIdleState+0xf2>
    /* initialise card V1 */
    do
    {
      /* initialise card V1 */
      /* Send CMD55 (SD_CMD_APP_CMD) before any ACMD command: R1 response (0x00: no errors) */
      (void)SD_SendCmd(SD_CMD_APP_CMD, 0x00U, 0xFFU, (uint8_t)SD_ANSWER_R1_EXPECTED);
 8007724:	2300      	movs	r3, #0
 8007726:	22ff      	movs	r2, #255	; 0xff
 8007728:	2100      	movs	r1, #0
 800772a:	2037      	movs	r0, #55	; 0x37
 800772c:	f7ff fe32 	bl	8007394 <SD_SendCmd>
      SD_IO_CSState(1);
 8007730:	2001      	movs	r0, #1
 8007732:	f7ff fb17 	bl	8006d64 <SD_IO_CSState>
      if(BUS_SPIx_Send(&tmp, 1U) != BSP_ERROR_NONE)
 8007736:	1cbb      	adds	r3, r7, #2
 8007738:	2101      	movs	r1, #1
 800773a:	4618      	mov	r0, r3
 800773c:	f000 f97a 	bl	8007a34 <BSP_SPI2_Send>
 8007740:	4603      	mov	r3, r0
 8007742:	2b00      	cmp	r3, #0
 8007744:	d002      	beq.n	800774c <SD_GoIdleState+0xb8>
      {
        return BSP_ERROR_PERIPH_FAILURE;
 8007746:	f06f 0303 	mvn.w	r3, #3
 800774a:	e0b1      	b.n	80078b0 <SD_GoIdleState+0x21c>
      }
      else
      {
        /* Send ACMD41 (SD_CMD_SD_APP_OP_COND) to initialize SDHC or SDXC cards: R1 response (0x00: no errors) */
        response = SD_SendCmd(SD_CMD_SD_APP_OP_COND, 0x00U, 0xFFU, (uint8_t)SD_ANSWER_R1_EXPECTED);
 800774c:	2300      	movs	r3, #0
 800774e:	22ff      	movs	r2, #255	; 0xff
 8007750:	2100      	movs	r1, #0
 8007752:	2029      	movs	r0, #41	; 0x29
 8007754:	f7ff fe1e 	bl	8007394 <SD_SendCmd>
 8007758:	6078      	str	r0, [r7, #4]
        SD_IO_CSState(1);
 800775a:	2001      	movs	r0, #1
 800775c:	f7ff fb02 	bl	8006d64 <SD_IO_CSState>
        if(BUS_SPIx_Send(&tmp, 1U) != BSP_ERROR_NONE)
 8007760:	1cbb      	adds	r3, r7, #2
 8007762:	2101      	movs	r1, #1
 8007764:	4618      	mov	r0, r3
 8007766:	f000 f965 	bl	8007a34 <BSP_SPI2_Send>
 800776a:	4603      	mov	r3, r0
 800776c:	2b00      	cmp	r3, #0
 800776e:	d002      	beq.n	8007776 <SD_GoIdleState+0xe2>
        {
          return BSP_ERROR_PERIPH_FAILURE;
 8007770:	f06f 0303 	mvn.w	r3, #3
 8007774:	e09c      	b.n	80078b0 <SD_GoIdleState+0x21c>
        }
      }
    }
    while((uint8_t)(response & 0xFFU) == (uint8_t)SD_R1_IN_IDLE_STATE);
 8007776:	687b      	ldr	r3, [r7, #4]
 8007778:	b2db      	uxtb	r3, r3
 800777a:	2b01      	cmp	r3, #1
 800777c:	d0d2      	beq.n	8007724 <SD_GoIdleState+0x90>
    CardType = MY_CARD_SDSC;
 800777e:	4b4e      	ldr	r3, [pc, #312]	; (80078b8 <SD_GoIdleState+0x224>)
 8007780:	2200      	movs	r2, #0
 8007782:	601a      	str	r2, [r3, #0]
 8007784:	e093      	b.n	80078ae <SD_GoIdleState+0x21a>
  }
  else if((uint8_t)(response & 0xFFU) == (uint8_t)SD_R1_IN_IDLE_STATE)
 8007786:	687b      	ldr	r3, [r7, #4]
 8007788:	b2db      	uxtb	r3, r3
 800778a:	2b01      	cmp	r3, #1
 800778c:	f040 808c 	bne.w	80078a8 <SD_GoIdleState+0x214>
  {
    /* initialise card V2 */
    do {
      /* Send CMD55 (SD_CMD_APP_CMD) before any ACMD command: R1 response (0x00: no errors) */
      (void)SD_SendCmd(SD_CMD_APP_CMD, 0, 0xFFU, (uint8_t)SD_ANSWER_R1_EXPECTED);
 8007790:	2300      	movs	r3, #0
 8007792:	22ff      	movs	r2, #255	; 0xff
 8007794:	2100      	movs	r1, #0
 8007796:	2037      	movs	r0, #55	; 0x37
 8007798:	f7ff fdfc 	bl	8007394 <SD_SendCmd>
      SD_IO_CSState(1);
 800779c:	2001      	movs	r0, #1
 800779e:	f7ff fae1 	bl	8006d64 <SD_IO_CSState>
      if(BUS_SPIx_Send(&tmp, 1U) != BSP_ERROR_NONE)
 80077a2:	1cbb      	adds	r3, r7, #2
 80077a4:	2101      	movs	r1, #1
 80077a6:	4618      	mov	r0, r3
 80077a8:	f000 f944 	bl	8007a34 <BSP_SPI2_Send>
 80077ac:	4603      	mov	r3, r0
 80077ae:	2b00      	cmp	r3, #0
 80077b0:	d002      	beq.n	80077b8 <SD_GoIdleState+0x124>
      {
        return BSP_ERROR_PERIPH_FAILURE;
 80077b2:	f06f 0303 	mvn.w	r3, #3
 80077b6:	e07b      	b.n	80078b0 <SD_GoIdleState+0x21c>
      }
      else
      {
        /* Send ACMD41 (SD_CMD_SD_APP_OP_COND) to initialize SDHC or SDXC cards: R1 response (0x00: no errors) */
        response = SD_SendCmd(SD_CMD_SD_APP_OP_COND, 0x40000000U, 0xFFU, (uint8_t)SD_ANSWER_R1_EXPECTED);
 80077b8:	2300      	movs	r3, #0
 80077ba:	22ff      	movs	r2, #255	; 0xff
 80077bc:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
 80077c0:	2029      	movs	r0, #41	; 0x29
 80077c2:	f7ff fde7 	bl	8007394 <SD_SendCmd>
 80077c6:	6078      	str	r0, [r7, #4]
        SD_IO_CSState(1);
 80077c8:	2001      	movs	r0, #1
 80077ca:	f7ff facb 	bl	8006d64 <SD_IO_CSState>
        if(BUS_SPIx_Send(&tmp, 1U) != BSP_ERROR_NONE)
 80077ce:	1cbb      	adds	r3, r7, #2
 80077d0:	2101      	movs	r1, #1
 80077d2:	4618      	mov	r0, r3
 80077d4:	f000 f92e 	bl	8007a34 <BSP_SPI2_Send>
 80077d8:	4603      	mov	r3, r0
 80077da:	2b00      	cmp	r3, #0
 80077dc:	d002      	beq.n	80077e4 <SD_GoIdleState+0x150>
        {
          return BSP_ERROR_PERIPH_FAILURE;
 80077de:	f06f 0303 	mvn.w	r3, #3
 80077e2:	e065      	b.n	80078b0 <SD_GoIdleState+0x21c>
        }
      }
    }
    while(((uint8_t)response & 0xFFU) == (uint8_t)SD_R1_IN_IDLE_STATE);
 80077e4:	687b      	ldr	r3, [r7, #4]
 80077e6:	b2db      	uxtb	r3, r3
 80077e8:	2b01      	cmp	r3, #1
 80077ea:	d0d1      	beq.n	8007790 <SD_GoIdleState+0xfc>

    if(((uint8_t)(response & 0xFFU) & (uint8_t)SD_R1_ILLEGAL_COMMAND) == (uint8_t)SD_R1_ILLEGAL_COMMAND)
 80077ec:	687b      	ldr	r3, [r7, #4]
 80077ee:	b2db      	uxtb	r3, r3
 80077f0:	f003 0304 	and.w	r3, r3, #4
 80077f4:	2b00      	cmp	r3, #0
 80077f6:	d033      	beq.n	8007860 <SD_GoIdleState+0x1cc>
    {
      do {
        /* Send CMD55 (SD_CMD_APP_CMD) before any ACMD command: R1 response (0x00: no errors) */
        (void)SD_SendCmd(SD_CMD_APP_CMD, 0U, 0xFFU, (uint8_t)SD_ANSWER_R1_EXPECTED);
 80077f8:	2300      	movs	r3, #0
 80077fa:	22ff      	movs	r2, #255	; 0xff
 80077fc:	2100      	movs	r1, #0
 80077fe:	2037      	movs	r0, #55	; 0x37
 8007800:	f7ff fdc8 	bl	8007394 <SD_SendCmd>
        SD_IO_CSState(1);
 8007804:	2001      	movs	r0, #1
 8007806:	f7ff faad 	bl	8006d64 <SD_IO_CSState>
        if(BUS_SPIx_Send(&tmp, 1U) != BSP_ERROR_NONE)
 800780a:	1cbb      	adds	r3, r7, #2
 800780c:	2101      	movs	r1, #1
 800780e:	4618      	mov	r0, r3
 8007810:	f000 f910 	bl	8007a34 <BSP_SPI2_Send>
 8007814:	4603      	mov	r3, r0
 8007816:	2b00      	cmp	r3, #0
 8007818:	d002      	beq.n	8007820 <SD_GoIdleState+0x18c>
        {
          return BSP_ERROR_PERIPH_FAILURE;
 800781a:	f06f 0303 	mvn.w	r3, #3
 800781e:	e047      	b.n	80078b0 <SD_GoIdleState+0x21c>
        }
        else
        {
          if((uint8_t)(response & 0xFFU) != (uint8_t)SD_R1_IN_IDLE_STATE)
 8007820:	687b      	ldr	r3, [r7, #4]
 8007822:	b2db      	uxtb	r3, r3
 8007824:	2b01      	cmp	r3, #1
 8007826:	d002      	beq.n	800782e <SD_GoIdleState+0x19a>
          {
            return BSP_ERROR_UNKNOWN_FAILURE;
 8007828:	f06f 0305 	mvn.w	r3, #5
 800782c:	e040      	b.n	80078b0 <SD_GoIdleState+0x21c>
          }
          /* Send ACMD41 (SD_CMD_SD_APP_OP_COND) to initialize SDHC or SDXC cards: R1 response (0x00: no errors) */
          response = SD_SendCmd(SD_CMD_SD_APP_OP_COND, 0x00U, 0xFFU, (uint8_t)SD_ANSWER_R1_EXPECTED);
 800782e:	2300      	movs	r3, #0
 8007830:	22ff      	movs	r2, #255	; 0xff
 8007832:	2100      	movs	r1, #0
 8007834:	2029      	movs	r0, #41	; 0x29
 8007836:	f7ff fdad 	bl	8007394 <SD_SendCmd>
 800783a:	6078      	str	r0, [r7, #4]
          SD_IO_CSState(1);
 800783c:	2001      	movs	r0, #1
 800783e:	f7ff fa91 	bl	8006d64 <SD_IO_CSState>
          if(BUS_SPIx_Send(&tmp, 1U) != BSP_ERROR_NONE)
 8007842:	1cbb      	adds	r3, r7, #2
 8007844:	2101      	movs	r1, #1
 8007846:	4618      	mov	r0, r3
 8007848:	f000 f8f4 	bl	8007a34 <BSP_SPI2_Send>
 800784c:	4603      	mov	r3, r0
 800784e:	2b00      	cmp	r3, #0
 8007850:	d002      	beq.n	8007858 <SD_GoIdleState+0x1c4>
          {
            return BSP_ERROR_PERIPH_FAILURE;
 8007852:	f06f 0303 	mvn.w	r3, #3
 8007856:	e02b      	b.n	80078b0 <SD_GoIdleState+0x21c>
          }
        }
      }
      while((uint8_t)(response & 0xFFU) == (uint8_t)SD_R1_IN_IDLE_STATE);
 8007858:	687b      	ldr	r3, [r7, #4]
 800785a:	b2db      	uxtb	r3, r3
 800785c:	2b01      	cmp	r3, #1
 800785e:	d0cb      	beq.n	80077f8 <SD_GoIdleState+0x164>
    }

    /* Send CMD58 (SD_CMD_READ_OCR) to initialize SDHC or SDXC cards: R3 response (0x00: no errors) */
    response = SD_SendCmd(SD_CMD_READ_OCR, 0x00U, 0xFFU, (uint8_t)SD_ANSWER_R3_EXPECTED);
 8007860:	2303      	movs	r3, #3
 8007862:	22ff      	movs	r2, #255	; 0xff
 8007864:	2100      	movs	r1, #0
 8007866:	203a      	movs	r0, #58	; 0x3a
 8007868:	f7ff fd94 	bl	8007394 <SD_SendCmd>
 800786c:	6078      	str	r0, [r7, #4]
    SD_IO_CSState(1);
 800786e:	2001      	movs	r0, #1
 8007870:	f7ff fa78 	bl	8006d64 <SD_IO_CSState>
    if(BUS_SPIx_Send(&tmp, 1U) != BSP_ERROR_NONE)
 8007874:	1cbb      	adds	r3, r7, #2
 8007876:	2101      	movs	r1, #1
 8007878:	4618      	mov	r0, r3
 800787a:	f000 f8db 	bl	8007a34 <BSP_SPI2_Send>
 800787e:	4603      	mov	r3, r0
 8007880:	2b00      	cmp	r3, #0
 8007882:	d002      	beq.n	800788a <SD_GoIdleState+0x1f6>
    {
      return BSP_ERROR_PERIPH_FAILURE;
 8007884:	f06f 0303 	mvn.w	r3, #3
 8007888:	e012      	b.n	80078b0 <SD_GoIdleState+0x21c>
    }
    else
    {
      if((uint8_t)(response & 0xFFU) != (uint8_t)SD_R1_NO_ERROR)
 800788a:	687b      	ldr	r3, [r7, #4]
 800788c:	b2db      	uxtb	r3, r3
 800788e:	2b00      	cmp	r3, #0
 8007890:	d002      	beq.n	8007898 <SD_GoIdleState+0x204>
      {
        return BSP_ERROR_UNKNOWN_FAILURE;
 8007892:	f06f 0305 	mvn.w	r3, #5
 8007896:	e00b      	b.n	80078b0 <SD_GoIdleState+0x21c>
      }
      CardType = (uint32_t)(((response >> 8U) & 0x40U) >> 6U);
 8007898:	687b      	ldr	r3, [r7, #4]
 800789a:	0a1b      	lsrs	r3, r3, #8
 800789c:	099b      	lsrs	r3, r3, #6
 800789e:	f003 0301 	and.w	r3, r3, #1
 80078a2:	4a05      	ldr	r2, [pc, #20]	; (80078b8 <SD_GoIdleState+0x224>)
 80078a4:	6013      	str	r3, [r2, #0]
 80078a6:	e002      	b.n	80078ae <SD_GoIdleState+0x21a>
    }
  }
  else
  {
    return BSP_ERROR_BUSY;
 80078a8:	f06f 0302 	mvn.w	r3, #2
 80078ac:	e000      	b.n	80078b0 <SD_GoIdleState+0x21c>
  }

  return BSP_ERROR_NONE;
 80078ae:	2300      	movs	r3, #0
}
 80078b0:	4618      	mov	r0, r3
 80078b2:	3708      	adds	r7, #8
 80078b4:	46bd      	mov	sp, r7
 80078b6:	bd80      	pop	{r7, pc}
 80078b8:	20000048 	.word	0x20000048

080078bc <SD_ReadData>:
  * @brief  Waits a data until a value different from SD_DUMMY_BITE
  * @param  Data data to be read
  * @retval BSP status
  */
static int32_t SD_ReadData(uint8_t *Data)
{
 80078bc:	b580      	push	{r7, lr}
 80078be:	b084      	sub	sp, #16
 80078c0:	af00      	add	r7, sp, #0
 80078c2:	6078      	str	r0, [r7, #4]
  uint8_t timeout = 0x08U;
 80078c4:	2308      	movs	r3, #8
 80078c6:	73fb      	strb	r3, [r7, #15]
  uint8_t tmp;

  tmp = SD_DUMMY_BYTE;
 80078c8:	23ff      	movs	r3, #255	; 0xff
 80078ca:	73bb      	strb	r3, [r7, #14]
  /* Check if response is got or a timeout is happen */
  do
  {
    if(BUS_SPIx_SendRecv(&tmp, Data, 1) != BSP_ERROR_NONE)
 80078cc:	f107 030e 	add.w	r3, r7, #14
 80078d0:	2201      	movs	r2, #1
 80078d2:	6879      	ldr	r1, [r7, #4]
 80078d4:	4618      	mov	r0, r3
 80078d6:	f000 f8e5 	bl	8007aa4 <BSP_SPI2_SendRecv>
 80078da:	4603      	mov	r3, r0
 80078dc:	2b00      	cmp	r3, #0
 80078de:	d002      	beq.n	80078e6 <SD_ReadData+0x2a>
    {
      return BSP_ERROR_PERIPH_FAILURE;
 80078e0:	f06f 0303 	mvn.w	r3, #3
 80078e4:	e010      	b.n	8007908 <SD_ReadData+0x4c>
    }
    timeout--;
 80078e6:	7bfb      	ldrb	r3, [r7, #15]
 80078e8:	3b01      	subs	r3, #1
 80078ea:	73fb      	strb	r3, [r7, #15]

  }while ((*Data == SD_DUMMY_BYTE) && (timeout != 0U));
 80078ec:	687b      	ldr	r3, [r7, #4]
 80078ee:	781b      	ldrb	r3, [r3, #0]
 80078f0:	2bff      	cmp	r3, #255	; 0xff
 80078f2:	d102      	bne.n	80078fa <SD_ReadData+0x3e>
 80078f4:	7bfb      	ldrb	r3, [r7, #15]
 80078f6:	2b00      	cmp	r3, #0
 80078f8:	d1e8      	bne.n	80078cc <SD_ReadData+0x10>

  if (timeout == 0U)
 80078fa:	7bfb      	ldrb	r3, [r7, #15]
 80078fc:	2b00      	cmp	r3, #0
 80078fe:	d102      	bne.n	8007906 <SD_ReadData+0x4a>
  {
    /* After time out */
    return BSP_ERROR_BUSY;
 8007900:	f06f 0302 	mvn.w	r3, #2
 8007904:	e000      	b.n	8007908 <SD_ReadData+0x4c>
  }

  /* Right response got */
  return BSP_ERROR_NONE;
 8007906:	2300      	movs	r3, #0
}
 8007908:	4618      	mov	r0, r3
 800790a:	3710      	adds	r7, #16
 800790c:	46bd      	mov	sp, r7
 800790e:	bd80      	pop	{r7, pc}

08007910 <SD_WaitData>:
  * @brief  Waits a data from the SD card
  * @param  data  Expected data from the SD card
  * @retval BSP status
  */
static int32_t SD_WaitData(uint8_t Data)
{
 8007910:	b580      	push	{r7, lr}
 8007912:	b084      	sub	sp, #16
 8007914:	af00      	add	r7, sp, #0
 8007916:	4603      	mov	r3, r0
 8007918:	71fb      	strb	r3, [r7, #7]
  uint16_t timeout = 0xFFFF;
 800791a:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800791e:	81fb      	strh	r3, [r7, #14]
  uint8_t readvalue, tmp;

  tmp = SD_DUMMY_BYTE;
 8007920:	23ff      	movs	r3, #255	; 0xff
 8007922:	733b      	strb	r3, [r7, #12]

  /* Check if response is got or a timeout is happen */
  do
  {
    if(BUS_SPIx_SendRecv(&tmp, &readvalue, 1) != BSP_ERROR_NONE)
 8007924:	f107 010d 	add.w	r1, r7, #13
 8007928:	f107 030c 	add.w	r3, r7, #12
 800792c:	2201      	movs	r2, #1
 800792e:	4618      	mov	r0, r3
 8007930:	f000 f8b8 	bl	8007aa4 <BSP_SPI2_SendRecv>
 8007934:	4603      	mov	r3, r0
 8007936:	2b00      	cmp	r3, #0
 8007938:	d002      	beq.n	8007940 <SD_WaitData+0x30>
    {
      return BSP_ERROR_PERIPH_FAILURE;
 800793a:	f06f 0303 	mvn.w	r3, #3
 800793e:	e010      	b.n	8007962 <SD_WaitData+0x52>
    }
    timeout--;
 8007940:	89fb      	ldrh	r3, [r7, #14]
 8007942:	3b01      	subs	r3, #1
 8007944:	81fb      	strh	r3, [r7, #14]
  }while ((readvalue != Data) && (timeout != 0U));
 8007946:	7b7b      	ldrb	r3, [r7, #13]
 8007948:	79fa      	ldrb	r2, [r7, #7]
 800794a:	429a      	cmp	r2, r3
 800794c:	d002      	beq.n	8007954 <SD_WaitData+0x44>
 800794e:	89fb      	ldrh	r3, [r7, #14]
 8007950:	2b00      	cmp	r3, #0
 8007952:	d1e7      	bne.n	8007924 <SD_WaitData+0x14>

  if (timeout == 0U)
 8007954:	89fb      	ldrh	r3, [r7, #14]
 8007956:	2b00      	cmp	r3, #0
 8007958:	d102      	bne.n	8007960 <SD_WaitData+0x50>
  {
    /* After time out */
    return BSP_ERROR_BUSY;
 800795a:	f06f 0302 	mvn.w	r3, #2
 800795e:	e000      	b.n	8007962 <SD_WaitData+0x52>
  }

  /* Right response got */
  return BSP_ERROR_NONE;
 8007960:	2300      	movs	r3, #0
}
 8007962:	4618      	mov	r0, r3
 8007964:	3710      	adds	r7, #16
 8007966:	46bd      	mov	sp, r7
 8007968:	bd80      	pop	{r7, pc}

0800796a <SPI_IO_Delay>:
  * @brief  SPI IO delay
  * @param  Delay  Delay in ms
  * @retval None
  */
static void SPI_IO_Delay(uint32_t Delay)
{
 800796a:	b580      	push	{r7, lr}
 800796c:	b084      	sub	sp, #16
 800796e:	af00      	add	r7, sp, #0
 8007970:	6078      	str	r0, [r7, #4]
  int32_t tickstart;
  tickstart = BSP_GetTick();
 8007972:	f000 f8b7 	bl	8007ae4 <BSP_GetTick>
 8007976:	60f8      	str	r0, [r7, #12]
  while((BSP_GetTick() - tickstart) < (int32_t)Delay)
 8007978:	bf00      	nop
 800797a:	f000 f8b3 	bl	8007ae4 <BSP_GetTick>
 800797e:	4602      	mov	r2, r0
 8007980:	68fb      	ldr	r3, [r7, #12]
 8007982:	1ad2      	subs	r2, r2, r3
 8007984:	687b      	ldr	r3, [r7, #4]
 8007986:	429a      	cmp	r2, r3
 8007988:	dbf7      	blt.n	800797a <SPI_IO_Delay+0x10>
  {
  }
}
 800798a:	bf00      	nop
 800798c:	3710      	adds	r7, #16
 800798e:	46bd      	mov	sp, r7
 8007990:	bd80      	pop	{r7, pc}
	...

08007994 <BSP_SPI2_Init>:
 8007994:	b580      	push	{r7, lr}
 8007996:	af00      	add	r7, sp, #0
 8007998:	480a      	ldr	r0, [pc, #40]	; (80079c4 <BSP_SPI2_Init+0x30>)
 800799a:	f7fc fd26 	bl	80043ea <HAL_SPI_GetState>
 800799e:	4603      	mov	r3, r0
 80079a0:	2b00      	cmp	r3, #0
 80079a2:	d10b      	bne.n	80079bc <BSP_SPI2_Init+0x28>
 80079a4:	4807      	ldr	r0, [pc, #28]	; (80079c4 <BSP_SPI2_Init+0x30>)
 80079a6:	f000 f8a5 	bl	8007af4 <SPI_MspInit>
 80079aa:	4806      	ldr	r0, [pc, #24]	; (80079c4 <BSP_SPI2_Init+0x30>)
 80079ac:	f000 f80c 	bl	80079c8 <MX_BSP_SPI2_Init>
 80079b0:	4603      	mov	r3, r0
 80079b2:	2b00      	cmp	r3, #0
 80079b4:	d002      	beq.n	80079bc <BSP_SPI2_Init+0x28>
 80079b6:	f06f 0307 	mvn.w	r3, #7
 80079ba:	e000      	b.n	80079be <BSP_SPI2_Init+0x2a>
 80079bc:	2300      	movs	r3, #0
 80079be:	4618      	mov	r0, r3
 80079c0:	bd80      	pop	{r7, pc}
 80079c2:	bf00      	nop
 80079c4:	200054e0 	.word	0x200054e0

080079c8 <MX_BSP_SPI2_Init>:
 80079c8:	b580      	push	{r7, lr}
 80079ca:	b082      	sub	sp, #8
 80079cc:	af00      	add	r7, sp, #0
 80079ce:	6078      	str	r0, [r7, #4]
 80079d0:	687b      	ldr	r3, [r7, #4]
 80079d2:	4a17      	ldr	r2, [pc, #92]	; (8007a30 <MX_BSP_SPI2_Init+0x68>)
 80079d4:	601a      	str	r2, [r3, #0]
 80079d6:	687b      	ldr	r3, [r7, #4]
 80079d8:	2210      	movs	r2, #16
 80079da:	61da      	str	r2, [r3, #28]
 80079dc:	687b      	ldr	r3, [r7, #4]
 80079de:	2200      	movs	r2, #0
 80079e0:	609a      	str	r2, [r3, #8]
 80079e2:	687b      	ldr	r3, [r7, #4]
 80079e4:	2201      	movs	r2, #1
 80079e6:	615a      	str	r2, [r3, #20]
 80079e8:	687b      	ldr	r3, [r7, #4]
 80079ea:	2202      	movs	r2, #2
 80079ec:	611a      	str	r2, [r3, #16]
 80079ee:	687b      	ldr	r3, [r7, #4]
 80079f0:	2200      	movs	r2, #0
 80079f2:	629a      	str	r2, [r3, #40]	; 0x28
 80079f4:	687b      	ldr	r3, [r7, #4]
 80079f6:	2207      	movs	r2, #7
 80079f8:	62da      	str	r2, [r3, #44]	; 0x2c
 80079fa:	687b      	ldr	r3, [r7, #4]
 80079fc:	f44f 62e0 	mov.w	r2, #1792	; 0x700
 8007a00:	60da      	str	r2, [r3, #12]
 8007a02:	687b      	ldr	r3, [r7, #4]
 8007a04:	2200      	movs	r2, #0
 8007a06:	621a      	str	r2, [r3, #32]
 8007a08:	687b      	ldr	r3, [r7, #4]
 8007a0a:	f44f 7200 	mov.w	r2, #512	; 0x200
 8007a0e:	619a      	str	r2, [r3, #24]
 8007a10:	687b      	ldr	r3, [r7, #4]
 8007a12:	2200      	movs	r2, #0
 8007a14:	625a      	str	r2, [r3, #36]	; 0x24
 8007a16:	687b      	ldr	r3, [r7, #4]
 8007a18:	f44f 7282 	mov.w	r2, #260	; 0x104
 8007a1c:	605a      	str	r2, [r3, #4]
 8007a1e:	6878      	ldr	r0, [r7, #4]
 8007a20:	f7fb ffb0 	bl	8003984 <HAL_SPI_Init>
 8007a24:	4603      	mov	r3, r0
 8007a26:	4618      	mov	r0, r3
 8007a28:	3708      	adds	r7, #8
 8007a2a:	46bd      	mov	sp, r7
 8007a2c:	bd80      	pop	{r7, pc}
 8007a2e:	bf00      	nop
 8007a30:	40003800 	.word	0x40003800

08007a34 <BSP_SPI2_Send>:
 8007a34:	b580      	push	{r7, lr}
 8007a36:	b084      	sub	sp, #16
 8007a38:	af00      	add	r7, sp, #0
 8007a3a:	6078      	str	r0, [r7, #4]
 8007a3c:	6039      	str	r1, [r7, #0]
 8007a3e:	2300      	movs	r3, #0
 8007a40:	60fb      	str	r3, [r7, #12]
 8007a42:	683b      	ldr	r3, [r7, #0]
 8007a44:	b29a      	uxth	r2, r3
 8007a46:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8007a4a:	6879      	ldr	r1, [r7, #4]
 8007a4c:	4806      	ldr	r0, [pc, #24]	; (8007a68 <BSP_SPI2_Send+0x34>)
 8007a4e:	f7fc f82b 	bl	8003aa8 <HAL_SPI_Transmit>
 8007a52:	4603      	mov	r3, r0
 8007a54:	2b00      	cmp	r3, #0
 8007a56:	d002      	beq.n	8007a5e <BSP_SPI2_Send+0x2a>
 8007a58:	f06f 0307 	mvn.w	r3, #7
 8007a5c:	60fb      	str	r3, [r7, #12]
 8007a5e:	68fb      	ldr	r3, [r7, #12]
 8007a60:	4618      	mov	r0, r3
 8007a62:	3710      	adds	r7, #16
 8007a64:	46bd      	mov	sp, r7
 8007a66:	bd80      	pop	{r7, pc}
 8007a68:	200054e0 	.word	0x200054e0

08007a6c <BSP_SPI2_Recv>:
 8007a6c:	b580      	push	{r7, lr}
 8007a6e:	b084      	sub	sp, #16
 8007a70:	af00      	add	r7, sp, #0
 8007a72:	6078      	str	r0, [r7, #4]
 8007a74:	6039      	str	r1, [r7, #0]
 8007a76:	2300      	movs	r3, #0
 8007a78:	60fb      	str	r3, [r7, #12]
 8007a7a:	683b      	ldr	r3, [r7, #0]
 8007a7c:	b29a      	uxth	r2, r3
 8007a7e:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8007a82:	6879      	ldr	r1, [r7, #4]
 8007a84:	4806      	ldr	r0, [pc, #24]	; (8007aa0 <BSP_SPI2_Recv+0x34>)
 8007a86:	f7fc f975 	bl	8003d74 <HAL_SPI_Receive>
 8007a8a:	4603      	mov	r3, r0
 8007a8c:	2b00      	cmp	r3, #0
 8007a8e:	d002      	beq.n	8007a96 <BSP_SPI2_Recv+0x2a>
 8007a90:	f06f 0307 	mvn.w	r3, #7
 8007a94:	60fb      	str	r3, [r7, #12]
 8007a96:	68fb      	ldr	r3, [r7, #12]
 8007a98:	4618      	mov	r0, r3
 8007a9a:	3710      	adds	r7, #16
 8007a9c:	46bd      	mov	sp, r7
 8007a9e:	bd80      	pop	{r7, pc}
 8007aa0:	200054e0 	.word	0x200054e0

08007aa4 <BSP_SPI2_SendRecv>:
 8007aa4:	b580      	push	{r7, lr}
 8007aa6:	b088      	sub	sp, #32
 8007aa8:	af02      	add	r7, sp, #8
 8007aaa:	60f8      	str	r0, [r7, #12]
 8007aac:	60b9      	str	r1, [r7, #8]
 8007aae:	607a      	str	r2, [r7, #4]
 8007ab0:	2300      	movs	r3, #0
 8007ab2:	617b      	str	r3, [r7, #20]
 8007ab4:	687b      	ldr	r3, [r7, #4]
 8007ab6:	b29a      	uxth	r2, r3
 8007ab8:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8007abc:	9300      	str	r3, [sp, #0]
 8007abe:	4613      	mov	r3, r2
 8007ac0:	68ba      	ldr	r2, [r7, #8]
 8007ac2:	68f9      	ldr	r1, [r7, #12]
 8007ac4:	4806      	ldr	r0, [pc, #24]	; (8007ae0 <BSP_SPI2_SendRecv+0x3c>)
 8007ac6:	f7fc fa7d 	bl	8003fc4 <HAL_SPI_TransmitReceive>
 8007aca:	4603      	mov	r3, r0
 8007acc:	2b00      	cmp	r3, #0
 8007ace:	d002      	beq.n	8007ad6 <BSP_SPI2_SendRecv+0x32>
 8007ad0:	f06f 0307 	mvn.w	r3, #7
 8007ad4:	617b      	str	r3, [r7, #20]
 8007ad6:	697b      	ldr	r3, [r7, #20]
 8007ad8:	4618      	mov	r0, r3
 8007ada:	3718      	adds	r7, #24
 8007adc:	46bd      	mov	sp, r7
 8007ade:	bd80      	pop	{r7, pc}
 8007ae0:	200054e0 	.word	0x200054e0

08007ae4 <BSP_GetTick>:
 8007ae4:	b580      	push	{r7, lr}
 8007ae6:	af00      	add	r7, sp, #0
 8007ae8:	f7f9 fb92 	bl	8001210 <HAL_GetTick>
 8007aec:	4603      	mov	r3, r0
 8007aee:	4618      	mov	r0, r3
 8007af0:	bd80      	pop	{r7, pc}
	...

08007af4 <SPI_MspInit>:
 8007af4:	b580      	push	{r7, lr}
 8007af6:	b08c      	sub	sp, #48	; 0x30
 8007af8:	af00      	add	r7, sp, #0
 8007afa:	6078      	str	r0, [r7, #4]
 8007afc:	4b2e      	ldr	r3, [pc, #184]	; (8007bb8 <SPI_MspInit+0xc4>)
 8007afe:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8007b00:	4a2d      	ldr	r2, [pc, #180]	; (8007bb8 <SPI_MspInit+0xc4>)
 8007b02:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8007b06:	6593      	str	r3, [r2, #88]	; 0x58
 8007b08:	4b2b      	ldr	r3, [pc, #172]	; (8007bb8 <SPI_MspInit+0xc4>)
 8007b0a:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8007b0c:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8007b10:	61bb      	str	r3, [r7, #24]
 8007b12:	69bb      	ldr	r3, [r7, #24]
 8007b14:	4b28      	ldr	r3, [pc, #160]	; (8007bb8 <SPI_MspInit+0xc4>)
 8007b16:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8007b18:	4a27      	ldr	r2, [pc, #156]	; (8007bb8 <SPI_MspInit+0xc4>)
 8007b1a:	f043 0301 	orr.w	r3, r3, #1
 8007b1e:	64d3      	str	r3, [r2, #76]	; 0x4c
 8007b20:	4b25      	ldr	r3, [pc, #148]	; (8007bb8 <SPI_MspInit+0xc4>)
 8007b22:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8007b24:	f003 0301 	and.w	r3, r3, #1
 8007b28:	617b      	str	r3, [r7, #20]
 8007b2a:	697b      	ldr	r3, [r7, #20]
 8007b2c:	4b22      	ldr	r3, [pc, #136]	; (8007bb8 <SPI_MspInit+0xc4>)
 8007b2e:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8007b30:	4a21      	ldr	r2, [pc, #132]	; (8007bb8 <SPI_MspInit+0xc4>)
 8007b32:	f043 0301 	orr.w	r3, r3, #1
 8007b36:	64d3      	str	r3, [r2, #76]	; 0x4c
 8007b38:	4b1f      	ldr	r3, [pc, #124]	; (8007bb8 <SPI_MspInit+0xc4>)
 8007b3a:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8007b3c:	f003 0301 	and.w	r3, r3, #1
 8007b40:	613b      	str	r3, [r7, #16]
 8007b42:	693b      	ldr	r3, [r7, #16]
 8007b44:	4b1c      	ldr	r3, [pc, #112]	; (8007bb8 <SPI_MspInit+0xc4>)
 8007b46:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8007b48:	4a1b      	ldr	r2, [pc, #108]	; (8007bb8 <SPI_MspInit+0xc4>)
 8007b4a:	f043 0301 	orr.w	r3, r3, #1
 8007b4e:	64d3      	str	r3, [r2, #76]	; 0x4c
 8007b50:	4b19      	ldr	r3, [pc, #100]	; (8007bb8 <SPI_MspInit+0xc4>)
 8007b52:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8007b54:	f003 0301 	and.w	r3, r3, #1
 8007b58:	60fb      	str	r3, [r7, #12]
 8007b5a:	68fb      	ldr	r3, [r7, #12]
 8007b5c:	2320      	movs	r3, #32
 8007b5e:	61fb      	str	r3, [r7, #28]
 8007b60:	2302      	movs	r3, #2
 8007b62:	623b      	str	r3, [r7, #32]
 8007b64:	2301      	movs	r3, #1
 8007b66:	627b      	str	r3, [r7, #36]	; 0x24
 8007b68:	2303      	movs	r3, #3
 8007b6a:	62bb      	str	r3, [r7, #40]	; 0x28
 8007b6c:	2305      	movs	r3, #5
 8007b6e:	62fb      	str	r3, [r7, #44]	; 0x2c
 8007b70:	f107 031c 	add.w	r3, r7, #28
 8007b74:	4619      	mov	r1, r3
 8007b76:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 8007b7a:	f7fa fab7 	bl	80020ec <HAL_GPIO_Init>
 8007b7e:	2380      	movs	r3, #128	; 0x80
 8007b80:	61fb      	str	r3, [r7, #28]
 8007b82:	2305      	movs	r3, #5
 8007b84:	62fb      	str	r3, [r7, #44]	; 0x2c
 8007b86:	2302      	movs	r3, #2
 8007b88:	627b      	str	r3, [r7, #36]	; 0x24
 8007b8a:	f107 031c 	add.w	r3, r7, #28
 8007b8e:	4619      	mov	r1, r3
 8007b90:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 8007b94:	f7fa faaa 	bl	80020ec <HAL_GPIO_Init>
 8007b98:	2340      	movs	r3, #64	; 0x40
 8007b9a:	61fb      	str	r3, [r7, #28]
 8007b9c:	2305      	movs	r3, #5
 8007b9e:	62fb      	str	r3, [r7, #44]	; 0x2c
 8007ba0:	f107 031c 	add.w	r3, r7, #28
 8007ba4:	4619      	mov	r1, r3
 8007ba6:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 8007baa:	f7fa fa9f 	bl	80020ec <HAL_GPIO_Init>
 8007bae:	bf00      	nop
 8007bb0:	3730      	adds	r7, #48	; 0x30
 8007bb2:	46bd      	mov	sp, r7
 8007bb4:	bd80      	pop	{r7, pc}
 8007bb6:	bf00      	nop
 8007bb8:	40021000 	.word	0x40021000

08007bbc <USER_CheckStatus>:
 8007bbc:	b580      	push	{r7, lr}
 8007bbe:	b082      	sub	sp, #8
 8007bc0:	af00      	add	r7, sp, #0
 8007bc2:	4603      	mov	r3, r0
 8007bc4:	71fb      	strb	r3, [r7, #7]
 8007bc6:	4b0c      	ldr	r3, [pc, #48]	; (8007bf8 <USER_CheckStatus+0x3c>)
 8007bc8:	2201      	movs	r2, #1
 8007bca:	701a      	strb	r2, [r3, #0]
 8007bcc:	2000      	movs	r0, #0
 8007bce:	f7fe ff85 	bl	8006adc <MY_SD_GetCardState>
 8007bd2:	4603      	mov	r3, r0
 8007bd4:	2b00      	cmp	r3, #0
 8007bd6:	d107      	bne.n	8007be8 <USER_CheckStatus+0x2c>
 8007bd8:	4b07      	ldr	r3, [pc, #28]	; (8007bf8 <USER_CheckStatus+0x3c>)
 8007bda:	781b      	ldrb	r3, [r3, #0]
 8007bdc:	b2db      	uxtb	r3, r3
 8007bde:	f023 0301 	bic.w	r3, r3, #1
 8007be2:	b2da      	uxtb	r2, r3
 8007be4:	4b04      	ldr	r3, [pc, #16]	; (8007bf8 <USER_CheckStatus+0x3c>)
 8007be6:	701a      	strb	r2, [r3, #0]
 8007be8:	4b03      	ldr	r3, [pc, #12]	; (8007bf8 <USER_CheckStatus+0x3c>)
 8007bea:	781b      	ldrb	r3, [r3, #0]
 8007bec:	b2db      	uxtb	r3, r3
 8007bee:	4618      	mov	r0, r3
 8007bf0:	3708      	adds	r7, #8
 8007bf2:	46bd      	mov	sp, r7
 8007bf4:	bd80      	pop	{r7, pc}
 8007bf6:	bf00      	nop
 8007bf8:	2000000c 	.word	0x2000000c

08007bfc <USER_initialize>:
 8007bfc:	b580      	push	{r7, lr}
 8007bfe:	b082      	sub	sp, #8
 8007c00:	af00      	add	r7, sp, #0
 8007c02:	4603      	mov	r3, r0
 8007c04:	71fb      	strb	r3, [r7, #7]
 8007c06:	4b09      	ldr	r3, [pc, #36]	; (8007c2c <USER_initialize+0x30>)
 8007c08:	2201      	movs	r2, #1
 8007c0a:	701a      	strb	r2, [r3, #0]
 8007c0c:	79fb      	ldrb	r3, [r7, #7]
 8007c0e:	4618      	mov	r0, r3
 8007c10:	f7ff ffd4 	bl	8007bbc <USER_CheckStatus>
 8007c14:	4603      	mov	r3, r0
 8007c16:	461a      	mov	r2, r3
 8007c18:	4b04      	ldr	r3, [pc, #16]	; (8007c2c <USER_initialize+0x30>)
 8007c1a:	701a      	strb	r2, [r3, #0]
 8007c1c:	4b03      	ldr	r3, [pc, #12]	; (8007c2c <USER_initialize+0x30>)
 8007c1e:	781b      	ldrb	r3, [r3, #0]
 8007c20:	b2db      	uxtb	r3, r3
 8007c22:	4618      	mov	r0, r3
 8007c24:	3708      	adds	r7, #8
 8007c26:	46bd      	mov	sp, r7
 8007c28:	bd80      	pop	{r7, pc}
 8007c2a:	bf00      	nop
 8007c2c:	2000000c 	.word	0x2000000c

08007c30 <USER_status>:
 8007c30:	b580      	push	{r7, lr}
 8007c32:	b082      	sub	sp, #8
 8007c34:	af00      	add	r7, sp, #0
 8007c36:	4603      	mov	r3, r0
 8007c38:	71fb      	strb	r3, [r7, #7]
 8007c3a:	79fb      	ldrb	r3, [r7, #7]
 8007c3c:	4618      	mov	r0, r3
 8007c3e:	f7ff ffbd 	bl	8007bbc <USER_CheckStatus>
 8007c42:	4603      	mov	r3, r0
 8007c44:	4618      	mov	r0, r3
 8007c46:	3708      	adds	r7, #8
 8007c48:	46bd      	mov	sp, r7
 8007c4a:	bd80      	pop	{r7, pc}

08007c4c <USER_read>:
 8007c4c:	b580      	push	{r7, lr}
 8007c4e:	b086      	sub	sp, #24
 8007c50:	af00      	add	r7, sp, #0
 8007c52:	60b9      	str	r1, [r7, #8]
 8007c54:	607a      	str	r2, [r7, #4]
 8007c56:	603b      	str	r3, [r7, #0]
 8007c58:	4603      	mov	r3, r0
 8007c5a:	73fb      	strb	r3, [r7, #15]
 8007c5c:	2301      	movs	r3, #1
 8007c5e:	75fb      	strb	r3, [r7, #23]
 8007c60:	683b      	ldr	r3, [r7, #0]
 8007c62:	687a      	ldr	r2, [r7, #4]
 8007c64:	68b9      	ldr	r1, [r7, #8]
 8007c66:	2000      	movs	r0, #0
 8007c68:	f7fe fd6a 	bl	8006740 <MY_SD_ReadBlocks>
 8007c6c:	4603      	mov	r3, r0
 8007c6e:	2b00      	cmp	r3, #0
 8007c70:	d108      	bne.n	8007c84 <USER_read+0x38>
 8007c72:	bf00      	nop
 8007c74:	2000      	movs	r0, #0
 8007c76:	f7fe ff31 	bl	8006adc <MY_SD_GetCardState>
 8007c7a:	4603      	mov	r3, r0
 8007c7c:	2b00      	cmp	r3, #0
 8007c7e:	d1f9      	bne.n	8007c74 <USER_read+0x28>
 8007c80:	2300      	movs	r3, #0
 8007c82:	75fb      	strb	r3, [r7, #23]
 8007c84:	7dfb      	ldrb	r3, [r7, #23]
 8007c86:	4618      	mov	r0, r3
 8007c88:	3718      	adds	r7, #24
 8007c8a:	46bd      	mov	sp, r7
 8007c8c:	bd80      	pop	{r7, pc}

08007c8e <USER_write>:
 8007c8e:	b580      	push	{r7, lr}
 8007c90:	b086      	sub	sp, #24
 8007c92:	af00      	add	r7, sp, #0
 8007c94:	60b9      	str	r1, [r7, #8]
 8007c96:	607a      	str	r2, [r7, #4]
 8007c98:	603b      	str	r3, [r7, #0]
 8007c9a:	4603      	mov	r3, r0
 8007c9c:	73fb      	strb	r3, [r7, #15]
 8007c9e:	2301      	movs	r3, #1
 8007ca0:	75fb      	strb	r3, [r7, #23]
 8007ca2:	683b      	ldr	r3, [r7, #0]
 8007ca4:	687a      	ldr	r2, [r7, #4]
 8007ca6:	68b9      	ldr	r1, [r7, #8]
 8007ca8:	2000      	movs	r0, #0
 8007caa:	f7fe fe15 	bl	80068d8 <MY_SD_WriteBlocks>
 8007cae:	4603      	mov	r3, r0
 8007cb0:	2b00      	cmp	r3, #0
 8007cb2:	d108      	bne.n	8007cc6 <USER_write+0x38>
 8007cb4:	bf00      	nop
 8007cb6:	2000      	movs	r0, #0
 8007cb8:	f7fe ff10 	bl	8006adc <MY_SD_GetCardState>
 8007cbc:	4603      	mov	r3, r0
 8007cbe:	2b00      	cmp	r3, #0
 8007cc0:	d1f9      	bne.n	8007cb6 <USER_write+0x28>
 8007cc2:	2300      	movs	r3, #0
 8007cc4:	75fb      	strb	r3, [r7, #23]
 8007cc6:	7dfb      	ldrb	r3, [r7, #23]
 8007cc8:	4618      	mov	r0, r3
 8007cca:	3718      	adds	r7, #24
 8007ccc:	46bd      	mov	sp, r7
 8007cce:	bd80      	pop	{r7, pc}

08007cd0 <USER_ioctl>:
 8007cd0:	b590      	push	{r4, r7, lr}
 8007cd2:	b09d      	sub	sp, #116	; 0x74
 8007cd4:	af00      	add	r7, sp, #0
 8007cd6:	4603      	mov	r3, r0
 8007cd8:	603a      	str	r2, [r7, #0]
 8007cda:	71fb      	strb	r3, [r7, #7]
 8007cdc:	460b      	mov	r3, r1
 8007cde:	71bb      	strb	r3, [r7, #6]
 8007ce0:	2301      	movs	r3, #1
 8007ce2:	f887 306f 	strb.w	r3, [r7, #111]	; 0x6f
 8007ce6:	4b2c      	ldr	r3, [pc, #176]	; (8007d98 <USER_ioctl+0xc8>)
 8007ce8:	781b      	ldrb	r3, [r3, #0]
 8007cea:	b2db      	uxtb	r3, r3
 8007cec:	f003 0301 	and.w	r3, r3, #1
 8007cf0:	2b00      	cmp	r3, #0
 8007cf2:	d001      	beq.n	8007cf8 <USER_ioctl+0x28>
 8007cf4:	2303      	movs	r3, #3
 8007cf6:	e04b      	b.n	8007d90 <USER_ioctl+0xc0>
 8007cf8:	79bb      	ldrb	r3, [r7, #6]
 8007cfa:	2b03      	cmp	r3, #3
 8007cfc:	d843      	bhi.n	8007d86 <USER_ioctl+0xb6>
 8007cfe:	a201      	add	r2, pc, #4	; (adr r2, 8007d04 <USER_ioctl+0x34>)
 8007d00:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8007d04:	08007d15 	.word	0x08007d15
 8007d08:	08007d1d 	.word	0x08007d1d
 8007d0c:	08007d3b 	.word	0x08007d3b
 8007d10:	08007d59 	.word	0x08007d59
 8007d14:	2300      	movs	r3, #0
 8007d16:	f887 306f 	strb.w	r3, [r7, #111]	; 0x6f
 8007d1a:	e037      	b.n	8007d8c <USER_ioctl+0xbc>
 8007d1c:	f107 0308 	add.w	r3, r7, #8
 8007d20:	4619      	mov	r1, r3
 8007d22:	2000      	movs	r0, #0
 8007d24:	f7fe ff12 	bl	8006b4c <MY_SD_GetCardInfo>
 8007d28:	e9d7 3416 	ldrd	r3, r4, [r7, #88]	; 0x58
 8007d2c:	461a      	mov	r2, r3
 8007d2e:	683b      	ldr	r3, [r7, #0]
 8007d30:	601a      	str	r2, [r3, #0]
 8007d32:	2300      	movs	r3, #0
 8007d34:	f887 306f 	strb.w	r3, [r7, #111]	; 0x6f
 8007d38:	e028      	b.n	8007d8c <USER_ioctl+0xbc>
 8007d3a:	f107 0308 	add.w	r3, r7, #8
 8007d3e:	4619      	mov	r1, r3
 8007d40:	2000      	movs	r0, #0
 8007d42:	f7fe ff03 	bl	8006b4c <MY_SD_GetCardInfo>
 8007d46:	e9d7 3418 	ldrd	r3, r4, [r7, #96]	; 0x60
 8007d4a:	b29a      	uxth	r2, r3
 8007d4c:	683b      	ldr	r3, [r7, #0]
 8007d4e:	801a      	strh	r2, [r3, #0]
 8007d50:	2300      	movs	r3, #0
 8007d52:	f887 306f 	strb.w	r3, [r7, #111]	; 0x6f
 8007d56:	e019      	b.n	8007d8c <USER_ioctl+0xbc>
 8007d58:	f107 0308 	add.w	r3, r7, #8
 8007d5c:	4619      	mov	r1, r3
 8007d5e:	2000      	movs	r0, #0
 8007d60:	f7fe fef4 	bl	8006b4c <MY_SD_GetCardInfo>
 8007d64:	e9d7 1218 	ldrd	r1, r2, [r7, #96]	; 0x60
 8007d68:	f04f 0300 	mov.w	r3, #0
 8007d6c:	f04f 0400 	mov.w	r4, #0
 8007d70:	0a4b      	lsrs	r3, r1, #9
 8007d72:	ea43 53c2 	orr.w	r3, r3, r2, lsl #23
 8007d76:	0a54      	lsrs	r4, r2, #9
 8007d78:	461a      	mov	r2, r3
 8007d7a:	683b      	ldr	r3, [r7, #0]
 8007d7c:	601a      	str	r2, [r3, #0]
 8007d7e:	2300      	movs	r3, #0
 8007d80:	f887 306f 	strb.w	r3, [r7, #111]	; 0x6f
 8007d84:	e002      	b.n	8007d8c <USER_ioctl+0xbc>
 8007d86:	2304      	movs	r3, #4
 8007d88:	f887 306f 	strb.w	r3, [r7, #111]	; 0x6f
 8007d8c:	f897 306f 	ldrb.w	r3, [r7, #111]	; 0x6f
 8007d90:	4618      	mov	r0, r3
 8007d92:	3774      	adds	r7, #116	; 0x74
 8007d94:	46bd      	mov	sp, r7
 8007d96:	bd90      	pop	{r4, r7, pc}
 8007d98:	2000000c 	.word	0x2000000c

08007d9c <disk_status>:
 8007d9c:	b580      	push	{r7, lr}
 8007d9e:	b084      	sub	sp, #16
 8007da0:	af00      	add	r7, sp, #0
 8007da2:	4603      	mov	r3, r0
 8007da4:	71fb      	strb	r3, [r7, #7]
 8007da6:	79fb      	ldrb	r3, [r7, #7]
 8007da8:	4a08      	ldr	r2, [pc, #32]	; (8007dcc <disk_status+0x30>)
 8007daa:	009b      	lsls	r3, r3, #2
 8007dac:	4413      	add	r3, r2
 8007dae:	685b      	ldr	r3, [r3, #4]
 8007db0:	685b      	ldr	r3, [r3, #4]
 8007db2:	79fa      	ldrb	r2, [r7, #7]
 8007db4:	4905      	ldr	r1, [pc, #20]	; (8007dcc <disk_status+0x30>)
 8007db6:	440a      	add	r2, r1
 8007db8:	7a12      	ldrb	r2, [r2, #8]
 8007dba:	4610      	mov	r0, r2
 8007dbc:	4798      	blx	r3
 8007dbe:	4603      	mov	r3, r0
 8007dc0:	73fb      	strb	r3, [r7, #15]
 8007dc2:	7bfb      	ldrb	r3, [r7, #15]
 8007dc4:	4618      	mov	r0, r3
 8007dc6:	3710      	adds	r7, #16
 8007dc8:	46bd      	mov	sp, r7
 8007dca:	bd80      	pop	{r7, pc}
 8007dcc:	20000074 	.word	0x20000074

08007dd0 <disk_initialize>:
 8007dd0:	b580      	push	{r7, lr}
 8007dd2:	b084      	sub	sp, #16
 8007dd4:	af00      	add	r7, sp, #0
 8007dd6:	4603      	mov	r3, r0
 8007dd8:	71fb      	strb	r3, [r7, #7]
 8007dda:	2300      	movs	r3, #0
 8007ddc:	73fb      	strb	r3, [r7, #15]
 8007dde:	79fb      	ldrb	r3, [r7, #7]
 8007de0:	4a0d      	ldr	r2, [pc, #52]	; (8007e18 <disk_initialize+0x48>)
 8007de2:	5cd3      	ldrb	r3, [r2, r3]
 8007de4:	2b00      	cmp	r3, #0
 8007de6:	d111      	bne.n	8007e0c <disk_initialize+0x3c>
 8007de8:	79fb      	ldrb	r3, [r7, #7]
 8007dea:	4a0b      	ldr	r2, [pc, #44]	; (8007e18 <disk_initialize+0x48>)
 8007dec:	2101      	movs	r1, #1
 8007dee:	54d1      	strb	r1, [r2, r3]
 8007df0:	79fb      	ldrb	r3, [r7, #7]
 8007df2:	4a09      	ldr	r2, [pc, #36]	; (8007e18 <disk_initialize+0x48>)
 8007df4:	009b      	lsls	r3, r3, #2
 8007df6:	4413      	add	r3, r2
 8007df8:	685b      	ldr	r3, [r3, #4]
 8007dfa:	681b      	ldr	r3, [r3, #0]
 8007dfc:	79fa      	ldrb	r2, [r7, #7]
 8007dfe:	4906      	ldr	r1, [pc, #24]	; (8007e18 <disk_initialize+0x48>)
 8007e00:	440a      	add	r2, r1
 8007e02:	7a12      	ldrb	r2, [r2, #8]
 8007e04:	4610      	mov	r0, r2
 8007e06:	4798      	blx	r3
 8007e08:	4603      	mov	r3, r0
 8007e0a:	73fb      	strb	r3, [r7, #15]
 8007e0c:	7bfb      	ldrb	r3, [r7, #15]
 8007e0e:	4618      	mov	r0, r3
 8007e10:	3710      	adds	r7, #16
 8007e12:	46bd      	mov	sp, r7
 8007e14:	bd80      	pop	{r7, pc}
 8007e16:	bf00      	nop
 8007e18:	20000074 	.word	0x20000074

08007e1c <disk_read>:
 8007e1c:	b590      	push	{r4, r7, lr}
 8007e1e:	b087      	sub	sp, #28
 8007e20:	af00      	add	r7, sp, #0
 8007e22:	60b9      	str	r1, [r7, #8]
 8007e24:	607a      	str	r2, [r7, #4]
 8007e26:	603b      	str	r3, [r7, #0]
 8007e28:	4603      	mov	r3, r0
 8007e2a:	73fb      	strb	r3, [r7, #15]
 8007e2c:	7bfb      	ldrb	r3, [r7, #15]
 8007e2e:	4a0a      	ldr	r2, [pc, #40]	; (8007e58 <disk_read+0x3c>)
 8007e30:	009b      	lsls	r3, r3, #2
 8007e32:	4413      	add	r3, r2
 8007e34:	685b      	ldr	r3, [r3, #4]
 8007e36:	689c      	ldr	r4, [r3, #8]
 8007e38:	7bfb      	ldrb	r3, [r7, #15]
 8007e3a:	4a07      	ldr	r2, [pc, #28]	; (8007e58 <disk_read+0x3c>)
 8007e3c:	4413      	add	r3, r2
 8007e3e:	7a18      	ldrb	r0, [r3, #8]
 8007e40:	683b      	ldr	r3, [r7, #0]
 8007e42:	687a      	ldr	r2, [r7, #4]
 8007e44:	68b9      	ldr	r1, [r7, #8]
 8007e46:	47a0      	blx	r4
 8007e48:	4603      	mov	r3, r0
 8007e4a:	75fb      	strb	r3, [r7, #23]
 8007e4c:	7dfb      	ldrb	r3, [r7, #23]
 8007e4e:	4618      	mov	r0, r3
 8007e50:	371c      	adds	r7, #28
 8007e52:	46bd      	mov	sp, r7
 8007e54:	bd90      	pop	{r4, r7, pc}
 8007e56:	bf00      	nop
 8007e58:	20000074 	.word	0x20000074

08007e5c <disk_write>:
 8007e5c:	b590      	push	{r4, r7, lr}
 8007e5e:	b087      	sub	sp, #28
 8007e60:	af00      	add	r7, sp, #0
 8007e62:	60b9      	str	r1, [r7, #8]
 8007e64:	607a      	str	r2, [r7, #4]
 8007e66:	603b      	str	r3, [r7, #0]
 8007e68:	4603      	mov	r3, r0
 8007e6a:	73fb      	strb	r3, [r7, #15]
 8007e6c:	7bfb      	ldrb	r3, [r7, #15]
 8007e6e:	4a0a      	ldr	r2, [pc, #40]	; (8007e98 <disk_write+0x3c>)
 8007e70:	009b      	lsls	r3, r3, #2
 8007e72:	4413      	add	r3, r2
 8007e74:	685b      	ldr	r3, [r3, #4]
 8007e76:	68dc      	ldr	r4, [r3, #12]
 8007e78:	7bfb      	ldrb	r3, [r7, #15]
 8007e7a:	4a07      	ldr	r2, [pc, #28]	; (8007e98 <disk_write+0x3c>)
 8007e7c:	4413      	add	r3, r2
 8007e7e:	7a18      	ldrb	r0, [r3, #8]
 8007e80:	683b      	ldr	r3, [r7, #0]
 8007e82:	687a      	ldr	r2, [r7, #4]
 8007e84:	68b9      	ldr	r1, [r7, #8]
 8007e86:	47a0      	blx	r4
 8007e88:	4603      	mov	r3, r0
 8007e8a:	75fb      	strb	r3, [r7, #23]
 8007e8c:	7dfb      	ldrb	r3, [r7, #23]
 8007e8e:	4618      	mov	r0, r3
 8007e90:	371c      	adds	r7, #28
 8007e92:	46bd      	mov	sp, r7
 8007e94:	bd90      	pop	{r4, r7, pc}
 8007e96:	bf00      	nop
 8007e98:	20000074 	.word	0x20000074

08007e9c <disk_ioctl>:
 8007e9c:	b580      	push	{r7, lr}
 8007e9e:	b084      	sub	sp, #16
 8007ea0:	af00      	add	r7, sp, #0
 8007ea2:	4603      	mov	r3, r0
 8007ea4:	603a      	str	r2, [r7, #0]
 8007ea6:	71fb      	strb	r3, [r7, #7]
 8007ea8:	460b      	mov	r3, r1
 8007eaa:	71bb      	strb	r3, [r7, #6]
 8007eac:	79fb      	ldrb	r3, [r7, #7]
 8007eae:	4a09      	ldr	r2, [pc, #36]	; (8007ed4 <disk_ioctl+0x38>)
 8007eb0:	009b      	lsls	r3, r3, #2
 8007eb2:	4413      	add	r3, r2
 8007eb4:	685b      	ldr	r3, [r3, #4]
 8007eb6:	691b      	ldr	r3, [r3, #16]
 8007eb8:	79fa      	ldrb	r2, [r7, #7]
 8007eba:	4906      	ldr	r1, [pc, #24]	; (8007ed4 <disk_ioctl+0x38>)
 8007ebc:	440a      	add	r2, r1
 8007ebe:	7a10      	ldrb	r0, [r2, #8]
 8007ec0:	79b9      	ldrb	r1, [r7, #6]
 8007ec2:	683a      	ldr	r2, [r7, #0]
 8007ec4:	4798      	blx	r3
 8007ec6:	4603      	mov	r3, r0
 8007ec8:	73fb      	strb	r3, [r7, #15]
 8007eca:	7bfb      	ldrb	r3, [r7, #15]
 8007ecc:	4618      	mov	r0, r3
 8007ece:	3710      	adds	r7, #16
 8007ed0:	46bd      	mov	sp, r7
 8007ed2:	bd80      	pop	{r7, pc}
 8007ed4:	20000074 	.word	0x20000074

08007ed8 <ld_word>:
 8007ed8:	b480      	push	{r7}
 8007eda:	b085      	sub	sp, #20
 8007edc:	af00      	add	r7, sp, #0
 8007ede:	6078      	str	r0, [r7, #4]
 8007ee0:	687b      	ldr	r3, [r7, #4]
 8007ee2:	3301      	adds	r3, #1
 8007ee4:	781b      	ldrb	r3, [r3, #0]
 8007ee6:	81fb      	strh	r3, [r7, #14]
 8007ee8:	89fb      	ldrh	r3, [r7, #14]
 8007eea:	021b      	lsls	r3, r3, #8
 8007eec:	b21a      	sxth	r2, r3
 8007eee:	687b      	ldr	r3, [r7, #4]
 8007ef0:	781b      	ldrb	r3, [r3, #0]
 8007ef2:	b21b      	sxth	r3, r3
 8007ef4:	4313      	orrs	r3, r2
 8007ef6:	b21b      	sxth	r3, r3
 8007ef8:	81fb      	strh	r3, [r7, #14]
 8007efa:	89fb      	ldrh	r3, [r7, #14]
 8007efc:	4618      	mov	r0, r3
 8007efe:	3714      	adds	r7, #20
 8007f00:	46bd      	mov	sp, r7
 8007f02:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007f06:	4770      	bx	lr

08007f08 <ld_dword>:
 8007f08:	b480      	push	{r7}
 8007f0a:	b085      	sub	sp, #20
 8007f0c:	af00      	add	r7, sp, #0
 8007f0e:	6078      	str	r0, [r7, #4]
 8007f10:	687b      	ldr	r3, [r7, #4]
 8007f12:	3303      	adds	r3, #3
 8007f14:	781b      	ldrb	r3, [r3, #0]
 8007f16:	60fb      	str	r3, [r7, #12]
 8007f18:	68fb      	ldr	r3, [r7, #12]
 8007f1a:	021b      	lsls	r3, r3, #8
 8007f1c:	687a      	ldr	r2, [r7, #4]
 8007f1e:	3202      	adds	r2, #2
 8007f20:	7812      	ldrb	r2, [r2, #0]
 8007f22:	4313      	orrs	r3, r2
 8007f24:	60fb      	str	r3, [r7, #12]
 8007f26:	68fb      	ldr	r3, [r7, #12]
 8007f28:	021b      	lsls	r3, r3, #8
 8007f2a:	687a      	ldr	r2, [r7, #4]
 8007f2c:	3201      	adds	r2, #1
 8007f2e:	7812      	ldrb	r2, [r2, #0]
 8007f30:	4313      	orrs	r3, r2
 8007f32:	60fb      	str	r3, [r7, #12]
 8007f34:	68fb      	ldr	r3, [r7, #12]
 8007f36:	021b      	lsls	r3, r3, #8
 8007f38:	687a      	ldr	r2, [r7, #4]
 8007f3a:	7812      	ldrb	r2, [r2, #0]
 8007f3c:	4313      	orrs	r3, r2
 8007f3e:	60fb      	str	r3, [r7, #12]
 8007f40:	68fb      	ldr	r3, [r7, #12]
 8007f42:	4618      	mov	r0, r3
 8007f44:	3714      	adds	r7, #20
 8007f46:	46bd      	mov	sp, r7
 8007f48:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007f4c:	4770      	bx	lr

08007f4e <st_word>:
 8007f4e:	b480      	push	{r7}
 8007f50:	b083      	sub	sp, #12
 8007f52:	af00      	add	r7, sp, #0
 8007f54:	6078      	str	r0, [r7, #4]
 8007f56:	460b      	mov	r3, r1
 8007f58:	807b      	strh	r3, [r7, #2]
 8007f5a:	687b      	ldr	r3, [r7, #4]
 8007f5c:	1c5a      	adds	r2, r3, #1
 8007f5e:	607a      	str	r2, [r7, #4]
 8007f60:	887a      	ldrh	r2, [r7, #2]
 8007f62:	b2d2      	uxtb	r2, r2
 8007f64:	701a      	strb	r2, [r3, #0]
 8007f66:	887b      	ldrh	r3, [r7, #2]
 8007f68:	0a1b      	lsrs	r3, r3, #8
 8007f6a:	807b      	strh	r3, [r7, #2]
 8007f6c:	687b      	ldr	r3, [r7, #4]
 8007f6e:	1c5a      	adds	r2, r3, #1
 8007f70:	607a      	str	r2, [r7, #4]
 8007f72:	887a      	ldrh	r2, [r7, #2]
 8007f74:	b2d2      	uxtb	r2, r2
 8007f76:	701a      	strb	r2, [r3, #0]
 8007f78:	bf00      	nop
 8007f7a:	370c      	adds	r7, #12
 8007f7c:	46bd      	mov	sp, r7
 8007f7e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007f82:	4770      	bx	lr

08007f84 <st_dword>:
 8007f84:	b480      	push	{r7}
 8007f86:	b083      	sub	sp, #12
 8007f88:	af00      	add	r7, sp, #0
 8007f8a:	6078      	str	r0, [r7, #4]
 8007f8c:	6039      	str	r1, [r7, #0]
 8007f8e:	687b      	ldr	r3, [r7, #4]
 8007f90:	1c5a      	adds	r2, r3, #1
 8007f92:	607a      	str	r2, [r7, #4]
 8007f94:	683a      	ldr	r2, [r7, #0]
 8007f96:	b2d2      	uxtb	r2, r2
 8007f98:	701a      	strb	r2, [r3, #0]
 8007f9a:	683b      	ldr	r3, [r7, #0]
 8007f9c:	0a1b      	lsrs	r3, r3, #8
 8007f9e:	603b      	str	r3, [r7, #0]
 8007fa0:	687b      	ldr	r3, [r7, #4]
 8007fa2:	1c5a      	adds	r2, r3, #1
 8007fa4:	607a      	str	r2, [r7, #4]
 8007fa6:	683a      	ldr	r2, [r7, #0]
 8007fa8:	b2d2      	uxtb	r2, r2
 8007faa:	701a      	strb	r2, [r3, #0]
 8007fac:	683b      	ldr	r3, [r7, #0]
 8007fae:	0a1b      	lsrs	r3, r3, #8
 8007fb0:	603b      	str	r3, [r7, #0]
 8007fb2:	687b      	ldr	r3, [r7, #4]
 8007fb4:	1c5a      	adds	r2, r3, #1
 8007fb6:	607a      	str	r2, [r7, #4]
 8007fb8:	683a      	ldr	r2, [r7, #0]
 8007fba:	b2d2      	uxtb	r2, r2
 8007fbc:	701a      	strb	r2, [r3, #0]
 8007fbe:	683b      	ldr	r3, [r7, #0]
 8007fc0:	0a1b      	lsrs	r3, r3, #8
 8007fc2:	603b      	str	r3, [r7, #0]
 8007fc4:	687b      	ldr	r3, [r7, #4]
 8007fc6:	1c5a      	adds	r2, r3, #1
 8007fc8:	607a      	str	r2, [r7, #4]
 8007fca:	683a      	ldr	r2, [r7, #0]
 8007fcc:	b2d2      	uxtb	r2, r2
 8007fce:	701a      	strb	r2, [r3, #0]
 8007fd0:	bf00      	nop
 8007fd2:	370c      	adds	r7, #12
 8007fd4:	46bd      	mov	sp, r7
 8007fd6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007fda:	4770      	bx	lr

08007fdc <mem_cpy>:
 8007fdc:	b480      	push	{r7}
 8007fde:	b087      	sub	sp, #28
 8007fe0:	af00      	add	r7, sp, #0
 8007fe2:	60f8      	str	r0, [r7, #12]
 8007fe4:	60b9      	str	r1, [r7, #8]
 8007fe6:	607a      	str	r2, [r7, #4]
 8007fe8:	68fb      	ldr	r3, [r7, #12]
 8007fea:	617b      	str	r3, [r7, #20]
 8007fec:	68bb      	ldr	r3, [r7, #8]
 8007fee:	613b      	str	r3, [r7, #16]
 8007ff0:	687b      	ldr	r3, [r7, #4]
 8007ff2:	2b00      	cmp	r3, #0
 8007ff4:	d00d      	beq.n	8008012 <mem_cpy+0x36>
 8007ff6:	693a      	ldr	r2, [r7, #16]
 8007ff8:	1c53      	adds	r3, r2, #1
 8007ffa:	613b      	str	r3, [r7, #16]
 8007ffc:	697b      	ldr	r3, [r7, #20]
 8007ffe:	1c59      	adds	r1, r3, #1
 8008000:	6179      	str	r1, [r7, #20]
 8008002:	7812      	ldrb	r2, [r2, #0]
 8008004:	701a      	strb	r2, [r3, #0]
 8008006:	687b      	ldr	r3, [r7, #4]
 8008008:	3b01      	subs	r3, #1
 800800a:	607b      	str	r3, [r7, #4]
 800800c:	687b      	ldr	r3, [r7, #4]
 800800e:	2b00      	cmp	r3, #0
 8008010:	d1f1      	bne.n	8007ff6 <mem_cpy+0x1a>
 8008012:	bf00      	nop
 8008014:	371c      	adds	r7, #28
 8008016:	46bd      	mov	sp, r7
 8008018:	f85d 7b04 	ldr.w	r7, [sp], #4
 800801c:	4770      	bx	lr

0800801e <mem_set>:
 800801e:	b480      	push	{r7}
 8008020:	b087      	sub	sp, #28
 8008022:	af00      	add	r7, sp, #0
 8008024:	60f8      	str	r0, [r7, #12]
 8008026:	60b9      	str	r1, [r7, #8]
 8008028:	607a      	str	r2, [r7, #4]
 800802a:	68fb      	ldr	r3, [r7, #12]
 800802c:	617b      	str	r3, [r7, #20]
 800802e:	697b      	ldr	r3, [r7, #20]
 8008030:	1c5a      	adds	r2, r3, #1
 8008032:	617a      	str	r2, [r7, #20]
 8008034:	68ba      	ldr	r2, [r7, #8]
 8008036:	b2d2      	uxtb	r2, r2
 8008038:	701a      	strb	r2, [r3, #0]
 800803a:	687b      	ldr	r3, [r7, #4]
 800803c:	3b01      	subs	r3, #1
 800803e:	607b      	str	r3, [r7, #4]
 8008040:	687b      	ldr	r3, [r7, #4]
 8008042:	2b00      	cmp	r3, #0
 8008044:	d1f3      	bne.n	800802e <mem_set+0x10>
 8008046:	bf00      	nop
 8008048:	371c      	adds	r7, #28
 800804a:	46bd      	mov	sp, r7
 800804c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008050:	4770      	bx	lr

08008052 <mem_cmp>:
 8008052:	b480      	push	{r7}
 8008054:	b089      	sub	sp, #36	; 0x24
 8008056:	af00      	add	r7, sp, #0
 8008058:	60f8      	str	r0, [r7, #12]
 800805a:	60b9      	str	r1, [r7, #8]
 800805c:	607a      	str	r2, [r7, #4]
 800805e:	68fb      	ldr	r3, [r7, #12]
 8008060:	61fb      	str	r3, [r7, #28]
 8008062:	68bb      	ldr	r3, [r7, #8]
 8008064:	61bb      	str	r3, [r7, #24]
 8008066:	2300      	movs	r3, #0
 8008068:	617b      	str	r3, [r7, #20]
 800806a:	69fb      	ldr	r3, [r7, #28]
 800806c:	1c5a      	adds	r2, r3, #1
 800806e:	61fa      	str	r2, [r7, #28]
 8008070:	781b      	ldrb	r3, [r3, #0]
 8008072:	4619      	mov	r1, r3
 8008074:	69bb      	ldr	r3, [r7, #24]
 8008076:	1c5a      	adds	r2, r3, #1
 8008078:	61ba      	str	r2, [r7, #24]
 800807a:	781b      	ldrb	r3, [r3, #0]
 800807c:	1acb      	subs	r3, r1, r3
 800807e:	617b      	str	r3, [r7, #20]
 8008080:	687b      	ldr	r3, [r7, #4]
 8008082:	3b01      	subs	r3, #1
 8008084:	607b      	str	r3, [r7, #4]
 8008086:	687b      	ldr	r3, [r7, #4]
 8008088:	2b00      	cmp	r3, #0
 800808a:	d002      	beq.n	8008092 <mem_cmp+0x40>
 800808c:	697b      	ldr	r3, [r7, #20]
 800808e:	2b00      	cmp	r3, #0
 8008090:	d0eb      	beq.n	800806a <mem_cmp+0x18>
 8008092:	697b      	ldr	r3, [r7, #20]
 8008094:	4618      	mov	r0, r3
 8008096:	3724      	adds	r7, #36	; 0x24
 8008098:	46bd      	mov	sp, r7
 800809a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800809e:	4770      	bx	lr

080080a0 <chk_chr>:
 80080a0:	b480      	push	{r7}
 80080a2:	b083      	sub	sp, #12
 80080a4:	af00      	add	r7, sp, #0
 80080a6:	6078      	str	r0, [r7, #4]
 80080a8:	6039      	str	r1, [r7, #0]
 80080aa:	e002      	b.n	80080b2 <chk_chr+0x12>
 80080ac:	687b      	ldr	r3, [r7, #4]
 80080ae:	3301      	adds	r3, #1
 80080b0:	607b      	str	r3, [r7, #4]
 80080b2:	687b      	ldr	r3, [r7, #4]
 80080b4:	781b      	ldrb	r3, [r3, #0]
 80080b6:	2b00      	cmp	r3, #0
 80080b8:	d005      	beq.n	80080c6 <chk_chr+0x26>
 80080ba:	687b      	ldr	r3, [r7, #4]
 80080bc:	781b      	ldrb	r3, [r3, #0]
 80080be:	461a      	mov	r2, r3
 80080c0:	683b      	ldr	r3, [r7, #0]
 80080c2:	4293      	cmp	r3, r2
 80080c4:	d1f2      	bne.n	80080ac <chk_chr+0xc>
 80080c6:	687b      	ldr	r3, [r7, #4]
 80080c8:	781b      	ldrb	r3, [r3, #0]
 80080ca:	4618      	mov	r0, r3
 80080cc:	370c      	adds	r7, #12
 80080ce:	46bd      	mov	sp, r7
 80080d0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80080d4:	4770      	bx	lr
	...

080080d8 <chk_lock>:
 80080d8:	b480      	push	{r7}
 80080da:	b085      	sub	sp, #20
 80080dc:	af00      	add	r7, sp, #0
 80080de:	6078      	str	r0, [r7, #4]
 80080e0:	6039      	str	r1, [r7, #0]
 80080e2:	2300      	movs	r3, #0
 80080e4:	60bb      	str	r3, [r7, #8]
 80080e6:	68bb      	ldr	r3, [r7, #8]
 80080e8:	60fb      	str	r3, [r7, #12]
 80080ea:	e029      	b.n	8008140 <chk_lock+0x68>
 80080ec:	4a27      	ldr	r2, [pc, #156]	; (800818c <chk_lock+0xb4>)
 80080ee:	68fb      	ldr	r3, [r7, #12]
 80080f0:	011b      	lsls	r3, r3, #4
 80080f2:	4413      	add	r3, r2
 80080f4:	681b      	ldr	r3, [r3, #0]
 80080f6:	2b00      	cmp	r3, #0
 80080f8:	d01d      	beq.n	8008136 <chk_lock+0x5e>
 80080fa:	4a24      	ldr	r2, [pc, #144]	; (800818c <chk_lock+0xb4>)
 80080fc:	68fb      	ldr	r3, [r7, #12]
 80080fe:	011b      	lsls	r3, r3, #4
 8008100:	4413      	add	r3, r2
 8008102:	681a      	ldr	r2, [r3, #0]
 8008104:	687b      	ldr	r3, [r7, #4]
 8008106:	681b      	ldr	r3, [r3, #0]
 8008108:	429a      	cmp	r2, r3
 800810a:	d116      	bne.n	800813a <chk_lock+0x62>
 800810c:	4a1f      	ldr	r2, [pc, #124]	; (800818c <chk_lock+0xb4>)
 800810e:	68fb      	ldr	r3, [r7, #12]
 8008110:	011b      	lsls	r3, r3, #4
 8008112:	4413      	add	r3, r2
 8008114:	3304      	adds	r3, #4
 8008116:	681a      	ldr	r2, [r3, #0]
 8008118:	687b      	ldr	r3, [r7, #4]
 800811a:	689b      	ldr	r3, [r3, #8]
 800811c:	429a      	cmp	r2, r3
 800811e:	d10c      	bne.n	800813a <chk_lock+0x62>
 8008120:	4a1a      	ldr	r2, [pc, #104]	; (800818c <chk_lock+0xb4>)
 8008122:	68fb      	ldr	r3, [r7, #12]
 8008124:	011b      	lsls	r3, r3, #4
 8008126:	4413      	add	r3, r2
 8008128:	3308      	adds	r3, #8
 800812a:	681a      	ldr	r2, [r3, #0]
 800812c:	687b      	ldr	r3, [r7, #4]
 800812e:	695b      	ldr	r3, [r3, #20]
 8008130:	429a      	cmp	r2, r3
 8008132:	d102      	bne.n	800813a <chk_lock+0x62>
 8008134:	e007      	b.n	8008146 <chk_lock+0x6e>
 8008136:	2301      	movs	r3, #1
 8008138:	60bb      	str	r3, [r7, #8]
 800813a:	68fb      	ldr	r3, [r7, #12]
 800813c:	3301      	adds	r3, #1
 800813e:	60fb      	str	r3, [r7, #12]
 8008140:	68fb      	ldr	r3, [r7, #12]
 8008142:	2b01      	cmp	r3, #1
 8008144:	d9d2      	bls.n	80080ec <chk_lock+0x14>
 8008146:	68fb      	ldr	r3, [r7, #12]
 8008148:	2b02      	cmp	r3, #2
 800814a:	d109      	bne.n	8008160 <chk_lock+0x88>
 800814c:	68bb      	ldr	r3, [r7, #8]
 800814e:	2b00      	cmp	r3, #0
 8008150:	d102      	bne.n	8008158 <chk_lock+0x80>
 8008152:	683b      	ldr	r3, [r7, #0]
 8008154:	2b02      	cmp	r3, #2
 8008156:	d101      	bne.n	800815c <chk_lock+0x84>
 8008158:	2300      	movs	r3, #0
 800815a:	e010      	b.n	800817e <chk_lock+0xa6>
 800815c:	2312      	movs	r3, #18
 800815e:	e00e      	b.n	800817e <chk_lock+0xa6>
 8008160:	683b      	ldr	r3, [r7, #0]
 8008162:	2b00      	cmp	r3, #0
 8008164:	d108      	bne.n	8008178 <chk_lock+0xa0>
 8008166:	4a09      	ldr	r2, [pc, #36]	; (800818c <chk_lock+0xb4>)
 8008168:	68fb      	ldr	r3, [r7, #12]
 800816a:	011b      	lsls	r3, r3, #4
 800816c:	4413      	add	r3, r2
 800816e:	330c      	adds	r3, #12
 8008170:	881b      	ldrh	r3, [r3, #0]
 8008172:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8008176:	d101      	bne.n	800817c <chk_lock+0xa4>
 8008178:	2310      	movs	r3, #16
 800817a:	e000      	b.n	800817e <chk_lock+0xa6>
 800817c:	2300      	movs	r3, #0
 800817e:	4618      	mov	r0, r3
 8008180:	3714      	adds	r7, #20
 8008182:	46bd      	mov	sp, r7
 8008184:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008188:	4770      	bx	lr
 800818a:	bf00      	nop
 800818c:	20000054 	.word	0x20000054

08008190 <enq_lock>:
 8008190:	b480      	push	{r7}
 8008192:	b083      	sub	sp, #12
 8008194:	af00      	add	r7, sp, #0
 8008196:	2300      	movs	r3, #0
 8008198:	607b      	str	r3, [r7, #4]
 800819a:	e002      	b.n	80081a2 <enq_lock+0x12>
 800819c:	687b      	ldr	r3, [r7, #4]
 800819e:	3301      	adds	r3, #1
 80081a0:	607b      	str	r3, [r7, #4]
 80081a2:	687b      	ldr	r3, [r7, #4]
 80081a4:	2b01      	cmp	r3, #1
 80081a6:	d806      	bhi.n	80081b6 <enq_lock+0x26>
 80081a8:	4a09      	ldr	r2, [pc, #36]	; (80081d0 <enq_lock+0x40>)
 80081aa:	687b      	ldr	r3, [r7, #4]
 80081ac:	011b      	lsls	r3, r3, #4
 80081ae:	4413      	add	r3, r2
 80081b0:	681b      	ldr	r3, [r3, #0]
 80081b2:	2b00      	cmp	r3, #0
 80081b4:	d1f2      	bne.n	800819c <enq_lock+0xc>
 80081b6:	687b      	ldr	r3, [r7, #4]
 80081b8:	2b02      	cmp	r3, #2
 80081ba:	bf14      	ite	ne
 80081bc:	2301      	movne	r3, #1
 80081be:	2300      	moveq	r3, #0
 80081c0:	b2db      	uxtb	r3, r3
 80081c2:	4618      	mov	r0, r3
 80081c4:	370c      	adds	r7, #12
 80081c6:	46bd      	mov	sp, r7
 80081c8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80081cc:	4770      	bx	lr
 80081ce:	bf00      	nop
 80081d0:	20000054 	.word	0x20000054

080081d4 <inc_lock>:
 80081d4:	b480      	push	{r7}
 80081d6:	b085      	sub	sp, #20
 80081d8:	af00      	add	r7, sp, #0
 80081da:	6078      	str	r0, [r7, #4]
 80081dc:	6039      	str	r1, [r7, #0]
 80081de:	2300      	movs	r3, #0
 80081e0:	60fb      	str	r3, [r7, #12]
 80081e2:	e01f      	b.n	8008224 <inc_lock+0x50>
 80081e4:	4a41      	ldr	r2, [pc, #260]	; (80082ec <inc_lock+0x118>)
 80081e6:	68fb      	ldr	r3, [r7, #12]
 80081e8:	011b      	lsls	r3, r3, #4
 80081ea:	4413      	add	r3, r2
 80081ec:	681a      	ldr	r2, [r3, #0]
 80081ee:	687b      	ldr	r3, [r7, #4]
 80081f0:	681b      	ldr	r3, [r3, #0]
 80081f2:	429a      	cmp	r2, r3
 80081f4:	d113      	bne.n	800821e <inc_lock+0x4a>
 80081f6:	4a3d      	ldr	r2, [pc, #244]	; (80082ec <inc_lock+0x118>)
 80081f8:	68fb      	ldr	r3, [r7, #12]
 80081fa:	011b      	lsls	r3, r3, #4
 80081fc:	4413      	add	r3, r2
 80081fe:	3304      	adds	r3, #4
 8008200:	681a      	ldr	r2, [r3, #0]
 8008202:	687b      	ldr	r3, [r7, #4]
 8008204:	689b      	ldr	r3, [r3, #8]
 8008206:	429a      	cmp	r2, r3
 8008208:	d109      	bne.n	800821e <inc_lock+0x4a>
 800820a:	4a38      	ldr	r2, [pc, #224]	; (80082ec <inc_lock+0x118>)
 800820c:	68fb      	ldr	r3, [r7, #12]
 800820e:	011b      	lsls	r3, r3, #4
 8008210:	4413      	add	r3, r2
 8008212:	3308      	adds	r3, #8
 8008214:	681a      	ldr	r2, [r3, #0]
 8008216:	687b      	ldr	r3, [r7, #4]
 8008218:	695b      	ldr	r3, [r3, #20]
 800821a:	429a      	cmp	r2, r3
 800821c:	d006      	beq.n	800822c <inc_lock+0x58>
 800821e:	68fb      	ldr	r3, [r7, #12]
 8008220:	3301      	adds	r3, #1
 8008222:	60fb      	str	r3, [r7, #12]
 8008224:	68fb      	ldr	r3, [r7, #12]
 8008226:	2b01      	cmp	r3, #1
 8008228:	d9dc      	bls.n	80081e4 <inc_lock+0x10>
 800822a:	e000      	b.n	800822e <inc_lock+0x5a>
 800822c:	bf00      	nop
 800822e:	68fb      	ldr	r3, [r7, #12]
 8008230:	2b02      	cmp	r3, #2
 8008232:	d132      	bne.n	800829a <inc_lock+0xc6>
 8008234:	2300      	movs	r3, #0
 8008236:	60fb      	str	r3, [r7, #12]
 8008238:	e002      	b.n	8008240 <inc_lock+0x6c>
 800823a:	68fb      	ldr	r3, [r7, #12]
 800823c:	3301      	adds	r3, #1
 800823e:	60fb      	str	r3, [r7, #12]
 8008240:	68fb      	ldr	r3, [r7, #12]
 8008242:	2b01      	cmp	r3, #1
 8008244:	d806      	bhi.n	8008254 <inc_lock+0x80>
 8008246:	4a29      	ldr	r2, [pc, #164]	; (80082ec <inc_lock+0x118>)
 8008248:	68fb      	ldr	r3, [r7, #12]
 800824a:	011b      	lsls	r3, r3, #4
 800824c:	4413      	add	r3, r2
 800824e:	681b      	ldr	r3, [r3, #0]
 8008250:	2b00      	cmp	r3, #0
 8008252:	d1f2      	bne.n	800823a <inc_lock+0x66>
 8008254:	68fb      	ldr	r3, [r7, #12]
 8008256:	2b02      	cmp	r3, #2
 8008258:	d101      	bne.n	800825e <inc_lock+0x8a>
 800825a:	2300      	movs	r3, #0
 800825c:	e040      	b.n	80082e0 <inc_lock+0x10c>
 800825e:	687b      	ldr	r3, [r7, #4]
 8008260:	681a      	ldr	r2, [r3, #0]
 8008262:	4922      	ldr	r1, [pc, #136]	; (80082ec <inc_lock+0x118>)
 8008264:	68fb      	ldr	r3, [r7, #12]
 8008266:	011b      	lsls	r3, r3, #4
 8008268:	440b      	add	r3, r1
 800826a:	601a      	str	r2, [r3, #0]
 800826c:	687b      	ldr	r3, [r7, #4]
 800826e:	689a      	ldr	r2, [r3, #8]
 8008270:	491e      	ldr	r1, [pc, #120]	; (80082ec <inc_lock+0x118>)
 8008272:	68fb      	ldr	r3, [r7, #12]
 8008274:	011b      	lsls	r3, r3, #4
 8008276:	440b      	add	r3, r1
 8008278:	3304      	adds	r3, #4
 800827a:	601a      	str	r2, [r3, #0]
 800827c:	687b      	ldr	r3, [r7, #4]
 800827e:	695a      	ldr	r2, [r3, #20]
 8008280:	491a      	ldr	r1, [pc, #104]	; (80082ec <inc_lock+0x118>)
 8008282:	68fb      	ldr	r3, [r7, #12]
 8008284:	011b      	lsls	r3, r3, #4
 8008286:	440b      	add	r3, r1
 8008288:	3308      	adds	r3, #8
 800828a:	601a      	str	r2, [r3, #0]
 800828c:	4a17      	ldr	r2, [pc, #92]	; (80082ec <inc_lock+0x118>)
 800828e:	68fb      	ldr	r3, [r7, #12]
 8008290:	011b      	lsls	r3, r3, #4
 8008292:	4413      	add	r3, r2
 8008294:	330c      	adds	r3, #12
 8008296:	2200      	movs	r2, #0
 8008298:	801a      	strh	r2, [r3, #0]
 800829a:	683b      	ldr	r3, [r7, #0]
 800829c:	2b00      	cmp	r3, #0
 800829e:	d009      	beq.n	80082b4 <inc_lock+0xe0>
 80082a0:	4a12      	ldr	r2, [pc, #72]	; (80082ec <inc_lock+0x118>)
 80082a2:	68fb      	ldr	r3, [r7, #12]
 80082a4:	011b      	lsls	r3, r3, #4
 80082a6:	4413      	add	r3, r2
 80082a8:	330c      	adds	r3, #12
 80082aa:	881b      	ldrh	r3, [r3, #0]
 80082ac:	2b00      	cmp	r3, #0
 80082ae:	d001      	beq.n	80082b4 <inc_lock+0xe0>
 80082b0:	2300      	movs	r3, #0
 80082b2:	e015      	b.n	80082e0 <inc_lock+0x10c>
 80082b4:	683b      	ldr	r3, [r7, #0]
 80082b6:	2b00      	cmp	r3, #0
 80082b8:	d108      	bne.n	80082cc <inc_lock+0xf8>
 80082ba:	4a0c      	ldr	r2, [pc, #48]	; (80082ec <inc_lock+0x118>)
 80082bc:	68fb      	ldr	r3, [r7, #12]
 80082be:	011b      	lsls	r3, r3, #4
 80082c0:	4413      	add	r3, r2
 80082c2:	330c      	adds	r3, #12
 80082c4:	881b      	ldrh	r3, [r3, #0]
 80082c6:	3301      	adds	r3, #1
 80082c8:	b29a      	uxth	r2, r3
 80082ca:	e001      	b.n	80082d0 <inc_lock+0xfc>
 80082cc:	f44f 7280 	mov.w	r2, #256	; 0x100
 80082d0:	4906      	ldr	r1, [pc, #24]	; (80082ec <inc_lock+0x118>)
 80082d2:	68fb      	ldr	r3, [r7, #12]
 80082d4:	011b      	lsls	r3, r3, #4
 80082d6:	440b      	add	r3, r1
 80082d8:	330c      	adds	r3, #12
 80082da:	801a      	strh	r2, [r3, #0]
 80082dc:	68fb      	ldr	r3, [r7, #12]
 80082de:	3301      	adds	r3, #1
 80082e0:	4618      	mov	r0, r3
 80082e2:	3714      	adds	r7, #20
 80082e4:	46bd      	mov	sp, r7
 80082e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80082ea:	4770      	bx	lr
 80082ec:	20000054 	.word	0x20000054

080082f0 <dec_lock>:
 80082f0:	b480      	push	{r7}
 80082f2:	b085      	sub	sp, #20
 80082f4:	af00      	add	r7, sp, #0
 80082f6:	6078      	str	r0, [r7, #4]
 80082f8:	687b      	ldr	r3, [r7, #4]
 80082fa:	3b01      	subs	r3, #1
 80082fc:	607b      	str	r3, [r7, #4]
 80082fe:	687b      	ldr	r3, [r7, #4]
 8008300:	2b01      	cmp	r3, #1
 8008302:	d825      	bhi.n	8008350 <dec_lock+0x60>
 8008304:	4a17      	ldr	r2, [pc, #92]	; (8008364 <dec_lock+0x74>)
 8008306:	687b      	ldr	r3, [r7, #4]
 8008308:	011b      	lsls	r3, r3, #4
 800830a:	4413      	add	r3, r2
 800830c:	330c      	adds	r3, #12
 800830e:	881b      	ldrh	r3, [r3, #0]
 8008310:	81fb      	strh	r3, [r7, #14]
 8008312:	89fb      	ldrh	r3, [r7, #14]
 8008314:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8008318:	d101      	bne.n	800831e <dec_lock+0x2e>
 800831a:	2300      	movs	r3, #0
 800831c:	81fb      	strh	r3, [r7, #14]
 800831e:	89fb      	ldrh	r3, [r7, #14]
 8008320:	2b00      	cmp	r3, #0
 8008322:	d002      	beq.n	800832a <dec_lock+0x3a>
 8008324:	89fb      	ldrh	r3, [r7, #14]
 8008326:	3b01      	subs	r3, #1
 8008328:	81fb      	strh	r3, [r7, #14]
 800832a:	4a0e      	ldr	r2, [pc, #56]	; (8008364 <dec_lock+0x74>)
 800832c:	687b      	ldr	r3, [r7, #4]
 800832e:	011b      	lsls	r3, r3, #4
 8008330:	4413      	add	r3, r2
 8008332:	330c      	adds	r3, #12
 8008334:	89fa      	ldrh	r2, [r7, #14]
 8008336:	801a      	strh	r2, [r3, #0]
 8008338:	89fb      	ldrh	r3, [r7, #14]
 800833a:	2b00      	cmp	r3, #0
 800833c:	d105      	bne.n	800834a <dec_lock+0x5a>
 800833e:	4a09      	ldr	r2, [pc, #36]	; (8008364 <dec_lock+0x74>)
 8008340:	687b      	ldr	r3, [r7, #4]
 8008342:	011b      	lsls	r3, r3, #4
 8008344:	4413      	add	r3, r2
 8008346:	2200      	movs	r2, #0
 8008348:	601a      	str	r2, [r3, #0]
 800834a:	2300      	movs	r3, #0
 800834c:	737b      	strb	r3, [r7, #13]
 800834e:	e001      	b.n	8008354 <dec_lock+0x64>
 8008350:	2302      	movs	r3, #2
 8008352:	737b      	strb	r3, [r7, #13]
 8008354:	7b7b      	ldrb	r3, [r7, #13]
 8008356:	4618      	mov	r0, r3
 8008358:	3714      	adds	r7, #20
 800835a:	46bd      	mov	sp, r7
 800835c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008360:	4770      	bx	lr
 8008362:	bf00      	nop
 8008364:	20000054 	.word	0x20000054

08008368 <clear_lock>:
 8008368:	b480      	push	{r7}
 800836a:	b085      	sub	sp, #20
 800836c:	af00      	add	r7, sp, #0
 800836e:	6078      	str	r0, [r7, #4]
 8008370:	2300      	movs	r3, #0
 8008372:	60fb      	str	r3, [r7, #12]
 8008374:	e010      	b.n	8008398 <clear_lock+0x30>
 8008376:	4a0d      	ldr	r2, [pc, #52]	; (80083ac <clear_lock+0x44>)
 8008378:	68fb      	ldr	r3, [r7, #12]
 800837a:	011b      	lsls	r3, r3, #4
 800837c:	4413      	add	r3, r2
 800837e:	681b      	ldr	r3, [r3, #0]
 8008380:	687a      	ldr	r2, [r7, #4]
 8008382:	429a      	cmp	r2, r3
 8008384:	d105      	bne.n	8008392 <clear_lock+0x2a>
 8008386:	4a09      	ldr	r2, [pc, #36]	; (80083ac <clear_lock+0x44>)
 8008388:	68fb      	ldr	r3, [r7, #12]
 800838a:	011b      	lsls	r3, r3, #4
 800838c:	4413      	add	r3, r2
 800838e:	2200      	movs	r2, #0
 8008390:	601a      	str	r2, [r3, #0]
 8008392:	68fb      	ldr	r3, [r7, #12]
 8008394:	3301      	adds	r3, #1
 8008396:	60fb      	str	r3, [r7, #12]
 8008398:	68fb      	ldr	r3, [r7, #12]
 800839a:	2b01      	cmp	r3, #1
 800839c:	d9eb      	bls.n	8008376 <clear_lock+0xe>
 800839e:	bf00      	nop
 80083a0:	3714      	adds	r7, #20
 80083a2:	46bd      	mov	sp, r7
 80083a4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80083a8:	4770      	bx	lr
 80083aa:	bf00      	nop
 80083ac:	20000054 	.word	0x20000054

080083b0 <sync_window>:
 80083b0:	b580      	push	{r7, lr}
 80083b2:	b086      	sub	sp, #24
 80083b4:	af00      	add	r7, sp, #0
 80083b6:	6078      	str	r0, [r7, #4]
 80083b8:	2300      	movs	r3, #0
 80083ba:	73fb      	strb	r3, [r7, #15]
 80083bc:	687b      	ldr	r3, [r7, #4]
 80083be:	78db      	ldrb	r3, [r3, #3]
 80083c0:	2b00      	cmp	r3, #0
 80083c2:	d034      	beq.n	800842e <sync_window+0x7e>
 80083c4:	687b      	ldr	r3, [r7, #4]
 80083c6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80083c8:	617b      	str	r3, [r7, #20]
 80083ca:	687b      	ldr	r3, [r7, #4]
 80083cc:	7858      	ldrb	r0, [r3, #1]
 80083ce:	687b      	ldr	r3, [r7, #4]
 80083d0:	f103 0134 	add.w	r1, r3, #52	; 0x34
 80083d4:	2301      	movs	r3, #1
 80083d6:	697a      	ldr	r2, [r7, #20]
 80083d8:	f7ff fd40 	bl	8007e5c <disk_write>
 80083dc:	4603      	mov	r3, r0
 80083de:	2b00      	cmp	r3, #0
 80083e0:	d002      	beq.n	80083e8 <sync_window+0x38>
 80083e2:	2301      	movs	r3, #1
 80083e4:	73fb      	strb	r3, [r7, #15]
 80083e6:	e022      	b.n	800842e <sync_window+0x7e>
 80083e8:	687b      	ldr	r3, [r7, #4]
 80083ea:	2200      	movs	r2, #0
 80083ec:	70da      	strb	r2, [r3, #3]
 80083ee:	687b      	ldr	r3, [r7, #4]
 80083f0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80083f2:	697a      	ldr	r2, [r7, #20]
 80083f4:	1ad2      	subs	r2, r2, r3
 80083f6:	687b      	ldr	r3, [r7, #4]
 80083f8:	69db      	ldr	r3, [r3, #28]
 80083fa:	429a      	cmp	r2, r3
 80083fc:	d217      	bcs.n	800842e <sync_window+0x7e>
 80083fe:	687b      	ldr	r3, [r7, #4]
 8008400:	789b      	ldrb	r3, [r3, #2]
 8008402:	613b      	str	r3, [r7, #16]
 8008404:	e010      	b.n	8008428 <sync_window+0x78>
 8008406:	687b      	ldr	r3, [r7, #4]
 8008408:	69db      	ldr	r3, [r3, #28]
 800840a:	697a      	ldr	r2, [r7, #20]
 800840c:	4413      	add	r3, r2
 800840e:	617b      	str	r3, [r7, #20]
 8008410:	687b      	ldr	r3, [r7, #4]
 8008412:	7858      	ldrb	r0, [r3, #1]
 8008414:	687b      	ldr	r3, [r7, #4]
 8008416:	f103 0134 	add.w	r1, r3, #52	; 0x34
 800841a:	2301      	movs	r3, #1
 800841c:	697a      	ldr	r2, [r7, #20]
 800841e:	f7ff fd1d 	bl	8007e5c <disk_write>
 8008422:	693b      	ldr	r3, [r7, #16]
 8008424:	3b01      	subs	r3, #1
 8008426:	613b      	str	r3, [r7, #16]
 8008428:	693b      	ldr	r3, [r7, #16]
 800842a:	2b01      	cmp	r3, #1
 800842c:	d8eb      	bhi.n	8008406 <sync_window+0x56>
 800842e:	7bfb      	ldrb	r3, [r7, #15]
 8008430:	4618      	mov	r0, r3
 8008432:	3718      	adds	r7, #24
 8008434:	46bd      	mov	sp, r7
 8008436:	bd80      	pop	{r7, pc}

08008438 <move_window>:
 8008438:	b580      	push	{r7, lr}
 800843a:	b084      	sub	sp, #16
 800843c:	af00      	add	r7, sp, #0
 800843e:	6078      	str	r0, [r7, #4]
 8008440:	6039      	str	r1, [r7, #0]
 8008442:	2300      	movs	r3, #0
 8008444:	73fb      	strb	r3, [r7, #15]
 8008446:	687b      	ldr	r3, [r7, #4]
 8008448:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800844a:	683a      	ldr	r2, [r7, #0]
 800844c:	429a      	cmp	r2, r3
 800844e:	d01b      	beq.n	8008488 <move_window+0x50>
 8008450:	6878      	ldr	r0, [r7, #4]
 8008452:	f7ff ffad 	bl	80083b0 <sync_window>
 8008456:	4603      	mov	r3, r0
 8008458:	73fb      	strb	r3, [r7, #15]
 800845a:	7bfb      	ldrb	r3, [r7, #15]
 800845c:	2b00      	cmp	r3, #0
 800845e:	d113      	bne.n	8008488 <move_window+0x50>
 8008460:	687b      	ldr	r3, [r7, #4]
 8008462:	7858      	ldrb	r0, [r3, #1]
 8008464:	687b      	ldr	r3, [r7, #4]
 8008466:	f103 0134 	add.w	r1, r3, #52	; 0x34
 800846a:	2301      	movs	r3, #1
 800846c:	683a      	ldr	r2, [r7, #0]
 800846e:	f7ff fcd5 	bl	8007e1c <disk_read>
 8008472:	4603      	mov	r3, r0
 8008474:	2b00      	cmp	r3, #0
 8008476:	d004      	beq.n	8008482 <move_window+0x4a>
 8008478:	f04f 33ff 	mov.w	r3, #4294967295
 800847c:	603b      	str	r3, [r7, #0]
 800847e:	2301      	movs	r3, #1
 8008480:	73fb      	strb	r3, [r7, #15]
 8008482:	687b      	ldr	r3, [r7, #4]
 8008484:	683a      	ldr	r2, [r7, #0]
 8008486:	631a      	str	r2, [r3, #48]	; 0x30
 8008488:	7bfb      	ldrb	r3, [r7, #15]
 800848a:	4618      	mov	r0, r3
 800848c:	3710      	adds	r7, #16
 800848e:	46bd      	mov	sp, r7
 8008490:	bd80      	pop	{r7, pc}
	...

08008494 <sync_fs>:
 8008494:	b580      	push	{r7, lr}
 8008496:	b084      	sub	sp, #16
 8008498:	af00      	add	r7, sp, #0
 800849a:	6078      	str	r0, [r7, #4]
 800849c:	6878      	ldr	r0, [r7, #4]
 800849e:	f7ff ff87 	bl	80083b0 <sync_window>
 80084a2:	4603      	mov	r3, r0
 80084a4:	73fb      	strb	r3, [r7, #15]
 80084a6:	7bfb      	ldrb	r3, [r7, #15]
 80084a8:	2b00      	cmp	r3, #0
 80084aa:	d159      	bne.n	8008560 <sync_fs+0xcc>
 80084ac:	687b      	ldr	r3, [r7, #4]
 80084ae:	781b      	ldrb	r3, [r3, #0]
 80084b0:	2b03      	cmp	r3, #3
 80084b2:	d149      	bne.n	8008548 <sync_fs+0xb4>
 80084b4:	687b      	ldr	r3, [r7, #4]
 80084b6:	791b      	ldrb	r3, [r3, #4]
 80084b8:	2b01      	cmp	r3, #1
 80084ba:	d145      	bne.n	8008548 <sync_fs+0xb4>
 80084bc:	687b      	ldr	r3, [r7, #4]
 80084be:	f103 0034 	add.w	r0, r3, #52	; 0x34
 80084c2:	687b      	ldr	r3, [r7, #4]
 80084c4:	899b      	ldrh	r3, [r3, #12]
 80084c6:	461a      	mov	r2, r3
 80084c8:	2100      	movs	r1, #0
 80084ca:	f7ff fda8 	bl	800801e <mem_set>
 80084ce:	687b      	ldr	r3, [r7, #4]
 80084d0:	3334      	adds	r3, #52	; 0x34
 80084d2:	f503 73ff 	add.w	r3, r3, #510	; 0x1fe
 80084d6:	f64a 2155 	movw	r1, #43605	; 0xaa55
 80084da:	4618      	mov	r0, r3
 80084dc:	f7ff fd37 	bl	8007f4e <st_word>
 80084e0:	687b      	ldr	r3, [r7, #4]
 80084e2:	3334      	adds	r3, #52	; 0x34
 80084e4:	4921      	ldr	r1, [pc, #132]	; (800856c <sync_fs+0xd8>)
 80084e6:	4618      	mov	r0, r3
 80084e8:	f7ff fd4c 	bl	8007f84 <st_dword>
 80084ec:	687b      	ldr	r3, [r7, #4]
 80084ee:	3334      	adds	r3, #52	; 0x34
 80084f0:	f503 73f2 	add.w	r3, r3, #484	; 0x1e4
 80084f4:	491e      	ldr	r1, [pc, #120]	; (8008570 <sync_fs+0xdc>)
 80084f6:	4618      	mov	r0, r3
 80084f8:	f7ff fd44 	bl	8007f84 <st_dword>
 80084fc:	687b      	ldr	r3, [r7, #4]
 80084fe:	3334      	adds	r3, #52	; 0x34
 8008500:	f503 72f4 	add.w	r2, r3, #488	; 0x1e8
 8008504:	687b      	ldr	r3, [r7, #4]
 8008506:	695b      	ldr	r3, [r3, #20]
 8008508:	4619      	mov	r1, r3
 800850a:	4610      	mov	r0, r2
 800850c:	f7ff fd3a 	bl	8007f84 <st_dword>
 8008510:	687b      	ldr	r3, [r7, #4]
 8008512:	3334      	adds	r3, #52	; 0x34
 8008514:	f503 72f6 	add.w	r2, r3, #492	; 0x1ec
 8008518:	687b      	ldr	r3, [r7, #4]
 800851a:	691b      	ldr	r3, [r3, #16]
 800851c:	4619      	mov	r1, r3
 800851e:	4610      	mov	r0, r2
 8008520:	f7ff fd30 	bl	8007f84 <st_dword>
 8008524:	687b      	ldr	r3, [r7, #4]
 8008526:	6a1b      	ldr	r3, [r3, #32]
 8008528:	1c5a      	adds	r2, r3, #1
 800852a:	687b      	ldr	r3, [r7, #4]
 800852c:	631a      	str	r2, [r3, #48]	; 0x30
 800852e:	687b      	ldr	r3, [r7, #4]
 8008530:	7858      	ldrb	r0, [r3, #1]
 8008532:	687b      	ldr	r3, [r7, #4]
 8008534:	f103 0134 	add.w	r1, r3, #52	; 0x34
 8008538:	687b      	ldr	r3, [r7, #4]
 800853a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800853c:	2301      	movs	r3, #1
 800853e:	f7ff fc8d 	bl	8007e5c <disk_write>
 8008542:	687b      	ldr	r3, [r7, #4]
 8008544:	2200      	movs	r2, #0
 8008546:	711a      	strb	r2, [r3, #4]
 8008548:	687b      	ldr	r3, [r7, #4]
 800854a:	785b      	ldrb	r3, [r3, #1]
 800854c:	2200      	movs	r2, #0
 800854e:	2100      	movs	r1, #0
 8008550:	4618      	mov	r0, r3
 8008552:	f7ff fca3 	bl	8007e9c <disk_ioctl>
 8008556:	4603      	mov	r3, r0
 8008558:	2b00      	cmp	r3, #0
 800855a:	d001      	beq.n	8008560 <sync_fs+0xcc>
 800855c:	2301      	movs	r3, #1
 800855e:	73fb      	strb	r3, [r7, #15]
 8008560:	7bfb      	ldrb	r3, [r7, #15]
 8008562:	4618      	mov	r0, r3
 8008564:	3710      	adds	r7, #16
 8008566:	46bd      	mov	sp, r7
 8008568:	bd80      	pop	{r7, pc}
 800856a:	bf00      	nop
 800856c:	41615252 	.word	0x41615252
 8008570:	61417272 	.word	0x61417272

08008574 <clust2sect>:
 8008574:	b480      	push	{r7}
 8008576:	b083      	sub	sp, #12
 8008578:	af00      	add	r7, sp, #0
 800857a:	6078      	str	r0, [r7, #4]
 800857c:	6039      	str	r1, [r7, #0]
 800857e:	683b      	ldr	r3, [r7, #0]
 8008580:	3b02      	subs	r3, #2
 8008582:	603b      	str	r3, [r7, #0]
 8008584:	687b      	ldr	r3, [r7, #4]
 8008586:	699b      	ldr	r3, [r3, #24]
 8008588:	3b02      	subs	r3, #2
 800858a:	683a      	ldr	r2, [r7, #0]
 800858c:	429a      	cmp	r2, r3
 800858e:	d301      	bcc.n	8008594 <clust2sect+0x20>
 8008590:	2300      	movs	r3, #0
 8008592:	e008      	b.n	80085a6 <clust2sect+0x32>
 8008594:	687b      	ldr	r3, [r7, #4]
 8008596:	895b      	ldrh	r3, [r3, #10]
 8008598:	461a      	mov	r2, r3
 800859a:	683b      	ldr	r3, [r7, #0]
 800859c:	fb03 f202 	mul.w	r2, r3, r2
 80085a0:	687b      	ldr	r3, [r7, #4]
 80085a2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80085a4:	4413      	add	r3, r2
 80085a6:	4618      	mov	r0, r3
 80085a8:	370c      	adds	r7, #12
 80085aa:	46bd      	mov	sp, r7
 80085ac:	f85d 7b04 	ldr.w	r7, [sp], #4
 80085b0:	4770      	bx	lr

080085b2 <get_fat>:
 80085b2:	b580      	push	{r7, lr}
 80085b4:	b086      	sub	sp, #24
 80085b6:	af00      	add	r7, sp, #0
 80085b8:	6078      	str	r0, [r7, #4]
 80085ba:	6039      	str	r1, [r7, #0]
 80085bc:	687b      	ldr	r3, [r7, #4]
 80085be:	681b      	ldr	r3, [r3, #0]
 80085c0:	613b      	str	r3, [r7, #16]
 80085c2:	683b      	ldr	r3, [r7, #0]
 80085c4:	2b01      	cmp	r3, #1
 80085c6:	d904      	bls.n	80085d2 <get_fat+0x20>
 80085c8:	693b      	ldr	r3, [r7, #16]
 80085ca:	699b      	ldr	r3, [r3, #24]
 80085cc:	683a      	ldr	r2, [r7, #0]
 80085ce:	429a      	cmp	r2, r3
 80085d0:	d302      	bcc.n	80085d8 <get_fat+0x26>
 80085d2:	2301      	movs	r3, #1
 80085d4:	617b      	str	r3, [r7, #20]
 80085d6:	e0b7      	b.n	8008748 <get_fat+0x196>
 80085d8:	f04f 33ff 	mov.w	r3, #4294967295
 80085dc:	617b      	str	r3, [r7, #20]
 80085de:	693b      	ldr	r3, [r7, #16]
 80085e0:	781b      	ldrb	r3, [r3, #0]
 80085e2:	2b02      	cmp	r3, #2
 80085e4:	d05a      	beq.n	800869c <get_fat+0xea>
 80085e6:	2b03      	cmp	r3, #3
 80085e8:	d07d      	beq.n	80086e6 <get_fat+0x134>
 80085ea:	2b01      	cmp	r3, #1
 80085ec:	f040 80a2 	bne.w	8008734 <get_fat+0x182>
 80085f0:	683b      	ldr	r3, [r7, #0]
 80085f2:	60fb      	str	r3, [r7, #12]
 80085f4:	68fb      	ldr	r3, [r7, #12]
 80085f6:	085b      	lsrs	r3, r3, #1
 80085f8:	68fa      	ldr	r2, [r7, #12]
 80085fa:	4413      	add	r3, r2
 80085fc:	60fb      	str	r3, [r7, #12]
 80085fe:	693b      	ldr	r3, [r7, #16]
 8008600:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8008602:	693b      	ldr	r3, [r7, #16]
 8008604:	899b      	ldrh	r3, [r3, #12]
 8008606:	4619      	mov	r1, r3
 8008608:	68fb      	ldr	r3, [r7, #12]
 800860a:	fbb3 f3f1 	udiv	r3, r3, r1
 800860e:	4413      	add	r3, r2
 8008610:	4619      	mov	r1, r3
 8008612:	6938      	ldr	r0, [r7, #16]
 8008614:	f7ff ff10 	bl	8008438 <move_window>
 8008618:	4603      	mov	r3, r0
 800861a:	2b00      	cmp	r3, #0
 800861c:	f040 808d 	bne.w	800873a <get_fat+0x188>
 8008620:	68fb      	ldr	r3, [r7, #12]
 8008622:	1c5a      	adds	r2, r3, #1
 8008624:	60fa      	str	r2, [r7, #12]
 8008626:	693a      	ldr	r2, [r7, #16]
 8008628:	8992      	ldrh	r2, [r2, #12]
 800862a:	fbb3 f1f2 	udiv	r1, r3, r2
 800862e:	fb02 f201 	mul.w	r2, r2, r1
 8008632:	1a9b      	subs	r3, r3, r2
 8008634:	693a      	ldr	r2, [r7, #16]
 8008636:	4413      	add	r3, r2
 8008638:	f893 3034 	ldrb.w	r3, [r3, #52]	; 0x34
 800863c:	60bb      	str	r3, [r7, #8]
 800863e:	693b      	ldr	r3, [r7, #16]
 8008640:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8008642:	693b      	ldr	r3, [r7, #16]
 8008644:	899b      	ldrh	r3, [r3, #12]
 8008646:	4619      	mov	r1, r3
 8008648:	68fb      	ldr	r3, [r7, #12]
 800864a:	fbb3 f3f1 	udiv	r3, r3, r1
 800864e:	4413      	add	r3, r2
 8008650:	4619      	mov	r1, r3
 8008652:	6938      	ldr	r0, [r7, #16]
 8008654:	f7ff fef0 	bl	8008438 <move_window>
 8008658:	4603      	mov	r3, r0
 800865a:	2b00      	cmp	r3, #0
 800865c:	d16f      	bne.n	800873e <get_fat+0x18c>
 800865e:	693b      	ldr	r3, [r7, #16]
 8008660:	899b      	ldrh	r3, [r3, #12]
 8008662:	461a      	mov	r2, r3
 8008664:	68fb      	ldr	r3, [r7, #12]
 8008666:	fbb3 f1f2 	udiv	r1, r3, r2
 800866a:	fb02 f201 	mul.w	r2, r2, r1
 800866e:	1a9b      	subs	r3, r3, r2
 8008670:	693a      	ldr	r2, [r7, #16]
 8008672:	4413      	add	r3, r2
 8008674:	f893 3034 	ldrb.w	r3, [r3, #52]	; 0x34
 8008678:	021b      	lsls	r3, r3, #8
 800867a:	461a      	mov	r2, r3
 800867c:	68bb      	ldr	r3, [r7, #8]
 800867e:	4313      	orrs	r3, r2
 8008680:	60bb      	str	r3, [r7, #8]
 8008682:	683b      	ldr	r3, [r7, #0]
 8008684:	f003 0301 	and.w	r3, r3, #1
 8008688:	2b00      	cmp	r3, #0
 800868a:	d002      	beq.n	8008692 <get_fat+0xe0>
 800868c:	68bb      	ldr	r3, [r7, #8]
 800868e:	091b      	lsrs	r3, r3, #4
 8008690:	e002      	b.n	8008698 <get_fat+0xe6>
 8008692:	68bb      	ldr	r3, [r7, #8]
 8008694:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8008698:	617b      	str	r3, [r7, #20]
 800869a:	e055      	b.n	8008748 <get_fat+0x196>
 800869c:	693b      	ldr	r3, [r7, #16]
 800869e:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 80086a0:	693b      	ldr	r3, [r7, #16]
 80086a2:	899b      	ldrh	r3, [r3, #12]
 80086a4:	085b      	lsrs	r3, r3, #1
 80086a6:	b29b      	uxth	r3, r3
 80086a8:	4619      	mov	r1, r3
 80086aa:	683b      	ldr	r3, [r7, #0]
 80086ac:	fbb3 f3f1 	udiv	r3, r3, r1
 80086b0:	4413      	add	r3, r2
 80086b2:	4619      	mov	r1, r3
 80086b4:	6938      	ldr	r0, [r7, #16]
 80086b6:	f7ff febf 	bl	8008438 <move_window>
 80086ba:	4603      	mov	r3, r0
 80086bc:	2b00      	cmp	r3, #0
 80086be:	d140      	bne.n	8008742 <get_fat+0x190>
 80086c0:	693b      	ldr	r3, [r7, #16]
 80086c2:	f103 0134 	add.w	r1, r3, #52	; 0x34
 80086c6:	683b      	ldr	r3, [r7, #0]
 80086c8:	005b      	lsls	r3, r3, #1
 80086ca:	693a      	ldr	r2, [r7, #16]
 80086cc:	8992      	ldrh	r2, [r2, #12]
 80086ce:	fbb3 f0f2 	udiv	r0, r3, r2
 80086d2:	fb02 f200 	mul.w	r2, r2, r0
 80086d6:	1a9b      	subs	r3, r3, r2
 80086d8:	440b      	add	r3, r1
 80086da:	4618      	mov	r0, r3
 80086dc:	f7ff fbfc 	bl	8007ed8 <ld_word>
 80086e0:	4603      	mov	r3, r0
 80086e2:	617b      	str	r3, [r7, #20]
 80086e4:	e030      	b.n	8008748 <get_fat+0x196>
 80086e6:	693b      	ldr	r3, [r7, #16]
 80086e8:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 80086ea:	693b      	ldr	r3, [r7, #16]
 80086ec:	899b      	ldrh	r3, [r3, #12]
 80086ee:	089b      	lsrs	r3, r3, #2
 80086f0:	b29b      	uxth	r3, r3
 80086f2:	4619      	mov	r1, r3
 80086f4:	683b      	ldr	r3, [r7, #0]
 80086f6:	fbb3 f3f1 	udiv	r3, r3, r1
 80086fa:	4413      	add	r3, r2
 80086fc:	4619      	mov	r1, r3
 80086fe:	6938      	ldr	r0, [r7, #16]
 8008700:	f7ff fe9a 	bl	8008438 <move_window>
 8008704:	4603      	mov	r3, r0
 8008706:	2b00      	cmp	r3, #0
 8008708:	d11d      	bne.n	8008746 <get_fat+0x194>
 800870a:	693b      	ldr	r3, [r7, #16]
 800870c:	f103 0134 	add.w	r1, r3, #52	; 0x34
 8008710:	683b      	ldr	r3, [r7, #0]
 8008712:	009b      	lsls	r3, r3, #2
 8008714:	693a      	ldr	r2, [r7, #16]
 8008716:	8992      	ldrh	r2, [r2, #12]
 8008718:	fbb3 f0f2 	udiv	r0, r3, r2
 800871c:	fb02 f200 	mul.w	r2, r2, r0
 8008720:	1a9b      	subs	r3, r3, r2
 8008722:	440b      	add	r3, r1
 8008724:	4618      	mov	r0, r3
 8008726:	f7ff fbef 	bl	8007f08 <ld_dword>
 800872a:	4603      	mov	r3, r0
 800872c:	f023 4370 	bic.w	r3, r3, #4026531840	; 0xf0000000
 8008730:	617b      	str	r3, [r7, #20]
 8008732:	e009      	b.n	8008748 <get_fat+0x196>
 8008734:	2301      	movs	r3, #1
 8008736:	617b      	str	r3, [r7, #20]
 8008738:	e006      	b.n	8008748 <get_fat+0x196>
 800873a:	bf00      	nop
 800873c:	e004      	b.n	8008748 <get_fat+0x196>
 800873e:	bf00      	nop
 8008740:	e002      	b.n	8008748 <get_fat+0x196>
 8008742:	bf00      	nop
 8008744:	e000      	b.n	8008748 <get_fat+0x196>
 8008746:	bf00      	nop
 8008748:	697b      	ldr	r3, [r7, #20]
 800874a:	4618      	mov	r0, r3
 800874c:	3718      	adds	r7, #24
 800874e:	46bd      	mov	sp, r7
 8008750:	bd80      	pop	{r7, pc}

08008752 <put_fat>:
 8008752:	b590      	push	{r4, r7, lr}
 8008754:	b089      	sub	sp, #36	; 0x24
 8008756:	af00      	add	r7, sp, #0
 8008758:	60f8      	str	r0, [r7, #12]
 800875a:	60b9      	str	r1, [r7, #8]
 800875c:	607a      	str	r2, [r7, #4]
 800875e:	2302      	movs	r3, #2
 8008760:	77fb      	strb	r3, [r7, #31]
 8008762:	68bb      	ldr	r3, [r7, #8]
 8008764:	2b01      	cmp	r3, #1
 8008766:	f240 8106 	bls.w	8008976 <put_fat+0x224>
 800876a:	68fb      	ldr	r3, [r7, #12]
 800876c:	699b      	ldr	r3, [r3, #24]
 800876e:	68ba      	ldr	r2, [r7, #8]
 8008770:	429a      	cmp	r2, r3
 8008772:	f080 8100 	bcs.w	8008976 <put_fat+0x224>
 8008776:	68fb      	ldr	r3, [r7, #12]
 8008778:	781b      	ldrb	r3, [r3, #0]
 800877a:	2b02      	cmp	r3, #2
 800877c:	f000 8088 	beq.w	8008890 <put_fat+0x13e>
 8008780:	2b03      	cmp	r3, #3
 8008782:	f000 80b0 	beq.w	80088e6 <put_fat+0x194>
 8008786:	2b01      	cmp	r3, #1
 8008788:	f040 80f5 	bne.w	8008976 <put_fat+0x224>
 800878c:	68bb      	ldr	r3, [r7, #8]
 800878e:	61bb      	str	r3, [r7, #24]
 8008790:	69bb      	ldr	r3, [r7, #24]
 8008792:	085b      	lsrs	r3, r3, #1
 8008794:	69ba      	ldr	r2, [r7, #24]
 8008796:	4413      	add	r3, r2
 8008798:	61bb      	str	r3, [r7, #24]
 800879a:	68fb      	ldr	r3, [r7, #12]
 800879c:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800879e:	68fb      	ldr	r3, [r7, #12]
 80087a0:	899b      	ldrh	r3, [r3, #12]
 80087a2:	4619      	mov	r1, r3
 80087a4:	69bb      	ldr	r3, [r7, #24]
 80087a6:	fbb3 f3f1 	udiv	r3, r3, r1
 80087aa:	4413      	add	r3, r2
 80087ac:	4619      	mov	r1, r3
 80087ae:	68f8      	ldr	r0, [r7, #12]
 80087b0:	f7ff fe42 	bl	8008438 <move_window>
 80087b4:	4603      	mov	r3, r0
 80087b6:	77fb      	strb	r3, [r7, #31]
 80087b8:	7ffb      	ldrb	r3, [r7, #31]
 80087ba:	2b00      	cmp	r3, #0
 80087bc:	f040 80d4 	bne.w	8008968 <put_fat+0x216>
 80087c0:	68fb      	ldr	r3, [r7, #12]
 80087c2:	f103 0134 	add.w	r1, r3, #52	; 0x34
 80087c6:	69bb      	ldr	r3, [r7, #24]
 80087c8:	1c5a      	adds	r2, r3, #1
 80087ca:	61ba      	str	r2, [r7, #24]
 80087cc:	68fa      	ldr	r2, [r7, #12]
 80087ce:	8992      	ldrh	r2, [r2, #12]
 80087d0:	fbb3 f0f2 	udiv	r0, r3, r2
 80087d4:	fb02 f200 	mul.w	r2, r2, r0
 80087d8:	1a9b      	subs	r3, r3, r2
 80087da:	440b      	add	r3, r1
 80087dc:	617b      	str	r3, [r7, #20]
 80087de:	68bb      	ldr	r3, [r7, #8]
 80087e0:	f003 0301 	and.w	r3, r3, #1
 80087e4:	2b00      	cmp	r3, #0
 80087e6:	d00d      	beq.n	8008804 <put_fat+0xb2>
 80087e8:	697b      	ldr	r3, [r7, #20]
 80087ea:	781b      	ldrb	r3, [r3, #0]
 80087ec:	b25b      	sxtb	r3, r3
 80087ee:	f003 030f 	and.w	r3, r3, #15
 80087f2:	b25a      	sxtb	r2, r3
 80087f4:	687b      	ldr	r3, [r7, #4]
 80087f6:	b2db      	uxtb	r3, r3
 80087f8:	011b      	lsls	r3, r3, #4
 80087fa:	b25b      	sxtb	r3, r3
 80087fc:	4313      	orrs	r3, r2
 80087fe:	b25b      	sxtb	r3, r3
 8008800:	b2db      	uxtb	r3, r3
 8008802:	e001      	b.n	8008808 <put_fat+0xb6>
 8008804:	687b      	ldr	r3, [r7, #4]
 8008806:	b2db      	uxtb	r3, r3
 8008808:	697a      	ldr	r2, [r7, #20]
 800880a:	7013      	strb	r3, [r2, #0]
 800880c:	68fb      	ldr	r3, [r7, #12]
 800880e:	2201      	movs	r2, #1
 8008810:	70da      	strb	r2, [r3, #3]
 8008812:	68fb      	ldr	r3, [r7, #12]
 8008814:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8008816:	68fb      	ldr	r3, [r7, #12]
 8008818:	899b      	ldrh	r3, [r3, #12]
 800881a:	4619      	mov	r1, r3
 800881c:	69bb      	ldr	r3, [r7, #24]
 800881e:	fbb3 f3f1 	udiv	r3, r3, r1
 8008822:	4413      	add	r3, r2
 8008824:	4619      	mov	r1, r3
 8008826:	68f8      	ldr	r0, [r7, #12]
 8008828:	f7ff fe06 	bl	8008438 <move_window>
 800882c:	4603      	mov	r3, r0
 800882e:	77fb      	strb	r3, [r7, #31]
 8008830:	7ffb      	ldrb	r3, [r7, #31]
 8008832:	2b00      	cmp	r3, #0
 8008834:	f040 809a 	bne.w	800896c <put_fat+0x21a>
 8008838:	68fb      	ldr	r3, [r7, #12]
 800883a:	f103 0134 	add.w	r1, r3, #52	; 0x34
 800883e:	68fb      	ldr	r3, [r7, #12]
 8008840:	899b      	ldrh	r3, [r3, #12]
 8008842:	461a      	mov	r2, r3
 8008844:	69bb      	ldr	r3, [r7, #24]
 8008846:	fbb3 f0f2 	udiv	r0, r3, r2
 800884a:	fb02 f200 	mul.w	r2, r2, r0
 800884e:	1a9b      	subs	r3, r3, r2
 8008850:	440b      	add	r3, r1
 8008852:	617b      	str	r3, [r7, #20]
 8008854:	68bb      	ldr	r3, [r7, #8]
 8008856:	f003 0301 	and.w	r3, r3, #1
 800885a:	2b00      	cmp	r3, #0
 800885c:	d003      	beq.n	8008866 <put_fat+0x114>
 800885e:	687b      	ldr	r3, [r7, #4]
 8008860:	091b      	lsrs	r3, r3, #4
 8008862:	b2db      	uxtb	r3, r3
 8008864:	e00e      	b.n	8008884 <put_fat+0x132>
 8008866:	697b      	ldr	r3, [r7, #20]
 8008868:	781b      	ldrb	r3, [r3, #0]
 800886a:	b25b      	sxtb	r3, r3
 800886c:	f023 030f 	bic.w	r3, r3, #15
 8008870:	b25a      	sxtb	r2, r3
 8008872:	687b      	ldr	r3, [r7, #4]
 8008874:	0a1b      	lsrs	r3, r3, #8
 8008876:	b25b      	sxtb	r3, r3
 8008878:	f003 030f 	and.w	r3, r3, #15
 800887c:	b25b      	sxtb	r3, r3
 800887e:	4313      	orrs	r3, r2
 8008880:	b25b      	sxtb	r3, r3
 8008882:	b2db      	uxtb	r3, r3
 8008884:	697a      	ldr	r2, [r7, #20]
 8008886:	7013      	strb	r3, [r2, #0]
 8008888:	68fb      	ldr	r3, [r7, #12]
 800888a:	2201      	movs	r2, #1
 800888c:	70da      	strb	r2, [r3, #3]
 800888e:	e072      	b.n	8008976 <put_fat+0x224>
 8008890:	68fb      	ldr	r3, [r7, #12]
 8008892:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8008894:	68fb      	ldr	r3, [r7, #12]
 8008896:	899b      	ldrh	r3, [r3, #12]
 8008898:	085b      	lsrs	r3, r3, #1
 800889a:	b29b      	uxth	r3, r3
 800889c:	4619      	mov	r1, r3
 800889e:	68bb      	ldr	r3, [r7, #8]
 80088a0:	fbb3 f3f1 	udiv	r3, r3, r1
 80088a4:	4413      	add	r3, r2
 80088a6:	4619      	mov	r1, r3
 80088a8:	68f8      	ldr	r0, [r7, #12]
 80088aa:	f7ff fdc5 	bl	8008438 <move_window>
 80088ae:	4603      	mov	r3, r0
 80088b0:	77fb      	strb	r3, [r7, #31]
 80088b2:	7ffb      	ldrb	r3, [r7, #31]
 80088b4:	2b00      	cmp	r3, #0
 80088b6:	d15b      	bne.n	8008970 <put_fat+0x21e>
 80088b8:	68fb      	ldr	r3, [r7, #12]
 80088ba:	f103 0134 	add.w	r1, r3, #52	; 0x34
 80088be:	68bb      	ldr	r3, [r7, #8]
 80088c0:	005b      	lsls	r3, r3, #1
 80088c2:	68fa      	ldr	r2, [r7, #12]
 80088c4:	8992      	ldrh	r2, [r2, #12]
 80088c6:	fbb3 f0f2 	udiv	r0, r3, r2
 80088ca:	fb02 f200 	mul.w	r2, r2, r0
 80088ce:	1a9b      	subs	r3, r3, r2
 80088d0:	440b      	add	r3, r1
 80088d2:	687a      	ldr	r2, [r7, #4]
 80088d4:	b292      	uxth	r2, r2
 80088d6:	4611      	mov	r1, r2
 80088d8:	4618      	mov	r0, r3
 80088da:	f7ff fb38 	bl	8007f4e <st_word>
 80088de:	68fb      	ldr	r3, [r7, #12]
 80088e0:	2201      	movs	r2, #1
 80088e2:	70da      	strb	r2, [r3, #3]
 80088e4:	e047      	b.n	8008976 <put_fat+0x224>
 80088e6:	68fb      	ldr	r3, [r7, #12]
 80088e8:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 80088ea:	68fb      	ldr	r3, [r7, #12]
 80088ec:	899b      	ldrh	r3, [r3, #12]
 80088ee:	089b      	lsrs	r3, r3, #2
 80088f0:	b29b      	uxth	r3, r3
 80088f2:	4619      	mov	r1, r3
 80088f4:	68bb      	ldr	r3, [r7, #8]
 80088f6:	fbb3 f3f1 	udiv	r3, r3, r1
 80088fa:	4413      	add	r3, r2
 80088fc:	4619      	mov	r1, r3
 80088fe:	68f8      	ldr	r0, [r7, #12]
 8008900:	f7ff fd9a 	bl	8008438 <move_window>
 8008904:	4603      	mov	r3, r0
 8008906:	77fb      	strb	r3, [r7, #31]
 8008908:	7ffb      	ldrb	r3, [r7, #31]
 800890a:	2b00      	cmp	r3, #0
 800890c:	d132      	bne.n	8008974 <put_fat+0x222>
 800890e:	687b      	ldr	r3, [r7, #4]
 8008910:	f023 4470 	bic.w	r4, r3, #4026531840	; 0xf0000000
 8008914:	68fb      	ldr	r3, [r7, #12]
 8008916:	f103 0134 	add.w	r1, r3, #52	; 0x34
 800891a:	68bb      	ldr	r3, [r7, #8]
 800891c:	009b      	lsls	r3, r3, #2
 800891e:	68fa      	ldr	r2, [r7, #12]
 8008920:	8992      	ldrh	r2, [r2, #12]
 8008922:	fbb3 f0f2 	udiv	r0, r3, r2
 8008926:	fb02 f200 	mul.w	r2, r2, r0
 800892a:	1a9b      	subs	r3, r3, r2
 800892c:	440b      	add	r3, r1
 800892e:	4618      	mov	r0, r3
 8008930:	f7ff faea 	bl	8007f08 <ld_dword>
 8008934:	4603      	mov	r3, r0
 8008936:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
 800893a:	4323      	orrs	r3, r4
 800893c:	607b      	str	r3, [r7, #4]
 800893e:	68fb      	ldr	r3, [r7, #12]
 8008940:	f103 0134 	add.w	r1, r3, #52	; 0x34
 8008944:	68bb      	ldr	r3, [r7, #8]
 8008946:	009b      	lsls	r3, r3, #2
 8008948:	68fa      	ldr	r2, [r7, #12]
 800894a:	8992      	ldrh	r2, [r2, #12]
 800894c:	fbb3 f0f2 	udiv	r0, r3, r2
 8008950:	fb02 f200 	mul.w	r2, r2, r0
 8008954:	1a9b      	subs	r3, r3, r2
 8008956:	440b      	add	r3, r1
 8008958:	6879      	ldr	r1, [r7, #4]
 800895a:	4618      	mov	r0, r3
 800895c:	f7ff fb12 	bl	8007f84 <st_dword>
 8008960:	68fb      	ldr	r3, [r7, #12]
 8008962:	2201      	movs	r2, #1
 8008964:	70da      	strb	r2, [r3, #3]
 8008966:	e006      	b.n	8008976 <put_fat+0x224>
 8008968:	bf00      	nop
 800896a:	e004      	b.n	8008976 <put_fat+0x224>
 800896c:	bf00      	nop
 800896e:	e002      	b.n	8008976 <put_fat+0x224>
 8008970:	bf00      	nop
 8008972:	e000      	b.n	8008976 <put_fat+0x224>
 8008974:	bf00      	nop
 8008976:	7ffb      	ldrb	r3, [r7, #31]
 8008978:	4618      	mov	r0, r3
 800897a:	3724      	adds	r7, #36	; 0x24
 800897c:	46bd      	mov	sp, r7
 800897e:	bd90      	pop	{r4, r7, pc}

08008980 <remove_chain>:
 8008980:	b580      	push	{r7, lr}
 8008982:	b088      	sub	sp, #32
 8008984:	af00      	add	r7, sp, #0
 8008986:	60f8      	str	r0, [r7, #12]
 8008988:	60b9      	str	r1, [r7, #8]
 800898a:	607a      	str	r2, [r7, #4]
 800898c:	2300      	movs	r3, #0
 800898e:	77fb      	strb	r3, [r7, #31]
 8008990:	68fb      	ldr	r3, [r7, #12]
 8008992:	681b      	ldr	r3, [r3, #0]
 8008994:	61bb      	str	r3, [r7, #24]
 8008996:	68bb      	ldr	r3, [r7, #8]
 8008998:	2b01      	cmp	r3, #1
 800899a:	d904      	bls.n	80089a6 <remove_chain+0x26>
 800899c:	69bb      	ldr	r3, [r7, #24]
 800899e:	699b      	ldr	r3, [r3, #24]
 80089a0:	68ba      	ldr	r2, [r7, #8]
 80089a2:	429a      	cmp	r2, r3
 80089a4:	d301      	bcc.n	80089aa <remove_chain+0x2a>
 80089a6:	2302      	movs	r3, #2
 80089a8:	e04b      	b.n	8008a42 <remove_chain+0xc2>
 80089aa:	687b      	ldr	r3, [r7, #4]
 80089ac:	2b00      	cmp	r3, #0
 80089ae:	d00c      	beq.n	80089ca <remove_chain+0x4a>
 80089b0:	f04f 32ff 	mov.w	r2, #4294967295
 80089b4:	6879      	ldr	r1, [r7, #4]
 80089b6:	69b8      	ldr	r0, [r7, #24]
 80089b8:	f7ff fecb 	bl	8008752 <put_fat>
 80089bc:	4603      	mov	r3, r0
 80089be:	77fb      	strb	r3, [r7, #31]
 80089c0:	7ffb      	ldrb	r3, [r7, #31]
 80089c2:	2b00      	cmp	r3, #0
 80089c4:	d001      	beq.n	80089ca <remove_chain+0x4a>
 80089c6:	7ffb      	ldrb	r3, [r7, #31]
 80089c8:	e03b      	b.n	8008a42 <remove_chain+0xc2>
 80089ca:	68b9      	ldr	r1, [r7, #8]
 80089cc:	68f8      	ldr	r0, [r7, #12]
 80089ce:	f7ff fdf0 	bl	80085b2 <get_fat>
 80089d2:	6178      	str	r0, [r7, #20]
 80089d4:	697b      	ldr	r3, [r7, #20]
 80089d6:	2b00      	cmp	r3, #0
 80089d8:	d031      	beq.n	8008a3e <remove_chain+0xbe>
 80089da:	697b      	ldr	r3, [r7, #20]
 80089dc:	2b01      	cmp	r3, #1
 80089de:	d101      	bne.n	80089e4 <remove_chain+0x64>
 80089e0:	2302      	movs	r3, #2
 80089e2:	e02e      	b.n	8008a42 <remove_chain+0xc2>
 80089e4:	697b      	ldr	r3, [r7, #20]
 80089e6:	f1b3 3fff 	cmp.w	r3, #4294967295
 80089ea:	d101      	bne.n	80089f0 <remove_chain+0x70>
 80089ec:	2301      	movs	r3, #1
 80089ee:	e028      	b.n	8008a42 <remove_chain+0xc2>
 80089f0:	2200      	movs	r2, #0
 80089f2:	68b9      	ldr	r1, [r7, #8]
 80089f4:	69b8      	ldr	r0, [r7, #24]
 80089f6:	f7ff feac 	bl	8008752 <put_fat>
 80089fa:	4603      	mov	r3, r0
 80089fc:	77fb      	strb	r3, [r7, #31]
 80089fe:	7ffb      	ldrb	r3, [r7, #31]
 8008a00:	2b00      	cmp	r3, #0
 8008a02:	d001      	beq.n	8008a08 <remove_chain+0x88>
 8008a04:	7ffb      	ldrb	r3, [r7, #31]
 8008a06:	e01c      	b.n	8008a42 <remove_chain+0xc2>
 8008a08:	69bb      	ldr	r3, [r7, #24]
 8008a0a:	695a      	ldr	r2, [r3, #20]
 8008a0c:	69bb      	ldr	r3, [r7, #24]
 8008a0e:	699b      	ldr	r3, [r3, #24]
 8008a10:	3b02      	subs	r3, #2
 8008a12:	429a      	cmp	r2, r3
 8008a14:	d20b      	bcs.n	8008a2e <remove_chain+0xae>
 8008a16:	69bb      	ldr	r3, [r7, #24]
 8008a18:	695b      	ldr	r3, [r3, #20]
 8008a1a:	1c5a      	adds	r2, r3, #1
 8008a1c:	69bb      	ldr	r3, [r7, #24]
 8008a1e:	615a      	str	r2, [r3, #20]
 8008a20:	69bb      	ldr	r3, [r7, #24]
 8008a22:	791b      	ldrb	r3, [r3, #4]
 8008a24:	f043 0301 	orr.w	r3, r3, #1
 8008a28:	b2da      	uxtb	r2, r3
 8008a2a:	69bb      	ldr	r3, [r7, #24]
 8008a2c:	711a      	strb	r2, [r3, #4]
 8008a2e:	697b      	ldr	r3, [r7, #20]
 8008a30:	60bb      	str	r3, [r7, #8]
 8008a32:	69bb      	ldr	r3, [r7, #24]
 8008a34:	699b      	ldr	r3, [r3, #24]
 8008a36:	68ba      	ldr	r2, [r7, #8]
 8008a38:	429a      	cmp	r2, r3
 8008a3a:	d3c6      	bcc.n	80089ca <remove_chain+0x4a>
 8008a3c:	e000      	b.n	8008a40 <remove_chain+0xc0>
 8008a3e:	bf00      	nop
 8008a40:	2300      	movs	r3, #0
 8008a42:	4618      	mov	r0, r3
 8008a44:	3720      	adds	r7, #32
 8008a46:	46bd      	mov	sp, r7
 8008a48:	bd80      	pop	{r7, pc}

08008a4a <create_chain>:
 8008a4a:	b580      	push	{r7, lr}
 8008a4c:	b088      	sub	sp, #32
 8008a4e:	af00      	add	r7, sp, #0
 8008a50:	6078      	str	r0, [r7, #4]
 8008a52:	6039      	str	r1, [r7, #0]
 8008a54:	687b      	ldr	r3, [r7, #4]
 8008a56:	681b      	ldr	r3, [r3, #0]
 8008a58:	613b      	str	r3, [r7, #16]
 8008a5a:	683b      	ldr	r3, [r7, #0]
 8008a5c:	2b00      	cmp	r3, #0
 8008a5e:	d10d      	bne.n	8008a7c <create_chain+0x32>
 8008a60:	693b      	ldr	r3, [r7, #16]
 8008a62:	691b      	ldr	r3, [r3, #16]
 8008a64:	61bb      	str	r3, [r7, #24]
 8008a66:	69bb      	ldr	r3, [r7, #24]
 8008a68:	2b00      	cmp	r3, #0
 8008a6a:	d004      	beq.n	8008a76 <create_chain+0x2c>
 8008a6c:	693b      	ldr	r3, [r7, #16]
 8008a6e:	699b      	ldr	r3, [r3, #24]
 8008a70:	69ba      	ldr	r2, [r7, #24]
 8008a72:	429a      	cmp	r2, r3
 8008a74:	d31b      	bcc.n	8008aae <create_chain+0x64>
 8008a76:	2301      	movs	r3, #1
 8008a78:	61bb      	str	r3, [r7, #24]
 8008a7a:	e018      	b.n	8008aae <create_chain+0x64>
 8008a7c:	6839      	ldr	r1, [r7, #0]
 8008a7e:	6878      	ldr	r0, [r7, #4]
 8008a80:	f7ff fd97 	bl	80085b2 <get_fat>
 8008a84:	60f8      	str	r0, [r7, #12]
 8008a86:	68fb      	ldr	r3, [r7, #12]
 8008a88:	2b01      	cmp	r3, #1
 8008a8a:	d801      	bhi.n	8008a90 <create_chain+0x46>
 8008a8c:	2301      	movs	r3, #1
 8008a8e:	e070      	b.n	8008b72 <create_chain+0x128>
 8008a90:	68fb      	ldr	r3, [r7, #12]
 8008a92:	f1b3 3fff 	cmp.w	r3, #4294967295
 8008a96:	d101      	bne.n	8008a9c <create_chain+0x52>
 8008a98:	68fb      	ldr	r3, [r7, #12]
 8008a9a:	e06a      	b.n	8008b72 <create_chain+0x128>
 8008a9c:	693b      	ldr	r3, [r7, #16]
 8008a9e:	699b      	ldr	r3, [r3, #24]
 8008aa0:	68fa      	ldr	r2, [r7, #12]
 8008aa2:	429a      	cmp	r2, r3
 8008aa4:	d201      	bcs.n	8008aaa <create_chain+0x60>
 8008aa6:	68fb      	ldr	r3, [r7, #12]
 8008aa8:	e063      	b.n	8008b72 <create_chain+0x128>
 8008aaa:	683b      	ldr	r3, [r7, #0]
 8008aac:	61bb      	str	r3, [r7, #24]
 8008aae:	69bb      	ldr	r3, [r7, #24]
 8008ab0:	61fb      	str	r3, [r7, #28]
 8008ab2:	69fb      	ldr	r3, [r7, #28]
 8008ab4:	3301      	adds	r3, #1
 8008ab6:	61fb      	str	r3, [r7, #28]
 8008ab8:	693b      	ldr	r3, [r7, #16]
 8008aba:	699b      	ldr	r3, [r3, #24]
 8008abc:	69fa      	ldr	r2, [r7, #28]
 8008abe:	429a      	cmp	r2, r3
 8008ac0:	d307      	bcc.n	8008ad2 <create_chain+0x88>
 8008ac2:	2302      	movs	r3, #2
 8008ac4:	61fb      	str	r3, [r7, #28]
 8008ac6:	69fa      	ldr	r2, [r7, #28]
 8008ac8:	69bb      	ldr	r3, [r7, #24]
 8008aca:	429a      	cmp	r2, r3
 8008acc:	d901      	bls.n	8008ad2 <create_chain+0x88>
 8008ace:	2300      	movs	r3, #0
 8008ad0:	e04f      	b.n	8008b72 <create_chain+0x128>
 8008ad2:	69f9      	ldr	r1, [r7, #28]
 8008ad4:	6878      	ldr	r0, [r7, #4]
 8008ad6:	f7ff fd6c 	bl	80085b2 <get_fat>
 8008ada:	60f8      	str	r0, [r7, #12]
 8008adc:	68fb      	ldr	r3, [r7, #12]
 8008ade:	2b00      	cmp	r3, #0
 8008ae0:	d00e      	beq.n	8008b00 <create_chain+0xb6>
 8008ae2:	68fb      	ldr	r3, [r7, #12]
 8008ae4:	2b01      	cmp	r3, #1
 8008ae6:	d003      	beq.n	8008af0 <create_chain+0xa6>
 8008ae8:	68fb      	ldr	r3, [r7, #12]
 8008aea:	f1b3 3fff 	cmp.w	r3, #4294967295
 8008aee:	d101      	bne.n	8008af4 <create_chain+0xaa>
 8008af0:	68fb      	ldr	r3, [r7, #12]
 8008af2:	e03e      	b.n	8008b72 <create_chain+0x128>
 8008af4:	69fa      	ldr	r2, [r7, #28]
 8008af6:	69bb      	ldr	r3, [r7, #24]
 8008af8:	429a      	cmp	r2, r3
 8008afa:	d1da      	bne.n	8008ab2 <create_chain+0x68>
 8008afc:	2300      	movs	r3, #0
 8008afe:	e038      	b.n	8008b72 <create_chain+0x128>
 8008b00:	bf00      	nop
 8008b02:	f04f 32ff 	mov.w	r2, #4294967295
 8008b06:	69f9      	ldr	r1, [r7, #28]
 8008b08:	6938      	ldr	r0, [r7, #16]
 8008b0a:	f7ff fe22 	bl	8008752 <put_fat>
 8008b0e:	4603      	mov	r3, r0
 8008b10:	75fb      	strb	r3, [r7, #23]
 8008b12:	7dfb      	ldrb	r3, [r7, #23]
 8008b14:	2b00      	cmp	r3, #0
 8008b16:	d109      	bne.n	8008b2c <create_chain+0xe2>
 8008b18:	683b      	ldr	r3, [r7, #0]
 8008b1a:	2b00      	cmp	r3, #0
 8008b1c:	d006      	beq.n	8008b2c <create_chain+0xe2>
 8008b1e:	69fa      	ldr	r2, [r7, #28]
 8008b20:	6839      	ldr	r1, [r7, #0]
 8008b22:	6938      	ldr	r0, [r7, #16]
 8008b24:	f7ff fe15 	bl	8008752 <put_fat>
 8008b28:	4603      	mov	r3, r0
 8008b2a:	75fb      	strb	r3, [r7, #23]
 8008b2c:	7dfb      	ldrb	r3, [r7, #23]
 8008b2e:	2b00      	cmp	r3, #0
 8008b30:	d116      	bne.n	8008b60 <create_chain+0x116>
 8008b32:	693b      	ldr	r3, [r7, #16]
 8008b34:	69fa      	ldr	r2, [r7, #28]
 8008b36:	611a      	str	r2, [r3, #16]
 8008b38:	693b      	ldr	r3, [r7, #16]
 8008b3a:	695a      	ldr	r2, [r3, #20]
 8008b3c:	693b      	ldr	r3, [r7, #16]
 8008b3e:	699b      	ldr	r3, [r3, #24]
 8008b40:	3b02      	subs	r3, #2
 8008b42:	429a      	cmp	r2, r3
 8008b44:	d804      	bhi.n	8008b50 <create_chain+0x106>
 8008b46:	693b      	ldr	r3, [r7, #16]
 8008b48:	695b      	ldr	r3, [r3, #20]
 8008b4a:	1e5a      	subs	r2, r3, #1
 8008b4c:	693b      	ldr	r3, [r7, #16]
 8008b4e:	615a      	str	r2, [r3, #20]
 8008b50:	693b      	ldr	r3, [r7, #16]
 8008b52:	791b      	ldrb	r3, [r3, #4]
 8008b54:	f043 0301 	orr.w	r3, r3, #1
 8008b58:	b2da      	uxtb	r2, r3
 8008b5a:	693b      	ldr	r3, [r7, #16]
 8008b5c:	711a      	strb	r2, [r3, #4]
 8008b5e:	e007      	b.n	8008b70 <create_chain+0x126>
 8008b60:	7dfb      	ldrb	r3, [r7, #23]
 8008b62:	2b01      	cmp	r3, #1
 8008b64:	d102      	bne.n	8008b6c <create_chain+0x122>
 8008b66:	f04f 33ff 	mov.w	r3, #4294967295
 8008b6a:	e000      	b.n	8008b6e <create_chain+0x124>
 8008b6c:	2301      	movs	r3, #1
 8008b6e:	61fb      	str	r3, [r7, #28]
 8008b70:	69fb      	ldr	r3, [r7, #28]
 8008b72:	4618      	mov	r0, r3
 8008b74:	3720      	adds	r7, #32
 8008b76:	46bd      	mov	sp, r7
 8008b78:	bd80      	pop	{r7, pc}

08008b7a <clmt_clust>:
 8008b7a:	b480      	push	{r7}
 8008b7c:	b087      	sub	sp, #28
 8008b7e:	af00      	add	r7, sp, #0
 8008b80:	6078      	str	r0, [r7, #4]
 8008b82:	6039      	str	r1, [r7, #0]
 8008b84:	687b      	ldr	r3, [r7, #4]
 8008b86:	681b      	ldr	r3, [r3, #0]
 8008b88:	60fb      	str	r3, [r7, #12]
 8008b8a:	687b      	ldr	r3, [r7, #4]
 8008b8c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008b8e:	3304      	adds	r3, #4
 8008b90:	613b      	str	r3, [r7, #16]
 8008b92:	68fb      	ldr	r3, [r7, #12]
 8008b94:	899b      	ldrh	r3, [r3, #12]
 8008b96:	461a      	mov	r2, r3
 8008b98:	683b      	ldr	r3, [r7, #0]
 8008b9a:	fbb3 f3f2 	udiv	r3, r3, r2
 8008b9e:	68fa      	ldr	r2, [r7, #12]
 8008ba0:	8952      	ldrh	r2, [r2, #10]
 8008ba2:	fbb3 f3f2 	udiv	r3, r3, r2
 8008ba6:	617b      	str	r3, [r7, #20]
 8008ba8:	693b      	ldr	r3, [r7, #16]
 8008baa:	1d1a      	adds	r2, r3, #4
 8008bac:	613a      	str	r2, [r7, #16]
 8008bae:	681b      	ldr	r3, [r3, #0]
 8008bb0:	60bb      	str	r3, [r7, #8]
 8008bb2:	68bb      	ldr	r3, [r7, #8]
 8008bb4:	2b00      	cmp	r3, #0
 8008bb6:	d101      	bne.n	8008bbc <clmt_clust+0x42>
 8008bb8:	2300      	movs	r3, #0
 8008bba:	e010      	b.n	8008bde <clmt_clust+0x64>
 8008bbc:	697a      	ldr	r2, [r7, #20]
 8008bbe:	68bb      	ldr	r3, [r7, #8]
 8008bc0:	429a      	cmp	r2, r3
 8008bc2:	d307      	bcc.n	8008bd4 <clmt_clust+0x5a>
 8008bc4:	697a      	ldr	r2, [r7, #20]
 8008bc6:	68bb      	ldr	r3, [r7, #8]
 8008bc8:	1ad3      	subs	r3, r2, r3
 8008bca:	617b      	str	r3, [r7, #20]
 8008bcc:	693b      	ldr	r3, [r7, #16]
 8008bce:	3304      	adds	r3, #4
 8008bd0:	613b      	str	r3, [r7, #16]
 8008bd2:	e7e9      	b.n	8008ba8 <clmt_clust+0x2e>
 8008bd4:	bf00      	nop
 8008bd6:	693b      	ldr	r3, [r7, #16]
 8008bd8:	681a      	ldr	r2, [r3, #0]
 8008bda:	697b      	ldr	r3, [r7, #20]
 8008bdc:	4413      	add	r3, r2
 8008bde:	4618      	mov	r0, r3
 8008be0:	371c      	adds	r7, #28
 8008be2:	46bd      	mov	sp, r7
 8008be4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008be8:	4770      	bx	lr

08008bea <dir_sdi>:
 8008bea:	b580      	push	{r7, lr}
 8008bec:	b086      	sub	sp, #24
 8008bee:	af00      	add	r7, sp, #0
 8008bf0:	6078      	str	r0, [r7, #4]
 8008bf2:	6039      	str	r1, [r7, #0]
 8008bf4:	687b      	ldr	r3, [r7, #4]
 8008bf6:	681b      	ldr	r3, [r3, #0]
 8008bf8:	613b      	str	r3, [r7, #16]
 8008bfa:	683b      	ldr	r3, [r7, #0]
 8008bfc:	f5b3 1f00 	cmp.w	r3, #2097152	; 0x200000
 8008c00:	d204      	bcs.n	8008c0c <dir_sdi+0x22>
 8008c02:	683b      	ldr	r3, [r7, #0]
 8008c04:	f003 031f 	and.w	r3, r3, #31
 8008c08:	2b00      	cmp	r3, #0
 8008c0a:	d001      	beq.n	8008c10 <dir_sdi+0x26>
 8008c0c:	2302      	movs	r3, #2
 8008c0e:	e071      	b.n	8008cf4 <dir_sdi+0x10a>
 8008c10:	687b      	ldr	r3, [r7, #4]
 8008c12:	683a      	ldr	r2, [r7, #0]
 8008c14:	615a      	str	r2, [r3, #20]
 8008c16:	687b      	ldr	r3, [r7, #4]
 8008c18:	689b      	ldr	r3, [r3, #8]
 8008c1a:	617b      	str	r3, [r7, #20]
 8008c1c:	697b      	ldr	r3, [r7, #20]
 8008c1e:	2b00      	cmp	r3, #0
 8008c20:	d106      	bne.n	8008c30 <dir_sdi+0x46>
 8008c22:	693b      	ldr	r3, [r7, #16]
 8008c24:	781b      	ldrb	r3, [r3, #0]
 8008c26:	2b02      	cmp	r3, #2
 8008c28:	d902      	bls.n	8008c30 <dir_sdi+0x46>
 8008c2a:	693b      	ldr	r3, [r7, #16]
 8008c2c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8008c2e:	617b      	str	r3, [r7, #20]
 8008c30:	697b      	ldr	r3, [r7, #20]
 8008c32:	2b00      	cmp	r3, #0
 8008c34:	d10c      	bne.n	8008c50 <dir_sdi+0x66>
 8008c36:	683b      	ldr	r3, [r7, #0]
 8008c38:	095b      	lsrs	r3, r3, #5
 8008c3a:	693a      	ldr	r2, [r7, #16]
 8008c3c:	8912      	ldrh	r2, [r2, #8]
 8008c3e:	4293      	cmp	r3, r2
 8008c40:	d301      	bcc.n	8008c46 <dir_sdi+0x5c>
 8008c42:	2302      	movs	r3, #2
 8008c44:	e056      	b.n	8008cf4 <dir_sdi+0x10a>
 8008c46:	693b      	ldr	r3, [r7, #16]
 8008c48:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8008c4a:	687b      	ldr	r3, [r7, #4]
 8008c4c:	61da      	str	r2, [r3, #28]
 8008c4e:	e02d      	b.n	8008cac <dir_sdi+0xc2>
 8008c50:	693b      	ldr	r3, [r7, #16]
 8008c52:	895b      	ldrh	r3, [r3, #10]
 8008c54:	461a      	mov	r2, r3
 8008c56:	693b      	ldr	r3, [r7, #16]
 8008c58:	899b      	ldrh	r3, [r3, #12]
 8008c5a:	fb03 f302 	mul.w	r3, r3, r2
 8008c5e:	60fb      	str	r3, [r7, #12]
 8008c60:	e019      	b.n	8008c96 <dir_sdi+0xac>
 8008c62:	687b      	ldr	r3, [r7, #4]
 8008c64:	6979      	ldr	r1, [r7, #20]
 8008c66:	4618      	mov	r0, r3
 8008c68:	f7ff fca3 	bl	80085b2 <get_fat>
 8008c6c:	6178      	str	r0, [r7, #20]
 8008c6e:	697b      	ldr	r3, [r7, #20]
 8008c70:	f1b3 3fff 	cmp.w	r3, #4294967295
 8008c74:	d101      	bne.n	8008c7a <dir_sdi+0x90>
 8008c76:	2301      	movs	r3, #1
 8008c78:	e03c      	b.n	8008cf4 <dir_sdi+0x10a>
 8008c7a:	697b      	ldr	r3, [r7, #20]
 8008c7c:	2b01      	cmp	r3, #1
 8008c7e:	d904      	bls.n	8008c8a <dir_sdi+0xa0>
 8008c80:	693b      	ldr	r3, [r7, #16]
 8008c82:	699b      	ldr	r3, [r3, #24]
 8008c84:	697a      	ldr	r2, [r7, #20]
 8008c86:	429a      	cmp	r2, r3
 8008c88:	d301      	bcc.n	8008c8e <dir_sdi+0xa4>
 8008c8a:	2302      	movs	r3, #2
 8008c8c:	e032      	b.n	8008cf4 <dir_sdi+0x10a>
 8008c8e:	683a      	ldr	r2, [r7, #0]
 8008c90:	68fb      	ldr	r3, [r7, #12]
 8008c92:	1ad3      	subs	r3, r2, r3
 8008c94:	603b      	str	r3, [r7, #0]
 8008c96:	683a      	ldr	r2, [r7, #0]
 8008c98:	68fb      	ldr	r3, [r7, #12]
 8008c9a:	429a      	cmp	r2, r3
 8008c9c:	d2e1      	bcs.n	8008c62 <dir_sdi+0x78>
 8008c9e:	6979      	ldr	r1, [r7, #20]
 8008ca0:	6938      	ldr	r0, [r7, #16]
 8008ca2:	f7ff fc67 	bl	8008574 <clust2sect>
 8008ca6:	4602      	mov	r2, r0
 8008ca8:	687b      	ldr	r3, [r7, #4]
 8008caa:	61da      	str	r2, [r3, #28]
 8008cac:	687b      	ldr	r3, [r7, #4]
 8008cae:	697a      	ldr	r2, [r7, #20]
 8008cb0:	619a      	str	r2, [r3, #24]
 8008cb2:	687b      	ldr	r3, [r7, #4]
 8008cb4:	69db      	ldr	r3, [r3, #28]
 8008cb6:	2b00      	cmp	r3, #0
 8008cb8:	d101      	bne.n	8008cbe <dir_sdi+0xd4>
 8008cba:	2302      	movs	r3, #2
 8008cbc:	e01a      	b.n	8008cf4 <dir_sdi+0x10a>
 8008cbe:	687b      	ldr	r3, [r7, #4]
 8008cc0:	69da      	ldr	r2, [r3, #28]
 8008cc2:	693b      	ldr	r3, [r7, #16]
 8008cc4:	899b      	ldrh	r3, [r3, #12]
 8008cc6:	4619      	mov	r1, r3
 8008cc8:	683b      	ldr	r3, [r7, #0]
 8008cca:	fbb3 f3f1 	udiv	r3, r3, r1
 8008cce:	441a      	add	r2, r3
 8008cd0:	687b      	ldr	r3, [r7, #4]
 8008cd2:	61da      	str	r2, [r3, #28]
 8008cd4:	693b      	ldr	r3, [r7, #16]
 8008cd6:	f103 0134 	add.w	r1, r3, #52	; 0x34
 8008cda:	693b      	ldr	r3, [r7, #16]
 8008cdc:	899b      	ldrh	r3, [r3, #12]
 8008cde:	461a      	mov	r2, r3
 8008ce0:	683b      	ldr	r3, [r7, #0]
 8008ce2:	fbb3 f0f2 	udiv	r0, r3, r2
 8008ce6:	fb02 f200 	mul.w	r2, r2, r0
 8008cea:	1a9b      	subs	r3, r3, r2
 8008cec:	18ca      	adds	r2, r1, r3
 8008cee:	687b      	ldr	r3, [r7, #4]
 8008cf0:	621a      	str	r2, [r3, #32]
 8008cf2:	2300      	movs	r3, #0
 8008cf4:	4618      	mov	r0, r3
 8008cf6:	3718      	adds	r7, #24
 8008cf8:	46bd      	mov	sp, r7
 8008cfa:	bd80      	pop	{r7, pc}

08008cfc <dir_next>:
 8008cfc:	b580      	push	{r7, lr}
 8008cfe:	b086      	sub	sp, #24
 8008d00:	af00      	add	r7, sp, #0
 8008d02:	6078      	str	r0, [r7, #4]
 8008d04:	6039      	str	r1, [r7, #0]
 8008d06:	687b      	ldr	r3, [r7, #4]
 8008d08:	681b      	ldr	r3, [r3, #0]
 8008d0a:	60fb      	str	r3, [r7, #12]
 8008d0c:	687b      	ldr	r3, [r7, #4]
 8008d0e:	695b      	ldr	r3, [r3, #20]
 8008d10:	3320      	adds	r3, #32
 8008d12:	60bb      	str	r3, [r7, #8]
 8008d14:	687b      	ldr	r3, [r7, #4]
 8008d16:	69db      	ldr	r3, [r3, #28]
 8008d18:	2b00      	cmp	r3, #0
 8008d1a:	d003      	beq.n	8008d24 <dir_next+0x28>
 8008d1c:	68bb      	ldr	r3, [r7, #8]
 8008d1e:	f5b3 1f00 	cmp.w	r3, #2097152	; 0x200000
 8008d22:	d301      	bcc.n	8008d28 <dir_next+0x2c>
 8008d24:	2304      	movs	r3, #4
 8008d26:	e0bb      	b.n	8008ea0 <dir_next+0x1a4>
 8008d28:	68fb      	ldr	r3, [r7, #12]
 8008d2a:	899b      	ldrh	r3, [r3, #12]
 8008d2c:	461a      	mov	r2, r3
 8008d2e:	68bb      	ldr	r3, [r7, #8]
 8008d30:	fbb3 f1f2 	udiv	r1, r3, r2
 8008d34:	fb02 f201 	mul.w	r2, r2, r1
 8008d38:	1a9b      	subs	r3, r3, r2
 8008d3a:	2b00      	cmp	r3, #0
 8008d3c:	f040 809d 	bne.w	8008e7a <dir_next+0x17e>
 8008d40:	687b      	ldr	r3, [r7, #4]
 8008d42:	69db      	ldr	r3, [r3, #28]
 8008d44:	1c5a      	adds	r2, r3, #1
 8008d46:	687b      	ldr	r3, [r7, #4]
 8008d48:	61da      	str	r2, [r3, #28]
 8008d4a:	687b      	ldr	r3, [r7, #4]
 8008d4c:	699b      	ldr	r3, [r3, #24]
 8008d4e:	2b00      	cmp	r3, #0
 8008d50:	d10b      	bne.n	8008d6a <dir_next+0x6e>
 8008d52:	68bb      	ldr	r3, [r7, #8]
 8008d54:	095b      	lsrs	r3, r3, #5
 8008d56:	68fa      	ldr	r2, [r7, #12]
 8008d58:	8912      	ldrh	r2, [r2, #8]
 8008d5a:	4293      	cmp	r3, r2
 8008d5c:	f0c0 808d 	bcc.w	8008e7a <dir_next+0x17e>
 8008d60:	687b      	ldr	r3, [r7, #4]
 8008d62:	2200      	movs	r2, #0
 8008d64:	61da      	str	r2, [r3, #28]
 8008d66:	2304      	movs	r3, #4
 8008d68:	e09a      	b.n	8008ea0 <dir_next+0x1a4>
 8008d6a:	68fb      	ldr	r3, [r7, #12]
 8008d6c:	899b      	ldrh	r3, [r3, #12]
 8008d6e:	461a      	mov	r2, r3
 8008d70:	68bb      	ldr	r3, [r7, #8]
 8008d72:	fbb3 f3f2 	udiv	r3, r3, r2
 8008d76:	68fa      	ldr	r2, [r7, #12]
 8008d78:	8952      	ldrh	r2, [r2, #10]
 8008d7a:	3a01      	subs	r2, #1
 8008d7c:	4013      	ands	r3, r2
 8008d7e:	2b00      	cmp	r3, #0
 8008d80:	d17b      	bne.n	8008e7a <dir_next+0x17e>
 8008d82:	687a      	ldr	r2, [r7, #4]
 8008d84:	687b      	ldr	r3, [r7, #4]
 8008d86:	699b      	ldr	r3, [r3, #24]
 8008d88:	4619      	mov	r1, r3
 8008d8a:	4610      	mov	r0, r2
 8008d8c:	f7ff fc11 	bl	80085b2 <get_fat>
 8008d90:	6178      	str	r0, [r7, #20]
 8008d92:	697b      	ldr	r3, [r7, #20]
 8008d94:	2b01      	cmp	r3, #1
 8008d96:	d801      	bhi.n	8008d9c <dir_next+0xa0>
 8008d98:	2302      	movs	r3, #2
 8008d9a:	e081      	b.n	8008ea0 <dir_next+0x1a4>
 8008d9c:	697b      	ldr	r3, [r7, #20]
 8008d9e:	f1b3 3fff 	cmp.w	r3, #4294967295
 8008da2:	d101      	bne.n	8008da8 <dir_next+0xac>
 8008da4:	2301      	movs	r3, #1
 8008da6:	e07b      	b.n	8008ea0 <dir_next+0x1a4>
 8008da8:	68fb      	ldr	r3, [r7, #12]
 8008daa:	699b      	ldr	r3, [r3, #24]
 8008dac:	697a      	ldr	r2, [r7, #20]
 8008dae:	429a      	cmp	r2, r3
 8008db0:	d359      	bcc.n	8008e66 <dir_next+0x16a>
 8008db2:	683b      	ldr	r3, [r7, #0]
 8008db4:	2b00      	cmp	r3, #0
 8008db6:	d104      	bne.n	8008dc2 <dir_next+0xc6>
 8008db8:	687b      	ldr	r3, [r7, #4]
 8008dba:	2200      	movs	r2, #0
 8008dbc:	61da      	str	r2, [r3, #28]
 8008dbe:	2304      	movs	r3, #4
 8008dc0:	e06e      	b.n	8008ea0 <dir_next+0x1a4>
 8008dc2:	687a      	ldr	r2, [r7, #4]
 8008dc4:	687b      	ldr	r3, [r7, #4]
 8008dc6:	699b      	ldr	r3, [r3, #24]
 8008dc8:	4619      	mov	r1, r3
 8008dca:	4610      	mov	r0, r2
 8008dcc:	f7ff fe3d 	bl	8008a4a <create_chain>
 8008dd0:	6178      	str	r0, [r7, #20]
 8008dd2:	697b      	ldr	r3, [r7, #20]
 8008dd4:	2b00      	cmp	r3, #0
 8008dd6:	d101      	bne.n	8008ddc <dir_next+0xe0>
 8008dd8:	2307      	movs	r3, #7
 8008dda:	e061      	b.n	8008ea0 <dir_next+0x1a4>
 8008ddc:	697b      	ldr	r3, [r7, #20]
 8008dde:	2b01      	cmp	r3, #1
 8008de0:	d101      	bne.n	8008de6 <dir_next+0xea>
 8008de2:	2302      	movs	r3, #2
 8008de4:	e05c      	b.n	8008ea0 <dir_next+0x1a4>
 8008de6:	697b      	ldr	r3, [r7, #20]
 8008de8:	f1b3 3fff 	cmp.w	r3, #4294967295
 8008dec:	d101      	bne.n	8008df2 <dir_next+0xf6>
 8008dee:	2301      	movs	r3, #1
 8008df0:	e056      	b.n	8008ea0 <dir_next+0x1a4>
 8008df2:	68f8      	ldr	r0, [r7, #12]
 8008df4:	f7ff fadc 	bl	80083b0 <sync_window>
 8008df8:	4603      	mov	r3, r0
 8008dfa:	2b00      	cmp	r3, #0
 8008dfc:	d001      	beq.n	8008e02 <dir_next+0x106>
 8008dfe:	2301      	movs	r3, #1
 8008e00:	e04e      	b.n	8008ea0 <dir_next+0x1a4>
 8008e02:	68fb      	ldr	r3, [r7, #12]
 8008e04:	f103 0034 	add.w	r0, r3, #52	; 0x34
 8008e08:	68fb      	ldr	r3, [r7, #12]
 8008e0a:	899b      	ldrh	r3, [r3, #12]
 8008e0c:	461a      	mov	r2, r3
 8008e0e:	2100      	movs	r1, #0
 8008e10:	f7ff f905 	bl	800801e <mem_set>
 8008e14:	2300      	movs	r3, #0
 8008e16:	613b      	str	r3, [r7, #16]
 8008e18:	6979      	ldr	r1, [r7, #20]
 8008e1a:	68f8      	ldr	r0, [r7, #12]
 8008e1c:	f7ff fbaa 	bl	8008574 <clust2sect>
 8008e20:	4602      	mov	r2, r0
 8008e22:	68fb      	ldr	r3, [r7, #12]
 8008e24:	631a      	str	r2, [r3, #48]	; 0x30
 8008e26:	e012      	b.n	8008e4e <dir_next+0x152>
 8008e28:	68fb      	ldr	r3, [r7, #12]
 8008e2a:	2201      	movs	r2, #1
 8008e2c:	70da      	strb	r2, [r3, #3]
 8008e2e:	68f8      	ldr	r0, [r7, #12]
 8008e30:	f7ff fabe 	bl	80083b0 <sync_window>
 8008e34:	4603      	mov	r3, r0
 8008e36:	2b00      	cmp	r3, #0
 8008e38:	d001      	beq.n	8008e3e <dir_next+0x142>
 8008e3a:	2301      	movs	r3, #1
 8008e3c:	e030      	b.n	8008ea0 <dir_next+0x1a4>
 8008e3e:	693b      	ldr	r3, [r7, #16]
 8008e40:	3301      	adds	r3, #1
 8008e42:	613b      	str	r3, [r7, #16]
 8008e44:	68fb      	ldr	r3, [r7, #12]
 8008e46:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8008e48:	1c5a      	adds	r2, r3, #1
 8008e4a:	68fb      	ldr	r3, [r7, #12]
 8008e4c:	631a      	str	r2, [r3, #48]	; 0x30
 8008e4e:	68fb      	ldr	r3, [r7, #12]
 8008e50:	895b      	ldrh	r3, [r3, #10]
 8008e52:	461a      	mov	r2, r3
 8008e54:	693b      	ldr	r3, [r7, #16]
 8008e56:	4293      	cmp	r3, r2
 8008e58:	d3e6      	bcc.n	8008e28 <dir_next+0x12c>
 8008e5a:	68fb      	ldr	r3, [r7, #12]
 8008e5c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8008e5e:	693b      	ldr	r3, [r7, #16]
 8008e60:	1ad2      	subs	r2, r2, r3
 8008e62:	68fb      	ldr	r3, [r7, #12]
 8008e64:	631a      	str	r2, [r3, #48]	; 0x30
 8008e66:	687b      	ldr	r3, [r7, #4]
 8008e68:	697a      	ldr	r2, [r7, #20]
 8008e6a:	619a      	str	r2, [r3, #24]
 8008e6c:	6979      	ldr	r1, [r7, #20]
 8008e6e:	68f8      	ldr	r0, [r7, #12]
 8008e70:	f7ff fb80 	bl	8008574 <clust2sect>
 8008e74:	4602      	mov	r2, r0
 8008e76:	687b      	ldr	r3, [r7, #4]
 8008e78:	61da      	str	r2, [r3, #28]
 8008e7a:	687b      	ldr	r3, [r7, #4]
 8008e7c:	68ba      	ldr	r2, [r7, #8]
 8008e7e:	615a      	str	r2, [r3, #20]
 8008e80:	68fb      	ldr	r3, [r7, #12]
 8008e82:	f103 0134 	add.w	r1, r3, #52	; 0x34
 8008e86:	68fb      	ldr	r3, [r7, #12]
 8008e88:	899b      	ldrh	r3, [r3, #12]
 8008e8a:	461a      	mov	r2, r3
 8008e8c:	68bb      	ldr	r3, [r7, #8]
 8008e8e:	fbb3 f0f2 	udiv	r0, r3, r2
 8008e92:	fb02 f200 	mul.w	r2, r2, r0
 8008e96:	1a9b      	subs	r3, r3, r2
 8008e98:	18ca      	adds	r2, r1, r3
 8008e9a:	687b      	ldr	r3, [r7, #4]
 8008e9c:	621a      	str	r2, [r3, #32]
 8008e9e:	2300      	movs	r3, #0
 8008ea0:	4618      	mov	r0, r3
 8008ea2:	3718      	adds	r7, #24
 8008ea4:	46bd      	mov	sp, r7
 8008ea6:	bd80      	pop	{r7, pc}

08008ea8 <dir_alloc>:
 8008ea8:	b580      	push	{r7, lr}
 8008eaa:	b086      	sub	sp, #24
 8008eac:	af00      	add	r7, sp, #0
 8008eae:	6078      	str	r0, [r7, #4]
 8008eb0:	6039      	str	r1, [r7, #0]
 8008eb2:	687b      	ldr	r3, [r7, #4]
 8008eb4:	681b      	ldr	r3, [r3, #0]
 8008eb6:	60fb      	str	r3, [r7, #12]
 8008eb8:	2100      	movs	r1, #0
 8008eba:	6878      	ldr	r0, [r7, #4]
 8008ebc:	f7ff fe95 	bl	8008bea <dir_sdi>
 8008ec0:	4603      	mov	r3, r0
 8008ec2:	75fb      	strb	r3, [r7, #23]
 8008ec4:	7dfb      	ldrb	r3, [r7, #23]
 8008ec6:	2b00      	cmp	r3, #0
 8008ec8:	d12b      	bne.n	8008f22 <dir_alloc+0x7a>
 8008eca:	2300      	movs	r3, #0
 8008ecc:	613b      	str	r3, [r7, #16]
 8008ece:	687b      	ldr	r3, [r7, #4]
 8008ed0:	69db      	ldr	r3, [r3, #28]
 8008ed2:	4619      	mov	r1, r3
 8008ed4:	68f8      	ldr	r0, [r7, #12]
 8008ed6:	f7ff faaf 	bl	8008438 <move_window>
 8008eda:	4603      	mov	r3, r0
 8008edc:	75fb      	strb	r3, [r7, #23]
 8008ede:	7dfb      	ldrb	r3, [r7, #23]
 8008ee0:	2b00      	cmp	r3, #0
 8008ee2:	d11d      	bne.n	8008f20 <dir_alloc+0x78>
 8008ee4:	687b      	ldr	r3, [r7, #4]
 8008ee6:	6a1b      	ldr	r3, [r3, #32]
 8008ee8:	781b      	ldrb	r3, [r3, #0]
 8008eea:	2be5      	cmp	r3, #229	; 0xe5
 8008eec:	d004      	beq.n	8008ef8 <dir_alloc+0x50>
 8008eee:	687b      	ldr	r3, [r7, #4]
 8008ef0:	6a1b      	ldr	r3, [r3, #32]
 8008ef2:	781b      	ldrb	r3, [r3, #0]
 8008ef4:	2b00      	cmp	r3, #0
 8008ef6:	d107      	bne.n	8008f08 <dir_alloc+0x60>
 8008ef8:	693b      	ldr	r3, [r7, #16]
 8008efa:	3301      	adds	r3, #1
 8008efc:	613b      	str	r3, [r7, #16]
 8008efe:	693a      	ldr	r2, [r7, #16]
 8008f00:	683b      	ldr	r3, [r7, #0]
 8008f02:	429a      	cmp	r2, r3
 8008f04:	d102      	bne.n	8008f0c <dir_alloc+0x64>
 8008f06:	e00c      	b.n	8008f22 <dir_alloc+0x7a>
 8008f08:	2300      	movs	r3, #0
 8008f0a:	613b      	str	r3, [r7, #16]
 8008f0c:	2101      	movs	r1, #1
 8008f0e:	6878      	ldr	r0, [r7, #4]
 8008f10:	f7ff fef4 	bl	8008cfc <dir_next>
 8008f14:	4603      	mov	r3, r0
 8008f16:	75fb      	strb	r3, [r7, #23]
 8008f18:	7dfb      	ldrb	r3, [r7, #23]
 8008f1a:	2b00      	cmp	r3, #0
 8008f1c:	d0d7      	beq.n	8008ece <dir_alloc+0x26>
 8008f1e:	e000      	b.n	8008f22 <dir_alloc+0x7a>
 8008f20:	bf00      	nop
 8008f22:	7dfb      	ldrb	r3, [r7, #23]
 8008f24:	2b04      	cmp	r3, #4
 8008f26:	d101      	bne.n	8008f2c <dir_alloc+0x84>
 8008f28:	2307      	movs	r3, #7
 8008f2a:	75fb      	strb	r3, [r7, #23]
 8008f2c:	7dfb      	ldrb	r3, [r7, #23]
 8008f2e:	4618      	mov	r0, r3
 8008f30:	3718      	adds	r7, #24
 8008f32:	46bd      	mov	sp, r7
 8008f34:	bd80      	pop	{r7, pc}

08008f36 <ld_clust>:
 8008f36:	b580      	push	{r7, lr}
 8008f38:	b084      	sub	sp, #16
 8008f3a:	af00      	add	r7, sp, #0
 8008f3c:	6078      	str	r0, [r7, #4]
 8008f3e:	6039      	str	r1, [r7, #0]
 8008f40:	683b      	ldr	r3, [r7, #0]
 8008f42:	331a      	adds	r3, #26
 8008f44:	4618      	mov	r0, r3
 8008f46:	f7fe ffc7 	bl	8007ed8 <ld_word>
 8008f4a:	4603      	mov	r3, r0
 8008f4c:	60fb      	str	r3, [r7, #12]
 8008f4e:	687b      	ldr	r3, [r7, #4]
 8008f50:	781b      	ldrb	r3, [r3, #0]
 8008f52:	2b03      	cmp	r3, #3
 8008f54:	d109      	bne.n	8008f6a <ld_clust+0x34>
 8008f56:	683b      	ldr	r3, [r7, #0]
 8008f58:	3314      	adds	r3, #20
 8008f5a:	4618      	mov	r0, r3
 8008f5c:	f7fe ffbc 	bl	8007ed8 <ld_word>
 8008f60:	4603      	mov	r3, r0
 8008f62:	041b      	lsls	r3, r3, #16
 8008f64:	68fa      	ldr	r2, [r7, #12]
 8008f66:	4313      	orrs	r3, r2
 8008f68:	60fb      	str	r3, [r7, #12]
 8008f6a:	68fb      	ldr	r3, [r7, #12]
 8008f6c:	4618      	mov	r0, r3
 8008f6e:	3710      	adds	r7, #16
 8008f70:	46bd      	mov	sp, r7
 8008f72:	bd80      	pop	{r7, pc}

08008f74 <st_clust>:
 8008f74:	b580      	push	{r7, lr}
 8008f76:	b084      	sub	sp, #16
 8008f78:	af00      	add	r7, sp, #0
 8008f7a:	60f8      	str	r0, [r7, #12]
 8008f7c:	60b9      	str	r1, [r7, #8]
 8008f7e:	607a      	str	r2, [r7, #4]
 8008f80:	68bb      	ldr	r3, [r7, #8]
 8008f82:	331a      	adds	r3, #26
 8008f84:	687a      	ldr	r2, [r7, #4]
 8008f86:	b292      	uxth	r2, r2
 8008f88:	4611      	mov	r1, r2
 8008f8a:	4618      	mov	r0, r3
 8008f8c:	f7fe ffdf 	bl	8007f4e <st_word>
 8008f90:	68fb      	ldr	r3, [r7, #12]
 8008f92:	781b      	ldrb	r3, [r3, #0]
 8008f94:	2b03      	cmp	r3, #3
 8008f96:	d109      	bne.n	8008fac <st_clust+0x38>
 8008f98:	68bb      	ldr	r3, [r7, #8]
 8008f9a:	f103 0214 	add.w	r2, r3, #20
 8008f9e:	687b      	ldr	r3, [r7, #4]
 8008fa0:	0c1b      	lsrs	r3, r3, #16
 8008fa2:	b29b      	uxth	r3, r3
 8008fa4:	4619      	mov	r1, r3
 8008fa6:	4610      	mov	r0, r2
 8008fa8:	f7fe ffd1 	bl	8007f4e <st_word>
 8008fac:	bf00      	nop
 8008fae:	3710      	adds	r7, #16
 8008fb0:	46bd      	mov	sp, r7
 8008fb2:	bd80      	pop	{r7, pc}

08008fb4 <dir_find>:
 8008fb4:	b580      	push	{r7, lr}
 8008fb6:	b086      	sub	sp, #24
 8008fb8:	af00      	add	r7, sp, #0
 8008fba:	6078      	str	r0, [r7, #4]
 8008fbc:	687b      	ldr	r3, [r7, #4]
 8008fbe:	681b      	ldr	r3, [r3, #0]
 8008fc0:	613b      	str	r3, [r7, #16]
 8008fc2:	2100      	movs	r1, #0
 8008fc4:	6878      	ldr	r0, [r7, #4]
 8008fc6:	f7ff fe10 	bl	8008bea <dir_sdi>
 8008fca:	4603      	mov	r3, r0
 8008fcc:	75fb      	strb	r3, [r7, #23]
 8008fce:	7dfb      	ldrb	r3, [r7, #23]
 8008fd0:	2b00      	cmp	r3, #0
 8008fd2:	d001      	beq.n	8008fd8 <dir_find+0x24>
 8008fd4:	7dfb      	ldrb	r3, [r7, #23]
 8008fd6:	e03e      	b.n	8009056 <dir_find+0xa2>
 8008fd8:	687b      	ldr	r3, [r7, #4]
 8008fda:	69db      	ldr	r3, [r3, #28]
 8008fdc:	4619      	mov	r1, r3
 8008fde:	6938      	ldr	r0, [r7, #16]
 8008fe0:	f7ff fa2a 	bl	8008438 <move_window>
 8008fe4:	4603      	mov	r3, r0
 8008fe6:	75fb      	strb	r3, [r7, #23]
 8008fe8:	7dfb      	ldrb	r3, [r7, #23]
 8008fea:	2b00      	cmp	r3, #0
 8008fec:	d12f      	bne.n	800904e <dir_find+0x9a>
 8008fee:	687b      	ldr	r3, [r7, #4]
 8008ff0:	6a1b      	ldr	r3, [r3, #32]
 8008ff2:	781b      	ldrb	r3, [r3, #0]
 8008ff4:	73fb      	strb	r3, [r7, #15]
 8008ff6:	7bfb      	ldrb	r3, [r7, #15]
 8008ff8:	2b00      	cmp	r3, #0
 8008ffa:	d102      	bne.n	8009002 <dir_find+0x4e>
 8008ffc:	2304      	movs	r3, #4
 8008ffe:	75fb      	strb	r3, [r7, #23]
 8009000:	e028      	b.n	8009054 <dir_find+0xa0>
 8009002:	687b      	ldr	r3, [r7, #4]
 8009004:	6a1b      	ldr	r3, [r3, #32]
 8009006:	330b      	adds	r3, #11
 8009008:	781b      	ldrb	r3, [r3, #0]
 800900a:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 800900e:	b2da      	uxtb	r2, r3
 8009010:	687b      	ldr	r3, [r7, #4]
 8009012:	719a      	strb	r2, [r3, #6]
 8009014:	687b      	ldr	r3, [r7, #4]
 8009016:	6a1b      	ldr	r3, [r3, #32]
 8009018:	330b      	adds	r3, #11
 800901a:	781b      	ldrb	r3, [r3, #0]
 800901c:	f003 0308 	and.w	r3, r3, #8
 8009020:	2b00      	cmp	r3, #0
 8009022:	d10a      	bne.n	800903a <dir_find+0x86>
 8009024:	687b      	ldr	r3, [r7, #4]
 8009026:	6a18      	ldr	r0, [r3, #32]
 8009028:	687b      	ldr	r3, [r7, #4]
 800902a:	3324      	adds	r3, #36	; 0x24
 800902c:	220b      	movs	r2, #11
 800902e:	4619      	mov	r1, r3
 8009030:	f7ff f80f 	bl	8008052 <mem_cmp>
 8009034:	4603      	mov	r3, r0
 8009036:	2b00      	cmp	r3, #0
 8009038:	d00b      	beq.n	8009052 <dir_find+0x9e>
 800903a:	2100      	movs	r1, #0
 800903c:	6878      	ldr	r0, [r7, #4]
 800903e:	f7ff fe5d 	bl	8008cfc <dir_next>
 8009042:	4603      	mov	r3, r0
 8009044:	75fb      	strb	r3, [r7, #23]
 8009046:	7dfb      	ldrb	r3, [r7, #23]
 8009048:	2b00      	cmp	r3, #0
 800904a:	d0c5      	beq.n	8008fd8 <dir_find+0x24>
 800904c:	e002      	b.n	8009054 <dir_find+0xa0>
 800904e:	bf00      	nop
 8009050:	e000      	b.n	8009054 <dir_find+0xa0>
 8009052:	bf00      	nop
 8009054:	7dfb      	ldrb	r3, [r7, #23]
 8009056:	4618      	mov	r0, r3
 8009058:	3718      	adds	r7, #24
 800905a:	46bd      	mov	sp, r7
 800905c:	bd80      	pop	{r7, pc}

0800905e <dir_register>:
 800905e:	b580      	push	{r7, lr}
 8009060:	b084      	sub	sp, #16
 8009062:	af00      	add	r7, sp, #0
 8009064:	6078      	str	r0, [r7, #4]
 8009066:	687b      	ldr	r3, [r7, #4]
 8009068:	681b      	ldr	r3, [r3, #0]
 800906a:	60bb      	str	r3, [r7, #8]
 800906c:	2101      	movs	r1, #1
 800906e:	6878      	ldr	r0, [r7, #4]
 8009070:	f7ff ff1a 	bl	8008ea8 <dir_alloc>
 8009074:	4603      	mov	r3, r0
 8009076:	73fb      	strb	r3, [r7, #15]
 8009078:	7bfb      	ldrb	r3, [r7, #15]
 800907a:	2b00      	cmp	r3, #0
 800907c:	d11c      	bne.n	80090b8 <dir_register+0x5a>
 800907e:	687b      	ldr	r3, [r7, #4]
 8009080:	69db      	ldr	r3, [r3, #28]
 8009082:	4619      	mov	r1, r3
 8009084:	68b8      	ldr	r0, [r7, #8]
 8009086:	f7ff f9d7 	bl	8008438 <move_window>
 800908a:	4603      	mov	r3, r0
 800908c:	73fb      	strb	r3, [r7, #15]
 800908e:	7bfb      	ldrb	r3, [r7, #15]
 8009090:	2b00      	cmp	r3, #0
 8009092:	d111      	bne.n	80090b8 <dir_register+0x5a>
 8009094:	687b      	ldr	r3, [r7, #4]
 8009096:	6a1b      	ldr	r3, [r3, #32]
 8009098:	2220      	movs	r2, #32
 800909a:	2100      	movs	r1, #0
 800909c:	4618      	mov	r0, r3
 800909e:	f7fe ffbe 	bl	800801e <mem_set>
 80090a2:	687b      	ldr	r3, [r7, #4]
 80090a4:	6a18      	ldr	r0, [r3, #32]
 80090a6:	687b      	ldr	r3, [r7, #4]
 80090a8:	3324      	adds	r3, #36	; 0x24
 80090aa:	220b      	movs	r2, #11
 80090ac:	4619      	mov	r1, r3
 80090ae:	f7fe ff95 	bl	8007fdc <mem_cpy>
 80090b2:	68bb      	ldr	r3, [r7, #8]
 80090b4:	2201      	movs	r2, #1
 80090b6:	70da      	strb	r2, [r3, #3]
 80090b8:	7bfb      	ldrb	r3, [r7, #15]
 80090ba:	4618      	mov	r0, r3
 80090bc:	3710      	adds	r7, #16
 80090be:	46bd      	mov	sp, r7
 80090c0:	bd80      	pop	{r7, pc}
	...

080090c4 <create_name>:
 80090c4:	b580      	push	{r7, lr}
 80090c6:	b088      	sub	sp, #32
 80090c8:	af00      	add	r7, sp, #0
 80090ca:	6078      	str	r0, [r7, #4]
 80090cc:	6039      	str	r1, [r7, #0]
 80090ce:	683b      	ldr	r3, [r7, #0]
 80090d0:	681b      	ldr	r3, [r3, #0]
 80090d2:	60fb      	str	r3, [r7, #12]
 80090d4:	687b      	ldr	r3, [r7, #4]
 80090d6:	3324      	adds	r3, #36	; 0x24
 80090d8:	60bb      	str	r3, [r7, #8]
 80090da:	220b      	movs	r2, #11
 80090dc:	2120      	movs	r1, #32
 80090de:	68b8      	ldr	r0, [r7, #8]
 80090e0:	f7fe ff9d 	bl	800801e <mem_set>
 80090e4:	2300      	movs	r3, #0
 80090e6:	613b      	str	r3, [r7, #16]
 80090e8:	693b      	ldr	r3, [r7, #16]
 80090ea:	617b      	str	r3, [r7, #20]
 80090ec:	2308      	movs	r3, #8
 80090ee:	61bb      	str	r3, [r7, #24]
 80090f0:	697b      	ldr	r3, [r7, #20]
 80090f2:	1c5a      	adds	r2, r3, #1
 80090f4:	617a      	str	r2, [r7, #20]
 80090f6:	68fa      	ldr	r2, [r7, #12]
 80090f8:	4413      	add	r3, r2
 80090fa:	781b      	ldrb	r3, [r3, #0]
 80090fc:	77fb      	strb	r3, [r7, #31]
 80090fe:	7ffb      	ldrb	r3, [r7, #31]
 8009100:	2b20      	cmp	r3, #32
 8009102:	d94e      	bls.n	80091a2 <create_name+0xde>
 8009104:	7ffb      	ldrb	r3, [r7, #31]
 8009106:	2b2f      	cmp	r3, #47	; 0x2f
 8009108:	d006      	beq.n	8009118 <create_name+0x54>
 800910a:	7ffb      	ldrb	r3, [r7, #31]
 800910c:	2b5c      	cmp	r3, #92	; 0x5c
 800910e:	d110      	bne.n	8009132 <create_name+0x6e>
 8009110:	e002      	b.n	8009118 <create_name+0x54>
 8009112:	697b      	ldr	r3, [r7, #20]
 8009114:	3301      	adds	r3, #1
 8009116:	617b      	str	r3, [r7, #20]
 8009118:	68fa      	ldr	r2, [r7, #12]
 800911a:	697b      	ldr	r3, [r7, #20]
 800911c:	4413      	add	r3, r2
 800911e:	781b      	ldrb	r3, [r3, #0]
 8009120:	2b2f      	cmp	r3, #47	; 0x2f
 8009122:	d0f6      	beq.n	8009112 <create_name+0x4e>
 8009124:	68fa      	ldr	r2, [r7, #12]
 8009126:	697b      	ldr	r3, [r7, #20]
 8009128:	4413      	add	r3, r2
 800912a:	781b      	ldrb	r3, [r3, #0]
 800912c:	2b5c      	cmp	r3, #92	; 0x5c
 800912e:	d0f0      	beq.n	8009112 <create_name+0x4e>
 8009130:	e038      	b.n	80091a4 <create_name+0xe0>
 8009132:	7ffb      	ldrb	r3, [r7, #31]
 8009134:	2b2e      	cmp	r3, #46	; 0x2e
 8009136:	d003      	beq.n	8009140 <create_name+0x7c>
 8009138:	693a      	ldr	r2, [r7, #16]
 800913a:	69bb      	ldr	r3, [r7, #24]
 800913c:	429a      	cmp	r2, r3
 800913e:	d30c      	bcc.n	800915a <create_name+0x96>
 8009140:	69bb      	ldr	r3, [r7, #24]
 8009142:	2b0b      	cmp	r3, #11
 8009144:	d002      	beq.n	800914c <create_name+0x88>
 8009146:	7ffb      	ldrb	r3, [r7, #31]
 8009148:	2b2e      	cmp	r3, #46	; 0x2e
 800914a:	d001      	beq.n	8009150 <create_name+0x8c>
 800914c:	2306      	movs	r3, #6
 800914e:	e044      	b.n	80091da <create_name+0x116>
 8009150:	2308      	movs	r3, #8
 8009152:	613b      	str	r3, [r7, #16]
 8009154:	230b      	movs	r3, #11
 8009156:	61bb      	str	r3, [r7, #24]
 8009158:	e022      	b.n	80091a0 <create_name+0xdc>
 800915a:	f997 301f 	ldrsb.w	r3, [r7, #31]
 800915e:	2b00      	cmp	r3, #0
 8009160:	da04      	bge.n	800916c <create_name+0xa8>
 8009162:	7ffb      	ldrb	r3, [r7, #31]
 8009164:	3b80      	subs	r3, #128	; 0x80
 8009166:	4a1f      	ldr	r2, [pc, #124]	; (80091e4 <create_name+0x120>)
 8009168:	5cd3      	ldrb	r3, [r2, r3]
 800916a:	77fb      	strb	r3, [r7, #31]
 800916c:	7ffb      	ldrb	r3, [r7, #31]
 800916e:	4619      	mov	r1, r3
 8009170:	481d      	ldr	r0, [pc, #116]	; (80091e8 <create_name+0x124>)
 8009172:	f7fe ff95 	bl	80080a0 <chk_chr>
 8009176:	4603      	mov	r3, r0
 8009178:	2b00      	cmp	r3, #0
 800917a:	d001      	beq.n	8009180 <create_name+0xbc>
 800917c:	2306      	movs	r3, #6
 800917e:	e02c      	b.n	80091da <create_name+0x116>
 8009180:	7ffb      	ldrb	r3, [r7, #31]
 8009182:	2b60      	cmp	r3, #96	; 0x60
 8009184:	d905      	bls.n	8009192 <create_name+0xce>
 8009186:	7ffb      	ldrb	r3, [r7, #31]
 8009188:	2b7a      	cmp	r3, #122	; 0x7a
 800918a:	d802      	bhi.n	8009192 <create_name+0xce>
 800918c:	7ffb      	ldrb	r3, [r7, #31]
 800918e:	3b20      	subs	r3, #32
 8009190:	77fb      	strb	r3, [r7, #31]
 8009192:	693b      	ldr	r3, [r7, #16]
 8009194:	1c5a      	adds	r2, r3, #1
 8009196:	613a      	str	r2, [r7, #16]
 8009198:	68ba      	ldr	r2, [r7, #8]
 800919a:	4413      	add	r3, r2
 800919c:	7ffa      	ldrb	r2, [r7, #31]
 800919e:	701a      	strb	r2, [r3, #0]
 80091a0:	e7a6      	b.n	80090f0 <create_name+0x2c>
 80091a2:	bf00      	nop
 80091a4:	68fa      	ldr	r2, [r7, #12]
 80091a6:	697b      	ldr	r3, [r7, #20]
 80091a8:	441a      	add	r2, r3
 80091aa:	683b      	ldr	r3, [r7, #0]
 80091ac:	601a      	str	r2, [r3, #0]
 80091ae:	693b      	ldr	r3, [r7, #16]
 80091b0:	2b00      	cmp	r3, #0
 80091b2:	d101      	bne.n	80091b8 <create_name+0xf4>
 80091b4:	2306      	movs	r3, #6
 80091b6:	e010      	b.n	80091da <create_name+0x116>
 80091b8:	68bb      	ldr	r3, [r7, #8]
 80091ba:	781b      	ldrb	r3, [r3, #0]
 80091bc:	2be5      	cmp	r3, #229	; 0xe5
 80091be:	d102      	bne.n	80091c6 <create_name+0x102>
 80091c0:	68bb      	ldr	r3, [r7, #8]
 80091c2:	2205      	movs	r2, #5
 80091c4:	701a      	strb	r2, [r3, #0]
 80091c6:	7ffb      	ldrb	r3, [r7, #31]
 80091c8:	2b20      	cmp	r3, #32
 80091ca:	d801      	bhi.n	80091d0 <create_name+0x10c>
 80091cc:	2204      	movs	r2, #4
 80091ce:	e000      	b.n	80091d2 <create_name+0x10e>
 80091d0:	2200      	movs	r2, #0
 80091d2:	68bb      	ldr	r3, [r7, #8]
 80091d4:	330b      	adds	r3, #11
 80091d6:	701a      	strb	r2, [r3, #0]
 80091d8:	2300      	movs	r3, #0
 80091da:	4618      	mov	r0, r3
 80091dc:	3720      	adds	r7, #32
 80091de:	46bd      	mov	sp, r7
 80091e0:	bd80      	pop	{r7, pc}
 80091e2:	bf00      	nop
 80091e4:	0800b1bc 	.word	0x0800b1bc
 80091e8:	0800b150 	.word	0x0800b150

080091ec <follow_path>:
 80091ec:	b580      	push	{r7, lr}
 80091ee:	b086      	sub	sp, #24
 80091f0:	af00      	add	r7, sp, #0
 80091f2:	6078      	str	r0, [r7, #4]
 80091f4:	6039      	str	r1, [r7, #0]
 80091f6:	687b      	ldr	r3, [r7, #4]
 80091f8:	613b      	str	r3, [r7, #16]
 80091fa:	693b      	ldr	r3, [r7, #16]
 80091fc:	681b      	ldr	r3, [r3, #0]
 80091fe:	60fb      	str	r3, [r7, #12]
 8009200:	e002      	b.n	8009208 <follow_path+0x1c>
 8009202:	683b      	ldr	r3, [r7, #0]
 8009204:	3301      	adds	r3, #1
 8009206:	603b      	str	r3, [r7, #0]
 8009208:	683b      	ldr	r3, [r7, #0]
 800920a:	781b      	ldrb	r3, [r3, #0]
 800920c:	2b2f      	cmp	r3, #47	; 0x2f
 800920e:	d0f8      	beq.n	8009202 <follow_path+0x16>
 8009210:	683b      	ldr	r3, [r7, #0]
 8009212:	781b      	ldrb	r3, [r3, #0]
 8009214:	2b5c      	cmp	r3, #92	; 0x5c
 8009216:	d0f4      	beq.n	8009202 <follow_path+0x16>
 8009218:	693b      	ldr	r3, [r7, #16]
 800921a:	2200      	movs	r2, #0
 800921c:	609a      	str	r2, [r3, #8]
 800921e:	683b      	ldr	r3, [r7, #0]
 8009220:	781b      	ldrb	r3, [r3, #0]
 8009222:	2b1f      	cmp	r3, #31
 8009224:	d80a      	bhi.n	800923c <follow_path+0x50>
 8009226:	687b      	ldr	r3, [r7, #4]
 8009228:	2280      	movs	r2, #128	; 0x80
 800922a:	f883 202f 	strb.w	r2, [r3, #47]	; 0x2f
 800922e:	2100      	movs	r1, #0
 8009230:	6878      	ldr	r0, [r7, #4]
 8009232:	f7ff fcda 	bl	8008bea <dir_sdi>
 8009236:	4603      	mov	r3, r0
 8009238:	75fb      	strb	r3, [r7, #23]
 800923a:	e048      	b.n	80092ce <follow_path+0xe2>
 800923c:	463b      	mov	r3, r7
 800923e:	4619      	mov	r1, r3
 8009240:	6878      	ldr	r0, [r7, #4]
 8009242:	f7ff ff3f 	bl	80090c4 <create_name>
 8009246:	4603      	mov	r3, r0
 8009248:	75fb      	strb	r3, [r7, #23]
 800924a:	7dfb      	ldrb	r3, [r7, #23]
 800924c:	2b00      	cmp	r3, #0
 800924e:	d139      	bne.n	80092c4 <follow_path+0xd8>
 8009250:	6878      	ldr	r0, [r7, #4]
 8009252:	f7ff feaf 	bl	8008fb4 <dir_find>
 8009256:	4603      	mov	r3, r0
 8009258:	75fb      	strb	r3, [r7, #23]
 800925a:	687b      	ldr	r3, [r7, #4]
 800925c:	f893 302f 	ldrb.w	r3, [r3, #47]	; 0x2f
 8009260:	72fb      	strb	r3, [r7, #11]
 8009262:	7dfb      	ldrb	r3, [r7, #23]
 8009264:	2b00      	cmp	r3, #0
 8009266:	d00a      	beq.n	800927e <follow_path+0x92>
 8009268:	7dfb      	ldrb	r3, [r7, #23]
 800926a:	2b04      	cmp	r3, #4
 800926c:	d12c      	bne.n	80092c8 <follow_path+0xdc>
 800926e:	7afb      	ldrb	r3, [r7, #11]
 8009270:	f003 0304 	and.w	r3, r3, #4
 8009274:	2b00      	cmp	r3, #0
 8009276:	d127      	bne.n	80092c8 <follow_path+0xdc>
 8009278:	2305      	movs	r3, #5
 800927a:	75fb      	strb	r3, [r7, #23]
 800927c:	e024      	b.n	80092c8 <follow_path+0xdc>
 800927e:	7afb      	ldrb	r3, [r7, #11]
 8009280:	f003 0304 	and.w	r3, r3, #4
 8009284:	2b00      	cmp	r3, #0
 8009286:	d121      	bne.n	80092cc <follow_path+0xe0>
 8009288:	693b      	ldr	r3, [r7, #16]
 800928a:	799b      	ldrb	r3, [r3, #6]
 800928c:	f003 0310 	and.w	r3, r3, #16
 8009290:	2b00      	cmp	r3, #0
 8009292:	d102      	bne.n	800929a <follow_path+0xae>
 8009294:	2305      	movs	r3, #5
 8009296:	75fb      	strb	r3, [r7, #23]
 8009298:	e019      	b.n	80092ce <follow_path+0xe2>
 800929a:	68fb      	ldr	r3, [r7, #12]
 800929c:	f103 0134 	add.w	r1, r3, #52	; 0x34
 80092a0:	687b      	ldr	r3, [r7, #4]
 80092a2:	695b      	ldr	r3, [r3, #20]
 80092a4:	68fa      	ldr	r2, [r7, #12]
 80092a6:	8992      	ldrh	r2, [r2, #12]
 80092a8:	fbb3 f0f2 	udiv	r0, r3, r2
 80092ac:	fb02 f200 	mul.w	r2, r2, r0
 80092b0:	1a9b      	subs	r3, r3, r2
 80092b2:	440b      	add	r3, r1
 80092b4:	4619      	mov	r1, r3
 80092b6:	68f8      	ldr	r0, [r7, #12]
 80092b8:	f7ff fe3d 	bl	8008f36 <ld_clust>
 80092bc:	4602      	mov	r2, r0
 80092be:	693b      	ldr	r3, [r7, #16]
 80092c0:	609a      	str	r2, [r3, #8]
 80092c2:	e7bb      	b.n	800923c <follow_path+0x50>
 80092c4:	bf00      	nop
 80092c6:	e002      	b.n	80092ce <follow_path+0xe2>
 80092c8:	bf00      	nop
 80092ca:	e000      	b.n	80092ce <follow_path+0xe2>
 80092cc:	bf00      	nop
 80092ce:	7dfb      	ldrb	r3, [r7, #23]
 80092d0:	4618      	mov	r0, r3
 80092d2:	3718      	adds	r7, #24
 80092d4:	46bd      	mov	sp, r7
 80092d6:	bd80      	pop	{r7, pc}

080092d8 <get_ldnumber>:
 80092d8:	b480      	push	{r7}
 80092da:	b087      	sub	sp, #28
 80092dc:	af00      	add	r7, sp, #0
 80092de:	6078      	str	r0, [r7, #4]
 80092e0:	f04f 33ff 	mov.w	r3, #4294967295
 80092e4:	613b      	str	r3, [r7, #16]
 80092e6:	687b      	ldr	r3, [r7, #4]
 80092e8:	681b      	ldr	r3, [r3, #0]
 80092ea:	2b00      	cmp	r3, #0
 80092ec:	d031      	beq.n	8009352 <get_ldnumber+0x7a>
 80092ee:	687b      	ldr	r3, [r7, #4]
 80092f0:	681b      	ldr	r3, [r3, #0]
 80092f2:	617b      	str	r3, [r7, #20]
 80092f4:	e002      	b.n	80092fc <get_ldnumber+0x24>
 80092f6:	697b      	ldr	r3, [r7, #20]
 80092f8:	3301      	adds	r3, #1
 80092fa:	617b      	str	r3, [r7, #20]
 80092fc:	697b      	ldr	r3, [r7, #20]
 80092fe:	781b      	ldrb	r3, [r3, #0]
 8009300:	2b20      	cmp	r3, #32
 8009302:	d903      	bls.n	800930c <get_ldnumber+0x34>
 8009304:	697b      	ldr	r3, [r7, #20]
 8009306:	781b      	ldrb	r3, [r3, #0]
 8009308:	2b3a      	cmp	r3, #58	; 0x3a
 800930a:	d1f4      	bne.n	80092f6 <get_ldnumber+0x1e>
 800930c:	697b      	ldr	r3, [r7, #20]
 800930e:	781b      	ldrb	r3, [r3, #0]
 8009310:	2b3a      	cmp	r3, #58	; 0x3a
 8009312:	d11c      	bne.n	800934e <get_ldnumber+0x76>
 8009314:	687b      	ldr	r3, [r7, #4]
 8009316:	681b      	ldr	r3, [r3, #0]
 8009318:	60fb      	str	r3, [r7, #12]
 800931a:	68fb      	ldr	r3, [r7, #12]
 800931c:	1c5a      	adds	r2, r3, #1
 800931e:	60fa      	str	r2, [r7, #12]
 8009320:	781b      	ldrb	r3, [r3, #0]
 8009322:	3b30      	subs	r3, #48	; 0x30
 8009324:	60bb      	str	r3, [r7, #8]
 8009326:	68bb      	ldr	r3, [r7, #8]
 8009328:	2b09      	cmp	r3, #9
 800932a:	d80e      	bhi.n	800934a <get_ldnumber+0x72>
 800932c:	68fa      	ldr	r2, [r7, #12]
 800932e:	697b      	ldr	r3, [r7, #20]
 8009330:	429a      	cmp	r2, r3
 8009332:	d10a      	bne.n	800934a <get_ldnumber+0x72>
 8009334:	68bb      	ldr	r3, [r7, #8]
 8009336:	2b00      	cmp	r3, #0
 8009338:	d107      	bne.n	800934a <get_ldnumber+0x72>
 800933a:	68bb      	ldr	r3, [r7, #8]
 800933c:	613b      	str	r3, [r7, #16]
 800933e:	697b      	ldr	r3, [r7, #20]
 8009340:	3301      	adds	r3, #1
 8009342:	617b      	str	r3, [r7, #20]
 8009344:	687b      	ldr	r3, [r7, #4]
 8009346:	697a      	ldr	r2, [r7, #20]
 8009348:	601a      	str	r2, [r3, #0]
 800934a:	693b      	ldr	r3, [r7, #16]
 800934c:	e002      	b.n	8009354 <get_ldnumber+0x7c>
 800934e:	2300      	movs	r3, #0
 8009350:	613b      	str	r3, [r7, #16]
 8009352:	693b      	ldr	r3, [r7, #16]
 8009354:	4618      	mov	r0, r3
 8009356:	371c      	adds	r7, #28
 8009358:	46bd      	mov	sp, r7
 800935a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800935e:	4770      	bx	lr

08009360 <check_fs>:
 8009360:	b580      	push	{r7, lr}
 8009362:	b082      	sub	sp, #8
 8009364:	af00      	add	r7, sp, #0
 8009366:	6078      	str	r0, [r7, #4]
 8009368:	6039      	str	r1, [r7, #0]
 800936a:	687b      	ldr	r3, [r7, #4]
 800936c:	2200      	movs	r2, #0
 800936e:	70da      	strb	r2, [r3, #3]
 8009370:	687b      	ldr	r3, [r7, #4]
 8009372:	f04f 32ff 	mov.w	r2, #4294967295
 8009376:	631a      	str	r2, [r3, #48]	; 0x30
 8009378:	6839      	ldr	r1, [r7, #0]
 800937a:	6878      	ldr	r0, [r7, #4]
 800937c:	f7ff f85c 	bl	8008438 <move_window>
 8009380:	4603      	mov	r3, r0
 8009382:	2b00      	cmp	r3, #0
 8009384:	d001      	beq.n	800938a <check_fs+0x2a>
 8009386:	2304      	movs	r3, #4
 8009388:	e038      	b.n	80093fc <check_fs+0x9c>
 800938a:	687b      	ldr	r3, [r7, #4]
 800938c:	3334      	adds	r3, #52	; 0x34
 800938e:	f503 73ff 	add.w	r3, r3, #510	; 0x1fe
 8009392:	4618      	mov	r0, r3
 8009394:	f7fe fda0 	bl	8007ed8 <ld_word>
 8009398:	4603      	mov	r3, r0
 800939a:	461a      	mov	r2, r3
 800939c:	f64a 2355 	movw	r3, #43605	; 0xaa55
 80093a0:	429a      	cmp	r2, r3
 80093a2:	d001      	beq.n	80093a8 <check_fs+0x48>
 80093a4:	2303      	movs	r3, #3
 80093a6:	e029      	b.n	80093fc <check_fs+0x9c>
 80093a8:	687b      	ldr	r3, [r7, #4]
 80093aa:	f893 3034 	ldrb.w	r3, [r3, #52]	; 0x34
 80093ae:	2be9      	cmp	r3, #233	; 0xe9
 80093b0:	d009      	beq.n	80093c6 <check_fs+0x66>
 80093b2:	687b      	ldr	r3, [r7, #4]
 80093b4:	f893 3034 	ldrb.w	r3, [r3, #52]	; 0x34
 80093b8:	2beb      	cmp	r3, #235	; 0xeb
 80093ba:	d11e      	bne.n	80093fa <check_fs+0x9a>
 80093bc:	687b      	ldr	r3, [r7, #4]
 80093be:	f893 3036 	ldrb.w	r3, [r3, #54]	; 0x36
 80093c2:	2b90      	cmp	r3, #144	; 0x90
 80093c4:	d119      	bne.n	80093fa <check_fs+0x9a>
 80093c6:	687b      	ldr	r3, [r7, #4]
 80093c8:	3334      	adds	r3, #52	; 0x34
 80093ca:	3336      	adds	r3, #54	; 0x36
 80093cc:	4618      	mov	r0, r3
 80093ce:	f7fe fd9b 	bl	8007f08 <ld_dword>
 80093d2:	4603      	mov	r3, r0
 80093d4:	f023 437f 	bic.w	r3, r3, #4278190080	; 0xff000000
 80093d8:	4a0a      	ldr	r2, [pc, #40]	; (8009404 <check_fs+0xa4>)
 80093da:	4293      	cmp	r3, r2
 80093dc:	d101      	bne.n	80093e2 <check_fs+0x82>
 80093de:	2300      	movs	r3, #0
 80093e0:	e00c      	b.n	80093fc <check_fs+0x9c>
 80093e2:	687b      	ldr	r3, [r7, #4]
 80093e4:	3334      	adds	r3, #52	; 0x34
 80093e6:	3352      	adds	r3, #82	; 0x52
 80093e8:	4618      	mov	r0, r3
 80093ea:	f7fe fd8d 	bl	8007f08 <ld_dword>
 80093ee:	4602      	mov	r2, r0
 80093f0:	4b05      	ldr	r3, [pc, #20]	; (8009408 <check_fs+0xa8>)
 80093f2:	429a      	cmp	r2, r3
 80093f4:	d101      	bne.n	80093fa <check_fs+0x9a>
 80093f6:	2300      	movs	r3, #0
 80093f8:	e000      	b.n	80093fc <check_fs+0x9c>
 80093fa:	2302      	movs	r3, #2
 80093fc:	4618      	mov	r0, r3
 80093fe:	3708      	adds	r7, #8
 8009400:	46bd      	mov	sp, r7
 8009402:	bd80      	pop	{r7, pc}
 8009404:	00544146 	.word	0x00544146
 8009408:	33544146 	.word	0x33544146

0800940c <find_volume>:
 800940c:	b580      	push	{r7, lr}
 800940e:	b096      	sub	sp, #88	; 0x58
 8009410:	af00      	add	r7, sp, #0
 8009412:	60f8      	str	r0, [r7, #12]
 8009414:	60b9      	str	r1, [r7, #8]
 8009416:	4613      	mov	r3, r2
 8009418:	71fb      	strb	r3, [r7, #7]
 800941a:	68bb      	ldr	r3, [r7, #8]
 800941c:	2200      	movs	r2, #0
 800941e:	601a      	str	r2, [r3, #0]
 8009420:	68f8      	ldr	r0, [r7, #12]
 8009422:	f7ff ff59 	bl	80092d8 <get_ldnumber>
 8009426:	63f8      	str	r0, [r7, #60]	; 0x3c
 8009428:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800942a:	2b00      	cmp	r3, #0
 800942c:	da01      	bge.n	8009432 <find_volume+0x26>
 800942e:	230b      	movs	r3, #11
 8009430:	e265      	b.n	80098fe <find_volume+0x4f2>
 8009432:	4ab0      	ldr	r2, [pc, #704]	; (80096f4 <find_volume+0x2e8>)
 8009434:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8009436:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800943a:	63bb      	str	r3, [r7, #56]	; 0x38
 800943c:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800943e:	2b00      	cmp	r3, #0
 8009440:	d101      	bne.n	8009446 <find_volume+0x3a>
 8009442:	230c      	movs	r3, #12
 8009444:	e25b      	b.n	80098fe <find_volume+0x4f2>
 8009446:	68bb      	ldr	r3, [r7, #8]
 8009448:	6bba      	ldr	r2, [r7, #56]	; 0x38
 800944a:	601a      	str	r2, [r3, #0]
 800944c:	79fb      	ldrb	r3, [r7, #7]
 800944e:	f023 0301 	bic.w	r3, r3, #1
 8009452:	71fb      	strb	r3, [r7, #7]
 8009454:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009456:	781b      	ldrb	r3, [r3, #0]
 8009458:	2b00      	cmp	r3, #0
 800945a:	d01a      	beq.n	8009492 <find_volume+0x86>
 800945c:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800945e:	785b      	ldrb	r3, [r3, #1]
 8009460:	4618      	mov	r0, r3
 8009462:	f7fe fc9b 	bl	8007d9c <disk_status>
 8009466:	4603      	mov	r3, r0
 8009468:	f887 3037 	strb.w	r3, [r7, #55]	; 0x37
 800946c:	f897 3037 	ldrb.w	r3, [r7, #55]	; 0x37
 8009470:	f003 0301 	and.w	r3, r3, #1
 8009474:	2b00      	cmp	r3, #0
 8009476:	d10c      	bne.n	8009492 <find_volume+0x86>
 8009478:	79fb      	ldrb	r3, [r7, #7]
 800947a:	2b00      	cmp	r3, #0
 800947c:	d007      	beq.n	800948e <find_volume+0x82>
 800947e:	f897 3037 	ldrb.w	r3, [r7, #55]	; 0x37
 8009482:	f003 0304 	and.w	r3, r3, #4
 8009486:	2b00      	cmp	r3, #0
 8009488:	d001      	beq.n	800948e <find_volume+0x82>
 800948a:	230a      	movs	r3, #10
 800948c:	e237      	b.n	80098fe <find_volume+0x4f2>
 800948e:	2300      	movs	r3, #0
 8009490:	e235      	b.n	80098fe <find_volume+0x4f2>
 8009492:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009494:	2200      	movs	r2, #0
 8009496:	701a      	strb	r2, [r3, #0]
 8009498:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800949a:	b2da      	uxtb	r2, r3
 800949c:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800949e:	705a      	strb	r2, [r3, #1]
 80094a0:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80094a2:	785b      	ldrb	r3, [r3, #1]
 80094a4:	4618      	mov	r0, r3
 80094a6:	f7fe fc93 	bl	8007dd0 <disk_initialize>
 80094aa:	4603      	mov	r3, r0
 80094ac:	f887 3037 	strb.w	r3, [r7, #55]	; 0x37
 80094b0:	f897 3037 	ldrb.w	r3, [r7, #55]	; 0x37
 80094b4:	f003 0301 	and.w	r3, r3, #1
 80094b8:	2b00      	cmp	r3, #0
 80094ba:	d001      	beq.n	80094c0 <find_volume+0xb4>
 80094bc:	2303      	movs	r3, #3
 80094be:	e21e      	b.n	80098fe <find_volume+0x4f2>
 80094c0:	79fb      	ldrb	r3, [r7, #7]
 80094c2:	2b00      	cmp	r3, #0
 80094c4:	d007      	beq.n	80094d6 <find_volume+0xca>
 80094c6:	f897 3037 	ldrb.w	r3, [r7, #55]	; 0x37
 80094ca:	f003 0304 	and.w	r3, r3, #4
 80094ce:	2b00      	cmp	r3, #0
 80094d0:	d001      	beq.n	80094d6 <find_volume+0xca>
 80094d2:	230a      	movs	r3, #10
 80094d4:	e213      	b.n	80098fe <find_volume+0x4f2>
 80094d6:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80094d8:	7858      	ldrb	r0, [r3, #1]
 80094da:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80094dc:	330c      	adds	r3, #12
 80094de:	461a      	mov	r2, r3
 80094e0:	2102      	movs	r1, #2
 80094e2:	f7fe fcdb 	bl	8007e9c <disk_ioctl>
 80094e6:	4603      	mov	r3, r0
 80094e8:	2b00      	cmp	r3, #0
 80094ea:	d001      	beq.n	80094f0 <find_volume+0xe4>
 80094ec:	2301      	movs	r3, #1
 80094ee:	e206      	b.n	80098fe <find_volume+0x4f2>
 80094f0:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80094f2:	899b      	ldrh	r3, [r3, #12]
 80094f4:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80094f8:	d80d      	bhi.n	8009516 <find_volume+0x10a>
 80094fa:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80094fc:	899b      	ldrh	r3, [r3, #12]
 80094fe:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8009502:	d308      	bcc.n	8009516 <find_volume+0x10a>
 8009504:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009506:	899b      	ldrh	r3, [r3, #12]
 8009508:	461a      	mov	r2, r3
 800950a:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800950c:	899b      	ldrh	r3, [r3, #12]
 800950e:	3b01      	subs	r3, #1
 8009510:	4013      	ands	r3, r2
 8009512:	2b00      	cmp	r3, #0
 8009514:	d001      	beq.n	800951a <find_volume+0x10e>
 8009516:	2301      	movs	r3, #1
 8009518:	e1f1      	b.n	80098fe <find_volume+0x4f2>
 800951a:	2300      	movs	r3, #0
 800951c:	653b      	str	r3, [r7, #80]	; 0x50
 800951e:	6d39      	ldr	r1, [r7, #80]	; 0x50
 8009520:	6bb8      	ldr	r0, [r7, #56]	; 0x38
 8009522:	f7ff ff1d 	bl	8009360 <check_fs>
 8009526:	4603      	mov	r3, r0
 8009528:	f887 3057 	strb.w	r3, [r7, #87]	; 0x57
 800952c:	f897 3057 	ldrb.w	r3, [r7, #87]	; 0x57
 8009530:	2b02      	cmp	r3, #2
 8009532:	d14b      	bne.n	80095cc <find_volume+0x1c0>
 8009534:	2300      	movs	r3, #0
 8009536:	643b      	str	r3, [r7, #64]	; 0x40
 8009538:	e01f      	b.n	800957a <find_volume+0x16e>
 800953a:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800953c:	f103 0234 	add.w	r2, r3, #52	; 0x34
 8009540:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8009542:	011b      	lsls	r3, r3, #4
 8009544:	f503 73df 	add.w	r3, r3, #446	; 0x1be
 8009548:	4413      	add	r3, r2
 800954a:	633b      	str	r3, [r7, #48]	; 0x30
 800954c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800954e:	3304      	adds	r3, #4
 8009550:	781b      	ldrb	r3, [r3, #0]
 8009552:	2b00      	cmp	r3, #0
 8009554:	d006      	beq.n	8009564 <find_volume+0x158>
 8009556:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8009558:	3308      	adds	r3, #8
 800955a:	4618      	mov	r0, r3
 800955c:	f7fe fcd4 	bl	8007f08 <ld_dword>
 8009560:	4602      	mov	r2, r0
 8009562:	e000      	b.n	8009566 <find_volume+0x15a>
 8009564:	2200      	movs	r2, #0
 8009566:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8009568:	009b      	lsls	r3, r3, #2
 800956a:	f107 0158 	add.w	r1, r7, #88	; 0x58
 800956e:	440b      	add	r3, r1
 8009570:	f843 2c44 	str.w	r2, [r3, #-68]
 8009574:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8009576:	3301      	adds	r3, #1
 8009578:	643b      	str	r3, [r7, #64]	; 0x40
 800957a:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 800957c:	2b03      	cmp	r3, #3
 800957e:	d9dc      	bls.n	800953a <find_volume+0x12e>
 8009580:	2300      	movs	r3, #0
 8009582:	643b      	str	r3, [r7, #64]	; 0x40
 8009584:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8009586:	2b00      	cmp	r3, #0
 8009588:	d002      	beq.n	8009590 <find_volume+0x184>
 800958a:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 800958c:	3b01      	subs	r3, #1
 800958e:	643b      	str	r3, [r7, #64]	; 0x40
 8009590:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8009592:	009b      	lsls	r3, r3, #2
 8009594:	f107 0258 	add.w	r2, r7, #88	; 0x58
 8009598:	4413      	add	r3, r2
 800959a:	f853 3c44 	ldr.w	r3, [r3, #-68]
 800959e:	653b      	str	r3, [r7, #80]	; 0x50
 80095a0:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 80095a2:	2b00      	cmp	r3, #0
 80095a4:	d005      	beq.n	80095b2 <find_volume+0x1a6>
 80095a6:	6d39      	ldr	r1, [r7, #80]	; 0x50
 80095a8:	6bb8      	ldr	r0, [r7, #56]	; 0x38
 80095aa:	f7ff fed9 	bl	8009360 <check_fs>
 80095ae:	4603      	mov	r3, r0
 80095b0:	e000      	b.n	80095b4 <find_volume+0x1a8>
 80095b2:	2303      	movs	r3, #3
 80095b4:	f887 3057 	strb.w	r3, [r7, #87]	; 0x57
 80095b8:	f897 3057 	ldrb.w	r3, [r7, #87]	; 0x57
 80095bc:	2b01      	cmp	r3, #1
 80095be:	d905      	bls.n	80095cc <find_volume+0x1c0>
 80095c0:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 80095c2:	3301      	adds	r3, #1
 80095c4:	643b      	str	r3, [r7, #64]	; 0x40
 80095c6:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 80095c8:	2b03      	cmp	r3, #3
 80095ca:	d9e1      	bls.n	8009590 <find_volume+0x184>
 80095cc:	f897 3057 	ldrb.w	r3, [r7, #87]	; 0x57
 80095d0:	2b04      	cmp	r3, #4
 80095d2:	d101      	bne.n	80095d8 <find_volume+0x1cc>
 80095d4:	2301      	movs	r3, #1
 80095d6:	e192      	b.n	80098fe <find_volume+0x4f2>
 80095d8:	f897 3057 	ldrb.w	r3, [r7, #87]	; 0x57
 80095dc:	2b01      	cmp	r3, #1
 80095de:	d901      	bls.n	80095e4 <find_volume+0x1d8>
 80095e0:	230d      	movs	r3, #13
 80095e2:	e18c      	b.n	80098fe <find_volume+0x4f2>
 80095e4:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80095e6:	3334      	adds	r3, #52	; 0x34
 80095e8:	330b      	adds	r3, #11
 80095ea:	4618      	mov	r0, r3
 80095ec:	f7fe fc74 	bl	8007ed8 <ld_word>
 80095f0:	4603      	mov	r3, r0
 80095f2:	461a      	mov	r2, r3
 80095f4:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80095f6:	899b      	ldrh	r3, [r3, #12]
 80095f8:	429a      	cmp	r2, r3
 80095fa:	d001      	beq.n	8009600 <find_volume+0x1f4>
 80095fc:	230d      	movs	r3, #13
 80095fe:	e17e      	b.n	80098fe <find_volume+0x4f2>
 8009600:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009602:	3334      	adds	r3, #52	; 0x34
 8009604:	3316      	adds	r3, #22
 8009606:	4618      	mov	r0, r3
 8009608:	f7fe fc66 	bl	8007ed8 <ld_word>
 800960c:	4603      	mov	r3, r0
 800960e:	64fb      	str	r3, [r7, #76]	; 0x4c
 8009610:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8009612:	2b00      	cmp	r3, #0
 8009614:	d106      	bne.n	8009624 <find_volume+0x218>
 8009616:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009618:	3334      	adds	r3, #52	; 0x34
 800961a:	3324      	adds	r3, #36	; 0x24
 800961c:	4618      	mov	r0, r3
 800961e:	f7fe fc73 	bl	8007f08 <ld_dword>
 8009622:	64f8      	str	r0, [r7, #76]	; 0x4c
 8009624:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009626:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 8009628:	61da      	str	r2, [r3, #28]
 800962a:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800962c:	f893 2044 	ldrb.w	r2, [r3, #68]	; 0x44
 8009630:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009632:	709a      	strb	r2, [r3, #2]
 8009634:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009636:	789b      	ldrb	r3, [r3, #2]
 8009638:	2b01      	cmp	r3, #1
 800963a:	d005      	beq.n	8009648 <find_volume+0x23c>
 800963c:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800963e:	789b      	ldrb	r3, [r3, #2]
 8009640:	2b02      	cmp	r3, #2
 8009642:	d001      	beq.n	8009648 <find_volume+0x23c>
 8009644:	230d      	movs	r3, #13
 8009646:	e15a      	b.n	80098fe <find_volume+0x4f2>
 8009648:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800964a:	789b      	ldrb	r3, [r3, #2]
 800964c:	461a      	mov	r2, r3
 800964e:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8009650:	fb02 f303 	mul.w	r3, r2, r3
 8009654:	64fb      	str	r3, [r7, #76]	; 0x4c
 8009656:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009658:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 800965c:	b29a      	uxth	r2, r3
 800965e:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009660:	815a      	strh	r2, [r3, #10]
 8009662:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009664:	895b      	ldrh	r3, [r3, #10]
 8009666:	2b00      	cmp	r3, #0
 8009668:	d008      	beq.n	800967c <find_volume+0x270>
 800966a:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800966c:	895b      	ldrh	r3, [r3, #10]
 800966e:	461a      	mov	r2, r3
 8009670:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009672:	895b      	ldrh	r3, [r3, #10]
 8009674:	3b01      	subs	r3, #1
 8009676:	4013      	ands	r3, r2
 8009678:	2b00      	cmp	r3, #0
 800967a:	d001      	beq.n	8009680 <find_volume+0x274>
 800967c:	230d      	movs	r3, #13
 800967e:	e13e      	b.n	80098fe <find_volume+0x4f2>
 8009680:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009682:	3334      	adds	r3, #52	; 0x34
 8009684:	3311      	adds	r3, #17
 8009686:	4618      	mov	r0, r3
 8009688:	f7fe fc26 	bl	8007ed8 <ld_word>
 800968c:	4603      	mov	r3, r0
 800968e:	461a      	mov	r2, r3
 8009690:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009692:	811a      	strh	r2, [r3, #8]
 8009694:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009696:	891b      	ldrh	r3, [r3, #8]
 8009698:	6bba      	ldr	r2, [r7, #56]	; 0x38
 800969a:	8992      	ldrh	r2, [r2, #12]
 800969c:	0952      	lsrs	r2, r2, #5
 800969e:	b292      	uxth	r2, r2
 80096a0:	fbb3 f1f2 	udiv	r1, r3, r2
 80096a4:	fb02 f201 	mul.w	r2, r2, r1
 80096a8:	1a9b      	subs	r3, r3, r2
 80096aa:	b29b      	uxth	r3, r3
 80096ac:	2b00      	cmp	r3, #0
 80096ae:	d001      	beq.n	80096b4 <find_volume+0x2a8>
 80096b0:	230d      	movs	r3, #13
 80096b2:	e124      	b.n	80098fe <find_volume+0x4f2>
 80096b4:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80096b6:	3334      	adds	r3, #52	; 0x34
 80096b8:	3313      	adds	r3, #19
 80096ba:	4618      	mov	r0, r3
 80096bc:	f7fe fc0c 	bl	8007ed8 <ld_word>
 80096c0:	4603      	mov	r3, r0
 80096c2:	64bb      	str	r3, [r7, #72]	; 0x48
 80096c4:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 80096c6:	2b00      	cmp	r3, #0
 80096c8:	d106      	bne.n	80096d8 <find_volume+0x2cc>
 80096ca:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80096cc:	3334      	adds	r3, #52	; 0x34
 80096ce:	3320      	adds	r3, #32
 80096d0:	4618      	mov	r0, r3
 80096d2:	f7fe fc19 	bl	8007f08 <ld_dword>
 80096d6:	64b8      	str	r0, [r7, #72]	; 0x48
 80096d8:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80096da:	3334      	adds	r3, #52	; 0x34
 80096dc:	330e      	adds	r3, #14
 80096de:	4618      	mov	r0, r3
 80096e0:	f7fe fbfa 	bl	8007ed8 <ld_word>
 80096e4:	4603      	mov	r3, r0
 80096e6:	85fb      	strh	r3, [r7, #46]	; 0x2e
 80096e8:	8dfb      	ldrh	r3, [r7, #46]	; 0x2e
 80096ea:	2b00      	cmp	r3, #0
 80096ec:	d104      	bne.n	80096f8 <find_volume+0x2ec>
 80096ee:	230d      	movs	r3, #13
 80096f0:	e105      	b.n	80098fe <find_volume+0x4f2>
 80096f2:	bf00      	nop
 80096f4:	2000004c 	.word	0x2000004c
 80096f8:	8dfa      	ldrh	r2, [r7, #46]	; 0x2e
 80096fa:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 80096fc:	4413      	add	r3, r2
 80096fe:	6bba      	ldr	r2, [r7, #56]	; 0x38
 8009700:	8911      	ldrh	r1, [r2, #8]
 8009702:	6bba      	ldr	r2, [r7, #56]	; 0x38
 8009704:	8992      	ldrh	r2, [r2, #12]
 8009706:	0952      	lsrs	r2, r2, #5
 8009708:	b292      	uxth	r2, r2
 800970a:	fbb1 f2f2 	udiv	r2, r1, r2
 800970e:	b292      	uxth	r2, r2
 8009710:	4413      	add	r3, r2
 8009712:	62bb      	str	r3, [r7, #40]	; 0x28
 8009714:	6cba      	ldr	r2, [r7, #72]	; 0x48
 8009716:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8009718:	429a      	cmp	r2, r3
 800971a:	d201      	bcs.n	8009720 <find_volume+0x314>
 800971c:	230d      	movs	r3, #13
 800971e:	e0ee      	b.n	80098fe <find_volume+0x4f2>
 8009720:	6cba      	ldr	r2, [r7, #72]	; 0x48
 8009722:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8009724:	1ad3      	subs	r3, r2, r3
 8009726:	6bba      	ldr	r2, [r7, #56]	; 0x38
 8009728:	8952      	ldrh	r2, [r2, #10]
 800972a:	fbb3 f3f2 	udiv	r3, r3, r2
 800972e:	627b      	str	r3, [r7, #36]	; 0x24
 8009730:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8009732:	2b00      	cmp	r3, #0
 8009734:	d101      	bne.n	800973a <find_volume+0x32e>
 8009736:	230d      	movs	r3, #13
 8009738:	e0e1      	b.n	80098fe <find_volume+0x4f2>
 800973a:	2303      	movs	r3, #3
 800973c:	f887 3057 	strb.w	r3, [r7, #87]	; 0x57
 8009740:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8009742:	f64f 72f5 	movw	r2, #65525	; 0xfff5
 8009746:	4293      	cmp	r3, r2
 8009748:	d802      	bhi.n	8009750 <find_volume+0x344>
 800974a:	2302      	movs	r3, #2
 800974c:	f887 3057 	strb.w	r3, [r7, #87]	; 0x57
 8009750:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8009752:	f640 72f5 	movw	r2, #4085	; 0xff5
 8009756:	4293      	cmp	r3, r2
 8009758:	d802      	bhi.n	8009760 <find_volume+0x354>
 800975a:	2301      	movs	r3, #1
 800975c:	f887 3057 	strb.w	r3, [r7, #87]	; 0x57
 8009760:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8009762:	1c9a      	adds	r2, r3, #2
 8009764:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009766:	619a      	str	r2, [r3, #24]
 8009768:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800976a:	6d3a      	ldr	r2, [r7, #80]	; 0x50
 800976c:	621a      	str	r2, [r3, #32]
 800976e:	8dfa      	ldrh	r2, [r7, #46]	; 0x2e
 8009770:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8009772:	441a      	add	r2, r3
 8009774:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009776:	625a      	str	r2, [r3, #36]	; 0x24
 8009778:	6d3a      	ldr	r2, [r7, #80]	; 0x50
 800977a:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800977c:	441a      	add	r2, r3
 800977e:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009780:	62da      	str	r2, [r3, #44]	; 0x2c
 8009782:	f897 3057 	ldrb.w	r3, [r7, #87]	; 0x57
 8009786:	2b03      	cmp	r3, #3
 8009788:	d11e      	bne.n	80097c8 <find_volume+0x3bc>
 800978a:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800978c:	3334      	adds	r3, #52	; 0x34
 800978e:	332a      	adds	r3, #42	; 0x2a
 8009790:	4618      	mov	r0, r3
 8009792:	f7fe fba1 	bl	8007ed8 <ld_word>
 8009796:	4603      	mov	r3, r0
 8009798:	2b00      	cmp	r3, #0
 800979a:	d001      	beq.n	80097a0 <find_volume+0x394>
 800979c:	230d      	movs	r3, #13
 800979e:	e0ae      	b.n	80098fe <find_volume+0x4f2>
 80097a0:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80097a2:	891b      	ldrh	r3, [r3, #8]
 80097a4:	2b00      	cmp	r3, #0
 80097a6:	d001      	beq.n	80097ac <find_volume+0x3a0>
 80097a8:	230d      	movs	r3, #13
 80097aa:	e0a8      	b.n	80098fe <find_volume+0x4f2>
 80097ac:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80097ae:	3334      	adds	r3, #52	; 0x34
 80097b0:	332c      	adds	r3, #44	; 0x2c
 80097b2:	4618      	mov	r0, r3
 80097b4:	f7fe fba8 	bl	8007f08 <ld_dword>
 80097b8:	4602      	mov	r2, r0
 80097ba:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80097bc:	629a      	str	r2, [r3, #40]	; 0x28
 80097be:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80097c0:	699b      	ldr	r3, [r3, #24]
 80097c2:	009b      	lsls	r3, r3, #2
 80097c4:	647b      	str	r3, [r7, #68]	; 0x44
 80097c6:	e01f      	b.n	8009808 <find_volume+0x3fc>
 80097c8:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80097ca:	891b      	ldrh	r3, [r3, #8]
 80097cc:	2b00      	cmp	r3, #0
 80097ce:	d101      	bne.n	80097d4 <find_volume+0x3c8>
 80097d0:	230d      	movs	r3, #13
 80097d2:	e094      	b.n	80098fe <find_volume+0x4f2>
 80097d4:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80097d6:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 80097d8:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 80097da:	441a      	add	r2, r3
 80097dc:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80097de:	629a      	str	r2, [r3, #40]	; 0x28
 80097e0:	f897 3057 	ldrb.w	r3, [r7, #87]	; 0x57
 80097e4:	2b02      	cmp	r3, #2
 80097e6:	d103      	bne.n	80097f0 <find_volume+0x3e4>
 80097e8:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80097ea:	699b      	ldr	r3, [r3, #24]
 80097ec:	005b      	lsls	r3, r3, #1
 80097ee:	e00a      	b.n	8009806 <find_volume+0x3fa>
 80097f0:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80097f2:	699a      	ldr	r2, [r3, #24]
 80097f4:	4613      	mov	r3, r2
 80097f6:	005b      	lsls	r3, r3, #1
 80097f8:	4413      	add	r3, r2
 80097fa:	085a      	lsrs	r2, r3, #1
 80097fc:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80097fe:	699b      	ldr	r3, [r3, #24]
 8009800:	f003 0301 	and.w	r3, r3, #1
 8009804:	4413      	add	r3, r2
 8009806:	647b      	str	r3, [r7, #68]	; 0x44
 8009808:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800980a:	69da      	ldr	r2, [r3, #28]
 800980c:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800980e:	899b      	ldrh	r3, [r3, #12]
 8009810:	4619      	mov	r1, r3
 8009812:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8009814:	440b      	add	r3, r1
 8009816:	3b01      	subs	r3, #1
 8009818:	6bb9      	ldr	r1, [r7, #56]	; 0x38
 800981a:	8989      	ldrh	r1, [r1, #12]
 800981c:	fbb3 f3f1 	udiv	r3, r3, r1
 8009820:	429a      	cmp	r2, r3
 8009822:	d201      	bcs.n	8009828 <find_volume+0x41c>
 8009824:	230d      	movs	r3, #13
 8009826:	e06a      	b.n	80098fe <find_volume+0x4f2>
 8009828:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800982a:	f04f 32ff 	mov.w	r2, #4294967295
 800982e:	615a      	str	r2, [r3, #20]
 8009830:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009832:	695a      	ldr	r2, [r3, #20]
 8009834:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009836:	611a      	str	r2, [r3, #16]
 8009838:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800983a:	2280      	movs	r2, #128	; 0x80
 800983c:	711a      	strb	r2, [r3, #4]
 800983e:	f897 3057 	ldrb.w	r3, [r7, #87]	; 0x57
 8009842:	2b03      	cmp	r3, #3
 8009844:	d149      	bne.n	80098da <find_volume+0x4ce>
 8009846:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009848:	3334      	adds	r3, #52	; 0x34
 800984a:	3330      	adds	r3, #48	; 0x30
 800984c:	4618      	mov	r0, r3
 800984e:	f7fe fb43 	bl	8007ed8 <ld_word>
 8009852:	4603      	mov	r3, r0
 8009854:	2b01      	cmp	r3, #1
 8009856:	d140      	bne.n	80098da <find_volume+0x4ce>
 8009858:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 800985a:	3301      	adds	r3, #1
 800985c:	4619      	mov	r1, r3
 800985e:	6bb8      	ldr	r0, [r7, #56]	; 0x38
 8009860:	f7fe fdea 	bl	8008438 <move_window>
 8009864:	4603      	mov	r3, r0
 8009866:	2b00      	cmp	r3, #0
 8009868:	d137      	bne.n	80098da <find_volume+0x4ce>
 800986a:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800986c:	2200      	movs	r2, #0
 800986e:	711a      	strb	r2, [r3, #4]
 8009870:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009872:	3334      	adds	r3, #52	; 0x34
 8009874:	f503 73ff 	add.w	r3, r3, #510	; 0x1fe
 8009878:	4618      	mov	r0, r3
 800987a:	f7fe fb2d 	bl	8007ed8 <ld_word>
 800987e:	4603      	mov	r3, r0
 8009880:	461a      	mov	r2, r3
 8009882:	f64a 2355 	movw	r3, #43605	; 0xaa55
 8009886:	429a      	cmp	r2, r3
 8009888:	d127      	bne.n	80098da <find_volume+0x4ce>
 800988a:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800988c:	3334      	adds	r3, #52	; 0x34
 800988e:	4618      	mov	r0, r3
 8009890:	f7fe fb3a 	bl	8007f08 <ld_dword>
 8009894:	4602      	mov	r2, r0
 8009896:	4b1c      	ldr	r3, [pc, #112]	; (8009908 <find_volume+0x4fc>)
 8009898:	429a      	cmp	r2, r3
 800989a:	d11e      	bne.n	80098da <find_volume+0x4ce>
 800989c:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800989e:	3334      	adds	r3, #52	; 0x34
 80098a0:	f503 73f2 	add.w	r3, r3, #484	; 0x1e4
 80098a4:	4618      	mov	r0, r3
 80098a6:	f7fe fb2f 	bl	8007f08 <ld_dword>
 80098aa:	4602      	mov	r2, r0
 80098ac:	4b17      	ldr	r3, [pc, #92]	; (800990c <find_volume+0x500>)
 80098ae:	429a      	cmp	r2, r3
 80098b0:	d113      	bne.n	80098da <find_volume+0x4ce>
 80098b2:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80098b4:	3334      	adds	r3, #52	; 0x34
 80098b6:	f503 73f4 	add.w	r3, r3, #488	; 0x1e8
 80098ba:	4618      	mov	r0, r3
 80098bc:	f7fe fb24 	bl	8007f08 <ld_dword>
 80098c0:	4602      	mov	r2, r0
 80098c2:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80098c4:	615a      	str	r2, [r3, #20]
 80098c6:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80098c8:	3334      	adds	r3, #52	; 0x34
 80098ca:	f503 73f6 	add.w	r3, r3, #492	; 0x1ec
 80098ce:	4618      	mov	r0, r3
 80098d0:	f7fe fb1a 	bl	8007f08 <ld_dword>
 80098d4:	4602      	mov	r2, r0
 80098d6:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80098d8:	611a      	str	r2, [r3, #16]
 80098da:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80098dc:	f897 2057 	ldrb.w	r2, [r7, #87]	; 0x57
 80098e0:	701a      	strb	r2, [r3, #0]
 80098e2:	4b0b      	ldr	r3, [pc, #44]	; (8009910 <find_volume+0x504>)
 80098e4:	881b      	ldrh	r3, [r3, #0]
 80098e6:	3301      	adds	r3, #1
 80098e8:	b29a      	uxth	r2, r3
 80098ea:	4b09      	ldr	r3, [pc, #36]	; (8009910 <find_volume+0x504>)
 80098ec:	801a      	strh	r2, [r3, #0]
 80098ee:	4b08      	ldr	r3, [pc, #32]	; (8009910 <find_volume+0x504>)
 80098f0:	881a      	ldrh	r2, [r3, #0]
 80098f2:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80098f4:	80da      	strh	r2, [r3, #6]
 80098f6:	6bb8      	ldr	r0, [r7, #56]	; 0x38
 80098f8:	f7fe fd36 	bl	8008368 <clear_lock>
 80098fc:	2300      	movs	r3, #0
 80098fe:	4618      	mov	r0, r3
 8009900:	3758      	adds	r7, #88	; 0x58
 8009902:	46bd      	mov	sp, r7
 8009904:	bd80      	pop	{r7, pc}
 8009906:	bf00      	nop
 8009908:	41615252 	.word	0x41615252
 800990c:	61417272 	.word	0x61417272
 8009910:	20000050 	.word	0x20000050

08009914 <validate>:
 8009914:	b580      	push	{r7, lr}
 8009916:	b084      	sub	sp, #16
 8009918:	af00      	add	r7, sp, #0
 800991a:	6078      	str	r0, [r7, #4]
 800991c:	6039      	str	r1, [r7, #0]
 800991e:	2309      	movs	r3, #9
 8009920:	73fb      	strb	r3, [r7, #15]
 8009922:	687b      	ldr	r3, [r7, #4]
 8009924:	2b00      	cmp	r3, #0
 8009926:	d01c      	beq.n	8009962 <validate+0x4e>
 8009928:	687b      	ldr	r3, [r7, #4]
 800992a:	681b      	ldr	r3, [r3, #0]
 800992c:	2b00      	cmp	r3, #0
 800992e:	d018      	beq.n	8009962 <validate+0x4e>
 8009930:	687b      	ldr	r3, [r7, #4]
 8009932:	681b      	ldr	r3, [r3, #0]
 8009934:	781b      	ldrb	r3, [r3, #0]
 8009936:	2b00      	cmp	r3, #0
 8009938:	d013      	beq.n	8009962 <validate+0x4e>
 800993a:	687b      	ldr	r3, [r7, #4]
 800993c:	889a      	ldrh	r2, [r3, #4]
 800993e:	687b      	ldr	r3, [r7, #4]
 8009940:	681b      	ldr	r3, [r3, #0]
 8009942:	88db      	ldrh	r3, [r3, #6]
 8009944:	429a      	cmp	r2, r3
 8009946:	d10c      	bne.n	8009962 <validate+0x4e>
 8009948:	687b      	ldr	r3, [r7, #4]
 800994a:	681b      	ldr	r3, [r3, #0]
 800994c:	785b      	ldrb	r3, [r3, #1]
 800994e:	4618      	mov	r0, r3
 8009950:	f7fe fa24 	bl	8007d9c <disk_status>
 8009954:	4603      	mov	r3, r0
 8009956:	f003 0301 	and.w	r3, r3, #1
 800995a:	2b00      	cmp	r3, #0
 800995c:	d101      	bne.n	8009962 <validate+0x4e>
 800995e:	2300      	movs	r3, #0
 8009960:	73fb      	strb	r3, [r7, #15]
 8009962:	7bfb      	ldrb	r3, [r7, #15]
 8009964:	2b00      	cmp	r3, #0
 8009966:	d102      	bne.n	800996e <validate+0x5a>
 8009968:	687b      	ldr	r3, [r7, #4]
 800996a:	681b      	ldr	r3, [r3, #0]
 800996c:	e000      	b.n	8009970 <validate+0x5c>
 800996e:	2300      	movs	r3, #0
 8009970:	683a      	ldr	r2, [r7, #0]
 8009972:	6013      	str	r3, [r2, #0]
 8009974:	7bfb      	ldrb	r3, [r7, #15]
 8009976:	4618      	mov	r0, r3
 8009978:	3710      	adds	r7, #16
 800997a:	46bd      	mov	sp, r7
 800997c:	bd80      	pop	{r7, pc}
	...

08009980 <f_mount>:
 8009980:	b580      	push	{r7, lr}
 8009982:	b088      	sub	sp, #32
 8009984:	af00      	add	r7, sp, #0
 8009986:	60f8      	str	r0, [r7, #12]
 8009988:	60b9      	str	r1, [r7, #8]
 800998a:	4613      	mov	r3, r2
 800998c:	71fb      	strb	r3, [r7, #7]
 800998e:	68bb      	ldr	r3, [r7, #8]
 8009990:	613b      	str	r3, [r7, #16]
 8009992:	f107 0310 	add.w	r3, r7, #16
 8009996:	4618      	mov	r0, r3
 8009998:	f7ff fc9e 	bl	80092d8 <get_ldnumber>
 800999c:	61f8      	str	r0, [r7, #28]
 800999e:	69fb      	ldr	r3, [r7, #28]
 80099a0:	2b00      	cmp	r3, #0
 80099a2:	da01      	bge.n	80099a8 <f_mount+0x28>
 80099a4:	230b      	movs	r3, #11
 80099a6:	e02b      	b.n	8009a00 <f_mount+0x80>
 80099a8:	4a17      	ldr	r2, [pc, #92]	; (8009a08 <f_mount+0x88>)
 80099aa:	69fb      	ldr	r3, [r7, #28]
 80099ac:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80099b0:	61bb      	str	r3, [r7, #24]
 80099b2:	69bb      	ldr	r3, [r7, #24]
 80099b4:	2b00      	cmp	r3, #0
 80099b6:	d005      	beq.n	80099c4 <f_mount+0x44>
 80099b8:	69b8      	ldr	r0, [r7, #24]
 80099ba:	f7fe fcd5 	bl	8008368 <clear_lock>
 80099be:	69bb      	ldr	r3, [r7, #24]
 80099c0:	2200      	movs	r2, #0
 80099c2:	701a      	strb	r2, [r3, #0]
 80099c4:	68fb      	ldr	r3, [r7, #12]
 80099c6:	2b00      	cmp	r3, #0
 80099c8:	d002      	beq.n	80099d0 <f_mount+0x50>
 80099ca:	68fb      	ldr	r3, [r7, #12]
 80099cc:	2200      	movs	r2, #0
 80099ce:	701a      	strb	r2, [r3, #0]
 80099d0:	68fa      	ldr	r2, [r7, #12]
 80099d2:	490d      	ldr	r1, [pc, #52]	; (8009a08 <f_mount+0x88>)
 80099d4:	69fb      	ldr	r3, [r7, #28]
 80099d6:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 80099da:	68fb      	ldr	r3, [r7, #12]
 80099dc:	2b00      	cmp	r3, #0
 80099de:	d002      	beq.n	80099e6 <f_mount+0x66>
 80099e0:	79fb      	ldrb	r3, [r7, #7]
 80099e2:	2b01      	cmp	r3, #1
 80099e4:	d001      	beq.n	80099ea <f_mount+0x6a>
 80099e6:	2300      	movs	r3, #0
 80099e8:	e00a      	b.n	8009a00 <f_mount+0x80>
 80099ea:	f107 010c 	add.w	r1, r7, #12
 80099ee:	f107 0308 	add.w	r3, r7, #8
 80099f2:	2200      	movs	r2, #0
 80099f4:	4618      	mov	r0, r3
 80099f6:	f7ff fd09 	bl	800940c <find_volume>
 80099fa:	4603      	mov	r3, r0
 80099fc:	75fb      	strb	r3, [r7, #23]
 80099fe:	7dfb      	ldrb	r3, [r7, #23]
 8009a00:	4618      	mov	r0, r3
 8009a02:	3720      	adds	r7, #32
 8009a04:	46bd      	mov	sp, r7
 8009a06:	bd80      	pop	{r7, pc}
 8009a08:	2000004c 	.word	0x2000004c

08009a0c <f_open>:
 8009a0c:	b580      	push	{r7, lr}
 8009a0e:	b098      	sub	sp, #96	; 0x60
 8009a10:	af00      	add	r7, sp, #0
 8009a12:	60f8      	str	r0, [r7, #12]
 8009a14:	60b9      	str	r1, [r7, #8]
 8009a16:	4613      	mov	r3, r2
 8009a18:	71fb      	strb	r3, [r7, #7]
 8009a1a:	68fb      	ldr	r3, [r7, #12]
 8009a1c:	2b00      	cmp	r3, #0
 8009a1e:	d101      	bne.n	8009a24 <f_open+0x18>
 8009a20:	2309      	movs	r3, #9
 8009a22:	e1bb      	b.n	8009d9c <f_open+0x390>
 8009a24:	79fb      	ldrb	r3, [r7, #7]
 8009a26:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8009a2a:	71fb      	strb	r3, [r7, #7]
 8009a2c:	79fa      	ldrb	r2, [r7, #7]
 8009a2e:	f107 0110 	add.w	r1, r7, #16
 8009a32:	f107 0308 	add.w	r3, r7, #8
 8009a36:	4618      	mov	r0, r3
 8009a38:	f7ff fce8 	bl	800940c <find_volume>
 8009a3c:	4603      	mov	r3, r0
 8009a3e:	f887 305f 	strb.w	r3, [r7, #95]	; 0x5f
 8009a42:	f897 305f 	ldrb.w	r3, [r7, #95]	; 0x5f
 8009a46:	2b00      	cmp	r3, #0
 8009a48:	f040 819f 	bne.w	8009d8a <f_open+0x37e>
 8009a4c:	693b      	ldr	r3, [r7, #16]
 8009a4e:	617b      	str	r3, [r7, #20]
 8009a50:	68ba      	ldr	r2, [r7, #8]
 8009a52:	f107 0314 	add.w	r3, r7, #20
 8009a56:	4611      	mov	r1, r2
 8009a58:	4618      	mov	r0, r3
 8009a5a:	f7ff fbc7 	bl	80091ec <follow_path>
 8009a5e:	4603      	mov	r3, r0
 8009a60:	f887 305f 	strb.w	r3, [r7, #95]	; 0x5f
 8009a64:	f897 305f 	ldrb.w	r3, [r7, #95]	; 0x5f
 8009a68:	2b00      	cmp	r3, #0
 8009a6a:	d11a      	bne.n	8009aa2 <f_open+0x96>
 8009a6c:	f897 3043 	ldrb.w	r3, [r7, #67]	; 0x43
 8009a70:	b25b      	sxtb	r3, r3
 8009a72:	2b00      	cmp	r3, #0
 8009a74:	da03      	bge.n	8009a7e <f_open+0x72>
 8009a76:	2306      	movs	r3, #6
 8009a78:	f887 305f 	strb.w	r3, [r7, #95]	; 0x5f
 8009a7c:	e011      	b.n	8009aa2 <f_open+0x96>
 8009a7e:	79fb      	ldrb	r3, [r7, #7]
 8009a80:	f023 0301 	bic.w	r3, r3, #1
 8009a84:	2b00      	cmp	r3, #0
 8009a86:	bf14      	ite	ne
 8009a88:	2301      	movne	r3, #1
 8009a8a:	2300      	moveq	r3, #0
 8009a8c:	b2db      	uxtb	r3, r3
 8009a8e:	461a      	mov	r2, r3
 8009a90:	f107 0314 	add.w	r3, r7, #20
 8009a94:	4611      	mov	r1, r2
 8009a96:	4618      	mov	r0, r3
 8009a98:	f7fe fb1e 	bl	80080d8 <chk_lock>
 8009a9c:	4603      	mov	r3, r0
 8009a9e:	f887 305f 	strb.w	r3, [r7, #95]	; 0x5f
 8009aa2:	79fb      	ldrb	r3, [r7, #7]
 8009aa4:	f003 031c 	and.w	r3, r3, #28
 8009aa8:	2b00      	cmp	r3, #0
 8009aaa:	d07f      	beq.n	8009bac <f_open+0x1a0>
 8009aac:	f897 305f 	ldrb.w	r3, [r7, #95]	; 0x5f
 8009ab0:	2b00      	cmp	r3, #0
 8009ab2:	d017      	beq.n	8009ae4 <f_open+0xd8>
 8009ab4:	f897 305f 	ldrb.w	r3, [r7, #95]	; 0x5f
 8009ab8:	2b04      	cmp	r3, #4
 8009aba:	d10e      	bne.n	8009ada <f_open+0xce>
 8009abc:	f7fe fb68 	bl	8008190 <enq_lock>
 8009ac0:	4603      	mov	r3, r0
 8009ac2:	2b00      	cmp	r3, #0
 8009ac4:	d006      	beq.n	8009ad4 <f_open+0xc8>
 8009ac6:	f107 0314 	add.w	r3, r7, #20
 8009aca:	4618      	mov	r0, r3
 8009acc:	f7ff fac7 	bl	800905e <dir_register>
 8009ad0:	4603      	mov	r3, r0
 8009ad2:	e000      	b.n	8009ad6 <f_open+0xca>
 8009ad4:	2312      	movs	r3, #18
 8009ad6:	f887 305f 	strb.w	r3, [r7, #95]	; 0x5f
 8009ada:	79fb      	ldrb	r3, [r7, #7]
 8009adc:	f043 0308 	orr.w	r3, r3, #8
 8009ae0:	71fb      	strb	r3, [r7, #7]
 8009ae2:	e010      	b.n	8009b06 <f_open+0xfa>
 8009ae4:	7ebb      	ldrb	r3, [r7, #26]
 8009ae6:	f003 0311 	and.w	r3, r3, #17
 8009aea:	2b00      	cmp	r3, #0
 8009aec:	d003      	beq.n	8009af6 <f_open+0xea>
 8009aee:	2307      	movs	r3, #7
 8009af0:	f887 305f 	strb.w	r3, [r7, #95]	; 0x5f
 8009af4:	e007      	b.n	8009b06 <f_open+0xfa>
 8009af6:	79fb      	ldrb	r3, [r7, #7]
 8009af8:	f003 0304 	and.w	r3, r3, #4
 8009afc:	2b00      	cmp	r3, #0
 8009afe:	d002      	beq.n	8009b06 <f_open+0xfa>
 8009b00:	2308      	movs	r3, #8
 8009b02:	f887 305f 	strb.w	r3, [r7, #95]	; 0x5f
 8009b06:	f897 305f 	ldrb.w	r3, [r7, #95]	; 0x5f
 8009b0a:	2b00      	cmp	r3, #0
 8009b0c:	d168      	bne.n	8009be0 <f_open+0x1d4>
 8009b0e:	79fb      	ldrb	r3, [r7, #7]
 8009b10:	f003 0308 	and.w	r3, r3, #8
 8009b14:	2b00      	cmp	r3, #0
 8009b16:	d063      	beq.n	8009be0 <f_open+0x1d4>
 8009b18:	f7fc fde6 	bl	80066e8 <get_fattime>
 8009b1c:	6538      	str	r0, [r7, #80]	; 0x50
 8009b1e:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8009b20:	330e      	adds	r3, #14
 8009b22:	6d39      	ldr	r1, [r7, #80]	; 0x50
 8009b24:	4618      	mov	r0, r3
 8009b26:	f7fe fa2d 	bl	8007f84 <st_dword>
 8009b2a:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8009b2c:	3316      	adds	r3, #22
 8009b2e:	6d39      	ldr	r1, [r7, #80]	; 0x50
 8009b30:	4618      	mov	r0, r3
 8009b32:	f7fe fa27 	bl	8007f84 <st_dword>
 8009b36:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8009b38:	330b      	adds	r3, #11
 8009b3a:	2220      	movs	r2, #32
 8009b3c:	701a      	strb	r2, [r3, #0]
 8009b3e:	693b      	ldr	r3, [r7, #16]
 8009b40:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 8009b42:	4611      	mov	r1, r2
 8009b44:	4618      	mov	r0, r3
 8009b46:	f7ff f9f6 	bl	8008f36 <ld_clust>
 8009b4a:	64f8      	str	r0, [r7, #76]	; 0x4c
 8009b4c:	693b      	ldr	r3, [r7, #16]
 8009b4e:	6b79      	ldr	r1, [r7, #52]	; 0x34
 8009b50:	2200      	movs	r2, #0
 8009b52:	4618      	mov	r0, r3
 8009b54:	f7ff fa0e 	bl	8008f74 <st_clust>
 8009b58:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8009b5a:	331c      	adds	r3, #28
 8009b5c:	2100      	movs	r1, #0
 8009b5e:	4618      	mov	r0, r3
 8009b60:	f7fe fa10 	bl	8007f84 <st_dword>
 8009b64:	693b      	ldr	r3, [r7, #16]
 8009b66:	2201      	movs	r2, #1
 8009b68:	70da      	strb	r2, [r3, #3]
 8009b6a:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8009b6c:	2b00      	cmp	r3, #0
 8009b6e:	d037      	beq.n	8009be0 <f_open+0x1d4>
 8009b70:	693b      	ldr	r3, [r7, #16]
 8009b72:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8009b74:	653b      	str	r3, [r7, #80]	; 0x50
 8009b76:	f107 0314 	add.w	r3, r7, #20
 8009b7a:	2200      	movs	r2, #0
 8009b7c:	6cf9      	ldr	r1, [r7, #76]	; 0x4c
 8009b7e:	4618      	mov	r0, r3
 8009b80:	f7fe fefe 	bl	8008980 <remove_chain>
 8009b84:	4603      	mov	r3, r0
 8009b86:	f887 305f 	strb.w	r3, [r7, #95]	; 0x5f
 8009b8a:	f897 305f 	ldrb.w	r3, [r7, #95]	; 0x5f
 8009b8e:	2b00      	cmp	r3, #0
 8009b90:	d126      	bne.n	8009be0 <f_open+0x1d4>
 8009b92:	693b      	ldr	r3, [r7, #16]
 8009b94:	6d39      	ldr	r1, [r7, #80]	; 0x50
 8009b96:	4618      	mov	r0, r3
 8009b98:	f7fe fc4e 	bl	8008438 <move_window>
 8009b9c:	4603      	mov	r3, r0
 8009b9e:	f887 305f 	strb.w	r3, [r7, #95]	; 0x5f
 8009ba2:	693b      	ldr	r3, [r7, #16]
 8009ba4:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 8009ba6:	3a01      	subs	r2, #1
 8009ba8:	611a      	str	r2, [r3, #16]
 8009baa:	e019      	b.n	8009be0 <f_open+0x1d4>
 8009bac:	f897 305f 	ldrb.w	r3, [r7, #95]	; 0x5f
 8009bb0:	2b00      	cmp	r3, #0
 8009bb2:	d115      	bne.n	8009be0 <f_open+0x1d4>
 8009bb4:	7ebb      	ldrb	r3, [r7, #26]
 8009bb6:	f003 0310 	and.w	r3, r3, #16
 8009bba:	2b00      	cmp	r3, #0
 8009bbc:	d003      	beq.n	8009bc6 <f_open+0x1ba>
 8009bbe:	2304      	movs	r3, #4
 8009bc0:	f887 305f 	strb.w	r3, [r7, #95]	; 0x5f
 8009bc4:	e00c      	b.n	8009be0 <f_open+0x1d4>
 8009bc6:	79fb      	ldrb	r3, [r7, #7]
 8009bc8:	f003 0302 	and.w	r3, r3, #2
 8009bcc:	2b00      	cmp	r3, #0
 8009bce:	d007      	beq.n	8009be0 <f_open+0x1d4>
 8009bd0:	7ebb      	ldrb	r3, [r7, #26]
 8009bd2:	f003 0301 	and.w	r3, r3, #1
 8009bd6:	2b00      	cmp	r3, #0
 8009bd8:	d002      	beq.n	8009be0 <f_open+0x1d4>
 8009bda:	2307      	movs	r3, #7
 8009bdc:	f887 305f 	strb.w	r3, [r7, #95]	; 0x5f
 8009be0:	f897 305f 	ldrb.w	r3, [r7, #95]	; 0x5f
 8009be4:	2b00      	cmp	r3, #0
 8009be6:	d128      	bne.n	8009c3a <f_open+0x22e>
 8009be8:	79fb      	ldrb	r3, [r7, #7]
 8009bea:	f003 0308 	and.w	r3, r3, #8
 8009bee:	2b00      	cmp	r3, #0
 8009bf0:	d003      	beq.n	8009bfa <f_open+0x1ee>
 8009bf2:	79fb      	ldrb	r3, [r7, #7]
 8009bf4:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8009bf8:	71fb      	strb	r3, [r7, #7]
 8009bfa:	693b      	ldr	r3, [r7, #16]
 8009bfc:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8009bfe:	68fb      	ldr	r3, [r7, #12]
 8009c00:	625a      	str	r2, [r3, #36]	; 0x24
 8009c02:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 8009c04:	68fb      	ldr	r3, [r7, #12]
 8009c06:	629a      	str	r2, [r3, #40]	; 0x28
 8009c08:	79fb      	ldrb	r3, [r7, #7]
 8009c0a:	f023 0301 	bic.w	r3, r3, #1
 8009c0e:	2b00      	cmp	r3, #0
 8009c10:	bf14      	ite	ne
 8009c12:	2301      	movne	r3, #1
 8009c14:	2300      	moveq	r3, #0
 8009c16:	b2db      	uxtb	r3, r3
 8009c18:	461a      	mov	r2, r3
 8009c1a:	f107 0314 	add.w	r3, r7, #20
 8009c1e:	4611      	mov	r1, r2
 8009c20:	4618      	mov	r0, r3
 8009c22:	f7fe fad7 	bl	80081d4 <inc_lock>
 8009c26:	4602      	mov	r2, r0
 8009c28:	68fb      	ldr	r3, [r7, #12]
 8009c2a:	611a      	str	r2, [r3, #16]
 8009c2c:	68fb      	ldr	r3, [r7, #12]
 8009c2e:	691b      	ldr	r3, [r3, #16]
 8009c30:	2b00      	cmp	r3, #0
 8009c32:	d102      	bne.n	8009c3a <f_open+0x22e>
 8009c34:	2302      	movs	r3, #2
 8009c36:	f887 305f 	strb.w	r3, [r7, #95]	; 0x5f
 8009c3a:	f897 305f 	ldrb.w	r3, [r7, #95]	; 0x5f
 8009c3e:	2b00      	cmp	r3, #0
 8009c40:	f040 80a3 	bne.w	8009d8a <f_open+0x37e>
 8009c44:	693b      	ldr	r3, [r7, #16]
 8009c46:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 8009c48:	4611      	mov	r1, r2
 8009c4a:	4618      	mov	r0, r3
 8009c4c:	f7ff f973 	bl	8008f36 <ld_clust>
 8009c50:	4602      	mov	r2, r0
 8009c52:	68fb      	ldr	r3, [r7, #12]
 8009c54:	609a      	str	r2, [r3, #8]
 8009c56:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8009c58:	331c      	adds	r3, #28
 8009c5a:	4618      	mov	r0, r3
 8009c5c:	f7fe f954 	bl	8007f08 <ld_dword>
 8009c60:	4602      	mov	r2, r0
 8009c62:	68fb      	ldr	r3, [r7, #12]
 8009c64:	60da      	str	r2, [r3, #12]
 8009c66:	68fb      	ldr	r3, [r7, #12]
 8009c68:	2200      	movs	r2, #0
 8009c6a:	62da      	str	r2, [r3, #44]	; 0x2c
 8009c6c:	693a      	ldr	r2, [r7, #16]
 8009c6e:	68fb      	ldr	r3, [r7, #12]
 8009c70:	601a      	str	r2, [r3, #0]
 8009c72:	693b      	ldr	r3, [r7, #16]
 8009c74:	88da      	ldrh	r2, [r3, #6]
 8009c76:	68fb      	ldr	r3, [r7, #12]
 8009c78:	809a      	strh	r2, [r3, #4]
 8009c7a:	68fb      	ldr	r3, [r7, #12]
 8009c7c:	79fa      	ldrb	r2, [r7, #7]
 8009c7e:	751a      	strb	r2, [r3, #20]
 8009c80:	68fb      	ldr	r3, [r7, #12]
 8009c82:	2200      	movs	r2, #0
 8009c84:	755a      	strb	r2, [r3, #21]
 8009c86:	68fb      	ldr	r3, [r7, #12]
 8009c88:	2200      	movs	r2, #0
 8009c8a:	621a      	str	r2, [r3, #32]
 8009c8c:	68fb      	ldr	r3, [r7, #12]
 8009c8e:	2200      	movs	r2, #0
 8009c90:	619a      	str	r2, [r3, #24]
 8009c92:	68fb      	ldr	r3, [r7, #12]
 8009c94:	3330      	adds	r3, #48	; 0x30
 8009c96:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 8009c9a:	2100      	movs	r1, #0
 8009c9c:	4618      	mov	r0, r3
 8009c9e:	f7fe f9be 	bl	800801e <mem_set>
 8009ca2:	79fb      	ldrb	r3, [r7, #7]
 8009ca4:	f003 0320 	and.w	r3, r3, #32
 8009ca8:	2b00      	cmp	r3, #0
 8009caa:	d06e      	beq.n	8009d8a <f_open+0x37e>
 8009cac:	68fb      	ldr	r3, [r7, #12]
 8009cae:	68db      	ldr	r3, [r3, #12]
 8009cb0:	2b00      	cmp	r3, #0
 8009cb2:	d06a      	beq.n	8009d8a <f_open+0x37e>
 8009cb4:	68fb      	ldr	r3, [r7, #12]
 8009cb6:	68da      	ldr	r2, [r3, #12]
 8009cb8:	68fb      	ldr	r3, [r7, #12]
 8009cba:	619a      	str	r2, [r3, #24]
 8009cbc:	693b      	ldr	r3, [r7, #16]
 8009cbe:	895b      	ldrh	r3, [r3, #10]
 8009cc0:	461a      	mov	r2, r3
 8009cc2:	693b      	ldr	r3, [r7, #16]
 8009cc4:	899b      	ldrh	r3, [r3, #12]
 8009cc6:	fb03 f302 	mul.w	r3, r3, r2
 8009cca:	64bb      	str	r3, [r7, #72]	; 0x48
 8009ccc:	68fb      	ldr	r3, [r7, #12]
 8009cce:	689b      	ldr	r3, [r3, #8]
 8009cd0:	65bb      	str	r3, [r7, #88]	; 0x58
 8009cd2:	68fb      	ldr	r3, [r7, #12]
 8009cd4:	68db      	ldr	r3, [r3, #12]
 8009cd6:	657b      	str	r3, [r7, #84]	; 0x54
 8009cd8:	e016      	b.n	8009d08 <f_open+0x2fc>
 8009cda:	68fb      	ldr	r3, [r7, #12]
 8009cdc:	6db9      	ldr	r1, [r7, #88]	; 0x58
 8009cde:	4618      	mov	r0, r3
 8009ce0:	f7fe fc67 	bl	80085b2 <get_fat>
 8009ce4:	65b8      	str	r0, [r7, #88]	; 0x58
 8009ce6:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 8009ce8:	2b01      	cmp	r3, #1
 8009cea:	d802      	bhi.n	8009cf2 <f_open+0x2e6>
 8009cec:	2302      	movs	r3, #2
 8009cee:	f887 305f 	strb.w	r3, [r7, #95]	; 0x5f
 8009cf2:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 8009cf4:	f1b3 3fff 	cmp.w	r3, #4294967295
 8009cf8:	d102      	bne.n	8009d00 <f_open+0x2f4>
 8009cfa:	2301      	movs	r3, #1
 8009cfc:	f887 305f 	strb.w	r3, [r7, #95]	; 0x5f
 8009d00:	6d7a      	ldr	r2, [r7, #84]	; 0x54
 8009d02:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8009d04:	1ad3      	subs	r3, r2, r3
 8009d06:	657b      	str	r3, [r7, #84]	; 0x54
 8009d08:	f897 305f 	ldrb.w	r3, [r7, #95]	; 0x5f
 8009d0c:	2b00      	cmp	r3, #0
 8009d0e:	d103      	bne.n	8009d18 <f_open+0x30c>
 8009d10:	6d7a      	ldr	r2, [r7, #84]	; 0x54
 8009d12:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8009d14:	429a      	cmp	r2, r3
 8009d16:	d8e0      	bhi.n	8009cda <f_open+0x2ce>
 8009d18:	68fb      	ldr	r3, [r7, #12]
 8009d1a:	6dba      	ldr	r2, [r7, #88]	; 0x58
 8009d1c:	61da      	str	r2, [r3, #28]
 8009d1e:	f897 305f 	ldrb.w	r3, [r7, #95]	; 0x5f
 8009d22:	2b00      	cmp	r3, #0
 8009d24:	d131      	bne.n	8009d8a <f_open+0x37e>
 8009d26:	693b      	ldr	r3, [r7, #16]
 8009d28:	899b      	ldrh	r3, [r3, #12]
 8009d2a:	461a      	mov	r2, r3
 8009d2c:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8009d2e:	fbb3 f1f2 	udiv	r1, r3, r2
 8009d32:	fb02 f201 	mul.w	r2, r2, r1
 8009d36:	1a9b      	subs	r3, r3, r2
 8009d38:	2b00      	cmp	r3, #0
 8009d3a:	d026      	beq.n	8009d8a <f_open+0x37e>
 8009d3c:	693b      	ldr	r3, [r7, #16]
 8009d3e:	6db9      	ldr	r1, [r7, #88]	; 0x58
 8009d40:	4618      	mov	r0, r3
 8009d42:	f7fe fc17 	bl	8008574 <clust2sect>
 8009d46:	6478      	str	r0, [r7, #68]	; 0x44
 8009d48:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8009d4a:	2b00      	cmp	r3, #0
 8009d4c:	d103      	bne.n	8009d56 <f_open+0x34a>
 8009d4e:	2302      	movs	r3, #2
 8009d50:	f887 305f 	strb.w	r3, [r7, #95]	; 0x5f
 8009d54:	e019      	b.n	8009d8a <f_open+0x37e>
 8009d56:	693b      	ldr	r3, [r7, #16]
 8009d58:	899b      	ldrh	r3, [r3, #12]
 8009d5a:	461a      	mov	r2, r3
 8009d5c:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8009d5e:	fbb3 f2f2 	udiv	r2, r3, r2
 8009d62:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8009d64:	441a      	add	r2, r3
 8009d66:	68fb      	ldr	r3, [r7, #12]
 8009d68:	621a      	str	r2, [r3, #32]
 8009d6a:	693b      	ldr	r3, [r7, #16]
 8009d6c:	7858      	ldrb	r0, [r3, #1]
 8009d6e:	68fb      	ldr	r3, [r7, #12]
 8009d70:	f103 0130 	add.w	r1, r3, #48	; 0x30
 8009d74:	68fb      	ldr	r3, [r7, #12]
 8009d76:	6a1a      	ldr	r2, [r3, #32]
 8009d78:	2301      	movs	r3, #1
 8009d7a:	f7fe f84f 	bl	8007e1c <disk_read>
 8009d7e:	4603      	mov	r3, r0
 8009d80:	2b00      	cmp	r3, #0
 8009d82:	d002      	beq.n	8009d8a <f_open+0x37e>
 8009d84:	2301      	movs	r3, #1
 8009d86:	f887 305f 	strb.w	r3, [r7, #95]	; 0x5f
 8009d8a:	f897 305f 	ldrb.w	r3, [r7, #95]	; 0x5f
 8009d8e:	2b00      	cmp	r3, #0
 8009d90:	d002      	beq.n	8009d98 <f_open+0x38c>
 8009d92:	68fb      	ldr	r3, [r7, #12]
 8009d94:	2200      	movs	r2, #0
 8009d96:	601a      	str	r2, [r3, #0]
 8009d98:	f897 305f 	ldrb.w	r3, [r7, #95]	; 0x5f
 8009d9c:	4618      	mov	r0, r3
 8009d9e:	3760      	adds	r7, #96	; 0x60
 8009da0:	46bd      	mov	sp, r7
 8009da2:	bd80      	pop	{r7, pc}

08009da4 <f_write>:
 8009da4:	b580      	push	{r7, lr}
 8009da6:	b08c      	sub	sp, #48	; 0x30
 8009da8:	af00      	add	r7, sp, #0
 8009daa:	60f8      	str	r0, [r7, #12]
 8009dac:	60b9      	str	r1, [r7, #8]
 8009dae:	607a      	str	r2, [r7, #4]
 8009db0:	603b      	str	r3, [r7, #0]
 8009db2:	68bb      	ldr	r3, [r7, #8]
 8009db4:	61fb      	str	r3, [r7, #28]
 8009db6:	683b      	ldr	r3, [r7, #0]
 8009db8:	2200      	movs	r2, #0
 8009dba:	601a      	str	r2, [r3, #0]
 8009dbc:	68fb      	ldr	r3, [r7, #12]
 8009dbe:	f107 0210 	add.w	r2, r7, #16
 8009dc2:	4611      	mov	r1, r2
 8009dc4:	4618      	mov	r0, r3
 8009dc6:	f7ff fda5 	bl	8009914 <validate>
 8009dca:	4603      	mov	r3, r0
 8009dcc:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
 8009dd0:	f897 302f 	ldrb.w	r3, [r7, #47]	; 0x2f
 8009dd4:	2b00      	cmp	r3, #0
 8009dd6:	d107      	bne.n	8009de8 <f_write+0x44>
 8009dd8:	68fb      	ldr	r3, [r7, #12]
 8009dda:	7d5b      	ldrb	r3, [r3, #21]
 8009ddc:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
 8009de0:	f897 302f 	ldrb.w	r3, [r7, #47]	; 0x2f
 8009de4:	2b00      	cmp	r3, #0
 8009de6:	d002      	beq.n	8009dee <f_write+0x4a>
 8009de8:	f897 302f 	ldrb.w	r3, [r7, #47]	; 0x2f
 8009dec:	e16a      	b.n	800a0c4 <f_write+0x320>
 8009dee:	68fb      	ldr	r3, [r7, #12]
 8009df0:	7d1b      	ldrb	r3, [r3, #20]
 8009df2:	f003 0302 	and.w	r3, r3, #2
 8009df6:	2b00      	cmp	r3, #0
 8009df8:	d101      	bne.n	8009dfe <f_write+0x5a>
 8009dfa:	2307      	movs	r3, #7
 8009dfc:	e162      	b.n	800a0c4 <f_write+0x320>
 8009dfe:	68fb      	ldr	r3, [r7, #12]
 8009e00:	699a      	ldr	r2, [r3, #24]
 8009e02:	687b      	ldr	r3, [r7, #4]
 8009e04:	441a      	add	r2, r3
 8009e06:	68fb      	ldr	r3, [r7, #12]
 8009e08:	699b      	ldr	r3, [r3, #24]
 8009e0a:	429a      	cmp	r2, r3
 8009e0c:	f080 814c 	bcs.w	800a0a8 <f_write+0x304>
 8009e10:	68fb      	ldr	r3, [r7, #12]
 8009e12:	699b      	ldr	r3, [r3, #24]
 8009e14:	43db      	mvns	r3, r3
 8009e16:	607b      	str	r3, [r7, #4]
 8009e18:	e146      	b.n	800a0a8 <f_write+0x304>
 8009e1a:	68fb      	ldr	r3, [r7, #12]
 8009e1c:	699b      	ldr	r3, [r3, #24]
 8009e1e:	693a      	ldr	r2, [r7, #16]
 8009e20:	8992      	ldrh	r2, [r2, #12]
 8009e22:	fbb3 f1f2 	udiv	r1, r3, r2
 8009e26:	fb02 f201 	mul.w	r2, r2, r1
 8009e2a:	1a9b      	subs	r3, r3, r2
 8009e2c:	2b00      	cmp	r3, #0
 8009e2e:	f040 80f1 	bne.w	800a014 <f_write+0x270>
 8009e32:	68fb      	ldr	r3, [r7, #12]
 8009e34:	699b      	ldr	r3, [r3, #24]
 8009e36:	693a      	ldr	r2, [r7, #16]
 8009e38:	8992      	ldrh	r2, [r2, #12]
 8009e3a:	fbb3 f3f2 	udiv	r3, r3, r2
 8009e3e:	693a      	ldr	r2, [r7, #16]
 8009e40:	8952      	ldrh	r2, [r2, #10]
 8009e42:	3a01      	subs	r2, #1
 8009e44:	4013      	ands	r3, r2
 8009e46:	61bb      	str	r3, [r7, #24]
 8009e48:	69bb      	ldr	r3, [r7, #24]
 8009e4a:	2b00      	cmp	r3, #0
 8009e4c:	d143      	bne.n	8009ed6 <f_write+0x132>
 8009e4e:	68fb      	ldr	r3, [r7, #12]
 8009e50:	699b      	ldr	r3, [r3, #24]
 8009e52:	2b00      	cmp	r3, #0
 8009e54:	d10c      	bne.n	8009e70 <f_write+0xcc>
 8009e56:	68fb      	ldr	r3, [r7, #12]
 8009e58:	689b      	ldr	r3, [r3, #8]
 8009e5a:	62bb      	str	r3, [r7, #40]	; 0x28
 8009e5c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8009e5e:	2b00      	cmp	r3, #0
 8009e60:	d11a      	bne.n	8009e98 <f_write+0xf4>
 8009e62:	68fb      	ldr	r3, [r7, #12]
 8009e64:	2100      	movs	r1, #0
 8009e66:	4618      	mov	r0, r3
 8009e68:	f7fe fdef 	bl	8008a4a <create_chain>
 8009e6c:	62b8      	str	r0, [r7, #40]	; 0x28
 8009e6e:	e013      	b.n	8009e98 <f_write+0xf4>
 8009e70:	68fb      	ldr	r3, [r7, #12]
 8009e72:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009e74:	2b00      	cmp	r3, #0
 8009e76:	d007      	beq.n	8009e88 <f_write+0xe4>
 8009e78:	68fb      	ldr	r3, [r7, #12]
 8009e7a:	699b      	ldr	r3, [r3, #24]
 8009e7c:	4619      	mov	r1, r3
 8009e7e:	68f8      	ldr	r0, [r7, #12]
 8009e80:	f7fe fe7b 	bl	8008b7a <clmt_clust>
 8009e84:	62b8      	str	r0, [r7, #40]	; 0x28
 8009e86:	e007      	b.n	8009e98 <f_write+0xf4>
 8009e88:	68fa      	ldr	r2, [r7, #12]
 8009e8a:	68fb      	ldr	r3, [r7, #12]
 8009e8c:	69db      	ldr	r3, [r3, #28]
 8009e8e:	4619      	mov	r1, r3
 8009e90:	4610      	mov	r0, r2
 8009e92:	f7fe fdda 	bl	8008a4a <create_chain>
 8009e96:	62b8      	str	r0, [r7, #40]	; 0x28
 8009e98:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8009e9a:	2b00      	cmp	r3, #0
 8009e9c:	f000 8109 	beq.w	800a0b2 <f_write+0x30e>
 8009ea0:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8009ea2:	2b01      	cmp	r3, #1
 8009ea4:	d104      	bne.n	8009eb0 <f_write+0x10c>
 8009ea6:	68fb      	ldr	r3, [r7, #12]
 8009ea8:	2202      	movs	r2, #2
 8009eaa:	755a      	strb	r2, [r3, #21]
 8009eac:	2302      	movs	r3, #2
 8009eae:	e109      	b.n	800a0c4 <f_write+0x320>
 8009eb0:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8009eb2:	f1b3 3fff 	cmp.w	r3, #4294967295
 8009eb6:	d104      	bne.n	8009ec2 <f_write+0x11e>
 8009eb8:	68fb      	ldr	r3, [r7, #12]
 8009eba:	2201      	movs	r2, #1
 8009ebc:	755a      	strb	r2, [r3, #21]
 8009ebe:	2301      	movs	r3, #1
 8009ec0:	e100      	b.n	800a0c4 <f_write+0x320>
 8009ec2:	68fb      	ldr	r3, [r7, #12]
 8009ec4:	6aba      	ldr	r2, [r7, #40]	; 0x28
 8009ec6:	61da      	str	r2, [r3, #28]
 8009ec8:	68fb      	ldr	r3, [r7, #12]
 8009eca:	689b      	ldr	r3, [r3, #8]
 8009ecc:	2b00      	cmp	r3, #0
 8009ece:	d102      	bne.n	8009ed6 <f_write+0x132>
 8009ed0:	68fb      	ldr	r3, [r7, #12]
 8009ed2:	6aba      	ldr	r2, [r7, #40]	; 0x28
 8009ed4:	609a      	str	r2, [r3, #8]
 8009ed6:	68fb      	ldr	r3, [r7, #12]
 8009ed8:	7d1b      	ldrb	r3, [r3, #20]
 8009eda:	b25b      	sxtb	r3, r3
 8009edc:	2b00      	cmp	r3, #0
 8009ede:	da18      	bge.n	8009f12 <f_write+0x16e>
 8009ee0:	693b      	ldr	r3, [r7, #16]
 8009ee2:	7858      	ldrb	r0, [r3, #1]
 8009ee4:	68fb      	ldr	r3, [r7, #12]
 8009ee6:	f103 0130 	add.w	r1, r3, #48	; 0x30
 8009eea:	68fb      	ldr	r3, [r7, #12]
 8009eec:	6a1a      	ldr	r2, [r3, #32]
 8009eee:	2301      	movs	r3, #1
 8009ef0:	f7fd ffb4 	bl	8007e5c <disk_write>
 8009ef4:	4603      	mov	r3, r0
 8009ef6:	2b00      	cmp	r3, #0
 8009ef8:	d004      	beq.n	8009f04 <f_write+0x160>
 8009efa:	68fb      	ldr	r3, [r7, #12]
 8009efc:	2201      	movs	r2, #1
 8009efe:	755a      	strb	r2, [r3, #21]
 8009f00:	2301      	movs	r3, #1
 8009f02:	e0df      	b.n	800a0c4 <f_write+0x320>
 8009f04:	68fb      	ldr	r3, [r7, #12]
 8009f06:	7d1b      	ldrb	r3, [r3, #20]
 8009f08:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8009f0c:	b2da      	uxtb	r2, r3
 8009f0e:	68fb      	ldr	r3, [r7, #12]
 8009f10:	751a      	strb	r2, [r3, #20]
 8009f12:	693a      	ldr	r2, [r7, #16]
 8009f14:	68fb      	ldr	r3, [r7, #12]
 8009f16:	69db      	ldr	r3, [r3, #28]
 8009f18:	4619      	mov	r1, r3
 8009f1a:	4610      	mov	r0, r2
 8009f1c:	f7fe fb2a 	bl	8008574 <clust2sect>
 8009f20:	6178      	str	r0, [r7, #20]
 8009f22:	697b      	ldr	r3, [r7, #20]
 8009f24:	2b00      	cmp	r3, #0
 8009f26:	d104      	bne.n	8009f32 <f_write+0x18e>
 8009f28:	68fb      	ldr	r3, [r7, #12]
 8009f2a:	2202      	movs	r2, #2
 8009f2c:	755a      	strb	r2, [r3, #21]
 8009f2e:	2302      	movs	r3, #2
 8009f30:	e0c8      	b.n	800a0c4 <f_write+0x320>
 8009f32:	697a      	ldr	r2, [r7, #20]
 8009f34:	69bb      	ldr	r3, [r7, #24]
 8009f36:	4413      	add	r3, r2
 8009f38:	617b      	str	r3, [r7, #20]
 8009f3a:	693b      	ldr	r3, [r7, #16]
 8009f3c:	899b      	ldrh	r3, [r3, #12]
 8009f3e:	461a      	mov	r2, r3
 8009f40:	687b      	ldr	r3, [r7, #4]
 8009f42:	fbb3 f3f2 	udiv	r3, r3, r2
 8009f46:	623b      	str	r3, [r7, #32]
 8009f48:	6a3b      	ldr	r3, [r7, #32]
 8009f4a:	2b00      	cmp	r3, #0
 8009f4c:	d043      	beq.n	8009fd6 <f_write+0x232>
 8009f4e:	69ba      	ldr	r2, [r7, #24]
 8009f50:	6a3b      	ldr	r3, [r7, #32]
 8009f52:	4413      	add	r3, r2
 8009f54:	693a      	ldr	r2, [r7, #16]
 8009f56:	8952      	ldrh	r2, [r2, #10]
 8009f58:	4293      	cmp	r3, r2
 8009f5a:	d905      	bls.n	8009f68 <f_write+0x1c4>
 8009f5c:	693b      	ldr	r3, [r7, #16]
 8009f5e:	895b      	ldrh	r3, [r3, #10]
 8009f60:	461a      	mov	r2, r3
 8009f62:	69bb      	ldr	r3, [r7, #24]
 8009f64:	1ad3      	subs	r3, r2, r3
 8009f66:	623b      	str	r3, [r7, #32]
 8009f68:	693b      	ldr	r3, [r7, #16]
 8009f6a:	7858      	ldrb	r0, [r3, #1]
 8009f6c:	6a3b      	ldr	r3, [r7, #32]
 8009f6e:	697a      	ldr	r2, [r7, #20]
 8009f70:	69f9      	ldr	r1, [r7, #28]
 8009f72:	f7fd ff73 	bl	8007e5c <disk_write>
 8009f76:	4603      	mov	r3, r0
 8009f78:	2b00      	cmp	r3, #0
 8009f7a:	d004      	beq.n	8009f86 <f_write+0x1e2>
 8009f7c:	68fb      	ldr	r3, [r7, #12]
 8009f7e:	2201      	movs	r2, #1
 8009f80:	755a      	strb	r2, [r3, #21]
 8009f82:	2301      	movs	r3, #1
 8009f84:	e09e      	b.n	800a0c4 <f_write+0x320>
 8009f86:	68fb      	ldr	r3, [r7, #12]
 8009f88:	6a1a      	ldr	r2, [r3, #32]
 8009f8a:	697b      	ldr	r3, [r7, #20]
 8009f8c:	1ad3      	subs	r3, r2, r3
 8009f8e:	6a3a      	ldr	r2, [r7, #32]
 8009f90:	429a      	cmp	r2, r3
 8009f92:	d918      	bls.n	8009fc6 <f_write+0x222>
 8009f94:	68fb      	ldr	r3, [r7, #12]
 8009f96:	f103 0030 	add.w	r0, r3, #48	; 0x30
 8009f9a:	68fb      	ldr	r3, [r7, #12]
 8009f9c:	6a1a      	ldr	r2, [r3, #32]
 8009f9e:	697b      	ldr	r3, [r7, #20]
 8009fa0:	1ad3      	subs	r3, r2, r3
 8009fa2:	693a      	ldr	r2, [r7, #16]
 8009fa4:	8992      	ldrh	r2, [r2, #12]
 8009fa6:	fb02 f303 	mul.w	r3, r2, r3
 8009faa:	69fa      	ldr	r2, [r7, #28]
 8009fac:	18d1      	adds	r1, r2, r3
 8009fae:	693b      	ldr	r3, [r7, #16]
 8009fb0:	899b      	ldrh	r3, [r3, #12]
 8009fb2:	461a      	mov	r2, r3
 8009fb4:	f7fe f812 	bl	8007fdc <mem_cpy>
 8009fb8:	68fb      	ldr	r3, [r7, #12]
 8009fba:	7d1b      	ldrb	r3, [r3, #20]
 8009fbc:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8009fc0:	b2da      	uxtb	r2, r3
 8009fc2:	68fb      	ldr	r3, [r7, #12]
 8009fc4:	751a      	strb	r2, [r3, #20]
 8009fc6:	693b      	ldr	r3, [r7, #16]
 8009fc8:	899b      	ldrh	r3, [r3, #12]
 8009fca:	461a      	mov	r2, r3
 8009fcc:	6a3b      	ldr	r3, [r7, #32]
 8009fce:	fb02 f303 	mul.w	r3, r2, r3
 8009fd2:	627b      	str	r3, [r7, #36]	; 0x24
 8009fd4:	e04b      	b.n	800a06e <f_write+0x2ca>
 8009fd6:	68fb      	ldr	r3, [r7, #12]
 8009fd8:	6a1b      	ldr	r3, [r3, #32]
 8009fda:	697a      	ldr	r2, [r7, #20]
 8009fdc:	429a      	cmp	r2, r3
 8009fde:	d016      	beq.n	800a00e <f_write+0x26a>
 8009fe0:	68fb      	ldr	r3, [r7, #12]
 8009fe2:	699a      	ldr	r2, [r3, #24]
 8009fe4:	68fb      	ldr	r3, [r7, #12]
 8009fe6:	68db      	ldr	r3, [r3, #12]
 8009fe8:	429a      	cmp	r2, r3
 8009fea:	d210      	bcs.n	800a00e <f_write+0x26a>
 8009fec:	693b      	ldr	r3, [r7, #16]
 8009fee:	7858      	ldrb	r0, [r3, #1]
 8009ff0:	68fb      	ldr	r3, [r7, #12]
 8009ff2:	f103 0130 	add.w	r1, r3, #48	; 0x30
 8009ff6:	2301      	movs	r3, #1
 8009ff8:	697a      	ldr	r2, [r7, #20]
 8009ffa:	f7fd ff0f 	bl	8007e1c <disk_read>
 8009ffe:	4603      	mov	r3, r0
 800a000:	2b00      	cmp	r3, #0
 800a002:	d004      	beq.n	800a00e <f_write+0x26a>
 800a004:	68fb      	ldr	r3, [r7, #12]
 800a006:	2201      	movs	r2, #1
 800a008:	755a      	strb	r2, [r3, #21]
 800a00a:	2301      	movs	r3, #1
 800a00c:	e05a      	b.n	800a0c4 <f_write+0x320>
 800a00e:	68fb      	ldr	r3, [r7, #12]
 800a010:	697a      	ldr	r2, [r7, #20]
 800a012:	621a      	str	r2, [r3, #32]
 800a014:	693b      	ldr	r3, [r7, #16]
 800a016:	899b      	ldrh	r3, [r3, #12]
 800a018:	4618      	mov	r0, r3
 800a01a:	68fb      	ldr	r3, [r7, #12]
 800a01c:	699b      	ldr	r3, [r3, #24]
 800a01e:	693a      	ldr	r2, [r7, #16]
 800a020:	8992      	ldrh	r2, [r2, #12]
 800a022:	fbb3 f1f2 	udiv	r1, r3, r2
 800a026:	fb02 f201 	mul.w	r2, r2, r1
 800a02a:	1a9b      	subs	r3, r3, r2
 800a02c:	1ac3      	subs	r3, r0, r3
 800a02e:	627b      	str	r3, [r7, #36]	; 0x24
 800a030:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 800a032:	687b      	ldr	r3, [r7, #4]
 800a034:	429a      	cmp	r2, r3
 800a036:	d901      	bls.n	800a03c <f_write+0x298>
 800a038:	687b      	ldr	r3, [r7, #4]
 800a03a:	627b      	str	r3, [r7, #36]	; 0x24
 800a03c:	68fb      	ldr	r3, [r7, #12]
 800a03e:	f103 0130 	add.w	r1, r3, #48	; 0x30
 800a042:	68fb      	ldr	r3, [r7, #12]
 800a044:	699b      	ldr	r3, [r3, #24]
 800a046:	693a      	ldr	r2, [r7, #16]
 800a048:	8992      	ldrh	r2, [r2, #12]
 800a04a:	fbb3 f0f2 	udiv	r0, r3, r2
 800a04e:	fb02 f200 	mul.w	r2, r2, r0
 800a052:	1a9b      	subs	r3, r3, r2
 800a054:	440b      	add	r3, r1
 800a056:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 800a058:	69f9      	ldr	r1, [r7, #28]
 800a05a:	4618      	mov	r0, r3
 800a05c:	f7fd ffbe 	bl	8007fdc <mem_cpy>
 800a060:	68fb      	ldr	r3, [r7, #12]
 800a062:	7d1b      	ldrb	r3, [r3, #20]
 800a064:	f063 037f 	orn	r3, r3, #127	; 0x7f
 800a068:	b2da      	uxtb	r2, r3
 800a06a:	68fb      	ldr	r3, [r7, #12]
 800a06c:	751a      	strb	r2, [r3, #20]
 800a06e:	69fa      	ldr	r2, [r7, #28]
 800a070:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800a072:	4413      	add	r3, r2
 800a074:	61fb      	str	r3, [r7, #28]
 800a076:	68fb      	ldr	r3, [r7, #12]
 800a078:	699a      	ldr	r2, [r3, #24]
 800a07a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800a07c:	441a      	add	r2, r3
 800a07e:	68fb      	ldr	r3, [r7, #12]
 800a080:	619a      	str	r2, [r3, #24]
 800a082:	68fb      	ldr	r3, [r7, #12]
 800a084:	68da      	ldr	r2, [r3, #12]
 800a086:	68fb      	ldr	r3, [r7, #12]
 800a088:	699b      	ldr	r3, [r3, #24]
 800a08a:	429a      	cmp	r2, r3
 800a08c:	bf38      	it	cc
 800a08e:	461a      	movcc	r2, r3
 800a090:	68fb      	ldr	r3, [r7, #12]
 800a092:	60da      	str	r2, [r3, #12]
 800a094:	683b      	ldr	r3, [r7, #0]
 800a096:	681a      	ldr	r2, [r3, #0]
 800a098:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800a09a:	441a      	add	r2, r3
 800a09c:	683b      	ldr	r3, [r7, #0]
 800a09e:	601a      	str	r2, [r3, #0]
 800a0a0:	687a      	ldr	r2, [r7, #4]
 800a0a2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800a0a4:	1ad3      	subs	r3, r2, r3
 800a0a6:	607b      	str	r3, [r7, #4]
 800a0a8:	687b      	ldr	r3, [r7, #4]
 800a0aa:	2b00      	cmp	r3, #0
 800a0ac:	f47f aeb5 	bne.w	8009e1a <f_write+0x76>
 800a0b0:	e000      	b.n	800a0b4 <f_write+0x310>
 800a0b2:	bf00      	nop
 800a0b4:	68fb      	ldr	r3, [r7, #12]
 800a0b6:	7d1b      	ldrb	r3, [r3, #20]
 800a0b8:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800a0bc:	b2da      	uxtb	r2, r3
 800a0be:	68fb      	ldr	r3, [r7, #12]
 800a0c0:	751a      	strb	r2, [r3, #20]
 800a0c2:	2300      	movs	r3, #0
 800a0c4:	4618      	mov	r0, r3
 800a0c6:	3730      	adds	r7, #48	; 0x30
 800a0c8:	46bd      	mov	sp, r7
 800a0ca:	bd80      	pop	{r7, pc}

0800a0cc <f_sync>:
 800a0cc:	b580      	push	{r7, lr}
 800a0ce:	b086      	sub	sp, #24
 800a0d0:	af00      	add	r7, sp, #0
 800a0d2:	6078      	str	r0, [r7, #4]
 800a0d4:	687b      	ldr	r3, [r7, #4]
 800a0d6:	f107 0208 	add.w	r2, r7, #8
 800a0da:	4611      	mov	r1, r2
 800a0dc:	4618      	mov	r0, r3
 800a0de:	f7ff fc19 	bl	8009914 <validate>
 800a0e2:	4603      	mov	r3, r0
 800a0e4:	75fb      	strb	r3, [r7, #23]
 800a0e6:	7dfb      	ldrb	r3, [r7, #23]
 800a0e8:	2b00      	cmp	r3, #0
 800a0ea:	d168      	bne.n	800a1be <f_sync+0xf2>
 800a0ec:	687b      	ldr	r3, [r7, #4]
 800a0ee:	7d1b      	ldrb	r3, [r3, #20]
 800a0f0:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800a0f4:	2b00      	cmp	r3, #0
 800a0f6:	d062      	beq.n	800a1be <f_sync+0xf2>
 800a0f8:	687b      	ldr	r3, [r7, #4]
 800a0fa:	7d1b      	ldrb	r3, [r3, #20]
 800a0fc:	b25b      	sxtb	r3, r3
 800a0fe:	2b00      	cmp	r3, #0
 800a100:	da15      	bge.n	800a12e <f_sync+0x62>
 800a102:	68bb      	ldr	r3, [r7, #8]
 800a104:	7858      	ldrb	r0, [r3, #1]
 800a106:	687b      	ldr	r3, [r7, #4]
 800a108:	f103 0130 	add.w	r1, r3, #48	; 0x30
 800a10c:	687b      	ldr	r3, [r7, #4]
 800a10e:	6a1a      	ldr	r2, [r3, #32]
 800a110:	2301      	movs	r3, #1
 800a112:	f7fd fea3 	bl	8007e5c <disk_write>
 800a116:	4603      	mov	r3, r0
 800a118:	2b00      	cmp	r3, #0
 800a11a:	d001      	beq.n	800a120 <f_sync+0x54>
 800a11c:	2301      	movs	r3, #1
 800a11e:	e04f      	b.n	800a1c0 <f_sync+0xf4>
 800a120:	687b      	ldr	r3, [r7, #4]
 800a122:	7d1b      	ldrb	r3, [r3, #20]
 800a124:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 800a128:	b2da      	uxtb	r2, r3
 800a12a:	687b      	ldr	r3, [r7, #4]
 800a12c:	751a      	strb	r2, [r3, #20]
 800a12e:	f7fc fadb 	bl	80066e8 <get_fattime>
 800a132:	6138      	str	r0, [r7, #16]
 800a134:	68ba      	ldr	r2, [r7, #8]
 800a136:	687b      	ldr	r3, [r7, #4]
 800a138:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a13a:	4619      	mov	r1, r3
 800a13c:	4610      	mov	r0, r2
 800a13e:	f7fe f97b 	bl	8008438 <move_window>
 800a142:	4603      	mov	r3, r0
 800a144:	75fb      	strb	r3, [r7, #23]
 800a146:	7dfb      	ldrb	r3, [r7, #23]
 800a148:	2b00      	cmp	r3, #0
 800a14a:	d138      	bne.n	800a1be <f_sync+0xf2>
 800a14c:	687b      	ldr	r3, [r7, #4]
 800a14e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800a150:	60fb      	str	r3, [r7, #12]
 800a152:	68fb      	ldr	r3, [r7, #12]
 800a154:	330b      	adds	r3, #11
 800a156:	781a      	ldrb	r2, [r3, #0]
 800a158:	68fb      	ldr	r3, [r7, #12]
 800a15a:	330b      	adds	r3, #11
 800a15c:	f042 0220 	orr.w	r2, r2, #32
 800a160:	b2d2      	uxtb	r2, r2
 800a162:	701a      	strb	r2, [r3, #0]
 800a164:	687b      	ldr	r3, [r7, #4]
 800a166:	6818      	ldr	r0, [r3, #0]
 800a168:	687b      	ldr	r3, [r7, #4]
 800a16a:	689b      	ldr	r3, [r3, #8]
 800a16c:	461a      	mov	r2, r3
 800a16e:	68f9      	ldr	r1, [r7, #12]
 800a170:	f7fe ff00 	bl	8008f74 <st_clust>
 800a174:	68fb      	ldr	r3, [r7, #12]
 800a176:	f103 021c 	add.w	r2, r3, #28
 800a17a:	687b      	ldr	r3, [r7, #4]
 800a17c:	68db      	ldr	r3, [r3, #12]
 800a17e:	4619      	mov	r1, r3
 800a180:	4610      	mov	r0, r2
 800a182:	f7fd feff 	bl	8007f84 <st_dword>
 800a186:	68fb      	ldr	r3, [r7, #12]
 800a188:	3316      	adds	r3, #22
 800a18a:	6939      	ldr	r1, [r7, #16]
 800a18c:	4618      	mov	r0, r3
 800a18e:	f7fd fef9 	bl	8007f84 <st_dword>
 800a192:	68fb      	ldr	r3, [r7, #12]
 800a194:	3312      	adds	r3, #18
 800a196:	2100      	movs	r1, #0
 800a198:	4618      	mov	r0, r3
 800a19a:	f7fd fed8 	bl	8007f4e <st_word>
 800a19e:	68bb      	ldr	r3, [r7, #8]
 800a1a0:	2201      	movs	r2, #1
 800a1a2:	70da      	strb	r2, [r3, #3]
 800a1a4:	68bb      	ldr	r3, [r7, #8]
 800a1a6:	4618      	mov	r0, r3
 800a1a8:	f7fe f974 	bl	8008494 <sync_fs>
 800a1ac:	4603      	mov	r3, r0
 800a1ae:	75fb      	strb	r3, [r7, #23]
 800a1b0:	687b      	ldr	r3, [r7, #4]
 800a1b2:	7d1b      	ldrb	r3, [r3, #20]
 800a1b4:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800a1b8:	b2da      	uxtb	r2, r3
 800a1ba:	687b      	ldr	r3, [r7, #4]
 800a1bc:	751a      	strb	r2, [r3, #20]
 800a1be:	7dfb      	ldrb	r3, [r7, #23]
 800a1c0:	4618      	mov	r0, r3
 800a1c2:	3718      	adds	r7, #24
 800a1c4:	46bd      	mov	sp, r7
 800a1c6:	bd80      	pop	{r7, pc}

0800a1c8 <f_close>:
 800a1c8:	b580      	push	{r7, lr}
 800a1ca:	b084      	sub	sp, #16
 800a1cc:	af00      	add	r7, sp, #0
 800a1ce:	6078      	str	r0, [r7, #4]
 800a1d0:	6878      	ldr	r0, [r7, #4]
 800a1d2:	f7ff ff7b 	bl	800a0cc <f_sync>
 800a1d6:	4603      	mov	r3, r0
 800a1d8:	73fb      	strb	r3, [r7, #15]
 800a1da:	7bfb      	ldrb	r3, [r7, #15]
 800a1dc:	2b00      	cmp	r3, #0
 800a1de:	d118      	bne.n	800a212 <f_close+0x4a>
 800a1e0:	687b      	ldr	r3, [r7, #4]
 800a1e2:	f107 0208 	add.w	r2, r7, #8
 800a1e6:	4611      	mov	r1, r2
 800a1e8:	4618      	mov	r0, r3
 800a1ea:	f7ff fb93 	bl	8009914 <validate>
 800a1ee:	4603      	mov	r3, r0
 800a1f0:	73fb      	strb	r3, [r7, #15]
 800a1f2:	7bfb      	ldrb	r3, [r7, #15]
 800a1f4:	2b00      	cmp	r3, #0
 800a1f6:	d10c      	bne.n	800a212 <f_close+0x4a>
 800a1f8:	687b      	ldr	r3, [r7, #4]
 800a1fa:	691b      	ldr	r3, [r3, #16]
 800a1fc:	4618      	mov	r0, r3
 800a1fe:	f7fe f877 	bl	80082f0 <dec_lock>
 800a202:	4603      	mov	r3, r0
 800a204:	73fb      	strb	r3, [r7, #15]
 800a206:	7bfb      	ldrb	r3, [r7, #15]
 800a208:	2b00      	cmp	r3, #0
 800a20a:	d102      	bne.n	800a212 <f_close+0x4a>
 800a20c:	687b      	ldr	r3, [r7, #4]
 800a20e:	2200      	movs	r2, #0
 800a210:	601a      	str	r2, [r3, #0]
 800a212:	7bfb      	ldrb	r3, [r7, #15]
 800a214:	4618      	mov	r0, r3
 800a216:	3710      	adds	r7, #16
 800a218:	46bd      	mov	sp, r7
 800a21a:	bd80      	pop	{r7, pc}

0800a21c <f_mkfs>:
 800a21c:	b590      	push	{r4, r7, lr}
 800a21e:	b09d      	sub	sp, #116	; 0x74
 800a220:	af00      	add	r7, sp, #0
 800a222:	60f8      	str	r0, [r7, #12]
 800a224:	607a      	str	r2, [r7, #4]
 800a226:	603b      	str	r3, [r7, #0]
 800a228:	460b      	mov	r3, r1
 800a22a:	72fb      	strb	r3, [r7, #11]
 800a22c:	2301      	movs	r3, #1
 800a22e:	647b      	str	r3, [r7, #68]	; 0x44
 800a230:	f44f 7300 	mov.w	r3, #512	; 0x200
 800a234:	643b      	str	r3, [r7, #64]	; 0x40
 800a236:	f107 030c 	add.w	r3, r7, #12
 800a23a:	4618      	mov	r0, r3
 800a23c:	f7ff f84c 	bl	80092d8 <get_ldnumber>
 800a240:	63f8      	str	r0, [r7, #60]	; 0x3c
 800a242:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800a244:	2b00      	cmp	r3, #0
 800a246:	da02      	bge.n	800a24e <f_mkfs+0x32>
 800a248:	230b      	movs	r3, #11
 800a24a:	f000 bc31 	b.w	800aab0 <f_mkfs+0x894>
 800a24e:	4aa5      	ldr	r2, [pc, #660]	; (800a4e4 <f_mkfs+0x2c8>)
 800a250:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800a252:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800a256:	2b00      	cmp	r3, #0
 800a258:	d005      	beq.n	800a266 <f_mkfs+0x4a>
 800a25a:	4aa2      	ldr	r2, [pc, #648]	; (800a4e4 <f_mkfs+0x2c8>)
 800a25c:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800a25e:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800a262:	2200      	movs	r2, #0
 800a264:	701a      	strb	r2, [r3, #0]
 800a266:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800a268:	f887 303b 	strb.w	r3, [r7, #59]	; 0x3b
 800a26c:	2300      	movs	r3, #0
 800a26e:	f887 303a 	strb.w	r3, [r7, #58]	; 0x3a
 800a272:	f897 303b 	ldrb.w	r3, [r7, #59]	; 0x3b
 800a276:	4618      	mov	r0, r3
 800a278:	f7fd fdaa 	bl	8007dd0 <disk_initialize>
 800a27c:	4603      	mov	r3, r0
 800a27e:	f887 3039 	strb.w	r3, [r7, #57]	; 0x39
 800a282:	f897 3039 	ldrb.w	r3, [r7, #57]	; 0x39
 800a286:	f003 0301 	and.w	r3, r3, #1
 800a28a:	2b00      	cmp	r3, #0
 800a28c:	d002      	beq.n	800a294 <f_mkfs+0x78>
 800a28e:	2303      	movs	r3, #3
 800a290:	f000 bc0e 	b.w	800aab0 <f_mkfs+0x894>
 800a294:	f897 3039 	ldrb.w	r3, [r7, #57]	; 0x39
 800a298:	f003 0304 	and.w	r3, r3, #4
 800a29c:	2b00      	cmp	r3, #0
 800a29e:	d002      	beq.n	800a2a6 <f_mkfs+0x8a>
 800a2a0:	230a      	movs	r3, #10
 800a2a2:	f000 bc05 	b.w	800aab0 <f_mkfs+0x894>
 800a2a6:	f107 0214 	add.w	r2, r7, #20
 800a2aa:	f897 303b 	ldrb.w	r3, [r7, #59]	; 0x3b
 800a2ae:	2103      	movs	r1, #3
 800a2b0:	4618      	mov	r0, r3
 800a2b2:	f7fd fdf3 	bl	8007e9c <disk_ioctl>
 800a2b6:	4603      	mov	r3, r0
 800a2b8:	2b00      	cmp	r3, #0
 800a2ba:	d10c      	bne.n	800a2d6 <f_mkfs+0xba>
 800a2bc:	697b      	ldr	r3, [r7, #20]
 800a2be:	2b00      	cmp	r3, #0
 800a2c0:	d009      	beq.n	800a2d6 <f_mkfs+0xba>
 800a2c2:	697b      	ldr	r3, [r7, #20]
 800a2c4:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 800a2c8:	d805      	bhi.n	800a2d6 <f_mkfs+0xba>
 800a2ca:	697b      	ldr	r3, [r7, #20]
 800a2cc:	1e5a      	subs	r2, r3, #1
 800a2ce:	697b      	ldr	r3, [r7, #20]
 800a2d0:	4013      	ands	r3, r2
 800a2d2:	2b00      	cmp	r3, #0
 800a2d4:	d001      	beq.n	800a2da <f_mkfs+0xbe>
 800a2d6:	2301      	movs	r3, #1
 800a2d8:	617b      	str	r3, [r7, #20]
 800a2da:	f107 021a 	add.w	r2, r7, #26
 800a2de:	f897 303b 	ldrb.w	r3, [r7, #59]	; 0x3b
 800a2e2:	2102      	movs	r1, #2
 800a2e4:	4618      	mov	r0, r3
 800a2e6:	f7fd fdd9 	bl	8007e9c <disk_ioctl>
 800a2ea:	4603      	mov	r3, r0
 800a2ec:	2b00      	cmp	r3, #0
 800a2ee:	d001      	beq.n	800a2f4 <f_mkfs+0xd8>
 800a2f0:	2301      	movs	r3, #1
 800a2f2:	e3dd      	b.n	800aab0 <f_mkfs+0x894>
 800a2f4:	8b7b      	ldrh	r3, [r7, #26]
 800a2f6:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800a2fa:	d80a      	bhi.n	800a312 <f_mkfs+0xf6>
 800a2fc:	8b7b      	ldrh	r3, [r7, #26]
 800a2fe:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800a302:	d306      	bcc.n	800a312 <f_mkfs+0xf6>
 800a304:	8b7b      	ldrh	r3, [r7, #26]
 800a306:	461a      	mov	r2, r3
 800a308:	8b7b      	ldrh	r3, [r7, #26]
 800a30a:	3b01      	subs	r3, #1
 800a30c:	4013      	ands	r3, r2
 800a30e:	2b00      	cmp	r3, #0
 800a310:	d001      	beq.n	800a316 <f_mkfs+0xfa>
 800a312:	2301      	movs	r3, #1
 800a314:	e3cc      	b.n	800aab0 <f_mkfs+0x894>
 800a316:	687b      	ldr	r3, [r7, #4]
 800a318:	2b00      	cmp	r3, #0
 800a31a:	d004      	beq.n	800a326 <f_mkfs+0x10a>
 800a31c:	8b7b      	ldrh	r3, [r7, #26]
 800a31e:	461a      	mov	r2, r3
 800a320:	687b      	ldr	r3, [r7, #4]
 800a322:	4293      	cmp	r3, r2
 800a324:	d309      	bcc.n	800a33a <f_mkfs+0x11e>
 800a326:	687b      	ldr	r3, [r7, #4]
 800a328:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 800a32c:	d805      	bhi.n	800a33a <f_mkfs+0x11e>
 800a32e:	687b      	ldr	r3, [r7, #4]
 800a330:	1e5a      	subs	r2, r3, #1
 800a332:	687b      	ldr	r3, [r7, #4]
 800a334:	4013      	ands	r3, r2
 800a336:	2b00      	cmp	r3, #0
 800a338:	d001      	beq.n	800a33e <f_mkfs+0x122>
 800a33a:	2313      	movs	r3, #19
 800a33c:	e3b8      	b.n	800aab0 <f_mkfs+0x894>
 800a33e:	8b7b      	ldrh	r3, [r7, #26]
 800a340:	461a      	mov	r2, r3
 800a342:	687b      	ldr	r3, [r7, #4]
 800a344:	fbb3 f3f2 	udiv	r3, r3, r2
 800a348:	607b      	str	r3, [r7, #4]
 800a34a:	683b      	ldr	r3, [r7, #0]
 800a34c:	637b      	str	r3, [r7, #52]	; 0x34
 800a34e:	8b7b      	ldrh	r3, [r7, #26]
 800a350:	461a      	mov	r2, r3
 800a352:	f8d7 3080 	ldr.w	r3, [r7, #128]	; 0x80
 800a356:	fbb3 f3f2 	udiv	r3, r3, r2
 800a35a:	633b      	str	r3, [r7, #48]	; 0x30
 800a35c:	8b7b      	ldrh	r3, [r7, #26]
 800a35e:	461a      	mov	r2, r3
 800a360:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800a362:	fb02 f303 	mul.w	r3, r2, r3
 800a366:	62fb      	str	r3, [r7, #44]	; 0x2c
 800a368:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800a36a:	2b00      	cmp	r3, #0
 800a36c:	d101      	bne.n	800a372 <f_mkfs+0x156>
 800a36e:	230e      	movs	r3, #14
 800a370:	e39e      	b.n	800aab0 <f_mkfs+0x894>
 800a372:	f107 0210 	add.w	r2, r7, #16
 800a376:	f897 303b 	ldrb.w	r3, [r7, #59]	; 0x3b
 800a37a:	2101      	movs	r1, #1
 800a37c:	4618      	mov	r0, r3
 800a37e:	f7fd fd8d 	bl	8007e9c <disk_ioctl>
 800a382:	4603      	mov	r3, r0
 800a384:	2b00      	cmp	r3, #0
 800a386:	d001      	beq.n	800a38c <f_mkfs+0x170>
 800a388:	2301      	movs	r3, #1
 800a38a:	e391      	b.n	800aab0 <f_mkfs+0x894>
 800a38c:	7afb      	ldrb	r3, [r7, #11]
 800a38e:	f003 0308 	and.w	r3, r3, #8
 800a392:	2b00      	cmp	r3, #0
 800a394:	d001      	beq.n	800a39a <f_mkfs+0x17e>
 800a396:	2300      	movs	r3, #0
 800a398:	e000      	b.n	800a39c <f_mkfs+0x180>
 800a39a:	233f      	movs	r3, #63	; 0x3f
 800a39c:	62bb      	str	r3, [r7, #40]	; 0x28
 800a39e:	693b      	ldr	r3, [r7, #16]
 800a3a0:	6aba      	ldr	r2, [r7, #40]	; 0x28
 800a3a2:	429a      	cmp	r2, r3
 800a3a4:	d901      	bls.n	800a3aa <f_mkfs+0x18e>
 800a3a6:	230e      	movs	r3, #14
 800a3a8:	e382      	b.n	800aab0 <f_mkfs+0x894>
 800a3aa:	693a      	ldr	r2, [r7, #16]
 800a3ac:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800a3ae:	1ad3      	subs	r3, r2, r3
 800a3b0:	613b      	str	r3, [r7, #16]
 800a3b2:	693b      	ldr	r3, [r7, #16]
 800a3b4:	2b7f      	cmp	r3, #127	; 0x7f
 800a3b6:	d801      	bhi.n	800a3bc <f_mkfs+0x1a0>
 800a3b8:	230e      	movs	r3, #14
 800a3ba:	e379      	b.n	800aab0 <f_mkfs+0x894>
 800a3bc:	687b      	ldr	r3, [r7, #4]
 800a3be:	2b80      	cmp	r3, #128	; 0x80
 800a3c0:	d901      	bls.n	800a3c6 <f_mkfs+0x1aa>
 800a3c2:	2313      	movs	r3, #19
 800a3c4:	e374      	b.n	800aab0 <f_mkfs+0x894>
 800a3c6:	7afb      	ldrb	r3, [r7, #11]
 800a3c8:	f003 0302 	and.w	r3, r3, #2
 800a3cc:	2b00      	cmp	r3, #0
 800a3ce:	d00d      	beq.n	800a3ec <f_mkfs+0x1d0>
 800a3d0:	7afb      	ldrb	r3, [r7, #11]
 800a3d2:	f003 0307 	and.w	r3, r3, #7
 800a3d6:	2b02      	cmp	r3, #2
 800a3d8:	d004      	beq.n	800a3e4 <f_mkfs+0x1c8>
 800a3da:	7afb      	ldrb	r3, [r7, #11]
 800a3dc:	f003 0301 	and.w	r3, r3, #1
 800a3e0:	2b00      	cmp	r3, #0
 800a3e2:	d103      	bne.n	800a3ec <f_mkfs+0x1d0>
 800a3e4:	2303      	movs	r3, #3
 800a3e6:	f887 304f 	strb.w	r3, [r7, #79]	; 0x4f
 800a3ea:	e009      	b.n	800a400 <f_mkfs+0x1e4>
 800a3ec:	7afb      	ldrb	r3, [r7, #11]
 800a3ee:	f003 0301 	and.w	r3, r3, #1
 800a3f2:	2b00      	cmp	r3, #0
 800a3f4:	d101      	bne.n	800a3fa <f_mkfs+0x1de>
 800a3f6:	2313      	movs	r3, #19
 800a3f8:	e35a      	b.n	800aab0 <f_mkfs+0x894>
 800a3fa:	2302      	movs	r3, #2
 800a3fc:	f887 304f 	strb.w	r3, [r7, #79]	; 0x4f
 800a400:	687b      	ldr	r3, [r7, #4]
 800a402:	66fb      	str	r3, [r7, #108]	; 0x6c
 800a404:	f897 304f 	ldrb.w	r3, [r7, #79]	; 0x4f
 800a408:	2b03      	cmp	r3, #3
 800a40a:	d13c      	bne.n	800a486 <f_mkfs+0x26a>
 800a40c:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800a40e:	2b00      	cmp	r3, #0
 800a410:	d11b      	bne.n	800a44a <f_mkfs+0x22e>
 800a412:	693b      	ldr	r3, [r7, #16]
 800a414:	0c5b      	lsrs	r3, r3, #17
 800a416:	663b      	str	r3, [r7, #96]	; 0x60
 800a418:	2300      	movs	r3, #0
 800a41a:	64bb      	str	r3, [r7, #72]	; 0x48
 800a41c:	2301      	movs	r3, #1
 800a41e:	66fb      	str	r3, [r7, #108]	; 0x6c
 800a420:	e005      	b.n	800a42e <f_mkfs+0x212>
 800a422:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 800a424:	3301      	adds	r3, #1
 800a426:	64bb      	str	r3, [r7, #72]	; 0x48
 800a428:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800a42a:	005b      	lsls	r3, r3, #1
 800a42c:	66fb      	str	r3, [r7, #108]	; 0x6c
 800a42e:	4a2e      	ldr	r2, [pc, #184]	; (800a4e8 <f_mkfs+0x2cc>)
 800a430:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 800a432:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 800a436:	2b00      	cmp	r3, #0
 800a438:	d007      	beq.n	800a44a <f_mkfs+0x22e>
 800a43a:	4a2b      	ldr	r2, [pc, #172]	; (800a4e8 <f_mkfs+0x2cc>)
 800a43c:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 800a43e:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 800a442:	461a      	mov	r2, r3
 800a444:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 800a446:	4293      	cmp	r3, r2
 800a448:	d2eb      	bcs.n	800a422 <f_mkfs+0x206>
 800a44a:	693a      	ldr	r2, [r7, #16]
 800a44c:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800a44e:	fbb2 f3f3 	udiv	r3, r2, r3
 800a452:	627b      	str	r3, [r7, #36]	; 0x24
 800a454:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800a456:	3302      	adds	r3, #2
 800a458:	009b      	lsls	r3, r3, #2
 800a45a:	8b7a      	ldrh	r2, [r7, #26]
 800a45c:	4413      	add	r3, r2
 800a45e:	3b01      	subs	r3, #1
 800a460:	8b7a      	ldrh	r2, [r7, #26]
 800a462:	fbb3 f3f2 	udiv	r3, r3, r2
 800a466:	657b      	str	r3, [r7, #84]	; 0x54
 800a468:	2320      	movs	r3, #32
 800a46a:	65bb      	str	r3, [r7, #88]	; 0x58
 800a46c:	2300      	movs	r3, #0
 800a46e:	653b      	str	r3, [r7, #80]	; 0x50
 800a470:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800a472:	f64f 72f5 	movw	r2, #65525	; 0xfff5
 800a476:	4293      	cmp	r3, r2
 800a478:	d903      	bls.n	800a482 <f_mkfs+0x266>
 800a47a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800a47c:	4a1b      	ldr	r2, [pc, #108]	; (800a4ec <f_mkfs+0x2d0>)
 800a47e:	4293      	cmp	r3, r2
 800a480:	d954      	bls.n	800a52c <f_mkfs+0x310>
 800a482:	230e      	movs	r3, #14
 800a484:	e314      	b.n	800aab0 <f_mkfs+0x894>
 800a486:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800a488:	2b00      	cmp	r3, #0
 800a48a:	d11b      	bne.n	800a4c4 <f_mkfs+0x2a8>
 800a48c:	693b      	ldr	r3, [r7, #16]
 800a48e:	0b1b      	lsrs	r3, r3, #12
 800a490:	663b      	str	r3, [r7, #96]	; 0x60
 800a492:	2300      	movs	r3, #0
 800a494:	64bb      	str	r3, [r7, #72]	; 0x48
 800a496:	2301      	movs	r3, #1
 800a498:	66fb      	str	r3, [r7, #108]	; 0x6c
 800a49a:	e005      	b.n	800a4a8 <f_mkfs+0x28c>
 800a49c:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 800a49e:	3301      	adds	r3, #1
 800a4a0:	64bb      	str	r3, [r7, #72]	; 0x48
 800a4a2:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800a4a4:	005b      	lsls	r3, r3, #1
 800a4a6:	66fb      	str	r3, [r7, #108]	; 0x6c
 800a4a8:	4a11      	ldr	r2, [pc, #68]	; (800a4f0 <f_mkfs+0x2d4>)
 800a4aa:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 800a4ac:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 800a4b0:	2b00      	cmp	r3, #0
 800a4b2:	d007      	beq.n	800a4c4 <f_mkfs+0x2a8>
 800a4b4:	4a0e      	ldr	r2, [pc, #56]	; (800a4f0 <f_mkfs+0x2d4>)
 800a4b6:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 800a4b8:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 800a4bc:	461a      	mov	r2, r3
 800a4be:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 800a4c0:	4293      	cmp	r3, r2
 800a4c2:	d2eb      	bcs.n	800a49c <f_mkfs+0x280>
 800a4c4:	693a      	ldr	r2, [r7, #16]
 800a4c6:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800a4c8:	fbb2 f3f3 	udiv	r3, r2, r3
 800a4cc:	627b      	str	r3, [r7, #36]	; 0x24
 800a4ce:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800a4d0:	f640 72f5 	movw	r2, #4085	; 0xff5
 800a4d4:	4293      	cmp	r3, r2
 800a4d6:	d90d      	bls.n	800a4f4 <f_mkfs+0x2d8>
 800a4d8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800a4da:	3302      	adds	r3, #2
 800a4dc:	005b      	lsls	r3, r3, #1
 800a4de:	663b      	str	r3, [r7, #96]	; 0x60
 800a4e0:	e013      	b.n	800a50a <f_mkfs+0x2ee>
 800a4e2:	bf00      	nop
 800a4e4:	2000004c 	.word	0x2000004c
 800a4e8:	0800b23c 	.word	0x0800b23c
 800a4ec:	0ffffff5 	.word	0x0ffffff5
 800a4f0:	0800b24c 	.word	0x0800b24c
 800a4f4:	2301      	movs	r3, #1
 800a4f6:	f887 304f 	strb.w	r3, [r7, #79]	; 0x4f
 800a4fa:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 800a4fc:	4613      	mov	r3, r2
 800a4fe:	005b      	lsls	r3, r3, #1
 800a500:	4413      	add	r3, r2
 800a502:	3301      	adds	r3, #1
 800a504:	085b      	lsrs	r3, r3, #1
 800a506:	3303      	adds	r3, #3
 800a508:	663b      	str	r3, [r7, #96]	; 0x60
 800a50a:	8b7b      	ldrh	r3, [r7, #26]
 800a50c:	461a      	mov	r2, r3
 800a50e:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 800a510:	4413      	add	r3, r2
 800a512:	3b01      	subs	r3, #1
 800a514:	8b7a      	ldrh	r2, [r7, #26]
 800a516:	fbb3 f3f2 	udiv	r3, r3, r2
 800a51a:	657b      	str	r3, [r7, #84]	; 0x54
 800a51c:	2301      	movs	r3, #1
 800a51e:	65bb      	str	r3, [r7, #88]	; 0x58
 800a520:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 800a522:	015b      	lsls	r3, r3, #5
 800a524:	8b7a      	ldrh	r2, [r7, #26]
 800a526:	fbb3 f3f2 	udiv	r3, r3, r2
 800a52a:	653b      	str	r3, [r7, #80]	; 0x50
 800a52c:	6aba      	ldr	r2, [r7, #40]	; 0x28
 800a52e:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 800a530:	4413      	add	r3, r2
 800a532:	65fb      	str	r3, [r7, #92]	; 0x5c
 800a534:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 800a536:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 800a538:	fb02 f203 	mul.w	r2, r2, r3
 800a53c:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 800a53e:	4413      	add	r3, r2
 800a540:	6d3a      	ldr	r2, [r7, #80]	; 0x50
 800a542:	4413      	add	r3, r2
 800a544:	623b      	str	r3, [r7, #32]
 800a546:	697a      	ldr	r2, [r7, #20]
 800a548:	6a3b      	ldr	r3, [r7, #32]
 800a54a:	4413      	add	r3, r2
 800a54c:	1e5a      	subs	r2, r3, #1
 800a54e:	697b      	ldr	r3, [r7, #20]
 800a550:	425b      	negs	r3, r3
 800a552:	401a      	ands	r2, r3
 800a554:	6a3b      	ldr	r3, [r7, #32]
 800a556:	1ad3      	subs	r3, r2, r3
 800a558:	663b      	str	r3, [r7, #96]	; 0x60
 800a55a:	f897 304f 	ldrb.w	r3, [r7, #79]	; 0x4f
 800a55e:	2b03      	cmp	r3, #3
 800a560:	d108      	bne.n	800a574 <f_mkfs+0x358>
 800a562:	6dba      	ldr	r2, [r7, #88]	; 0x58
 800a564:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 800a566:	4413      	add	r3, r2
 800a568:	65bb      	str	r3, [r7, #88]	; 0x58
 800a56a:	6dfa      	ldr	r2, [r7, #92]	; 0x5c
 800a56c:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 800a56e:	4413      	add	r3, r2
 800a570:	65fb      	str	r3, [r7, #92]	; 0x5c
 800a572:	e006      	b.n	800a582 <f_mkfs+0x366>
 800a574:	6e3a      	ldr	r2, [r7, #96]	; 0x60
 800a576:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 800a578:	fbb2 f3f3 	udiv	r3, r2, r3
 800a57c:	6d7a      	ldr	r2, [r7, #84]	; 0x54
 800a57e:	4413      	add	r3, r2
 800a580:	657b      	str	r3, [r7, #84]	; 0x54
 800a582:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800a584:	011a      	lsls	r2, r3, #4
 800a586:	6a3b      	ldr	r3, [r7, #32]
 800a588:	441a      	add	r2, r3
 800a58a:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800a58c:	1ad2      	subs	r2, r2, r3
 800a58e:	693b      	ldr	r3, [r7, #16]
 800a590:	429a      	cmp	r2, r3
 800a592:	d901      	bls.n	800a598 <f_mkfs+0x37c>
 800a594:	230e      	movs	r3, #14
 800a596:	e28b      	b.n	800aab0 <f_mkfs+0x894>
 800a598:	693a      	ldr	r2, [r7, #16]
 800a59a:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 800a59c:	1ad2      	subs	r2, r2, r3
 800a59e:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 800a5a0:	6c79      	ldr	r1, [r7, #68]	; 0x44
 800a5a2:	fb01 f303 	mul.w	r3, r1, r3
 800a5a6:	1ad2      	subs	r2, r2, r3
 800a5a8:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 800a5aa:	1ad2      	subs	r2, r2, r3
 800a5ac:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800a5ae:	fbb2 f3f3 	udiv	r3, r2, r3
 800a5b2:	627b      	str	r3, [r7, #36]	; 0x24
 800a5b4:	f897 304f 	ldrb.w	r3, [r7, #79]	; 0x4f
 800a5b8:	2b03      	cmp	r3, #3
 800a5ba:	d10f      	bne.n	800a5dc <f_mkfs+0x3c0>
 800a5bc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800a5be:	f64f 72f5 	movw	r2, #65525	; 0xfff5
 800a5c2:	4293      	cmp	r3, r2
 800a5c4:	d80a      	bhi.n	800a5dc <f_mkfs+0x3c0>
 800a5c6:	687b      	ldr	r3, [r7, #4]
 800a5c8:	2b00      	cmp	r3, #0
 800a5ca:	d105      	bne.n	800a5d8 <f_mkfs+0x3bc>
 800a5cc:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800a5ce:	085b      	lsrs	r3, r3, #1
 800a5d0:	607b      	str	r3, [r7, #4]
 800a5d2:	687b      	ldr	r3, [r7, #4]
 800a5d4:	2b00      	cmp	r3, #0
 800a5d6:	d144      	bne.n	800a662 <f_mkfs+0x446>
 800a5d8:	230e      	movs	r3, #14
 800a5da:	e269      	b.n	800aab0 <f_mkfs+0x894>
 800a5dc:	f897 304f 	ldrb.w	r3, [r7, #79]	; 0x4f
 800a5e0:	2b02      	cmp	r3, #2
 800a5e2:	d133      	bne.n	800a64c <f_mkfs+0x430>
 800a5e4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800a5e6:	f64f 72f5 	movw	r2, #65525	; 0xfff5
 800a5ea:	4293      	cmp	r3, r2
 800a5ec:	d91e      	bls.n	800a62c <f_mkfs+0x410>
 800a5ee:	687b      	ldr	r3, [r7, #4]
 800a5f0:	2b00      	cmp	r3, #0
 800a5f2:	d107      	bne.n	800a604 <f_mkfs+0x3e8>
 800a5f4:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800a5f6:	005b      	lsls	r3, r3, #1
 800a5f8:	2b40      	cmp	r3, #64	; 0x40
 800a5fa:	d803      	bhi.n	800a604 <f_mkfs+0x3e8>
 800a5fc:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800a5fe:	005b      	lsls	r3, r3, #1
 800a600:	607b      	str	r3, [r7, #4]
 800a602:	e033      	b.n	800a66c <f_mkfs+0x450>
 800a604:	7afb      	ldrb	r3, [r7, #11]
 800a606:	f003 0302 	and.w	r3, r3, #2
 800a60a:	2b00      	cmp	r3, #0
 800a60c:	d003      	beq.n	800a616 <f_mkfs+0x3fa>
 800a60e:	2303      	movs	r3, #3
 800a610:	f887 304f 	strb.w	r3, [r7, #79]	; 0x4f
 800a614:	e02a      	b.n	800a66c <f_mkfs+0x450>
 800a616:	687b      	ldr	r3, [r7, #4]
 800a618:	2b00      	cmp	r3, #0
 800a61a:	d105      	bne.n	800a628 <f_mkfs+0x40c>
 800a61c:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800a61e:	005b      	lsls	r3, r3, #1
 800a620:	607b      	str	r3, [r7, #4]
 800a622:	687b      	ldr	r3, [r7, #4]
 800a624:	2b80      	cmp	r3, #128	; 0x80
 800a626:	d91e      	bls.n	800a666 <f_mkfs+0x44a>
 800a628:	230e      	movs	r3, #14
 800a62a:	e241      	b.n	800aab0 <f_mkfs+0x894>
 800a62c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800a62e:	f640 72f5 	movw	r2, #4085	; 0xff5
 800a632:	4293      	cmp	r3, r2
 800a634:	d80a      	bhi.n	800a64c <f_mkfs+0x430>
 800a636:	687b      	ldr	r3, [r7, #4]
 800a638:	2b00      	cmp	r3, #0
 800a63a:	d105      	bne.n	800a648 <f_mkfs+0x42c>
 800a63c:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800a63e:	005b      	lsls	r3, r3, #1
 800a640:	607b      	str	r3, [r7, #4]
 800a642:	687b      	ldr	r3, [r7, #4]
 800a644:	2b80      	cmp	r3, #128	; 0x80
 800a646:	d910      	bls.n	800a66a <f_mkfs+0x44e>
 800a648:	230e      	movs	r3, #14
 800a64a:	e231      	b.n	800aab0 <f_mkfs+0x894>
 800a64c:	f897 304f 	ldrb.w	r3, [r7, #79]	; 0x4f
 800a650:	2b01      	cmp	r3, #1
 800a652:	d10c      	bne.n	800a66e <f_mkfs+0x452>
 800a654:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800a656:	f640 72f5 	movw	r2, #4085	; 0xff5
 800a65a:	4293      	cmp	r3, r2
 800a65c:	d907      	bls.n	800a66e <f_mkfs+0x452>
 800a65e:	230e      	movs	r3, #14
 800a660:	e226      	b.n	800aab0 <f_mkfs+0x894>
 800a662:	bf00      	nop
 800a664:	e6cc      	b.n	800a400 <f_mkfs+0x1e4>
 800a666:	bf00      	nop
 800a668:	e6ca      	b.n	800a400 <f_mkfs+0x1e4>
 800a66a:	bf00      	nop
 800a66c:	e6c8      	b.n	800a400 <f_mkfs+0x1e4>
 800a66e:	bf00      	nop
 800a670:	8b7b      	ldrh	r3, [r7, #26]
 800a672:	461a      	mov	r2, r3
 800a674:	2100      	movs	r1, #0
 800a676:	6b78      	ldr	r0, [r7, #52]	; 0x34
 800a678:	f7fd fcd1 	bl	800801e <mem_set>
 800a67c:	220b      	movs	r2, #11
 800a67e:	49bd      	ldr	r1, [pc, #756]	; (800a974 <f_mkfs+0x758>)
 800a680:	6b78      	ldr	r0, [r7, #52]	; 0x34
 800a682:	f7fd fcab 	bl	8007fdc <mem_cpy>
 800a686:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800a688:	330b      	adds	r3, #11
 800a68a:	8b7a      	ldrh	r2, [r7, #26]
 800a68c:	4611      	mov	r1, r2
 800a68e:	4618      	mov	r0, r3
 800a690:	f7fd fc5d 	bl	8007f4e <st_word>
 800a694:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800a696:	330d      	adds	r3, #13
 800a698:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 800a69a:	b2d2      	uxtb	r2, r2
 800a69c:	701a      	strb	r2, [r3, #0]
 800a69e:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800a6a0:	330e      	adds	r3, #14
 800a6a2:	6dba      	ldr	r2, [r7, #88]	; 0x58
 800a6a4:	b292      	uxth	r2, r2
 800a6a6:	4611      	mov	r1, r2
 800a6a8:	4618      	mov	r0, r3
 800a6aa:	f7fd fc50 	bl	8007f4e <st_word>
 800a6ae:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800a6b0:	3310      	adds	r3, #16
 800a6b2:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 800a6b4:	b2d2      	uxtb	r2, r2
 800a6b6:	701a      	strb	r2, [r3, #0]
 800a6b8:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800a6ba:	f103 0211 	add.w	r2, r3, #17
 800a6be:	f897 304f 	ldrb.w	r3, [r7, #79]	; 0x4f
 800a6c2:	2b03      	cmp	r3, #3
 800a6c4:	d002      	beq.n	800a6cc <f_mkfs+0x4b0>
 800a6c6:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 800a6c8:	b29b      	uxth	r3, r3
 800a6ca:	e000      	b.n	800a6ce <f_mkfs+0x4b2>
 800a6cc:	2300      	movs	r3, #0
 800a6ce:	4619      	mov	r1, r3
 800a6d0:	4610      	mov	r0, r2
 800a6d2:	f7fd fc3c 	bl	8007f4e <st_word>
 800a6d6:	693b      	ldr	r3, [r7, #16]
 800a6d8:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800a6dc:	d208      	bcs.n	800a6f0 <f_mkfs+0x4d4>
 800a6de:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800a6e0:	3313      	adds	r3, #19
 800a6e2:	693a      	ldr	r2, [r7, #16]
 800a6e4:	b292      	uxth	r2, r2
 800a6e6:	4611      	mov	r1, r2
 800a6e8:	4618      	mov	r0, r3
 800a6ea:	f7fd fc30 	bl	8007f4e <st_word>
 800a6ee:	e006      	b.n	800a6fe <f_mkfs+0x4e2>
 800a6f0:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800a6f2:	3320      	adds	r3, #32
 800a6f4:	693a      	ldr	r2, [r7, #16]
 800a6f6:	4611      	mov	r1, r2
 800a6f8:	4618      	mov	r0, r3
 800a6fa:	f7fd fc43 	bl	8007f84 <st_dword>
 800a6fe:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800a700:	3315      	adds	r3, #21
 800a702:	22f8      	movs	r2, #248	; 0xf8
 800a704:	701a      	strb	r2, [r3, #0]
 800a706:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800a708:	3318      	adds	r3, #24
 800a70a:	213f      	movs	r1, #63	; 0x3f
 800a70c:	4618      	mov	r0, r3
 800a70e:	f7fd fc1e 	bl	8007f4e <st_word>
 800a712:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800a714:	331a      	adds	r3, #26
 800a716:	21ff      	movs	r1, #255	; 0xff
 800a718:	4618      	mov	r0, r3
 800a71a:	f7fd fc18 	bl	8007f4e <st_word>
 800a71e:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800a720:	331c      	adds	r3, #28
 800a722:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 800a724:	4618      	mov	r0, r3
 800a726:	f7fd fc2d 	bl	8007f84 <st_dword>
 800a72a:	f897 304f 	ldrb.w	r3, [r7, #79]	; 0x4f
 800a72e:	2b03      	cmp	r3, #3
 800a730:	d131      	bne.n	800a796 <f_mkfs+0x57a>
 800a732:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800a734:	f103 0443 	add.w	r4, r3, #67	; 0x43
 800a738:	f7fb ffd6 	bl	80066e8 <get_fattime>
 800a73c:	4603      	mov	r3, r0
 800a73e:	4619      	mov	r1, r3
 800a740:	4620      	mov	r0, r4
 800a742:	f7fd fc1f 	bl	8007f84 <st_dword>
 800a746:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800a748:	3324      	adds	r3, #36	; 0x24
 800a74a:	6d79      	ldr	r1, [r7, #84]	; 0x54
 800a74c:	4618      	mov	r0, r3
 800a74e:	f7fd fc19 	bl	8007f84 <st_dword>
 800a752:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800a754:	332c      	adds	r3, #44	; 0x2c
 800a756:	2102      	movs	r1, #2
 800a758:	4618      	mov	r0, r3
 800a75a:	f7fd fc13 	bl	8007f84 <st_dword>
 800a75e:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800a760:	3330      	adds	r3, #48	; 0x30
 800a762:	2101      	movs	r1, #1
 800a764:	4618      	mov	r0, r3
 800a766:	f7fd fbf2 	bl	8007f4e <st_word>
 800a76a:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800a76c:	3332      	adds	r3, #50	; 0x32
 800a76e:	2106      	movs	r1, #6
 800a770:	4618      	mov	r0, r3
 800a772:	f7fd fbec 	bl	8007f4e <st_word>
 800a776:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800a778:	3340      	adds	r3, #64	; 0x40
 800a77a:	2280      	movs	r2, #128	; 0x80
 800a77c:	701a      	strb	r2, [r3, #0]
 800a77e:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800a780:	3342      	adds	r3, #66	; 0x42
 800a782:	2229      	movs	r2, #41	; 0x29
 800a784:	701a      	strb	r2, [r3, #0]
 800a786:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800a788:	3347      	adds	r3, #71	; 0x47
 800a78a:	2213      	movs	r2, #19
 800a78c:	497a      	ldr	r1, [pc, #488]	; (800a978 <f_mkfs+0x75c>)
 800a78e:	4618      	mov	r0, r3
 800a790:	f7fd fc24 	bl	8007fdc <mem_cpy>
 800a794:	e020      	b.n	800a7d8 <f_mkfs+0x5bc>
 800a796:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800a798:	f103 0427 	add.w	r4, r3, #39	; 0x27
 800a79c:	f7fb ffa4 	bl	80066e8 <get_fattime>
 800a7a0:	4603      	mov	r3, r0
 800a7a2:	4619      	mov	r1, r3
 800a7a4:	4620      	mov	r0, r4
 800a7a6:	f7fd fbed 	bl	8007f84 <st_dword>
 800a7aa:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800a7ac:	3316      	adds	r3, #22
 800a7ae:	6d7a      	ldr	r2, [r7, #84]	; 0x54
 800a7b0:	b292      	uxth	r2, r2
 800a7b2:	4611      	mov	r1, r2
 800a7b4:	4618      	mov	r0, r3
 800a7b6:	f7fd fbca 	bl	8007f4e <st_word>
 800a7ba:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800a7bc:	3324      	adds	r3, #36	; 0x24
 800a7be:	2280      	movs	r2, #128	; 0x80
 800a7c0:	701a      	strb	r2, [r3, #0]
 800a7c2:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800a7c4:	3326      	adds	r3, #38	; 0x26
 800a7c6:	2229      	movs	r2, #41	; 0x29
 800a7c8:	701a      	strb	r2, [r3, #0]
 800a7ca:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800a7cc:	332b      	adds	r3, #43	; 0x2b
 800a7ce:	2213      	movs	r2, #19
 800a7d0:	496a      	ldr	r1, [pc, #424]	; (800a97c <f_mkfs+0x760>)
 800a7d2:	4618      	mov	r0, r3
 800a7d4:	f7fd fc02 	bl	8007fdc <mem_cpy>
 800a7d8:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800a7da:	f503 73ff 	add.w	r3, r3, #510	; 0x1fe
 800a7de:	f64a 2155 	movw	r1, #43605	; 0xaa55
 800a7e2:	4618      	mov	r0, r3
 800a7e4:	f7fd fbb3 	bl	8007f4e <st_word>
 800a7e8:	f897 003b 	ldrb.w	r0, [r7, #59]	; 0x3b
 800a7ec:	2301      	movs	r3, #1
 800a7ee:	6aba      	ldr	r2, [r7, #40]	; 0x28
 800a7f0:	6b79      	ldr	r1, [r7, #52]	; 0x34
 800a7f2:	f7fd fb33 	bl	8007e5c <disk_write>
 800a7f6:	4603      	mov	r3, r0
 800a7f8:	2b00      	cmp	r3, #0
 800a7fa:	d001      	beq.n	800a800 <f_mkfs+0x5e4>
 800a7fc:	2301      	movs	r3, #1
 800a7fe:	e157      	b.n	800aab0 <f_mkfs+0x894>
 800a800:	f897 304f 	ldrb.w	r3, [r7, #79]	; 0x4f
 800a804:	2b03      	cmp	r3, #3
 800a806:	d140      	bne.n	800a88a <f_mkfs+0x66e>
 800a808:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800a80a:	1d9a      	adds	r2, r3, #6
 800a80c:	f897 003b 	ldrb.w	r0, [r7, #59]	; 0x3b
 800a810:	2301      	movs	r3, #1
 800a812:	6b79      	ldr	r1, [r7, #52]	; 0x34
 800a814:	f7fd fb22 	bl	8007e5c <disk_write>
 800a818:	8b7b      	ldrh	r3, [r7, #26]
 800a81a:	461a      	mov	r2, r3
 800a81c:	2100      	movs	r1, #0
 800a81e:	6b78      	ldr	r0, [r7, #52]	; 0x34
 800a820:	f7fd fbfd 	bl	800801e <mem_set>
 800a824:	4956      	ldr	r1, [pc, #344]	; (800a980 <f_mkfs+0x764>)
 800a826:	6b78      	ldr	r0, [r7, #52]	; 0x34
 800a828:	f7fd fbac 	bl	8007f84 <st_dword>
 800a82c:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800a82e:	f503 73f2 	add.w	r3, r3, #484	; 0x1e4
 800a832:	4954      	ldr	r1, [pc, #336]	; (800a984 <f_mkfs+0x768>)
 800a834:	4618      	mov	r0, r3
 800a836:	f7fd fba5 	bl	8007f84 <st_dword>
 800a83a:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800a83c:	f503 72f4 	add.w	r2, r3, #488	; 0x1e8
 800a840:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800a842:	3b01      	subs	r3, #1
 800a844:	4619      	mov	r1, r3
 800a846:	4610      	mov	r0, r2
 800a848:	f7fd fb9c 	bl	8007f84 <st_dword>
 800a84c:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800a84e:	f503 73f6 	add.w	r3, r3, #492	; 0x1ec
 800a852:	2102      	movs	r1, #2
 800a854:	4618      	mov	r0, r3
 800a856:	f7fd fb95 	bl	8007f84 <st_dword>
 800a85a:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800a85c:	f503 73ff 	add.w	r3, r3, #510	; 0x1fe
 800a860:	f64a 2155 	movw	r1, #43605	; 0xaa55
 800a864:	4618      	mov	r0, r3
 800a866:	f7fd fb72 	bl	8007f4e <st_word>
 800a86a:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800a86c:	1dda      	adds	r2, r3, #7
 800a86e:	f897 003b 	ldrb.w	r0, [r7, #59]	; 0x3b
 800a872:	2301      	movs	r3, #1
 800a874:	6b79      	ldr	r1, [r7, #52]	; 0x34
 800a876:	f7fd faf1 	bl	8007e5c <disk_write>
 800a87a:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800a87c:	1c5a      	adds	r2, r3, #1
 800a87e:	f897 003b 	ldrb.w	r0, [r7, #59]	; 0x3b
 800a882:	2301      	movs	r3, #1
 800a884:	6b79      	ldr	r1, [r7, #52]	; 0x34
 800a886:	f7fd fae9 	bl	8007e5c <disk_write>
 800a88a:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 800a88c:	2100      	movs	r1, #0
 800a88e:	6b78      	ldr	r0, [r7, #52]	; 0x34
 800a890:	f7fd fbc5 	bl	800801e <mem_set>
 800a894:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 800a896:	66bb      	str	r3, [r7, #104]	; 0x68
 800a898:	2300      	movs	r3, #0
 800a89a:	64bb      	str	r3, [r7, #72]	; 0x48
 800a89c:	e04b      	b.n	800a936 <f_mkfs+0x71a>
 800a89e:	f897 304f 	ldrb.w	r3, [r7, #79]	; 0x4f
 800a8a2:	2b03      	cmp	r3, #3
 800a8a4:	d113      	bne.n	800a8ce <f_mkfs+0x6b2>
 800a8a6:	f06f 0107 	mvn.w	r1, #7
 800a8aa:	6b78      	ldr	r0, [r7, #52]	; 0x34
 800a8ac:	f7fd fb6a 	bl	8007f84 <st_dword>
 800a8b0:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800a8b2:	3304      	adds	r3, #4
 800a8b4:	f04f 31ff 	mov.w	r1, #4294967295
 800a8b8:	4618      	mov	r0, r3
 800a8ba:	f7fd fb63 	bl	8007f84 <st_dword>
 800a8be:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800a8c0:	3308      	adds	r3, #8
 800a8c2:	f06f 4170 	mvn.w	r1, #4026531840	; 0xf0000000
 800a8c6:	4618      	mov	r0, r3
 800a8c8:	f7fd fb5c 	bl	8007f84 <st_dword>
 800a8cc:	e00b      	b.n	800a8e6 <f_mkfs+0x6ca>
 800a8ce:	f897 304f 	ldrb.w	r3, [r7, #79]	; 0x4f
 800a8d2:	2b01      	cmp	r3, #1
 800a8d4:	d101      	bne.n	800a8da <f_mkfs+0x6be>
 800a8d6:	4b2c      	ldr	r3, [pc, #176]	; (800a988 <f_mkfs+0x76c>)
 800a8d8:	e001      	b.n	800a8de <f_mkfs+0x6c2>
 800a8da:	f06f 0307 	mvn.w	r3, #7
 800a8de:	4619      	mov	r1, r3
 800a8e0:	6b78      	ldr	r0, [r7, #52]	; 0x34
 800a8e2:	f7fd fb4f 	bl	8007f84 <st_dword>
 800a8e6:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 800a8e8:	667b      	str	r3, [r7, #100]	; 0x64
 800a8ea:	6e7a      	ldr	r2, [r7, #100]	; 0x64
 800a8ec:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800a8ee:	4293      	cmp	r3, r2
 800a8f0:	bf28      	it	cs
 800a8f2:	4613      	movcs	r3, r2
 800a8f4:	663b      	str	r3, [r7, #96]	; 0x60
 800a8f6:	f897 003b 	ldrb.w	r0, [r7, #59]	; 0x3b
 800a8fa:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 800a8fc:	6eba      	ldr	r2, [r7, #104]	; 0x68
 800a8fe:	6b79      	ldr	r1, [r7, #52]	; 0x34
 800a900:	f7fd faac 	bl	8007e5c <disk_write>
 800a904:	4603      	mov	r3, r0
 800a906:	2b00      	cmp	r3, #0
 800a908:	d001      	beq.n	800a90e <f_mkfs+0x6f2>
 800a90a:	2301      	movs	r3, #1
 800a90c:	e0d0      	b.n	800aab0 <f_mkfs+0x894>
 800a90e:	8b7b      	ldrh	r3, [r7, #26]
 800a910:	461a      	mov	r2, r3
 800a912:	2100      	movs	r1, #0
 800a914:	6b78      	ldr	r0, [r7, #52]	; 0x34
 800a916:	f7fd fb82 	bl	800801e <mem_set>
 800a91a:	6eba      	ldr	r2, [r7, #104]	; 0x68
 800a91c:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 800a91e:	4413      	add	r3, r2
 800a920:	66bb      	str	r3, [r7, #104]	; 0x68
 800a922:	6e7a      	ldr	r2, [r7, #100]	; 0x64
 800a924:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 800a926:	1ad3      	subs	r3, r2, r3
 800a928:	667b      	str	r3, [r7, #100]	; 0x64
 800a92a:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 800a92c:	2b00      	cmp	r3, #0
 800a92e:	d1dc      	bne.n	800a8ea <f_mkfs+0x6ce>
 800a930:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 800a932:	3301      	adds	r3, #1
 800a934:	64bb      	str	r3, [r7, #72]	; 0x48
 800a936:	6cba      	ldr	r2, [r7, #72]	; 0x48
 800a938:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 800a93a:	429a      	cmp	r2, r3
 800a93c:	d3af      	bcc.n	800a89e <f_mkfs+0x682>
 800a93e:	f897 304f 	ldrb.w	r3, [r7, #79]	; 0x4f
 800a942:	2b03      	cmp	r3, #3
 800a944:	d101      	bne.n	800a94a <f_mkfs+0x72e>
 800a946:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800a948:	e000      	b.n	800a94c <f_mkfs+0x730>
 800a94a:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 800a94c:	667b      	str	r3, [r7, #100]	; 0x64
 800a94e:	6e7a      	ldr	r2, [r7, #100]	; 0x64
 800a950:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800a952:	4293      	cmp	r3, r2
 800a954:	bf28      	it	cs
 800a956:	4613      	movcs	r3, r2
 800a958:	663b      	str	r3, [r7, #96]	; 0x60
 800a95a:	f897 003b 	ldrb.w	r0, [r7, #59]	; 0x3b
 800a95e:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 800a960:	6eba      	ldr	r2, [r7, #104]	; 0x68
 800a962:	6b79      	ldr	r1, [r7, #52]	; 0x34
 800a964:	f7fd fa7a 	bl	8007e5c <disk_write>
 800a968:	4603      	mov	r3, r0
 800a96a:	2b00      	cmp	r3, #0
 800a96c:	d00e      	beq.n	800a98c <f_mkfs+0x770>
 800a96e:	2301      	movs	r3, #1
 800a970:	e09e      	b.n	800aab0 <f_mkfs+0x894>
 800a972:	bf00      	nop
 800a974:	0800b160 	.word	0x0800b160
 800a978:	0800b16c 	.word	0x0800b16c
 800a97c:	0800b180 	.word	0x0800b180
 800a980:	41615252 	.word	0x41615252
 800a984:	61417272 	.word	0x61417272
 800a988:	00fffff8 	.word	0x00fffff8
 800a98c:	6eba      	ldr	r2, [r7, #104]	; 0x68
 800a98e:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 800a990:	4413      	add	r3, r2
 800a992:	66bb      	str	r3, [r7, #104]	; 0x68
 800a994:	6e7a      	ldr	r2, [r7, #100]	; 0x64
 800a996:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 800a998:	1ad3      	subs	r3, r2, r3
 800a99a:	667b      	str	r3, [r7, #100]	; 0x64
 800a99c:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 800a99e:	2b00      	cmp	r3, #0
 800a9a0:	d1d5      	bne.n	800a94e <f_mkfs+0x732>
 800a9a2:	f897 304f 	ldrb.w	r3, [r7, #79]	; 0x4f
 800a9a6:	2b03      	cmp	r3, #3
 800a9a8:	d103      	bne.n	800a9b2 <f_mkfs+0x796>
 800a9aa:	230c      	movs	r3, #12
 800a9ac:	f887 304e 	strb.w	r3, [r7, #78]	; 0x4e
 800a9b0:	e010      	b.n	800a9d4 <f_mkfs+0x7b8>
 800a9b2:	693b      	ldr	r3, [r7, #16]
 800a9b4:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800a9b8:	d303      	bcc.n	800a9c2 <f_mkfs+0x7a6>
 800a9ba:	2306      	movs	r3, #6
 800a9bc:	f887 304e 	strb.w	r3, [r7, #78]	; 0x4e
 800a9c0:	e008      	b.n	800a9d4 <f_mkfs+0x7b8>
 800a9c2:	f897 304f 	ldrb.w	r3, [r7, #79]	; 0x4f
 800a9c6:	2b02      	cmp	r3, #2
 800a9c8:	d101      	bne.n	800a9ce <f_mkfs+0x7b2>
 800a9ca:	2304      	movs	r3, #4
 800a9cc:	e000      	b.n	800a9d0 <f_mkfs+0x7b4>
 800a9ce:	2301      	movs	r3, #1
 800a9d0:	f887 304e 	strb.w	r3, [r7, #78]	; 0x4e
 800a9d4:	7afb      	ldrb	r3, [r7, #11]
 800a9d6:	f003 0308 	and.w	r3, r3, #8
 800a9da:	2b00      	cmp	r3, #0
 800a9dc:	d15b      	bne.n	800aa96 <f_mkfs+0x87a>
 800a9de:	8b7b      	ldrh	r3, [r7, #26]
 800a9e0:	461a      	mov	r2, r3
 800a9e2:	2100      	movs	r1, #0
 800a9e4:	6b78      	ldr	r0, [r7, #52]	; 0x34
 800a9e6:	f7fd fb1a 	bl	800801e <mem_set>
 800a9ea:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800a9ec:	f503 73ff 	add.w	r3, r3, #510	; 0x1fe
 800a9f0:	f64a 2155 	movw	r1, #43605	; 0xaa55
 800a9f4:	4618      	mov	r0, r3
 800a9f6:	f7fd faaa 	bl	8007f4e <st_word>
 800a9fa:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800a9fc:	f503 73df 	add.w	r3, r3, #446	; 0x1be
 800aa00:	61fb      	str	r3, [r7, #28]
 800aa02:	69fb      	ldr	r3, [r7, #28]
 800aa04:	2200      	movs	r2, #0
 800aa06:	701a      	strb	r2, [r3, #0]
 800aa08:	69fb      	ldr	r3, [r7, #28]
 800aa0a:	3301      	adds	r3, #1
 800aa0c:	2201      	movs	r2, #1
 800aa0e:	701a      	strb	r2, [r3, #0]
 800aa10:	69fb      	ldr	r3, [r7, #28]
 800aa12:	3302      	adds	r3, #2
 800aa14:	2201      	movs	r2, #1
 800aa16:	701a      	strb	r2, [r3, #0]
 800aa18:	69fb      	ldr	r3, [r7, #28]
 800aa1a:	3303      	adds	r3, #3
 800aa1c:	2200      	movs	r2, #0
 800aa1e:	701a      	strb	r2, [r3, #0]
 800aa20:	69fb      	ldr	r3, [r7, #28]
 800aa22:	3304      	adds	r3, #4
 800aa24:	f897 204e 	ldrb.w	r2, [r7, #78]	; 0x4e
 800aa28:	701a      	strb	r2, [r3, #0]
 800aa2a:	693a      	ldr	r2, [r7, #16]
 800aa2c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800aa2e:	441a      	add	r2, r3
 800aa30:	4b21      	ldr	r3, [pc, #132]	; (800aab8 <f_mkfs+0x89c>)
 800aa32:	fba3 1302 	umull	r1, r3, r3, r2
 800aa36:	1ad2      	subs	r2, r2, r3
 800aa38:	0852      	lsrs	r2, r2, #1
 800aa3a:	4413      	add	r3, r2
 800aa3c:	0b5b      	lsrs	r3, r3, #13
 800aa3e:	663b      	str	r3, [r7, #96]	; 0x60
 800aa40:	69fb      	ldr	r3, [r7, #28]
 800aa42:	3305      	adds	r3, #5
 800aa44:	22fe      	movs	r2, #254	; 0xfe
 800aa46:	701a      	strb	r2, [r3, #0]
 800aa48:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 800aa4a:	089b      	lsrs	r3, r3, #2
 800aa4c:	b2da      	uxtb	r2, r3
 800aa4e:	69fb      	ldr	r3, [r7, #28]
 800aa50:	3306      	adds	r3, #6
 800aa52:	f042 023f 	orr.w	r2, r2, #63	; 0x3f
 800aa56:	b2d2      	uxtb	r2, r2
 800aa58:	701a      	strb	r2, [r3, #0]
 800aa5a:	69fb      	ldr	r3, [r7, #28]
 800aa5c:	3307      	adds	r3, #7
 800aa5e:	6e3a      	ldr	r2, [r7, #96]	; 0x60
 800aa60:	b2d2      	uxtb	r2, r2
 800aa62:	701a      	strb	r2, [r3, #0]
 800aa64:	69fb      	ldr	r3, [r7, #28]
 800aa66:	3308      	adds	r3, #8
 800aa68:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 800aa6a:	4618      	mov	r0, r3
 800aa6c:	f7fd fa8a 	bl	8007f84 <st_dword>
 800aa70:	69fb      	ldr	r3, [r7, #28]
 800aa72:	330c      	adds	r3, #12
 800aa74:	693a      	ldr	r2, [r7, #16]
 800aa76:	4611      	mov	r1, r2
 800aa78:	4618      	mov	r0, r3
 800aa7a:	f7fd fa83 	bl	8007f84 <st_dword>
 800aa7e:	f897 003b 	ldrb.w	r0, [r7, #59]	; 0x3b
 800aa82:	2301      	movs	r3, #1
 800aa84:	2200      	movs	r2, #0
 800aa86:	6b79      	ldr	r1, [r7, #52]	; 0x34
 800aa88:	f7fd f9e8 	bl	8007e5c <disk_write>
 800aa8c:	4603      	mov	r3, r0
 800aa8e:	2b00      	cmp	r3, #0
 800aa90:	d001      	beq.n	800aa96 <f_mkfs+0x87a>
 800aa92:	2301      	movs	r3, #1
 800aa94:	e00c      	b.n	800aab0 <f_mkfs+0x894>
 800aa96:	f897 303b 	ldrb.w	r3, [r7, #59]	; 0x3b
 800aa9a:	2200      	movs	r2, #0
 800aa9c:	2100      	movs	r1, #0
 800aa9e:	4618      	mov	r0, r3
 800aaa0:	f7fd f9fc 	bl	8007e9c <disk_ioctl>
 800aaa4:	4603      	mov	r3, r0
 800aaa6:	2b00      	cmp	r3, #0
 800aaa8:	d001      	beq.n	800aaae <f_mkfs+0x892>
 800aaaa:	2301      	movs	r3, #1
 800aaac:	e000      	b.n	800aab0 <f_mkfs+0x894>
 800aaae:	2300      	movs	r3, #0
 800aab0:	4618      	mov	r0, r3
 800aab2:	3774      	adds	r7, #116	; 0x74
 800aab4:	46bd      	mov	sp, r7
 800aab6:	bd90      	pop	{r4, r7, pc}
 800aab8:	0515565b 	.word	0x0515565b

0800aabc <putc_bfd>:
 800aabc:	b580      	push	{r7, lr}
 800aabe:	b084      	sub	sp, #16
 800aac0:	af00      	add	r7, sp, #0
 800aac2:	6078      	str	r0, [r7, #4]
 800aac4:	460b      	mov	r3, r1
 800aac6:	70fb      	strb	r3, [r7, #3]
 800aac8:	78fb      	ldrb	r3, [r7, #3]
 800aaca:	2b0a      	cmp	r3, #10
 800aacc:	d103      	bne.n	800aad6 <putc_bfd+0x1a>
 800aace:	210d      	movs	r1, #13
 800aad0:	6878      	ldr	r0, [r7, #4]
 800aad2:	f7ff fff3 	bl	800aabc <putc_bfd>
 800aad6:	687b      	ldr	r3, [r7, #4]
 800aad8:	685b      	ldr	r3, [r3, #4]
 800aada:	60fb      	str	r3, [r7, #12]
 800aadc:	68fb      	ldr	r3, [r7, #12]
 800aade:	2b00      	cmp	r3, #0
 800aae0:	db25      	blt.n	800ab2e <putc_bfd+0x72>
 800aae2:	68fb      	ldr	r3, [r7, #12]
 800aae4:	1c5a      	adds	r2, r3, #1
 800aae6:	60fa      	str	r2, [r7, #12]
 800aae8:	687a      	ldr	r2, [r7, #4]
 800aaea:	4413      	add	r3, r2
 800aaec:	78fa      	ldrb	r2, [r7, #3]
 800aaee:	731a      	strb	r2, [r3, #12]
 800aaf0:	68fb      	ldr	r3, [r7, #12]
 800aaf2:	2b3c      	cmp	r3, #60	; 0x3c
 800aaf4:	dd12      	ble.n	800ab1c <putc_bfd+0x60>
 800aaf6:	687b      	ldr	r3, [r7, #4]
 800aaf8:	6818      	ldr	r0, [r3, #0]
 800aafa:	687b      	ldr	r3, [r7, #4]
 800aafc:	f103 010c 	add.w	r1, r3, #12
 800ab00:	68fa      	ldr	r2, [r7, #12]
 800ab02:	f107 0308 	add.w	r3, r7, #8
 800ab06:	f7ff f94d 	bl	8009da4 <f_write>
 800ab0a:	68ba      	ldr	r2, [r7, #8]
 800ab0c:	68fb      	ldr	r3, [r7, #12]
 800ab0e:	429a      	cmp	r2, r3
 800ab10:	d101      	bne.n	800ab16 <putc_bfd+0x5a>
 800ab12:	2300      	movs	r3, #0
 800ab14:	e001      	b.n	800ab1a <putc_bfd+0x5e>
 800ab16:	f04f 33ff 	mov.w	r3, #4294967295
 800ab1a:	60fb      	str	r3, [r7, #12]
 800ab1c:	687b      	ldr	r3, [r7, #4]
 800ab1e:	68fa      	ldr	r2, [r7, #12]
 800ab20:	605a      	str	r2, [r3, #4]
 800ab22:	687b      	ldr	r3, [r7, #4]
 800ab24:	689b      	ldr	r3, [r3, #8]
 800ab26:	1c5a      	adds	r2, r3, #1
 800ab28:	687b      	ldr	r3, [r7, #4]
 800ab2a:	609a      	str	r2, [r3, #8]
 800ab2c:	e000      	b.n	800ab30 <putc_bfd+0x74>
 800ab2e:	bf00      	nop
 800ab30:	3710      	adds	r7, #16
 800ab32:	46bd      	mov	sp, r7
 800ab34:	bd80      	pop	{r7, pc}

0800ab36 <putc_flush>:
 800ab36:	b580      	push	{r7, lr}
 800ab38:	b084      	sub	sp, #16
 800ab3a:	af00      	add	r7, sp, #0
 800ab3c:	6078      	str	r0, [r7, #4]
 800ab3e:	687b      	ldr	r3, [r7, #4]
 800ab40:	685b      	ldr	r3, [r3, #4]
 800ab42:	2b00      	cmp	r3, #0
 800ab44:	db17      	blt.n	800ab76 <putc_flush+0x40>
 800ab46:	687b      	ldr	r3, [r7, #4]
 800ab48:	6818      	ldr	r0, [r3, #0]
 800ab4a:	687b      	ldr	r3, [r7, #4]
 800ab4c:	f103 010c 	add.w	r1, r3, #12
 800ab50:	687b      	ldr	r3, [r7, #4]
 800ab52:	685b      	ldr	r3, [r3, #4]
 800ab54:	461a      	mov	r2, r3
 800ab56:	f107 030c 	add.w	r3, r7, #12
 800ab5a:	f7ff f923 	bl	8009da4 <f_write>
 800ab5e:	4603      	mov	r3, r0
 800ab60:	2b00      	cmp	r3, #0
 800ab62:	d108      	bne.n	800ab76 <putc_flush+0x40>
 800ab64:	687b      	ldr	r3, [r7, #4]
 800ab66:	685b      	ldr	r3, [r3, #4]
 800ab68:	461a      	mov	r2, r3
 800ab6a:	68fb      	ldr	r3, [r7, #12]
 800ab6c:	429a      	cmp	r2, r3
 800ab6e:	d102      	bne.n	800ab76 <putc_flush+0x40>
 800ab70:	687b      	ldr	r3, [r7, #4]
 800ab72:	689b      	ldr	r3, [r3, #8]
 800ab74:	e001      	b.n	800ab7a <putc_flush+0x44>
 800ab76:	f04f 33ff 	mov.w	r3, #4294967295
 800ab7a:	4618      	mov	r0, r3
 800ab7c:	3710      	adds	r7, #16
 800ab7e:	46bd      	mov	sp, r7
 800ab80:	bd80      	pop	{r7, pc}

0800ab82 <putc_init>:
 800ab82:	b480      	push	{r7}
 800ab84:	b083      	sub	sp, #12
 800ab86:	af00      	add	r7, sp, #0
 800ab88:	6078      	str	r0, [r7, #4]
 800ab8a:	6039      	str	r1, [r7, #0]
 800ab8c:	687b      	ldr	r3, [r7, #4]
 800ab8e:	683a      	ldr	r2, [r7, #0]
 800ab90:	601a      	str	r2, [r3, #0]
 800ab92:	687b      	ldr	r3, [r7, #4]
 800ab94:	2200      	movs	r2, #0
 800ab96:	605a      	str	r2, [r3, #4]
 800ab98:	687b      	ldr	r3, [r7, #4]
 800ab9a:	685a      	ldr	r2, [r3, #4]
 800ab9c:	687b      	ldr	r3, [r7, #4]
 800ab9e:	609a      	str	r2, [r3, #8]
 800aba0:	bf00      	nop
 800aba2:	370c      	adds	r7, #12
 800aba4:	46bd      	mov	sp, r7
 800aba6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800abaa:	4770      	bx	lr

0800abac <f_printf>:
 800abac:	b40e      	push	{r1, r2, r3}
 800abae:	b580      	push	{r7, lr}
 800abb0:	b0a7      	sub	sp, #156	; 0x9c
 800abb2:	af00      	add	r7, sp, #0
 800abb4:	6078      	str	r0, [r7, #4]
 800abb6:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 800abba:	6879      	ldr	r1, [r7, #4]
 800abbc:	4618      	mov	r0, r3
 800abbe:	f7ff ffe0 	bl	800ab82 <putc_init>
 800abc2:	f107 03a8 	add.w	r3, r7, #168	; 0xa8
 800abc6:	67bb      	str	r3, [r7, #120]	; 0x78
 800abc8:	f8d7 30a4 	ldr.w	r3, [r7, #164]	; 0xa4
 800abcc:	1c5a      	adds	r2, r3, #1
 800abce:	f8c7 20a4 	str.w	r2, [r7, #164]	; 0xa4
 800abd2:	781b      	ldrb	r3, [r3, #0]
 800abd4:	f887 3083 	strb.w	r3, [r7, #131]	; 0x83
 800abd8:	f897 3083 	ldrb.w	r3, [r7, #131]	; 0x83
 800abdc:	2b00      	cmp	r3, #0
 800abde:	f000 81f4 	beq.w	800afca <f_printf+0x41e>
 800abe2:	f897 3083 	ldrb.w	r3, [r7, #131]	; 0x83
 800abe6:	2b25      	cmp	r3, #37	; 0x25
 800abe8:	d008      	beq.n	800abfc <f_printf+0x50>
 800abea:	f897 2083 	ldrb.w	r2, [r7, #131]	; 0x83
 800abee:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 800abf2:	4611      	mov	r1, r2
 800abf4:	4618      	mov	r0, r3
 800abf6:	f7ff ff61 	bl	800aabc <putc_bfd>
 800abfa:	e1e5      	b.n	800afc8 <f_printf+0x41c>
 800abfc:	2300      	movs	r3, #0
 800abfe:	f887 3097 	strb.w	r3, [r7, #151]	; 0x97
 800ac02:	2300      	movs	r3, #0
 800ac04:	f8c7 3088 	str.w	r3, [r7, #136]	; 0x88
 800ac08:	f8d7 30a4 	ldr.w	r3, [r7, #164]	; 0xa4
 800ac0c:	1c5a      	adds	r2, r3, #1
 800ac0e:	f8c7 20a4 	str.w	r2, [r7, #164]	; 0xa4
 800ac12:	781b      	ldrb	r3, [r3, #0]
 800ac14:	f887 3083 	strb.w	r3, [r7, #131]	; 0x83
 800ac18:	f897 3083 	ldrb.w	r3, [r7, #131]	; 0x83
 800ac1c:	2b30      	cmp	r3, #48	; 0x30
 800ac1e:	d10b      	bne.n	800ac38 <f_printf+0x8c>
 800ac20:	2301      	movs	r3, #1
 800ac22:	f887 3097 	strb.w	r3, [r7, #151]	; 0x97
 800ac26:	f8d7 30a4 	ldr.w	r3, [r7, #164]	; 0xa4
 800ac2a:	1c5a      	adds	r2, r3, #1
 800ac2c:	f8c7 20a4 	str.w	r2, [r7, #164]	; 0xa4
 800ac30:	781b      	ldrb	r3, [r3, #0]
 800ac32:	f887 3083 	strb.w	r3, [r7, #131]	; 0x83
 800ac36:	e024      	b.n	800ac82 <f_printf+0xd6>
 800ac38:	f897 3083 	ldrb.w	r3, [r7, #131]	; 0x83
 800ac3c:	2b2d      	cmp	r3, #45	; 0x2d
 800ac3e:	d120      	bne.n	800ac82 <f_printf+0xd6>
 800ac40:	2302      	movs	r3, #2
 800ac42:	f887 3097 	strb.w	r3, [r7, #151]	; 0x97
 800ac46:	f8d7 30a4 	ldr.w	r3, [r7, #164]	; 0xa4
 800ac4a:	1c5a      	adds	r2, r3, #1
 800ac4c:	f8c7 20a4 	str.w	r2, [r7, #164]	; 0xa4
 800ac50:	781b      	ldrb	r3, [r3, #0]
 800ac52:	f887 3083 	strb.w	r3, [r7, #131]	; 0x83
 800ac56:	e014      	b.n	800ac82 <f_printf+0xd6>
 800ac58:	f8d7 2088 	ldr.w	r2, [r7, #136]	; 0x88
 800ac5c:	4613      	mov	r3, r2
 800ac5e:	009b      	lsls	r3, r3, #2
 800ac60:	4413      	add	r3, r2
 800ac62:	005b      	lsls	r3, r3, #1
 800ac64:	461a      	mov	r2, r3
 800ac66:	f897 3083 	ldrb.w	r3, [r7, #131]	; 0x83
 800ac6a:	4413      	add	r3, r2
 800ac6c:	3b30      	subs	r3, #48	; 0x30
 800ac6e:	f8c7 3088 	str.w	r3, [r7, #136]	; 0x88
 800ac72:	f8d7 30a4 	ldr.w	r3, [r7, #164]	; 0xa4
 800ac76:	1c5a      	adds	r2, r3, #1
 800ac78:	f8c7 20a4 	str.w	r2, [r7, #164]	; 0xa4
 800ac7c:	781b      	ldrb	r3, [r3, #0]
 800ac7e:	f887 3083 	strb.w	r3, [r7, #131]	; 0x83
 800ac82:	f897 3083 	ldrb.w	r3, [r7, #131]	; 0x83
 800ac86:	2b2f      	cmp	r3, #47	; 0x2f
 800ac88:	d903      	bls.n	800ac92 <f_printf+0xe6>
 800ac8a:	f897 3083 	ldrb.w	r3, [r7, #131]	; 0x83
 800ac8e:	2b39      	cmp	r3, #57	; 0x39
 800ac90:	d9e2      	bls.n	800ac58 <f_printf+0xac>
 800ac92:	f897 3083 	ldrb.w	r3, [r7, #131]	; 0x83
 800ac96:	2b6c      	cmp	r3, #108	; 0x6c
 800ac98:	d003      	beq.n	800aca2 <f_printf+0xf6>
 800ac9a:	f897 3083 	ldrb.w	r3, [r7, #131]	; 0x83
 800ac9e:	2b4c      	cmp	r3, #76	; 0x4c
 800aca0:	d10d      	bne.n	800acbe <f_printf+0x112>
 800aca2:	f897 3097 	ldrb.w	r3, [r7, #151]	; 0x97
 800aca6:	f043 0304 	orr.w	r3, r3, #4
 800acaa:	f887 3097 	strb.w	r3, [r7, #151]	; 0x97
 800acae:	f8d7 30a4 	ldr.w	r3, [r7, #164]	; 0xa4
 800acb2:	1c5a      	adds	r2, r3, #1
 800acb4:	f8c7 20a4 	str.w	r2, [r7, #164]	; 0xa4
 800acb8:	781b      	ldrb	r3, [r3, #0]
 800acba:	f887 3083 	strb.w	r3, [r7, #131]	; 0x83
 800acbe:	f897 3083 	ldrb.w	r3, [r7, #131]	; 0x83
 800acc2:	2b00      	cmp	r3, #0
 800acc4:	f000 8183 	beq.w	800afce <f_printf+0x422>
 800acc8:	f897 3083 	ldrb.w	r3, [r7, #131]	; 0x83
 800accc:	f887 3082 	strb.w	r3, [r7, #130]	; 0x82
 800acd0:	f897 3082 	ldrb.w	r3, [r7, #130]	; 0x82
 800acd4:	2b60      	cmp	r3, #96	; 0x60
 800acd6:	d908      	bls.n	800acea <f_printf+0x13e>
 800acd8:	f897 3082 	ldrb.w	r3, [r7, #130]	; 0x82
 800acdc:	2b7a      	cmp	r3, #122	; 0x7a
 800acde:	d804      	bhi.n	800acea <f_printf+0x13e>
 800ace0:	f897 3082 	ldrb.w	r3, [r7, #130]	; 0x82
 800ace4:	3b20      	subs	r3, #32
 800ace6:	f887 3082 	strb.w	r3, [r7, #130]	; 0x82
 800acea:	f897 3082 	ldrb.w	r3, [r7, #130]	; 0x82
 800acee:	3b42      	subs	r3, #66	; 0x42
 800acf0:	2b16      	cmp	r3, #22
 800acf2:	f200 8098 	bhi.w	800ae26 <f_printf+0x27a>
 800acf6:	a201      	add	r2, pc, #4	; (adr r2, 800acfc <f_printf+0x150>)
 800acf8:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800acfc:	0800ae07 	.word	0x0800ae07
 800ad00:	0800adef 	.word	0x0800adef
 800ad04:	0800ae17 	.word	0x0800ae17
 800ad08:	0800ae27 	.word	0x0800ae27
 800ad0c:	0800ae27 	.word	0x0800ae27
 800ad10:	0800ae27 	.word	0x0800ae27
 800ad14:	0800ae27 	.word	0x0800ae27
 800ad18:	0800ae27 	.word	0x0800ae27
 800ad1c:	0800ae27 	.word	0x0800ae27
 800ad20:	0800ae27 	.word	0x0800ae27
 800ad24:	0800ae27 	.word	0x0800ae27
 800ad28:	0800ae27 	.word	0x0800ae27
 800ad2c:	0800ae27 	.word	0x0800ae27
 800ad30:	0800ae0f 	.word	0x0800ae0f
 800ad34:	0800ae27 	.word	0x0800ae27
 800ad38:	0800ae27 	.word	0x0800ae27
 800ad3c:	0800ae27 	.word	0x0800ae27
 800ad40:	0800ad59 	.word	0x0800ad59
 800ad44:	0800ae27 	.word	0x0800ae27
 800ad48:	0800ae17 	.word	0x0800ae17
 800ad4c:	0800ae27 	.word	0x0800ae27
 800ad50:	0800ae27 	.word	0x0800ae27
 800ad54:	0800ae1f 	.word	0x0800ae1f
 800ad58:	6fbb      	ldr	r3, [r7, #120]	; 0x78
 800ad5a:	1d1a      	adds	r2, r3, #4
 800ad5c:	67ba      	str	r2, [r7, #120]	; 0x78
 800ad5e:	681b      	ldr	r3, [r3, #0]
 800ad60:	67fb      	str	r3, [r7, #124]	; 0x7c
 800ad62:	2300      	movs	r3, #0
 800ad64:	f8c7 308c 	str.w	r3, [r7, #140]	; 0x8c
 800ad68:	e004      	b.n	800ad74 <f_printf+0x1c8>
 800ad6a:	f8d7 308c 	ldr.w	r3, [r7, #140]	; 0x8c
 800ad6e:	3301      	adds	r3, #1
 800ad70:	f8c7 308c 	str.w	r3, [r7, #140]	; 0x8c
 800ad74:	6ffa      	ldr	r2, [r7, #124]	; 0x7c
 800ad76:	f8d7 308c 	ldr.w	r3, [r7, #140]	; 0x8c
 800ad7a:	4413      	add	r3, r2
 800ad7c:	781b      	ldrb	r3, [r3, #0]
 800ad7e:	2b00      	cmp	r3, #0
 800ad80:	d1f3      	bne.n	800ad6a <f_printf+0x1be>
 800ad82:	f897 3097 	ldrb.w	r3, [r7, #151]	; 0x97
 800ad86:	f003 0302 	and.w	r3, r3, #2
 800ad8a:	2b00      	cmp	r3, #0
 800ad8c:	d11a      	bne.n	800adc4 <f_printf+0x218>
 800ad8e:	e005      	b.n	800ad9c <f_printf+0x1f0>
 800ad90:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 800ad94:	2120      	movs	r1, #32
 800ad96:	4618      	mov	r0, r3
 800ad98:	f7ff fe90 	bl	800aabc <putc_bfd>
 800ad9c:	f8d7 308c 	ldr.w	r3, [r7, #140]	; 0x8c
 800ada0:	1c5a      	adds	r2, r3, #1
 800ada2:	f8c7 208c 	str.w	r2, [r7, #140]	; 0x8c
 800ada6:	f8d7 2088 	ldr.w	r2, [r7, #136]	; 0x88
 800adaa:	429a      	cmp	r2, r3
 800adac:	d8f0      	bhi.n	800ad90 <f_printf+0x1e4>
 800adae:	e009      	b.n	800adc4 <f_printf+0x218>
 800adb0:	6ffb      	ldr	r3, [r7, #124]	; 0x7c
 800adb2:	1c5a      	adds	r2, r3, #1
 800adb4:	67fa      	str	r2, [r7, #124]	; 0x7c
 800adb6:	781a      	ldrb	r2, [r3, #0]
 800adb8:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 800adbc:	4611      	mov	r1, r2
 800adbe:	4618      	mov	r0, r3
 800adc0:	f7ff fe7c 	bl	800aabc <putc_bfd>
 800adc4:	6ffb      	ldr	r3, [r7, #124]	; 0x7c
 800adc6:	781b      	ldrb	r3, [r3, #0]
 800adc8:	2b00      	cmp	r3, #0
 800adca:	d1f1      	bne.n	800adb0 <f_printf+0x204>
 800adcc:	e005      	b.n	800adda <f_printf+0x22e>
 800adce:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 800add2:	2120      	movs	r1, #32
 800add4:	4618      	mov	r0, r3
 800add6:	f7ff fe71 	bl	800aabc <putc_bfd>
 800adda:	f8d7 308c 	ldr.w	r3, [r7, #140]	; 0x8c
 800adde:	1c5a      	adds	r2, r3, #1
 800ade0:	f8c7 208c 	str.w	r2, [r7, #140]	; 0x8c
 800ade4:	f8d7 2088 	ldr.w	r2, [r7, #136]	; 0x88
 800ade8:	429a      	cmp	r2, r3
 800adea:	d8f0      	bhi.n	800adce <f_printf+0x222>
 800adec:	e0ec      	b.n	800afc8 <f_printf+0x41c>
 800adee:	6fbb      	ldr	r3, [r7, #120]	; 0x78
 800adf0:	1d1a      	adds	r2, r3, #4
 800adf2:	67ba      	str	r2, [r7, #120]	; 0x78
 800adf4:	681b      	ldr	r3, [r3, #0]
 800adf6:	b2da      	uxtb	r2, r3
 800adf8:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 800adfc:	4611      	mov	r1, r2
 800adfe:	4618      	mov	r0, r3
 800ae00:	f7ff fe5c 	bl	800aabc <putc_bfd>
 800ae04:	e0e0      	b.n	800afc8 <f_printf+0x41c>
 800ae06:	2302      	movs	r3, #2
 800ae08:	f887 3096 	strb.w	r3, [r7, #150]	; 0x96
 800ae0c:	e014      	b.n	800ae38 <f_printf+0x28c>
 800ae0e:	2308      	movs	r3, #8
 800ae10:	f887 3096 	strb.w	r3, [r7, #150]	; 0x96
 800ae14:	e010      	b.n	800ae38 <f_printf+0x28c>
 800ae16:	230a      	movs	r3, #10
 800ae18:	f887 3096 	strb.w	r3, [r7, #150]	; 0x96
 800ae1c:	e00c      	b.n	800ae38 <f_printf+0x28c>
 800ae1e:	2310      	movs	r3, #16
 800ae20:	f887 3096 	strb.w	r3, [r7, #150]	; 0x96
 800ae24:	e008      	b.n	800ae38 <f_printf+0x28c>
 800ae26:	f897 2083 	ldrb.w	r2, [r7, #131]	; 0x83
 800ae2a:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 800ae2e:	4611      	mov	r1, r2
 800ae30:	4618      	mov	r0, r3
 800ae32:	f7ff fe43 	bl	800aabc <putc_bfd>
 800ae36:	e0c7      	b.n	800afc8 <f_printf+0x41c>
 800ae38:	f897 3097 	ldrb.w	r3, [r7, #151]	; 0x97
 800ae3c:	f003 0304 	and.w	r3, r3, #4
 800ae40:	2b00      	cmp	r3, #0
 800ae42:	d004      	beq.n	800ae4e <f_printf+0x2a2>
 800ae44:	6fbb      	ldr	r3, [r7, #120]	; 0x78
 800ae46:	1d1a      	adds	r2, r3, #4
 800ae48:	67ba      	str	r2, [r7, #120]	; 0x78
 800ae4a:	681b      	ldr	r3, [r3, #0]
 800ae4c:	e00c      	b.n	800ae68 <f_printf+0x2bc>
 800ae4e:	f897 3082 	ldrb.w	r3, [r7, #130]	; 0x82
 800ae52:	2b44      	cmp	r3, #68	; 0x44
 800ae54:	d104      	bne.n	800ae60 <f_printf+0x2b4>
 800ae56:	6fbb      	ldr	r3, [r7, #120]	; 0x78
 800ae58:	1d1a      	adds	r2, r3, #4
 800ae5a:	67ba      	str	r2, [r7, #120]	; 0x78
 800ae5c:	681b      	ldr	r3, [r3, #0]
 800ae5e:	e003      	b.n	800ae68 <f_printf+0x2bc>
 800ae60:	6fbb      	ldr	r3, [r7, #120]	; 0x78
 800ae62:	1d1a      	adds	r2, r3, #4
 800ae64:	67ba      	str	r2, [r7, #120]	; 0x78
 800ae66:	681b      	ldr	r3, [r3, #0]
 800ae68:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
 800ae6c:	f897 3082 	ldrb.w	r3, [r7, #130]	; 0x82
 800ae70:	2b44      	cmp	r3, #68	; 0x44
 800ae72:	d10e      	bne.n	800ae92 <f_printf+0x2e6>
 800ae74:	f8d7 3084 	ldr.w	r3, [r7, #132]	; 0x84
 800ae78:	2b00      	cmp	r3, #0
 800ae7a:	da0a      	bge.n	800ae92 <f_printf+0x2e6>
 800ae7c:	f8d7 3084 	ldr.w	r3, [r7, #132]	; 0x84
 800ae80:	425b      	negs	r3, r3
 800ae82:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
 800ae86:	f897 3097 	ldrb.w	r3, [r7, #151]	; 0x97
 800ae8a:	f043 0308 	orr.w	r3, r3, #8
 800ae8e:	f887 3097 	strb.w	r3, [r7, #151]	; 0x97
 800ae92:	2300      	movs	r3, #0
 800ae94:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90
 800ae98:	f897 2096 	ldrb.w	r2, [r7, #150]	; 0x96
 800ae9c:	f8d7 3084 	ldr.w	r3, [r7, #132]	; 0x84
 800aea0:	fbb3 f1f2 	udiv	r1, r3, r2
 800aea4:	fb02 f201 	mul.w	r2, r2, r1
 800aea8:	1a9b      	subs	r3, r3, r2
 800aeaa:	f887 3082 	strb.w	r3, [r7, #130]	; 0x82
 800aeae:	f897 3096 	ldrb.w	r3, [r7, #150]	; 0x96
 800aeb2:	f8d7 2084 	ldr.w	r2, [r7, #132]	; 0x84
 800aeb6:	fbb2 f3f3 	udiv	r3, r2, r3
 800aeba:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
 800aebe:	f897 3082 	ldrb.w	r3, [r7, #130]	; 0x82
 800aec2:	2b09      	cmp	r3, #9
 800aec4:	d90b      	bls.n	800aede <f_printf+0x332>
 800aec6:	f897 3083 	ldrb.w	r3, [r7, #131]	; 0x83
 800aeca:	2b78      	cmp	r3, #120	; 0x78
 800aecc:	d101      	bne.n	800aed2 <f_printf+0x326>
 800aece:	2227      	movs	r2, #39	; 0x27
 800aed0:	e000      	b.n	800aed4 <f_printf+0x328>
 800aed2:	2207      	movs	r2, #7
 800aed4:	f897 3082 	ldrb.w	r3, [r7, #130]	; 0x82
 800aed8:	4413      	add	r3, r2
 800aeda:	f887 3082 	strb.w	r3, [r7, #130]	; 0x82
 800aede:	f8d7 3090 	ldr.w	r3, [r7, #144]	; 0x90
 800aee2:	1c5a      	adds	r2, r3, #1
 800aee4:	f8c7 2090 	str.w	r2, [r7, #144]	; 0x90
 800aee8:	f897 2082 	ldrb.w	r2, [r7, #130]	; 0x82
 800aeec:	3230      	adds	r2, #48	; 0x30
 800aeee:	b2d2      	uxtb	r2, r2
 800aef0:	f107 0198 	add.w	r1, r7, #152	; 0x98
 800aef4:	440b      	add	r3, r1
 800aef6:	f803 2c8c 	strb.w	r2, [r3, #-140]
 800aefa:	f8d7 3084 	ldr.w	r3, [r7, #132]	; 0x84
 800aefe:	2b00      	cmp	r3, #0
 800af00:	d003      	beq.n	800af0a <f_printf+0x35e>
 800af02:	f8d7 3090 	ldr.w	r3, [r7, #144]	; 0x90
 800af06:	2b1f      	cmp	r3, #31
 800af08:	d9c6      	bls.n	800ae98 <f_printf+0x2ec>
 800af0a:	f897 3097 	ldrb.w	r3, [r7, #151]	; 0x97
 800af0e:	f003 0308 	and.w	r3, r3, #8
 800af12:	2b00      	cmp	r3, #0
 800af14:	d00a      	beq.n	800af2c <f_printf+0x380>
 800af16:	f8d7 3090 	ldr.w	r3, [r7, #144]	; 0x90
 800af1a:	1c5a      	adds	r2, r3, #1
 800af1c:	f8c7 2090 	str.w	r2, [r7, #144]	; 0x90
 800af20:	f107 0298 	add.w	r2, r7, #152	; 0x98
 800af24:	4413      	add	r3, r2
 800af26:	222d      	movs	r2, #45	; 0x2d
 800af28:	f803 2c8c 	strb.w	r2, [r3, #-140]
 800af2c:	f8d7 3090 	ldr.w	r3, [r7, #144]	; 0x90
 800af30:	f8c7 308c 	str.w	r3, [r7, #140]	; 0x8c
 800af34:	f897 3097 	ldrb.w	r3, [r7, #151]	; 0x97
 800af38:	f003 0301 	and.w	r3, r3, #1
 800af3c:	2b00      	cmp	r3, #0
 800af3e:	d001      	beq.n	800af44 <f_printf+0x398>
 800af40:	2330      	movs	r3, #48	; 0x30
 800af42:	e000      	b.n	800af46 <f_printf+0x39a>
 800af44:	2320      	movs	r3, #32
 800af46:	f887 3082 	strb.w	r3, [r7, #130]	; 0x82
 800af4a:	e007      	b.n	800af5c <f_printf+0x3b0>
 800af4c:	f897 2082 	ldrb.w	r2, [r7, #130]	; 0x82
 800af50:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 800af54:	4611      	mov	r1, r2
 800af56:	4618      	mov	r0, r3
 800af58:	f7ff fdb0 	bl	800aabc <putc_bfd>
 800af5c:	f897 3097 	ldrb.w	r3, [r7, #151]	; 0x97
 800af60:	f003 0302 	and.w	r3, r3, #2
 800af64:	2b00      	cmp	r3, #0
 800af66:	d108      	bne.n	800af7a <f_printf+0x3ce>
 800af68:	f8d7 308c 	ldr.w	r3, [r7, #140]	; 0x8c
 800af6c:	1c5a      	adds	r2, r3, #1
 800af6e:	f8c7 208c 	str.w	r2, [r7, #140]	; 0x8c
 800af72:	f8d7 2088 	ldr.w	r2, [r7, #136]	; 0x88
 800af76:	429a      	cmp	r2, r3
 800af78:	d8e8      	bhi.n	800af4c <f_printf+0x3a0>
 800af7a:	f8d7 3090 	ldr.w	r3, [r7, #144]	; 0x90
 800af7e:	3b01      	subs	r3, #1
 800af80:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90
 800af84:	f107 020c 	add.w	r2, r7, #12
 800af88:	f8d7 3090 	ldr.w	r3, [r7, #144]	; 0x90
 800af8c:	4413      	add	r3, r2
 800af8e:	781a      	ldrb	r2, [r3, #0]
 800af90:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 800af94:	4611      	mov	r1, r2
 800af96:	4618      	mov	r0, r3
 800af98:	f7ff fd90 	bl	800aabc <putc_bfd>
 800af9c:	f8d7 3090 	ldr.w	r3, [r7, #144]	; 0x90
 800afa0:	2b00      	cmp	r3, #0
 800afa2:	d1ea      	bne.n	800af7a <f_printf+0x3ce>
 800afa4:	e007      	b.n	800afb6 <f_printf+0x40a>
 800afa6:	f897 2082 	ldrb.w	r2, [r7, #130]	; 0x82
 800afaa:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 800afae:	4611      	mov	r1, r2
 800afb0:	4618      	mov	r0, r3
 800afb2:	f7ff fd83 	bl	800aabc <putc_bfd>
 800afb6:	f8d7 308c 	ldr.w	r3, [r7, #140]	; 0x8c
 800afba:	1c5a      	adds	r2, r3, #1
 800afbc:	f8c7 208c 	str.w	r2, [r7, #140]	; 0x8c
 800afc0:	f8d7 2088 	ldr.w	r2, [r7, #136]	; 0x88
 800afc4:	429a      	cmp	r2, r3
 800afc6:	d8ee      	bhi.n	800afa6 <f_printf+0x3fa>
 800afc8:	e5fe      	b.n	800abc8 <f_printf+0x1c>
 800afca:	bf00      	nop
 800afcc:	e000      	b.n	800afd0 <f_printf+0x424>
 800afce:	bf00      	nop
 800afd0:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 800afd4:	4618      	mov	r0, r3
 800afd6:	f7ff fdae 	bl	800ab36 <putc_flush>
 800afda:	4603      	mov	r3, r0
 800afdc:	4618      	mov	r0, r3
 800afde:	379c      	adds	r7, #156	; 0x9c
 800afe0:	46bd      	mov	sp, r7
 800afe2:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 800afe6:	b003      	add	sp, #12
 800afe8:	4770      	bx	lr
 800afea:	bf00      	nop

0800afec <FATFS_LinkDriverEx>:
 800afec:	b480      	push	{r7}
 800afee:	b087      	sub	sp, #28
 800aff0:	af00      	add	r7, sp, #0
 800aff2:	60f8      	str	r0, [r7, #12]
 800aff4:	60b9      	str	r1, [r7, #8]
 800aff6:	4613      	mov	r3, r2
 800aff8:	71fb      	strb	r3, [r7, #7]
 800affa:	2301      	movs	r3, #1
 800affc:	75fb      	strb	r3, [r7, #23]
 800affe:	2300      	movs	r3, #0
 800b000:	75bb      	strb	r3, [r7, #22]
 800b002:	4b1f      	ldr	r3, [pc, #124]	; (800b080 <FATFS_LinkDriverEx+0x94>)
 800b004:	7a5b      	ldrb	r3, [r3, #9]
 800b006:	b2db      	uxtb	r3, r3
 800b008:	2b00      	cmp	r3, #0
 800b00a:	d131      	bne.n	800b070 <FATFS_LinkDriverEx+0x84>
 800b00c:	4b1c      	ldr	r3, [pc, #112]	; (800b080 <FATFS_LinkDriverEx+0x94>)
 800b00e:	7a5b      	ldrb	r3, [r3, #9]
 800b010:	b2db      	uxtb	r3, r3
 800b012:	461a      	mov	r2, r3
 800b014:	4b1a      	ldr	r3, [pc, #104]	; (800b080 <FATFS_LinkDriverEx+0x94>)
 800b016:	2100      	movs	r1, #0
 800b018:	5499      	strb	r1, [r3, r2]
 800b01a:	4b19      	ldr	r3, [pc, #100]	; (800b080 <FATFS_LinkDriverEx+0x94>)
 800b01c:	7a5b      	ldrb	r3, [r3, #9]
 800b01e:	b2db      	uxtb	r3, r3
 800b020:	4a17      	ldr	r2, [pc, #92]	; (800b080 <FATFS_LinkDriverEx+0x94>)
 800b022:	009b      	lsls	r3, r3, #2
 800b024:	4413      	add	r3, r2
 800b026:	68fa      	ldr	r2, [r7, #12]
 800b028:	605a      	str	r2, [r3, #4]
 800b02a:	4b15      	ldr	r3, [pc, #84]	; (800b080 <FATFS_LinkDriverEx+0x94>)
 800b02c:	7a5b      	ldrb	r3, [r3, #9]
 800b02e:	b2db      	uxtb	r3, r3
 800b030:	461a      	mov	r2, r3
 800b032:	4b13      	ldr	r3, [pc, #76]	; (800b080 <FATFS_LinkDriverEx+0x94>)
 800b034:	4413      	add	r3, r2
 800b036:	79fa      	ldrb	r2, [r7, #7]
 800b038:	721a      	strb	r2, [r3, #8]
 800b03a:	4b11      	ldr	r3, [pc, #68]	; (800b080 <FATFS_LinkDriverEx+0x94>)
 800b03c:	7a5b      	ldrb	r3, [r3, #9]
 800b03e:	b2db      	uxtb	r3, r3
 800b040:	1c5a      	adds	r2, r3, #1
 800b042:	b2d1      	uxtb	r1, r2
 800b044:	4a0e      	ldr	r2, [pc, #56]	; (800b080 <FATFS_LinkDriverEx+0x94>)
 800b046:	7251      	strb	r1, [r2, #9]
 800b048:	75bb      	strb	r3, [r7, #22]
 800b04a:	7dbb      	ldrb	r3, [r7, #22]
 800b04c:	3330      	adds	r3, #48	; 0x30
 800b04e:	b2da      	uxtb	r2, r3
 800b050:	68bb      	ldr	r3, [r7, #8]
 800b052:	701a      	strb	r2, [r3, #0]
 800b054:	68bb      	ldr	r3, [r7, #8]
 800b056:	3301      	adds	r3, #1
 800b058:	223a      	movs	r2, #58	; 0x3a
 800b05a:	701a      	strb	r2, [r3, #0]
 800b05c:	68bb      	ldr	r3, [r7, #8]
 800b05e:	3302      	adds	r3, #2
 800b060:	222f      	movs	r2, #47	; 0x2f
 800b062:	701a      	strb	r2, [r3, #0]
 800b064:	68bb      	ldr	r3, [r7, #8]
 800b066:	3303      	adds	r3, #3
 800b068:	2200      	movs	r2, #0
 800b06a:	701a      	strb	r2, [r3, #0]
 800b06c:	2300      	movs	r3, #0
 800b06e:	75fb      	strb	r3, [r7, #23]
 800b070:	7dfb      	ldrb	r3, [r7, #23]
 800b072:	4618      	mov	r0, r3
 800b074:	371c      	adds	r7, #28
 800b076:	46bd      	mov	sp, r7
 800b078:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b07c:	4770      	bx	lr
 800b07e:	bf00      	nop
 800b080:	20000074 	.word	0x20000074

0800b084 <FATFS_LinkDriver>:
 800b084:	b580      	push	{r7, lr}
 800b086:	b082      	sub	sp, #8
 800b088:	af00      	add	r7, sp, #0
 800b08a:	6078      	str	r0, [r7, #4]
 800b08c:	6039      	str	r1, [r7, #0]
 800b08e:	2200      	movs	r2, #0
 800b090:	6839      	ldr	r1, [r7, #0]
 800b092:	6878      	ldr	r0, [r7, #4]
 800b094:	f7ff ffaa 	bl	800afec <FATFS_LinkDriverEx>
 800b098:	4603      	mov	r3, r0
 800b09a:	4618      	mov	r0, r3
 800b09c:	3708      	adds	r7, #8
 800b09e:	46bd      	mov	sp, r7
 800b0a0:	bd80      	pop	{r7, pc}
	...

0800b0a4 <__libc_init_array>:
 800b0a4:	b570      	push	{r4, r5, r6, lr}
 800b0a6:	4e0d      	ldr	r6, [pc, #52]	; (800b0dc <__libc_init_array+0x38>)
 800b0a8:	4c0d      	ldr	r4, [pc, #52]	; (800b0e0 <__libc_init_array+0x3c>)
 800b0aa:	1ba4      	subs	r4, r4, r6
 800b0ac:	10a4      	asrs	r4, r4, #2
 800b0ae:	2500      	movs	r5, #0
 800b0b0:	42a5      	cmp	r5, r4
 800b0b2:	d109      	bne.n	800b0c8 <__libc_init_array+0x24>
 800b0b4:	4e0b      	ldr	r6, [pc, #44]	; (800b0e4 <__libc_init_array+0x40>)
 800b0b6:	4c0c      	ldr	r4, [pc, #48]	; (800b0e8 <__libc_init_array+0x44>)
 800b0b8:	f000 f820 	bl	800b0fc <_init>
 800b0bc:	1ba4      	subs	r4, r4, r6
 800b0be:	10a4      	asrs	r4, r4, #2
 800b0c0:	2500      	movs	r5, #0
 800b0c2:	42a5      	cmp	r5, r4
 800b0c4:	d105      	bne.n	800b0d2 <__libc_init_array+0x2e>
 800b0c6:	bd70      	pop	{r4, r5, r6, pc}
 800b0c8:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 800b0cc:	4798      	blx	r3
 800b0ce:	3501      	adds	r5, #1
 800b0d0:	e7ee      	b.n	800b0b0 <__libc_init_array+0xc>
 800b0d2:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 800b0d6:	4798      	blx	r3
 800b0d8:	3501      	adds	r5, #1
 800b0da:	e7f2      	b.n	800b0c2 <__libc_init_array+0x1e>
 800b0dc:	0800b264 	.word	0x0800b264
 800b0e0:	0800b264 	.word	0x0800b264
 800b0e4:	0800b264 	.word	0x0800b264
 800b0e8:	0800b268 	.word	0x0800b268

0800b0ec <memset>:
 800b0ec:	4402      	add	r2, r0
 800b0ee:	4603      	mov	r3, r0
 800b0f0:	4293      	cmp	r3, r2
 800b0f2:	d100      	bne.n	800b0f6 <memset+0xa>
 800b0f4:	4770      	bx	lr
 800b0f6:	f803 1b01 	strb.w	r1, [r3], #1
 800b0fa:	e7f9      	b.n	800b0f0 <memset+0x4>

0800b0fc <_init>:
 800b0fc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800b0fe:	bf00      	nop
 800b100:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800b102:	bc08      	pop	{r3}
 800b104:	469e      	mov	lr, r3
 800b106:	4770      	bx	lr

0800b108 <_fini>:
 800b108:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800b10a:	bf00      	nop
 800b10c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800b10e:	bc08      	pop	{r3}
 800b110:	469e      	mov	lr, r3
 800b112:	4770      	bx	lr
